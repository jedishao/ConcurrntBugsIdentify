<rss version="0.92">
<channel>
<title>ASF JIRA</title>
<link>https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+status+%3D+Closed+AND+created+%3E%3D+2006-01-01+AND+created+%3C%3D+2015-12-31+AND+text+%7E+%22lock%22+ORDER+BY+priority+DESC%2C+updated+DESC</link>
<description>An XML representation of a search request</description>
<language>en-uk</language>
<issue start="0" end="65" total="65"/>
<build-info>
<version>8.20.7</version>
<build-number>820007</build-number>
<build-date>16-03-2022</build-date>
</build-info>
<item>
<title>[ZOOKEEPER-1029] C client bug in zookeeper_init (if bad hostname is given)</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1029</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>If you give invalid hostname to zookeeper_init method, it's not able to resolve it, and it tries to do the cleanup (free buffer/completion lists/etc) . The adaptor_init() is not called for this code path, so the lock,cond variables (for adaptor, completion lists) are not initialized.</p> <p>As part of the cleanup it's trying to clean up some buffers and acquires locks and unlocks (where the locks have not yet been initialized, so unlocking fails) <br/> lock_completion_list(amp;zh-gt;sent_requests); - pthread_mutex/cond not initialized<br/> tmp_list = zh-gt;sent_requests;<br/> zh-gt;sent_requests.head = 0;<br/> zh-gt;sent_requests.last = 0;<br/> unlock_completion_list(amp;zh-gt;sent_requests);  trying to broadcast here on uninitialized cond</p> <p>It should do error checking to see if locking succeeds before unlocking it. If Locking fails, then appropriate error handling has to be done.</p></description>
<environment/>
<key id="12502418">ZOOKEEPER-1029</key>
<summary>C client bug in zookeeper_init (if bad hostname is given)</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="fpj">Flavio Paiva Junqueira</assignee>
<reporter username="dheerajagrawal">Dheeraj Agrawal</reporter>
<labels> </labels>
<created>Fri, 25 Mar 2011 20:47:43 +0000</created>
<updated>Tue, 25 Dec 2018 09:42:48 +0000</updated>
<resolved>Fri, 11 Dec 2015 20:15:56 +0000</resolved>
<version>3.3.2</version>
<version>3.4.6</version>
<version>3.5.0</version>
<fixVersion>3.4.7</fixVersion>
<fixVersion>3.5.2</fixVersion>
<fixVersion>3.6.0</fixVersion>
<component>c client</component>
<due/>
<votes>3</votes>
<watches>18</watches>
<comments>
<comment id="13445463" author="rdermer" created="Thu, 30 Aug 2012 23:57:18 +0000"><p>zoo_multi and zoo_amulti crash for the same reason. Made some local fixes here.</p></comment>
<comment id="13445933" author="dheerajagrawal" created="Fri, 31 Aug 2012 13:49:39 +0000"><p>Is it possible to submit a patch for this if it has been fixed?</p></comment>
<comment id="13585202" author="bionicbeagle" created="Sat, 23 Feb 2013 19:43:59 +0000"><p>This still happens with latest (3.4.x). On Windows it actually crashes even earlier actually, at the inital lock. </p> <p>The cleanup code should ideally detect that the lists haven't been initialized and skip the teardown logic. From a cursory look it looks like this might require some explicit flags to indicate the current state to the cleanup code.</p> <p>I'd have a go myself but I am unfortunately very new to the codebase, and it seems like there's not a whole lot of interest in fixing this fairly serious issue... which in turn makes me wonder if I should use Zookeeper from C/C++! Because if this doesn't get fixed, who knows what other issues exist?</p></comment>
<comment id="14511654" author="stevenschlansker" created="Fri, 24 Apr 2015 20:16:00 +0000"><p>This causes serious issues with clustering software e.g. Mesos has a critical bug open over this:<br/> <a href="https://issues.apache.org/jira/browse/MESOS-2186" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/MESOS-2186</a></p></comment>
<comment id="14586458" author="stevenschlansker" created="Mon, 15 Jun 2015 18:35:21 +0000"><p>We just had an hour long outage of our production Mesos cluster due to this bug. Is there any hope for a fix? <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/sad.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="14586493" author="rgs" created="Mon, 15 Jun 2015 18:55:48 +0000"><p>The ZooKeeper client should probably just keep retrying the lookups from the IO thread (i.e.: it could very well be transient). I don't think a failed DNS lookup should be coupled with failing the ZK handler (at all). </p></comment>
<comment id="14621325" author="stevenschlansker" created="Thu, 9 Jul 2015 21:41:04 +0000"><p>Doubly so if only one of the hostnames does not resolve #8211; in a cluster, name resolution failure should be at most a warning as long as at least one "in-sync" server is reachable.</p></comment>
<comment id="14700149" author="stevenschlansker" created="Mon, 17 Aug 2015 20:13:19 +0000"><p>I am raising the priority of this issue to 'Blocker' as it 1) is a complete crash of the ZK client 2) affects multiple users 3) affects production stability 4) has been open for a very long time. Hopefully it can be considered for the next releases of the 3.4.x and 3.5.x series?</p></comment>
<comment id="14734539" author="antmat" created="Tue, 8 Sep 2015 09:54:20 +0000"><p>We have the same problem. We use zookeper in cocaine cloud engine and cocaine-runtime can not start if one of the zk node is unresolvable(f.e. hostname changed) despite the fact that we have zk quorum.</p></comment>
<comment id="14962527" author="rgs" created="Sun, 18 Oct 2015 17:41:15 +0000"><p>Ok, so the bug is that we don't initialize the zh struct after calling calloc() in zookeeper_init:</p> <p><a href="https://github.com/apache/zookeeper/blob/branch-3.4/src/c/src/zookeeper.c#L788" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/branch-3.4/src/c/src/zookeeper.c#L788</a></p> <p>Since we don't, zh-gt;adaptor_priv might not be NULL, which means that when doing the following chain of calls:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">destroy() -gt; cleanup_bufs() -gt; enter_critical() </pre> </div></div> <p>zh-gt;adaptor_priv might be != NULL:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">void enter_critical(zhandle_t* zh) { struct adaptor_threads *adaptor = zh-gt;adaptor_priv; <span class="code-keyword">if</span>(adaptor) pthread_mutex_lock(amp;adaptor-gt;zh_lock); } </pre> </div></div> <p>At which point, the World crumbles into pieces. So memset() should be all we need to be able to safely cleanup after a failed.</p> <p>Still haven't looked at <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdermer" class="user-hover" rel="rdermer">Richard Dermer</a>'s case for zoo_multi and zoo_amulti. Attaching a patch for the first case. </p></comment>
<comment id="14962534" author="rgs" created="Sun, 18 Oct 2015 17:55:11 +0000"><p>The patch also fixes broken calls to LOG_DEBUG (due to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2253" title="C asserts ordering of ping requests, while Java client does not" class="issue-link" data-issue-key="ZOOKEEPER-2253"><del>ZOOKEEPER-2253</del></a>).</p> <p>Lets get this in so I can cut an RC for 3.4.7.</p> <p>cc: <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a></p> <p>cc: <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cchen" class="user-hover" rel="cchen">Chris Chen</a> (about the broken LOG_DEBUG calls from <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2253" title="C asserts ordering of ping requests, while Java client does not" class="issue-link" data-issue-key="ZOOKEEPER-2253"><del>ZOOKEEPER-2253</del></a>)</p></comment>
<comment id="14962612" author="rgs" created="Sun, 18 Oct 2015 20:26:48 +0000"><p>I take that back, calloc() does initialize the memory to zero. Hmm, let me try to build a repro. </p></comment>
<comment id="14962615" author="rgs" created="Sun, 18 Oct 2015 20:32:53 +0000"><p>Actually, I can't repro this using <a href="https://gist.github.com/rgs1/998684a0e93c072cb65d" class="external-link" target="_blank" rel="nofollow noopener">https://gist.github.com/rgs1/998684a0e93c072cb65d</a></p> <p>Can someone provide a repro?</p></comment>
<comment id="14962624" author="fpj" created="Sun, 18 Oct 2015 20:54:55 +0000"><p>Does it mean that if you pass a bad hostname, the client doesn't crash as this issue describes?</p></comment>
<comment id="14962628" author="rgs" created="Sun, 18 Oct 2015 21:03:22 +0000"><p>Okey, so re-reading the initial description it is true that we don't check if the locks have been properly initialized, but even if that's wrong, it shouldn't crash. </p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=stevenschlansker" class="user-hover" rel="stevenschlansker">Steven Schlansker</a>: could you provide a repro for the mesos case you report?</p></comment>
<comment id="14962642" author="fpj" created="Sun, 18 Oct 2015 21:39:56 +0000"><p>From the description of the issue, the problem is that we do this:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> if (zh-gt;hostname == 0) { goto abort; } if(getaddrs(zh)!=0) { goto abort; } </pre> </div></div> <p>before calling adaptor_init. I'm wondering if the problem is that in the lock and unlock calls we don't have anything in in sent_requests:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>// In free_completions called from abort-gt;destroy-gt;cleanup_bufs: lock_completion_list(amp;zh-gt;sent_requests); tmp_list = zh-gt;sent_requests; zh-gt;sent_requests.head = 0; zh-gt;sent_requests.last = 0; unlock_completion_list(amp;zh-gt;sent_requests); // Lock/Unlock calls void lock_completion_list(completion_head_t *l) { pthread_mutex_lock(amp;l-gt;lock); } void unlock_completion_list(completion_head_t *l) { pthread_cond_broadcast(amp;l-gt;cond); pthread_mutex_unlock(amp;l-gt;lock); } </pre> </div></div></comment>
<comment id="14962650" author="rgs" created="Sun, 18 Oct 2015 22:04:58 +0000"><p>But that shouldn't cause a crash, if cond and lock are NULL then pthread_cond_broadcast and pthread_mutex_lock will just return EINVAL.</p> <p>It's still needs to be fixed, but the MESOS related problem seems to cause a crasher. I want to separate the issues. </p></comment>
<comment id="14963012" author="fpj" created="Mon, 19 Oct 2015 09:00:42 +0000"><p>I was actually referring to l being null, not cond and lock. </p></comment>
<comment id="14963444" author="rgs" created="Mon, 19 Oct 2015 15:10:55 +0000"><p>But that's not correct, sent_requests is a struct (not a struct *) with cond and lock members. It's initialized to 0 as part of the calloc call(). So there won't be a NULL pointer dereference.</p> <p>I think the Mesos crasher is not in ZK, but in Mesos proper.</p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vinod%40twitter.com" class="user-hover" rel="vinod@twitter.com">Vinod Kone</a> might know better. </p></comment>
<comment id="14979542" author="fpj" created="Thu, 29 Oct 2015 00:23:17 +0000"><p>Would it work if we do something like this in destroy(..)</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> <span class="code-comment">/* call any outstanding completions with a special error code */</span> - cleanup_bufs(zh,1,ZCLOSING); + <span class="code-keyword">if</span> (zh-gt;addrs != 0) { + cleanup_bufs(zh,1,ZCLOSING); + } </pre> </div></div> <p>The rationale is that if the addresses are not set, and can't possibly have any buffers to cleanup. It's a bit hacky and I wish there were a better way to spot that the initialization between getaddrs and adaptor_init in zookeeper_init hasn't been done.</p></comment>
<comment id="14979550" author="rgs" created="Thu, 29 Oct 2015 00:27:32 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>: I am not sure if that doesn't leak memory.. have you checked?</p></comment>
<comment id="14979553" author="rgs" created="Thu, 29 Oct 2015 00:29:50 +0000"><p>Sorry, you are right: there is nothing to cleanup. That's probably as good as it can get without adding more exit/cleanup branches to zookeeper_init...</p></comment>
<comment id="14980738" author="fpj" created="Thu, 29 Oct 2015 16:39:37 +0000"><p>Here is a preliminary patch for branch 3.4.</p></comment>
<comment id="14980773" author="fpj" created="Thu, 29 Oct 2015 16:50:52 +0000"><p>Patch for branch 3.4.</p></comment>
<comment id="14980829" author="hadoopqa" created="Thu, 29 Oct 2015 17:12:21 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12769566/ZOOKEEPER-1029-3.4.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12769566/ZOOKEEPER-1029-3.4.patch</a><br/> against trunk revision 1711151.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2936//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2936//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14980870" author="rgs" created="Thu, 29 Oct 2015 17:30:50 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>; thanks - lgtm. Fixing the log calls isn't necessary though (it has been fixed here: <a href="https://github.com/apache/zookeeper/commit/ad9e978b32ba7b7d7dfeb0b749ace2ae99384035" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/commit/ad9e978b32ba7b7d7dfeb0b749ace2ae99384035</a>). Could you rebase and re-post? I can merge afterwards. Thanks!</p></comment>
<comment id="14981217" author="fpj" created="Thu, 29 Oct 2015 20:35:15 +0000"><p>I'm wondering how to test this. It is simple enough that it seems to do the job, but it'd be good to make sure.</p></comment>
<comment id="14981415" author="fpj" created="Thu, 29 Oct 2015 22:09:02 +0000"><p>We have these test cases:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> void testInvalidAddressString1() { <span class="code-keyword">const</span> string INVALID_HOST(<span class="code-quote">"host1"</span>); zh=zookeeper_init(INVALID_HOST.c_str(),0,0,0,0,0); CPPUNIT_ASSERT(zh==0); CPPUNIT_ASSERT_EQUAL(EINVAL,errno); } void testInvalidAddressString2() { <span class="code-keyword">const</span> string INVALID_HOST(<span class="code-quote">"host1:1111+host:123"</span>); zh=zookeeper_init(INVALID_HOST.c_str(),0,0,0,0,0); CPPUNIT_ASSERT(zh==0); CPPUNIT_ASSERT((ENOENT|EINVAL) amp; errno); } </pre> </div></div> <p>Why isn't this verifying the problem described here? CC <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dheerajagrawal" class="user-hover" rel="dheerajagrawal">Dheeraj Agrawal</a></p></comment>
<comment id="14981438" author="rgs" created="Thu, 29 Oct 2015 22:22:40 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>: what are you trying to verify? As I said before, trying to lock/unlock uninitialized locks doesn't actually change cleanup code path (i.e.: we just don't acquire the lock, but it doesn't matter since the IO amp; event thread haven't started...).</p></comment>
<comment id="14981548" author="fpj" created="Thu, 29 Oct 2015 23:20:12 +0000"><p>One of the comments mentioned a crash and it confused me, I thought the problem described here was causing a crash, so I was simply trying to avoid that execution path through cleanup_bufs. After reading the description again, I think the solution is simply to check the return value of the lock call, like in the latest patch I submitted, but let me know if I got it wrong again.</p></comment>
<comment id="14981556" author="rgs" created="Thu, 29 Oct 2015 23:27:23 +0000"><p>Yeah - the crash is actually in Mesos (<a href="https://issues.apache.org/jira/browse/MESOS-2186" title="Mesos crashes if any configured zookeeper does not resolve." class="issue-link" data-issue-key="MESOS-2186"><del>MESOS-2186</del></a>). </p></comment>
<comment id="14981558" author="fpj" created="Thu, 29 Oct 2015 23:29:28 +0000"><p>and what do you think of the latest patch, does it make any sense?</p></comment>
<comment id="14981577" author="rgs" created="Thu, 29 Oct 2015 23:40:18 +0000"><p>I think it's a good start, though we might want to check return codes for these ones too:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">void enter_critical(zhandle_t* zh) { struct adaptor_threads *adaptor = zh-gt;adaptor_priv; <span class="code-keyword">if</span>(adaptor) pthread_mutex_lock(amp;adaptor-gt;zh_lock); } void leave_critical(zhandle_t* zh) { struct adaptor_threads *adaptor = zh-gt;adaptor_priv; <span class="code-keyword">if</span>(adaptor) pthread_mutex_unlock(amp;adaptor-gt;zh_lock); } </pre> </div></div> <p>We can probably leave that for another round. Unless there's anything else you'd like to add, I'll go ahead and merge this. </p></comment>
<comment id="14981578" author="rgs" created="Thu, 29 Oct 2015 23:40:54 +0000"><p>meant to say: "although we can probably leave these two methods for later..."</p></comment>
<comment id="14981588" author="fpj" created="Thu, 29 Oct 2015 23:49:09 +0000"><p>I made the changes you suggested.</p></comment>
<comment id="14981605" author="rgs" created="Fri, 30 Oct 2015 00:00:33 +0000"><p>lgtm - thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>!</p> <p>cc: <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a> - in case you want to take a look, otherwise i'll merge it tomorrow. </p></comment>
<comment id="14981726" author="hadoopqa" created="Fri, 30 Oct 2015 02:09:39 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12769667/ZOOKEEPER-1029-3.4.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12769667/ZOOKEEPER-1029-3.4.patch</a><br/> against trunk revision 1711151.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2937//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2937//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14982461" author="hadoopqa" created="Fri, 30 Oct 2015 12:10:44 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12769759/ZOOKEEPER-1029-3.4.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12769759/ZOOKEEPER-1029-3.4.patch</a><br/> against trunk revision 1711151.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2938//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2938//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14982500" author="hadoopqa" created="Fri, 30 Oct 2015 12:39:04 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12769766/ZOOKEEPER-1029-3.4.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12769766/ZOOKEEPER-1029-3.4.patch</a><br/> against trunk revision 1711151.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2939//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2939//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14982722" author="dheerajagrawal" created="Fri, 30 Oct 2015 15:45:13 +0000"><p>Looks good/./. one quick note . I see in the patch return codes are added to all pthread wrapper functions, please check the windows impl / defines of the all the pthread methods, to make sure they return the same error code. many times unix/windows return code may be different. I think there is a file which has all the windows defines for those pthreads.<br/> for eg.<br/> return pthread_mutex_unlock</p></comment>
<comment id="14982733" author="dheerajagrawal" created="Fri, 30 Oct 2015 15:48:21 +0000"><p>Error code as in 0 vs gt; 0, lt; 0 etc. <br/> on success on unix we may get 1 for certain call, and on windows for the same call we may get 0. I had seen some differences like this. Just wanted to make sure none of the apis here in the patch, dont have that..else the branching may not be correct on windows.</p></comment>
<comment id="14982744" author="fpj" created="Fri, 30 Oct 2015 15:53:18 +0000"><p>Canceling patch to address comments.</p></comment>
<comment id="14982786" author="fpj" created="Fri, 30 Oct 2015 16:20:33 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dheerajagrawal" class="user-hover" rel="dheerajagrawal">Dheeraj Agrawal</a> I have checked winport.c and the value returned on success is 0 out of a call to WaitForSingleObject. The success value is also 0 on linux. Are we good or do you see any problem? Feel free to double check if you want, otherwise I'll resubmit the patch.</p> <p>I have also run tests and they pass fine for me.</p></comment>
<comment id="14983031" author="cnauroth" created="Fri, 30 Oct 2015 18:34:02 +0000"><p>+1 for the branch-3.4 patch. Thank you, Flavio. I can review a trunk/branch-3.5 patch too when it's available.</p></comment>
<comment id="14983175" author="fpj" created="Fri, 30 Oct 2015 19:50:20 +0000"><p>I wanted to primarily unblock <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> so that we can finally produce an RC for 3.4.7. If you could check this one in <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a>, I'd appreciate.</p> <p>I'll generate a patch for 3.5 and trunk and soon as I have a chance, but I don't want it to block 3.4.7.</p></comment>
<comment id="14983651" author="cnauroth" created="Sat, 31 Oct 2015 00:08:53 +0000"><p>Sounds good. I have committed this to branch-3.4. I'll leave the JIRA opened, pending commits to trunk and branch-3.5. Flavio and Raul, thank you for your work on this.</p></comment>
<comment id="14983885" author="fpj" created="Sat, 31 Oct 2015 07:43:24 +0000"><p>Thanks, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a>.</p> <p>Branch 3.4: Committed revision 1711566</p></comment>
<comment id="15039717" author="rgs" created="Fri, 4 Dec 2015 04:04:44 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>: can you forward port your patch to trunk/3.5?</p></comment>
<comment id="15049410" author="fpj" created="Wed, 9 Dec 2015 21:31:20 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a> could you have a look at this, please? this is the version for 3.5 and trunk of the patch so that we can close this issue.</p></comment>
<comment id="15049439" author="hadoopqa" created="Wed, 9 Dec 2015 21:58:00 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12776638/ZOOKEEPER-1029-3.5.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12776638/ZOOKEEPER-1029-3.5.patch</a><br/> against trunk revision 1718758.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2992//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2992//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2992//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2992//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2992//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2992//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15050129" author="rgs" created="Thu, 10 Dec 2015 05:56:07 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>: a few comments:</p> <ul> <li>in lock_reconfig/unlock_reconfig and enter_critical/leave_critical if the the adaptor is not initialized we return 0 (lock or unlock succeeded) - is this actually desired? If so, maybe add a comment explaining why this is so?</li> </ul> <ul> <li>in:</li> </ul> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">- lock_completion_list(amp;zh-gt;sent_requests); - tmp_list = zh-gt;sent_requests; - zh-gt;sent_requests.head = 0; - zh-gt;sent_requests.last = 0; - unlock_completion_list(amp;zh-gt;sent_requests); - <span class="code-keyword">while</span> (tmp_list.head) { .... + <span class="code-keyword">if</span> (lock_completion_list(amp;zh-gt;sent_requests) == 0) { + tmp_list = zh-gt;sent_requests; + zh-gt;sent_requests.head = 0; + zh-gt;sent_requests.last = 0; + unlock_completion_list(amp;zh-gt;sent_requests); + <span class="code-keyword">while</span> (tmp_list.head) { </pre> </div></div> <p>we are now iterating over tmp_list.head <b>only if</b> zh-gt;requests was locked - do we need to couple them? Or should it be:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">+ <span class="code-keyword">if</span> (lock_completion_list(amp;zh-gt;sent_requests) == 0) { + tmp_list = zh-gt;sent_requests; + zh-gt;sent_requests.head = 0; + zh-gt;sent_requests.last = 0; + unlock_completion_list(amp;zh-gt;sent_requests); + } + <span class="code-keyword">while</span> (tmp_list.head) { + ... </pre> </div></div> <p>?</p> <ul> <li>similarly, in:</li> </ul> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">- a_list.completion = NULL; - a_list.next = NULL; - zoo_lock_auth(zh); ... + <span class="code-keyword">if</span> (zoo_lock_auth(zh) == 0) { + a_list.completion = NULL; + a_list.next = NULL; + + get_auth_completions(amp;zh-gt;auth_h, amp;a_list); + zoo_unlock_auth(zh); </pre> </div></div> <p>setting a_list.completion = NULL and a_list.next = NULL didn't previously depend on obtaining zoo_lock_auth.. but now they do. Again, should it just be:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">+ a_list.completion = NULL; + a_list.next = NULL; + <span class="code-keyword">if</span> (zoo_lock_auth(zh) == 0) { + get_auth_completions(amp;zh-gt;auth_h, amp;a_list); + zoo_unlock_auth(zh); + } </pre> </div></div> <p>?</p></comment>
<comment id="15050434" author="fpj" created="Thu, 10 Dec 2015 09:25:37 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> thanks for the review and comments. </p> <ol> <li>Previously, the return value was void, so if there was no adaptor, then we'd silently move on. By returning 0, I'm essentially keeping the same behavior and saying that it is OK to make progress. The case this patch is covering is focused on the one that it does try to acquire the lock, but the lock operation fails. Also, if you want to make this change here, then we will need to fix it in the 3.4 branch as well. With this patch, I'm just porting what we've done for the 3.4 branch so far.</li> <li>I don't think it is ok to move the while loop out of the if block because we aren't initializing tmp_list. Even if we were, there isn't going to be any iteration of the while loop because there is no head.</li> <li>It sounds ok to make this change, but I don't see much advantage or any correction of behavior. If we don't call the if block as you define it, then we'll have a_list.completion = NULL and a_list.next = NULL, so there will be no iteration of the subsequent while loop.</li> </ol> </comment>
<comment id="15050442" author="fpj" created="Thu, 10 Dec 2015 09:32:27 +0000"><p>Waiting for feedback.</p></comment>
<comment id="15051570" author="cnauroth" created="Thu, 10 Dec 2015 20:11:43 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>. The patch mostly looks good to me, pending resolution of the feedback from Raul. I ran some successful manual testing on both Linux and Windows.</p> <p>I just have a minor request. There are some coding style differences in the branch-3.5 patch compared to what got committed to branch-3.4. For example, indentation is different in <tt>unlock_buffer_list</tt>, and <tt>enter_critical</tt> uses a different brace style for a single-line if/else body. Can we please match style as closely as possible between the 2 branches? That will reduce the likelihood of merge conflicts if there are later backports to branch-3.4.</p> <p>Thanks!</p></comment>
<comment id="15051575" author="rgs" created="Thu, 10 Dec 2015 20:19:01 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a> - it makes sense. I am +1 with the patch as is. </p></comment>
<comment id="15051576" author="rgs" created="Thu, 10 Dec 2015 20:19:22 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a>: i checked Flavio's replies, I am +1 with the patch as is. Thanks!</p></comment>
<comment id="15051659" author="fpj" created="Thu, 10 Dec 2015 21:14:02 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a> I have fixed the if/else blocks, but the extra space in <tt>unlock_buffer_list</tt> was accidental, not a conscious style choice. Just remove it next time you commit a patch. </p></comment>
<comment id="15053500" author="cnauroth" created="Fri, 11 Dec 2015 20:15:56 +0000"><p>+1 for the branch-3.5 patch. I have committed this to trunk and branch-3.5 <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>, thank you for the patch. <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a>, thank you for the thorough code reviews.</p></comment>
<comment id="15053646" author="hudson" created="Fri, 11 Dec 2015 21:56:52 +0000"><p>SUCCESS: Integrated in ZooKeeper-trunk #2828 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2828/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2828/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1029" title="C client bug in zookeeper_init (if bad hostname is given)" class="issue-link" data-issue-key="ZOOKEEPER-1029"><del>ZOOKEEPER-1029</del></a>: C client bug in zookeeper_init (if bad hostname is given) (fpj via cnauroth) (cnauroth: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1719528" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1719528</a>)</p> <ul> <li>trunk/CHANGES.txt</li> <li>trunk/src/c/src/mt_adaptor.c</li> <li>trunk/src/c/src/st_adaptor.c</li> <li>trunk/src/c/src/zk_adaptor.h</li> <li>trunk/src/c/src/zookeeper.c</li> </ul> </comment>
<comment id="16642943" author="jomach" created="Tue, 9 Oct 2018 08:17:14 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a> I think there is a bug here. On Mesos we have a problem that if one host is not DNS resolvable  it does not try the other ones. </p> <p>I checked the zookeeper.c and in the function resolve_hosts line 813 we jump to next and from there we return the ZOK. I think there is some kind of looping missing. I'm no C expert sorry... On the Java api I see that we use InetSocketAddress.createUnresolved so that it will not be tried to resolve the hosts, can it be that we have a issue there ?</p></comment>
<comment id="16728641" author="bibmaster" created="Tue, 25 Dec 2018 09:42:48 +0000"><p>Function <tt>free_auth_completion(amp;a_list)</tt> call must be moved inside conditional block <tt>if (zoo_lock_auth(zh) == 0)</tt>. Otherwise it is called with trash in a_list.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="12310050">
<name>Regression</name>
<outwardlinks description="breaks">
<issuelink>
<issuekey id="12976382">ZOOKEEPER-2443</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12769766" name="ZOOKEEPER-1029-3.4.patch" size="8477" author="fpj" created="Fri, 30 Oct 2015 12:21:17 +0000"/>
<attachment id="12769759" name="ZOOKEEPER-1029-3.4.patch" size="8509" author="fpj" created="Fri, 30 Oct 2015 11:34:42 +0000"/>
<attachment id="12769667" name="ZOOKEEPER-1029-3.4.patch" size="5105" author="fpj" created="Thu, 29 Oct 2015 23:49:09 +0000"/>
<attachment id="12769662" name="ZOOKEEPER-1029-3.4.patch" size="3883" author="fpj" created="Thu, 29 Oct 2015 23:16:58 +0000"/>
<attachment id="12769566" name="ZOOKEEPER-1029-3.4.patch" size="4133" author="fpj" created="Thu, 29 Oct 2015 16:50:52 +0000"/>
<attachment id="12769561" name="ZOOKEEPER-1029-3.4.patch" size="3295" author="fpj" created="Thu, 29 Oct 2015 16:39:37 +0000"/>
<attachment id="12776893" name="ZOOKEEPER-1029-3.5.patch" size="9556" author="fpj" created="Thu, 10 Dec 2015 21:14:02 +0000"/>
<attachment id="12776638" name="ZOOKEEPER-1029-3.5.patch" size="9432" author="fpj" created="Wed, 9 Dec 2015 21:31:20 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>2455</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05yyn:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32763</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
<customfieldname>Tags</customfieldname>
<customfieldvalues>
<customfieldvalue>c client, adaptor_init, zookeeper_init, bad hostname</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-2014] Only admin should be allowed to reconfig a cluster</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-2014</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a> introduces reconfiguration support via the reconfig() call. We should, at the very least, ensure that only the Admin can reconfigure a cluster. Perhaps restricting access to /zookeeper/config as well, though this is debatable. Surely one could ensure Admin only access via an ACL, but that would leave everyone who doesn't use ACLs unprotected. We could also force a default ACL to make it a bit more consistent (maybe).</p> <p>Finally, making reconfig() only available to Admins means they have to run with zookeeper.DigestAuthenticationProvider.superDigest (which I am not sure if everyone does, or how would it work with other authentication providers). </p> <p>Review board <a href="https://reviews.apache.org/r/51546/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/51546/</a></p></description>
<environment/>
<key id="12735645">ZOOKEEPER-2014</key>
<summary>Only admin should be allowed to reconfig a cluster</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="hanm">Michael Han</assignee>
<reporter username="rgs">Raúl Gutiérrez Segalés</reporter>
<labels> </labels>
<created>Thu, 21 Aug 2014 02:57:37 +0000</created>
<updated>Thu, 18 May 2017 03:44:01 +0000</updated>
<resolved>Sun, 13 Nov 2016 20:10:56 +0000</resolved>
<version>3.5.0</version>
<fixVersion>3.5.3</fixVersion>
<fixVersion>3.6.0</fixVersion>
<component>server</component>
<due/>
<votes>0</votes>
<watches>15</watches>
<comments>
<comment id="14105013" author="rgs" created="Thu, 21 Aug 2014 04:10:37 +0000"><p>this is RFC and very basic.</p> <p>cc: <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hdeng" class="user-hover" rel="hdeng">Hongchao Deng</a></p></comment>
<comment id="14105040" author="hdeng" created="Thu, 21 Aug 2014 04:56:46 +0000"><blockquote> <p> ensure that only the Admin can reconfigure a cluster.</p></blockquote> <p>This change will reduce much flexibility in reconfig.<br/> A counter scenario would be I have a process that detects "permanent" failed ZK servers and removes them to make a smaller quorum (better fault tolerance). Does the process have to be Admin? Or would a default ACL be a better option here?</p></comment>
<comment id="14105041" author="shralex" created="Thu, 21 Aug 2014 04:56:58 +0000"><p>Thanks for starting this thread, Raul. I'm not sure what's the right way to handle the issue, but just wanted to mention a couple of things.</p> <p>1. Regarding access to /zookeeper/config - clients may need read access for example in order to run the new client-side load balancing functionality, they need to detect a config change and get a new connection string. They can use getConfig for this. It is probably a good idea to restrict access for writes. Writing it probably won't break the system but may cause all clients to migrate to any server I choose to mention there, if clients are using the client-side load balancing algorithm.</p> <p>2. Notice that when the leader processes reconfig in PrepRequestProcessor it already checks ACL:</p> <p> nodeRecord = getRecordForPath(ZooDefs.CONFIG_NODE); <br/> checkACL(zks, nodeRecord.acl, ZooDefs.Perms.WRITE, request.authInfo); </p></comment>
<comment id="14105042" author="shralex" created="Thu, 21 Aug 2014 05:00:29 +0000"><p>Actually perhaps we should open a JIRA to hide the client-side rebalancing from clients (not for 3.5.0). We may want to implement it inside the client-side library somehow and just let the client specify whether this is enabled or disabled when creating a ZK handle. What do you think ? </p></comment>
<comment id="14105052" author="shralex" created="Thu, 21 Aug 2014 05:13:49 +0000"><p>+<a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=michim" class="user-hover" rel="michim">Michi Mutsuzaki</a></p></comment>
<comment id="14106404" author="shralex" created="Fri, 22 Aug 2014 03:24:29 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a>, should this be similar to how updating the quota znode works ? or do you think changing configuration is different ?</p></comment>
<comment id="14106503" author="rgs" created="Fri, 22 Aug 2014 05:51:51 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>: well, quotas rely on ACLs. But, quotas are (currently) advisory only (i.e.: we don't reject traffic) so no damage can be done by non-admins. So I think we need a stricter enforcement here, no?</p></comment>
<comment id="14106504" author="rgs" created="Fri, 22 Aug 2014 05:52:05 +0000"><p>(by which I mean, you can really bring a cluster down with this).</p></comment>
<comment id="14107813" author="phunt" created="Sat, 23 Aug 2014 02:35:09 +0000"><p>Yes, this is a concern for me as well.</p> <p>1) mixing the client api and the admin api is not great. It would be better to have them separate. We should fix this asap.</p> <p>2) this (controlling access to reconfig) is a big issue from a security perspective IMO.</p> <p>A few comments on the comments so far:</p> <blockquote><p>ensure that only the Admin can reconfigure a cluster</p></blockquote> <p>sounds sensible to me</p> <blockquote><p>Perhaps restricting access to /zookeeper/config as well</p></blockquote> <p>in the past we've (ben in particular) tried to limit the amount of information we provide to the client/session. For example we don't tell them which server they are connected to. I see this in the same vein.</p> <blockquote><p>one could ensure Admin only access via an ACL, but that would leave everyone who doesn't use ACLs unprotected.</p></blockquote> <p>well, you're already unprotected in this situation so I don't really see it as a sticking point.</p> <blockquote><p>clients may need read access for example in order to run the new client-side load balancing functionality</p></blockquote> <p>perhaps this argues for pushing this to the the server? encapsulate the information on the service I mean and expose as a specific api.</p> <blockquote><p>Actually perhaps we should open a JIRA to hide the client-side rebalancing from clients (not for 3.5.0). </p></blockquote> <p>yes, that's what I was trying to get at in the previous item in this comment. Although I think we'd need to fix this now - while we can still change the apis w/o worrying about b/w compat (we can change new apis during the alpha period w/o worrying about back compat)</p> <blockquote><p>should this be similar to how updating the quota znode works ? or do you think changing configuration is different ?</p></blockquote> <p>if quotas are "admin" functions we probably need to fix those as well - lock them down to just admin level authz I mean.</p></comment>
<comment id="14107837" author="shralex" created="Sat, 23 Aug 2014 04:00:50 +0000"><p>Everything you guys are saying about admin-only controls sounds very reasonable. I just want to clarify about the special reconfig znode. IMHO we should not allow write permissions to this node. I don't even see why an admin should have it <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> its set only through the reconfig API. </p> <p>I do think that all clients should have read permissions, and here's why - the information they get from this znode is the up-to-date connection string. When the configuration changes this is the bare minimum they need in order not to loose track of the system. When their server crashes they need to know whom to connect to next. The new connection string is exactly the information we exploit for rebalancing. It is even implemented inside the updateServerList method, which is also needed in any case. </p> <p>Regarding my suggestion - Hongchao opened a JIRA for it and you can read the discussion there <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2016" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-2016</a><br/> Please especially see Marshall's comment.<br/> All I'm proposing there is to implement some default behaviour that will save most clients from setting a watch and invoking updateServerList - I suggest that the client-side-library does it for them if they opt-in for the default behaviour. It doesn't change APIs, just adds one more feature, so it doesn't delay 3.5.0.</p> </comment>
<comment id="15198757" author="shralex" created="Thu, 17 Mar 2016 05:14:39 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a>, does your patch solve the issue ? if not, what is still missing ? If I remember correctly my concern was that I'd like getConfig to be available to regular clients, not only admin, so they can react to configuration changes.</p> <p>If this JIRA is what's blocking 3.5 perhaps we could reconsider the approach and go with something<br/> simpler to start with, such as relying on ACLs. Or setting default ACLs for the config znode and requiring<br/> client admins to have these permissions.</p></comment>
<comment id="15198842" author="phunt" created="Thu, 17 Mar 2016 06:39:31 +0000"><p>We can't (or at least promise we won't) change the api in a non b/w compatible way once it's post-alpha. As such I believe at a minimum we need to clean up the API (should be simple - move it out of ZooKeeper class) and ensure there are no security issues.</p></comment>
<comment id="15384994" author="hanm" created="Tue, 19 Jul 2016 22:33:27 +0000"><p>Had an offline discussion with <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a> yesterday regarding this issue, the conversation is captured as following points (with some of my thoughts as well):</p> <ul> <li>We can't fix security issue unless we enforce authentication and authorization. Just by moving client APIs around is not enough because at protocol level the server still open to reconfiguration and someone can exploit this easily (by writing their own ZK client instead of using ZooKeeper client for example.).</li> </ul> <ul> <li>That said though, the ZooKeeper::reconfig API should be moved out of ZooKeeper class (for Java client) anyway, because it's more about an admin feature rather than a client API. Moving reconfig out of ZooKeeper will also remove constraints we possibly put on normal ZooKeeper clients (such as having to use zookeeper.DigestAuthenticationProvider.superDigest), which is a bonus. Due to API backward compatibility concerns, this refactoring should happen before we move to beta.</li> </ul> <ul> <li>We'd like to introduce a new configuration option in zoo.cfg to turn off reconfig feature by default. ZK users who needs use this feature need turn it on explicitly. Because dynamic reconfig feature brings something new (e.g. cfg.dynamic file), have this feature off is good for 'the principal of least surprise'. Having the feature off by default will also buy us sometime to fortify and stabilize the feature without having it being a blocker issue.</li> </ul> <p>The action items / plans I am thinking in the time frame of 3.5.3:</p> <ul> <li>Fix Security: <ul> <li>Enforce an ACL on /zookeeper/config, such that only users that have write permission to it can reconfig the cluster. /zookeeper/config is by default readable to anyone so zookeeper (none-admin) clients can load balancing on client side either manually (current behavior) or automatically (<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2016" title="Automate client-side rebalancing" class="issue-link" data-issue-key="ZOOKEEPER-2016">ZOOKEEPER-2016</a>).</li> <li>ZooKeeper users are responsible for properly configure the ACL such that only a limited set of admin users are part of the ACL with write access. The authentication of these users will be delegated to existing mechanisms ZooKeeper already supports, such as SASL client login, so not much work here except documentation on such a requirement to use reconfig feature.</li> <li>The default behavior is such that if /zookeeper/config node has no associated ACLs, then no one is allowed write access except super user.</li> </ul> </li> <li>Fix API: <ul> <li>For Java client, create a new class ZooKeeperAdmin that inherits ZooKeeper class and move reconfig API into ZooKeeperAdmin class.</li> <li>For C client, there is no namespace and the existing zhandle is coupled with reconfig state so it is not as simple as Java client to isolate admin part of the API from rest of APIs. Working on a proposal.</li> </ul> </li> </ul> <ul> <li>Introduce a new zoo.cfg option to switch reconfiguration feature on or off. The new configuration option will be set as 'disable reconfig' by default when 3.5.3 shipped, and user who wants reconfig has to enable reconfig option explicitly.</li> </ul> <p>Are these good enough for now to address all security concerns or we still miss something?<br/> Comments?</p> <p>CC <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a></p></comment>
<comment id="15432063" author="shralex" created="Tue, 23 Aug 2016 03:20:21 +0000"><p>Hi Michael, all of this sounds good to me except for moving getConfig to ZooKeeperAdmin. I've explained why several times in the thread above (search for "getconfig"), please let me know if you disagree.</p></comment>
<comment id="15432119" author="hanm" created="Tue, 23 Aug 2016 04:29:19 +0000"><p>Thanks for your feedback Alex. I agree about getConfig API remaining as part of ZooKeeper because we don't transparently handle load balancing for clients. I had that in my first version of proposal but I forgot to keep it when update the proposal.</p> <p>A side question, I think this (handle load balancing when server changes) is the only use case for getConfig API right? Basically:</p> <ul> <li>Client sets a watcher when calling getConfig.</li> <li>The callback of the watcher invokes updateServerList.</li> <li>When servers are reconfigured, watcher gets triggered and updateServerList gets invoked, which would do load balancing for clients.</li> </ul> </comment>
<comment id="15432124" author="shralex" created="Tue, 23 Aug 2016 04:39:20 +0000"><p>I think that the general idea is that clients should be able to track the latest configuration and do something when it changes. For example if the server to which the client is connected goes away, it should have a way to query the system for the new list of servers and connect to one of them. The method you described is one option, outlined in the reconfig manual (right at the end there's some code for this). </p> <p>It would be nice to automate these steps for the user and to support a user defined policy instead of these steps (see some ideas in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2016" title="Automate client-side rebalancing" class="issue-link" data-issue-key="ZOOKEEPER-2016">ZOOKEEPER-2016</a>). For example, if you want the user to only connect to near-by servers, you'd need to filter the new list of servers before calling updateServerList. This can be done as part of a user-supplied policy.</p></comment>
<comment id="15439681" author="hanm" created="Fri, 26 Aug 2016 19:48:43 +0000"><p>First stab on implementing basics outlined in the design. Patch is not ready (pending docs update, more tests, and C client work), upload here for preview and feedback only. </p></comment>
<comment id="15450110" author="hanm" created="Tue, 30 Aug 2016 20:47:41 +0000"><p>Fixed C client unit tests, added more documentation regarding API changes, new configuration option, and ACLs around config znode. Added more Java tests. Patch is ready for review.</p></comment>
<comment id="15450116" author="hadoopqa" created="Tue, 30 Aug 2016 20:49:39 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12826240/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12826240/ZOOKEEPER-2014.patch</a><br/> against trunk revision 1757584.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 37 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3376//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3376//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15450126" author="hanm" created="Tue, 30 Aug 2016 20:54:07 +0000"><p>build bot complains, cancel to investigate..</p></comment>
<comment id="15450446" author="hadoopqa" created="Tue, 30 Aug 2016 23:18:03 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12826264/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12826264/ZOOKEEPER-2014.patch</a><br/> against trunk revision 1757584.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 37 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3377//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3377//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3377//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3377//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3377//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3377//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15450515" author="hanm" created="Tue, 30 Aug 2016 23:50:00 +0000"><p>For reviewers: <a href="https://reviews.apache.org/r/51546/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/51546/</a></p></comment>
<comment id="15455908" author="hanm" created="Thu, 1 Sep 2016 16:23:47 +0000"><p>Fix find bug warnings.</p></comment>
<comment id="15455970" author="hadoopqa" created="Thu, 1 Sep 2016 16:47:52 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12826655/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12826655/ZOOKEEPER-2014.patch</a><br/> against trunk revision 1757584.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 37 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3378//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3378//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3378//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3378//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3378//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3378//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15507418" author="hanm" created="Tue, 20 Sep 2016 18:48:58 +0000"><p>Nudge nudge - anyone has cycles to take a look at the patch and provide feedback?<br/> cc <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a> </p></comment>
<comment id="15509210" author="fpj" created="Wed, 21 Sep 2016 08:33:00 +0000"><p>I'll get to it before the end of this week, this is really important for the progress of the 3.5 branch.</p></comment>
<comment id="15524410" author="hanm" created="Mon, 26 Sep 2016 22:45:02 +0000"><p>Update patch to address review comments. Major changes comparing to previous version patch:</p> <ul> <li>Warn user when skipACL is set and reconfig is performed.</li> <li>New keeper exception that represents the error user got when doing reconfig but with reconfig feature disabled.</li> <li>ZooKeeperAdmin moved to admin package.</li> <li>Doc updates.</li> <li>Misc updates (rename method in java way, remove tabs, etc.).</li> </ul> </comment>
<comment id="15524413" author="hanm" created="Mon, 26 Sep 2016 22:46:37 +0000"><p>Thanks a lot <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a> for your review comments. Just upload a new patch that address all of your review comments (minors the C client ones). The remaining work is on C client side where I plan to add more tests as Java side, which will be done in next few days and then I will upload final patch for review.</p></comment>
<comment id="15527075" author="rakeshr" created="Tue, 27 Sep 2016 18:47:35 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a> for working on this. I've added few comments in RB, please take a look at it.</p></comment>
<comment id="15527643" author="hanm" created="Tue, 27 Sep 2016 22:38:08 +0000"><p>Fixed a couple of things pointed out by Rakesh (C client work is still WIP, not included here.).</p></comment>
<comment id="15528898" author="fpj" created="Wed, 28 Sep 2016 08:33:32 +0000"><p>I'll wait until you have the C client changes to make another pass, unless you need feedback on some specific parts to make progress. <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a></p></comment>
<comment id="15531249" author="hanm" created="Wed, 28 Sep 2016 23:38:32 +0000"><p>Update patch to include C client work:</p> <ul> <li>Removed skipACL, set up servers with super user digest auth like Java tests did.</li> <li>Updated C client tests, add one specific test case to cover various reconfig failure cases caused by failure of auth.</li> <li>Misc update for first review feedback related to method signature and so on.</li> </ul> </comment>
<comment id="15531257" author="hanm" created="Wed, 28 Sep 2016 23:41:12 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>: Sounds good - actually just updated patch that incorporates some C side changes. PTAL when you have a chance, thanks a lot!</p></comment>
<comment id="15531402" author="hadoopqa" created="Thu, 29 Sep 2016 00:48:08 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12830808/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12830808/ZOOKEEPER-2014.patch</a><br/> against trunk revision ec20c5434cc8a334b3fd25e27d26dccf4793c8f3.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 40 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3458//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3458//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3458//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3458//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3458//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3458//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15531585" author="hadoopqa" created="Thu, 29 Sep 2016 02:34:11 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12830832/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12830832/ZOOKEEPER-2014.patch</a><br/> against trunk revision ec20c5434cc8a334b3fd25e27d26dccf4793c8f3.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 40 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3459//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3459//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3459//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3459//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3459//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3459//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15543794" author="hanm" created="Mon, 3 Oct 2016 23:49:23 +0000"><p>Update patch that fixes a couple of places pointed by Flavio in review board.</p></comment>
<comment id="15543981" author="hadoopqa" created="Tue, 4 Oct 2016 01:16:18 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12831433/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12831433/ZOOKEEPER-2014.patch</a><br/> against trunk revision ec20c5434cc8a334b3fd25e27d26dccf4793c8f3.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 42 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3462//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3462//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3462//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3462//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3462//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3462//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15558081" author="fpj" created="Sat, 8 Oct 2016 14:36:24 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a> One of the tests that failed in the QA run is modified in the patch: <tt>testQuorumSystemChange</tt>. Could you have a look, please?</p></comment>
<comment id="15558418" author="hanm" created="Sat, 8 Oct 2016 17:51:47 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>: This is a flaky test, and it happened before this patch with exact same error message in Apache builds and precommit build. I did a search over my email archive and found a couple of instances (e.g. ZooKeeper_branch35_openjdk7 - Build # 159). I'll create a separate JIRA and put it under <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2135" title="fix trunk build" class="issue-link" data-issue-key="ZOOKEEPER-2135">ZOOKEEPER-2135</a>.</p> <p>On a side note, I have an internal Jenkins job that set up and stress test my patch branch of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a>. There is no test failure except the one that's already tracked in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2080" title="Fix deadlock in dynamic reconfiguration" class="issue-link" data-issue-key="ZOOKEEPER-2080"><del>ZOOKEEPER-2080</del></a>. So this flaky testQuorumSystemChange one might also hard to reproduce.</p></comment>
<comment id="15561850" author="fpj" created="Mon, 10 Oct 2016 09:59:31 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a> I'm probably missing something obvious, but when I try to reconfigure, I get an auth failure, but I think I'm setting up everything right. This is the output of ZooKeeperMain plus my commands:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>Connecting to localhost:2181 log4j:WARN No appenders could be found for logger (org.apache.zookeeper.ZooKeeper). log4j:WARN Please initialize the log4j system properly. log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info. Welcome to ZooKeeper! JLine support is disabled WATCHER:: WATCHER:: WatchedEvent state:SyncConnected type:None path:null WatchedEvent state:SyncConnected type:None path:null addauth digest super:test getAcl /zookeeper/config 'digest,'super:D/InIHSb7yEEbrWz8b9l71RjZJU= : a reconfig -add server.5=127.0.0.1:1234:1235;1236 Authentication is not valid : </pre> </div></div> <p>I have <tt>reconfigEnabled=true</tt> in the configuration of the servers.</p></comment>
<comment id="15563598" author="hanm" created="Mon, 10 Oct 2016 21:38:30 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a> It's a bug, thanks for pointing it out! When we do reconfigure through command line, the <tt>addauth</tt> command will set the auth packet for the connection associated with the <tt>ZooKeeper</tt> object of the <tt>CliCommand</tt>. The reconfig command however is going to be executed by the <tt>ZooKeeperAdmin</tt> object of the <tt>CliCommand</tt>, and because addauth currently does not associate the auth packet to the underlying connection managed by <tt>ZooKeeperAdmin</tt>, when reconfig request hits server it will miss auth info, thus yield auth failure. The fix is to teach <tt>AddAuthCommand</tt> to set auth packet for <tt>ZooKeeperAdmin</tt> as well.</p> <p>As we previously discussed in review board, an alternative is to have a single ZooKeeper object (since ZooKeeperAdmin is also a ZooKeeper) maintained in <tt>CliCommand</tt> so every command / request will converge to a single path. I did not do that for stability purposes - with a separate ZooKeeperAdmin object all existing commands (except reconfig) should not be impacted at all. I might be over cautious on this one though and maintaining a single ZK object inside CliCommand might be a better solution overall. Please let me know if you prefer one over the other.</p> <p>Attaching updated patch (with one line change) that fixes the issue. Verified with zkCli.sh / reconfig command on a local 3 server cluster.</p></comment>
<comment id="15563602" author="hanm" created="Mon, 10 Oct 2016 21:39:35 +0000"><p>Trivial update that fixes an important bug pointed out by Flavio (reconfig failed with NoAuth via zkCli.sh).</p></comment>
<comment id="15563874" author="hadoopqa" created="Mon, 10 Oct 2016 23:23:19 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12832546/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12832546/ZOOKEEPER-2014.patch</a><br/> against trunk revision f78061aafb19b102c37cb6d744ec6258d5f5b66e.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 42 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3480//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3480//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3480//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3480//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3480//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3480//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15565322" author="fpj" created="Tue, 11 Oct 2016 12:45:55 +0000"><p>Thanks for fixing it. I see the point of stability, but I don't think it is much of a concern in this case. You're just building on top of the ZooKeeper, you won't be re-wiring the existing ZooKeeper client code, I think. If I'm right, then it is better to have a single connection to the service rather than two, one for the ZooKeeper object and another for ZooKeeperAdmin. In any case, it might be worth giving it a shot to get a sense of whether it'd cause trouble.</p></comment>
<comment id="15565419" author="fpj" created="Tue, 11 Oct 2016 13:35:25 +0000"><p>I checked that it works for me when reconfig is enabled. I have a couple of other things I wanted to raise:</p> <ol> <li>When I tried with reconfig disabled, I got this message: <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>reconfig -add server.5=127.0.0.1:1234:1235;1236 KeeperErrorCode = Reconfig is disabled for </pre> </div></div> <p>And it should be only <tt>Reconfig disabled</tt>, unless we want to convey some other information.</p></li> </ol> <ol> <li>I have also verified that to get the reconfig command to go through we only need the leader to have <tt>reconfigEnabled = true</tt>. There is no way around it unless the replicas coordinate to use the same value. We need it well documented, though.</li> </ol> </comment>
<comment id="15566674" author="hanm" created="Tue, 11 Oct 2016 21:28:29 +0000"><p>Yes keeping a single connection is right thing to do. Patch on the way.</p></comment>
<comment id="15566681" author="hanm" created="Tue, 11 Oct 2016 21:31:01 +0000"><p>Patch updates:</p> <ul> <li>Consolidate ZooKeeper and ZooKeeperAdmin object usage in CliCommand stack.</li> <li>Fix confusing KeeperException error message when path is set as empty.</li> <li>More documentation on having a consistent setting for the reconfigEnabled option across ensemble.</li> </ul> </comment>
<comment id="15566745" author="hadoopqa" created="Tue, 11 Oct 2016 22:00:07 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12832770/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12832770/ZOOKEEPER-2014.patch</a><br/> against trunk revision f78061aafb19b102c37cb6d744ec6258d5f5b66e.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 45 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 2 new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3481//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3481//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3481//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3481//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3481//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3481//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15566824" author="hanm" created="Tue, 11 Oct 2016 22:33:08 +0000"><p>Fix findbug warnings.</p></comment>
<comment id="15566907" author="hadoopqa" created="Tue, 11 Oct 2016 23:07:45 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12832782/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12832782/ZOOKEEPER-2014.patch</a><br/> against trunk revision f78061aafb19b102c37cb6d744ec6258d5f5b66e.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 45 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3483//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3483//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3483//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3483//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3483//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3483//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15566912" author="hanm" created="Tue, 11 Oct 2016 23:09:23 +0000"><p>Failed tests are known flaky..</p></comment>
<comment id="15581886" author="fpj" created="Mon, 17 Oct 2016 10:54:32 +0000"><p>Thanks for the updates, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a>. I want to do a few manual checks, but otherwise, the changes look good. I encourage others to have a look as well before we check it in.</p></comment>
<comment id="15584491" author="hanm" created="Tue, 18 Oct 2016 05:14:33 +0000"><p>Upload new patch to address Abe's review comments. </p> <ul> <li>Don't swallow the KeeperException when setting ACL on the config node during DataTree creation, instead let the exception bubble up to stop ZK server startup. This is to make sure we always have access controlled config node after ZK server is started.</li> <li>The rest of changes are really mechanical changes due to the exception specification changes in signature.</li> <li>Passed internal stress test of all unit tests.</li> </ul> </comment>
<comment id="15584609" author="hadoopqa" created="Tue, 18 Oct 2016 06:23:29 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12833880/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12833880/ZOOKEEPER-2014.patch</a><br/> against trunk revision cef5978969bedfe066f903834a9ea4af6d508844.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 96 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3493//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3493//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3493//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3493//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3493//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3493//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15612555" author="githubbot" created="Thu, 27 Oct 2016 17:22:06 +0000"><p>GitHub user hanm opened a pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/94" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/94</a></p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a>: Only admin should be allowed to reconfig a cluster.</p> <p> This PR implements <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a>. For details, please refer to</p> <ul> <li>JIRA: <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-2014</a></li> <li>Previous review board: <a href="https://reviews.apache.org/r/51546/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/51546/</a></li> </ul> <p>You can merge this pull request into a Git repository by running:</p> <p> $ git pull <a href="https://github.com/hanm/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/hanm/zookeeper</a> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a></p> <p>Alternatively you can review and apply these changes as the patch at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/94.patch" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/94.patch</a></p> <p>To close this pull request, make a commit to your master/trunk branch<br/> with (at least) the following in the commit message:</p> <p> This closes #94</p> <hr /> <p>commit 616e1275ac38890c2bf1e3ac27465172cf1c52d5<br/> Author: Michael Han lt;hanm@cloudera.comgt;<br/> Date: 2016-10-27T16:16:27Z</p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a>: Only admin should be allowed to reconfig a cluster.</p> <hr /></comment>
<comment id="15620024" author="githubbot" created="Sun, 30 Oct 2016 14:26:40 +0000"><p>Github user fpj commented on the issue:</p> <p> <a href="https://github.com/apache/zookeeper/pull/94" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/94</a></p> <p> @hanm since there is no comment, would you mind closing this PR and resubmitting it to see if QA picks it up?</p></comment>
<comment id="15620175" author="rakeshr" created="Sun, 30 Oct 2016 16:20:27 +0000"><p>Thank you <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a> for the continuous effort. Sorry for the delay in reviews. I've looked at the latest patch and added few minor comments in the RB. </p> <p>+1 from me after addressing these comments.</p></comment>
<comment id="15621145" author="githubbot" created="Mon, 31 Oct 2016 03:59:45 +0000"><p>Github user hanm commented on the issue:</p> <p> <a href="https://github.com/apache/zookeeper/pull/94" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/94</a></p> <p> @fpj Sure, closing and resubmitting with a new one that also addressing Rakesh's comments today.</p></comment>
<comment id="15621146" author="githubbot" created="Mon, 31 Oct 2016 03:59:45 +0000"><p>Github user hanm closed the pull request at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/94" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/94</a></p></comment>
<comment id="15621149" author="githubbot" created="Mon, 31 Oct 2016 04:01:56 +0000"><p>GitHub user hanm opened a pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96</a></p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a>: Only admin should be allowed to reconfig a cluster.</p> <p> This PR implements <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a>. For details, please refer to</p> <p> JIRA: <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-2014</a><br/> Review board: <a href="https://reviews.apache.org/r/51546/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/51546/</a></p> <p>You can merge this pull request into a Git repository by running:</p> <p> $ git pull <a href="https://github.com/hanm/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/hanm/zookeeper</a> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a></p> <p>Alternatively you can review and apply these changes as the patch at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96.patch" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96.patch</a></p> <p>To close this pull request, make a commit to your master/trunk branch<br/> with (at least) the following in the commit message:</p> <p> This closes #96</p> <hr /> <p>commit 6d18cffde99d4cf5298e045d6c0f23b36fd62925<br/> Author: Michael Han lt;hanm@cloudera.comgt;<br/> Date: 2016-10-31T03:58:11Z</p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a>: Only admin should be allowed to reconfig a cluster.</p> <hr /></comment>
<comment id="15621217" author="hanm" created="Mon, 31 Oct 2016 04:31:00 +0000"><p>Thank you <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a> for your code review. Updated patch and PR to address your review comments. Will create a new JIRA to track the discrepancy between C / Java client regarding error code mismatch.</p></comment>
<comment id="15621244" author="hadoopqa" created="Mon, 31 Oct 2016 04:52:45 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12836113/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12836113/ZOOKEEPER-2014.patch</a><br/> against trunk revision f6349d16fcd5f04b560095417fd2a1813ac3e855.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 96 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3504//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3504//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3504//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3504//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3504//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3504//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15624126" author="hadoopqa" created="Tue, 1 Nov 2016 02:41:02 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12836113/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12836113/ZOOKEEPER-2014.patch</a><br/> against trunk revision f6349d16fcd5f04b560095417fd2a1813ac3e855.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 96 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3507//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3507//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3507//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3507//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3507//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3507//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15634422" author="breed" created="Thu, 3 Nov 2016 21:58:09 +0000"><p>just a curious observer: why are we propagating the NoNodeException everywhere? i wasn't clear from the patch why that suddenly popped up as part of the change.</p></comment>
<comment id="15634520" author="hanm" created="Thu, 3 Nov 2016 22:28:20 +0000"><p>NoNodeException is thrown from within DataTree's constructor, <a href="https://github.com/apache/zookeeper/pull/96/files#diff-a676d93082759105dd8c79c0a76a8007R264" class="external-link" target="_blank" rel="nofollow noopener">addConfigNode</a>. The intention is in cases such exception happens, we bubble exception up to abort the server startup instead of letting the server starting up with incorrect ACLs configured on the config node. It's unfortunate that the exception has to be thrown from DataTree's constructor which is on the critical path that leads to NoNodeException being scattered everywhere.</p></comment>
<comment id="15635265" author="breed" created="Fri, 4 Nov 2016 05:04:39 +0000"><p>ah that makes sense. i didn't dig deep enough <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> it is sad that an exception "that should never happen" has such a big impact on the code. shouldn't we have thrown a runtime exception? i think it would have eliminated a lot of this patch...</p> <p>this is just an observation not a vote <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="15635390" author="hanm" created="Fri, 4 Nov 2016 06:10:21 +0000"><p>Good point on throwing an unchecked exception which does not contaminate method signatures. The benefit of throwing a KeeperException here is minimum as the higher level code in ZooKeeperServerMain that processed typed exceptions currently does not specifically react to KeeperException (and there seems not much need to do so), so processing a KeeperException in ZooKeeperServerMain will end up with same code path as a RuntimeException. Let me update the patch again to keep it lean.</p></comment>
<comment id="15636922" author="hanm" created="Fri, 4 Nov 2016 16:33:48 +0000"><p>Address Ben's comment by replacing KeeperException.NoNodeException with RuntimeException in addConfigNode to avoid changing function signatures across code base.</p></comment>
<comment id="15636990" author="hadoopqa" created="Fri, 4 Nov 2016 16:58:44 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12837178/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12837178/ZOOKEEPER-2014.patch</a><br/> against trunk revision bcb07a09b06c91243ed244f04a71b8daf629e286.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 62 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 20 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3516//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3516//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3516//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3516//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3516//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3516//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15637058" author="hadoopqa" created="Fri, 4 Nov 2016 17:17:55 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12837180/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12837180/ZOOKEEPER-2014.patch</a><br/> against trunk revision bcb07a09b06c91243ed244f04a71b8daf629e286.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 60 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 20 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3517//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3517//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3517//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3517//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3517//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3517//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15640611" author="githubbot" created="Sat, 5 Nov 2016 21:23:59 +0000"><p>Github user rgs1 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r86673398" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r86673398</a></p> <p> #8212; Diff: src/c/tests/TestReconfigServer.cc #8212;<br/> @@ -324,4 +336,109 @@ testRemoveConnectedFollower() </p> { zookeeper_close(zk); } <p> +/**<br/> + * <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a>: only admin or users who are explicitly granted permission can do reconfig.<br/> + */<br/> +void TestReconfigServer::<br/> +testReconfigFailureWithoutAuth() {<br/> + std::vectorlt;std::stringgt; servers;<br/> + std::string version;<br/> + struct Stat stat;<br/> + int len = 1024;<br/> + char buf<span class="error">#91;len#93;</span>;<br/> +<br/> + // connect to a follower.<br/> + int32_t leader = getLeader();<br/> + std::vectorlt;int32_tgt; followers = getFollowers();<br/> + CPPUNIT_ASSERT(leader gt;= 0);<br/> + CPPUNIT_ASSERT_EQUAL(NUM_SERVERS - 1, (uint32_t)(followers.size()));<br/> + std::stringstream ss;<br/> + for (int i = 0; i lt; followers.size(); i++) </p> { + ss lt;lt; cluster_[followers[i]]-gt;getHostPort() lt;lt; ","; + }<br/> + ss lt;lt; cluster_<span class="error">#91;leader#93;</span>-gt;getHostPort();<br/> + std::string hosts = ss.str().c_str();<br/> + zoo_deterministic_conn_order(true);<br/> + zhandle_t* zk = zookeeper_init(hosts.c_str(), NULL, 10000, NULL, NULL, 0);<br/> + CPPUNIT_ASSERT_EQUAL(true, waitForConnected(zk, 10));<br/> +<br/> + std::string connectedHost(zoo_get_current_server(zk));<br/> + std::string portString = connectedHost.substr(connectedHost.find(":") + 1);<br/> + uint32_t port;<br/> + std::istringstream (portString) gt;gt; port;<br/> + CPPUNIT_ASSERT_EQUAL(cluster_[followers<span class="error">#91;0#93;</span>]-gt;getClientPort(), port);<br/> +<br/> + // remove the follower.<br/> + len = 1024;<br/> + ss.str("");<br/> + ss lt;lt; followers<span class="error">#91;0#93;</span>;<br/> + // No auth, should fail.<br/> + CPPUNIT_ASSERT_EQUAL((int)ZNOAUTH, zoo_reconfig(zk, NULL, ss.str().c_str(), NULL, -1, buf, amp;len, amp;stat));<br/> + // Wrong auth, should fail.<br/> + CPPUNIT_ASSERT_EQUAL((int)ZOK, zoo_add_auth(zk, "digest", "super:wrong", 11, NULL,(void*)ZOK));<br/> + CPPUNIT_ASSERT_EQUAL((int)ZNOAUTH, zoo_reconfig(zk, NULL, ss.str().c_str(), NULL, -1, buf, amp;len, amp;stat));<br/> + // Right auth, should pass.<br/> + CPPUNIT_ASSERT_EQUAL((int)ZOK, zoo_add_auth(zk, "digest", "super:test", 10, NULL,(void*)ZOK));<br/> + CPPUNIT_ASSERT_EQUAL((int)ZOK, zoo_reconfig(zk, NULL, ss.str().c_str(), NULL, -1, buf, amp;len, amp;stat));<br/> + CPPUNIT_ASSERT_EQUAL((int)ZOK, zoo_getconfig(zk, 0, buf, amp;len, amp;stat));<br/> + parseConfig(buf, len, servers, version);<br/> + CPPUNIT_ASSERT_EQUAL(NUM_SERVERS - 1, (uint32_t)(servers.size()));<br/> + for (int i = 0; i lt; cluster_.size(); i++) {<br/> + if (i == followers<span class="error">#91;0#93;</span>) { + continue; + }<br/> + CPPUNIT_ASSERT(std::find(servers.begin(), servers.end(),<br/> + cluster_<span class="error">#91;i#93;</span>-gt;getServerString()) != servers.end());<br/> + }<br/> + zookeeper_close(zk);<br/> +}<br/> +<br/> +void TestReconfigServer::<br/> +testReconfigFailureWithoutServerSuperuserPasswordConfigured() {<br/> + std::vectorlt;std::stringgt; servers;<br/> + std::string version;<br/> + struct Stat stat;<br/> + int len = 1024;<br/> + char buf<span class="error">#91;len#93;</span>;<br/> +<br/> + // Create a new quorum with the super user's password not configured.<br/> + tearDown();<br/> + ZooKeeperQuorumServer::tConfigPairs configs;<br/> + configs.push_back(std::make_pair("reconfigEnabled", "true"));<br/> + cluster_ = ZooKeeperQuorumServer::getCluster(NUM_SERVERS, configs, "");<br/> +<br/> + // connect to a follower.<br/> + int32_t leader = getLeader();<br/> + std::vectorlt;int32_tgt; followers = getFollowers();<br/> + CPPUNIT_ASSERT(leader gt;= 0);<br/> + CPPUNIT_ASSERT_EQUAL(NUM_SERVERS - 1, (uint32_t)(followers.size()));<br/> + std::stringstream ss;<br/> + for (int i = 0; i lt; followers.size(); i++) { + ss lt;lt; cluster_[followers[i]]-gt;getHostPort() lt;lt; ","; + } <p> + ss lt;lt; cluster_<span class="error">#91;leader#93;</span>-gt;getHostPort();<br/> + std::string hosts = ss.str().c_str();<br/> + zoo_deterministic_conn_order(true);<br/> + zhandle_t* zk = zookeeper_init(hosts.c_str(), NULL, 10000, NULL, NULL, 0);<br/> + CPPUNIT_ASSERT_EQUAL(true, waitForConnected(zk, 10));<br/> +<br/> + std::string connectedHost(zoo_get_current_server(zk));<br/> + std::string portString = connectedHost.substr(connectedHost.find(":") + 1);<br/> + uint32_t port;<br/> + std::istringstream (portString) gt;gt; port;<br/> + CPPUNIT_ASSERT_EQUAL(cluster_[followers<span class="error">#91;0#93;</span>]-gt;getClientPort(), port);<br/> #8212; End diff #8211;</p> <p> connect to follower seems repeated, can we move it to a private helper method?</p></comment>
<comment id="15640612" author="githubbot" created="Sat, 5 Nov 2016 21:23:59 +0000"><p>Github user rgs1 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r86673475" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r86673475</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/DataTree.java #8212;<br/> @@ -245,15 +245,25 @@ public DataTree() </p> { addConfigNode(); } <ul class="alternate" type="square"> <li>public void addConfigNode() {</li> <li>DataNode zookeeperZnode = nodes.get(procZookeeper);</li> <li>if (zookeeperZnode!=null) { // should always be the case - zookeeperZnode.addChild(configChildZookeeper); - } <p> else </p> { - LOG.error("There's no /zookeeper znode - this should never happen"); - }</li> <li>nodes.put(configZookeeper, configDataNode);</li> <li>}<br/> + public void addConfigNode() {<br/> + DataNode zookeeperZnode = nodes.get(procZookeeper);<br/> + if (zookeeperZnode!=null) { // should always be the case <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> nit: spaces around `!=`</p></comment>
<comment id="15640613" author="githubbot" created="Sat, 5 Nov 2016 21:23:59 +0000"><p>Github user rgs1 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r86673489" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r86673489</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/DataTree.java #8212;<br/> @@ -245,15 +245,25 @@ public DataTree() </p> { addConfigNode(); } <ul class="alternate" type="square"> <li>public void addConfigNode() {</li> <li>DataNode zookeeperZnode = nodes.get(procZookeeper);</li> <li>if (zookeeperZnode!=null) { // should always be the case - zookeeperZnode.addChild(configChildZookeeper); - } <p> else </p> { - LOG.error("There's no /zookeeper znode - this should never happen"); - }</li> <li>nodes.put(configZookeeper, configDataNode);</li> <li>}<br/> + public void addConfigNode() {<br/> + DataNode zookeeperZnode = nodes.get(procZookeeper);<br/> + if (zookeeperZnode!=null) { // should always be the case <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> i think this should be an assertion (and we can drop the LOG.error call)</p></comment>
<comment id="15641216" author="githubbot" created="Sun, 6 Nov 2016 05:43:02 +0000"><p>Github user breed commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r86679034" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r86679034</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/DataTree.java #8212;<br/> @@ -245,15 +245,25 @@ public DataTree() </p> { addConfigNode(); } <ul class="alternate" type="square"> <li>public void addConfigNode() {</li> <li>DataNode zookeeperZnode = nodes.get(procZookeeper);</li> <li>if (zookeeperZnode!=null) { // should always be the case - zookeeperZnode.addChild(configChildZookeeper); - } <p> else </p> { - LOG.error("There's no /zookeeper znode - this should never happen"); - }</li> <li>nodes.put(configZookeeper, configDataNode);</li> <li>}<br/> + public void addConfigNode() {<br/> + DataNode zookeeperZnode = nodes.get(procZookeeper);<br/> + if (zookeeperZnode!=null) { // should always be the case + zookeeperZnode.addChild(configChildZookeeper); + } <p> else </p> { + LOG.error("There's no /zookeeper znode - this should never happen."); + } <p> +<br/> + nodes.put(configZookeeper, configDataNode);<br/> + try </p> { + // Reconfig node is access controlled by default (ZOOKEEPER-2014). + setACL(configZookeeper, ZooDefs.Ids.READ_ACL_UNSAFE, -1); + } <p> catch (KeeperException.NoNodeException e) {<br/> + LOG.error("Fail to set ACL on {} - this should never happen: {}", configZookeeper, e);</p> <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> actually if we are asserting above, perhaps we should also assert here.</p></comment>
<comment id="15641217" author="githubbot" created="Sun, 6 Nov 2016 05:43:02 +0000"><p>Github user breed commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r86678939" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r86678939</a></p> <p> #8212; Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml #8212;<br/> @@ -1108,6 +1109,42 @@ server.3=zoo3:2888:3888lt;/programlistinggt;<br/> lt;/paragt;<br/> lt;/listitemgt;<br/> lt;/varlistentrygt;<br/> +<br/> + lt;varlistentrygt;<br/> + lt;termgt;reconfigEnabledlt;/termgt;<br/> +<br/> + lt;listitemgt;<br/> + lt;paragt;(No Java system property)lt;/paragt;<br/> +<br/> + lt;paragt;lt;emphasis role="bold"gt;New in 3.5.3:lt;/emphasisgt;<br/> + This controls the enabling or disabling of<br/> + lt;ulink url="zookeeperReconfig.html"gt;<br/> + Dynamic Reconfigurationlt;/ulinkgt; feature. When the feature<br/> + is enabled, users can perform reconfigure operations through<br/> + the ZooKeeper client API or through ZooKeeper command line tools<br/> + assuming users are authorized to perform such operations.<br/> + When the feature is disabled, no user, including the super user,<br/> + can perform a reconfiguration. Any attempt to reconfigure will return an error.<br/> + lt;emphasis role="bold"gt;"reconfigEnabled"lt;/emphasisgt; option can be set as<br/> + lt;emphasis role="bold"gt;"reconfigEnabled=false"lt;/emphasisgt; or<br/> + lt;emphasis role="bold"gt;"reconfigEnabled=true"lt;/emphasisgt;<br/> + to a server's config file, or using QuorumPeerConfig's<br/> + setReconfigEnabled method. The default value is false.<br/> +<br/> + If present, the value should be consistent across every server in<br/> + the entire ensemble. Setting the value as true on some servers and false<br/> + on other servers will cause inconsistent behavior depends on which server<br/> #8212; End diff #8211;</p> <p> depends -gt; depending</p></comment>
<comment id="15641219" author="githubbot" created="Sun, 6 Nov 2016 05:43:02 +0000"><p>Github user breed commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r86679094" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r86679094</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/test/ReconfigExceptionTest.java #8212;<br/> @@ -0,0 +1,220 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + *<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + *<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +<br/> +package org.apache.zookeeper.test;<br/> +<br/> +import java.io.IOException;<br/> +import java.util.ArrayList;<br/> +import java.util.Collections;<br/> +import java.util.List;<br/> +import java.util.concurrent.TimeoutException;<br/> +<br/> +import org.apache.zookeeper.ZKTestCase;<br/> +import org.apache.zookeeper.KeeperException;<br/> +import org.apache.zookeeper.ZooDefs;<br/> +import org.apache.zookeeper.PortAssignment;<br/> +import org.apache.zookeeper.admin.ZooKeeperAdmin;<br/> +import org.apache.zookeeper.data.ACL;<br/> +import org.apache.zookeeper.data.Id;<br/> +import org.apache.zookeeper.data.Stat;<br/> +import org.apache.zookeeper.server.quorum.QuorumPeerConfig;<br/> +import org.junit.After;<br/> +import org.junit.Assert;<br/> +import org.junit.Before;<br/> +import org.junit.Test;<br/> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +public class ReconfigExceptionTest extends ZKTestCase {<br/> + private static final Logger LOG = LoggerFactory<br/> + .getLogger(ReconfigExceptionTest.class);<br/> + private static String authProvider = "zookeeper.DigestAuthenticationProvider.superDigest";<br/> + // Use DigestAuthenticationProvider.base64Encode or<br/> + // run ZooKeeper jar with org.apache.zookeeper.server.auth.DigestAuthenticationProvider to generate password.<br/> + // An example:<br/> + // java -cp zookeeper-3.6.0-SNAPSHOT.jar:lib/log4j-1.2.17.jar:lib/slf4j-log4j12-1.7.5.jar:<br/> + // lib/slf4j-api-1.7.5.jar org.apache.zookeeper.server.auth.DigestAuthenticationProvider super:test<br/> + // The password here is 'test'.<br/> + private static String superDigest = "super<img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/biggrin.png" height="16" width="16" align="absmiddle" alt="" border="0"/>/InIHSb7yEEbrWz8b9l71RjZJU=";<br/> + private QuorumUtil qu;<br/> + private ZooKeeperAdmin zkAdmin;<br/> +<br/> + @Before<br/> + public void setup() throws InterruptedException, KeeperException.NoNodeException {<br/> #8212; End diff #8211;</p> <p> we don't throw NoNodeException anymore</p></comment>
<comment id="15641218" author="githubbot" created="Sun, 6 Nov 2016 05:43:02 +0000"><p>Github user breed commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r86679106" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r86679106</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/test/ReconfigExceptionTest.java #8212;<br/> @@ -0,0 +1,220 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + *<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + *<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +<br/> +package org.apache.zookeeper.test;<br/> +<br/> +import java.io.IOException;<br/> +import java.util.ArrayList;<br/> +import java.util.Collections;<br/> +import java.util.List;<br/> +import java.util.concurrent.TimeoutException;<br/> +<br/> +import org.apache.zookeeper.ZKTestCase;<br/> +import org.apache.zookeeper.KeeperException;<br/> +import org.apache.zookeeper.ZooDefs;<br/> +import org.apache.zookeeper.PortAssignment;<br/> +import org.apache.zookeeper.admin.ZooKeeperAdmin;<br/> +import org.apache.zookeeper.data.ACL;<br/> +import org.apache.zookeeper.data.Id;<br/> +import org.apache.zookeeper.data.Stat;<br/> +import org.apache.zookeeper.server.quorum.QuorumPeerConfig;<br/> +import org.junit.After;<br/> +import org.junit.Assert;<br/> +import org.junit.Before;<br/> +import org.junit.Test;<br/> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +public class ReconfigExceptionTest extends ZKTestCase {<br/> + private static final Logger LOG = LoggerFactory<br/> + .getLogger(ReconfigExceptionTest.class);<br/> + private static String authProvider = "zookeeper.DigestAuthenticationProvider.superDigest";<br/> + // Use DigestAuthenticationProvider.base64Encode or<br/> + // run ZooKeeper jar with org.apache.zookeeper.server.auth.DigestAuthenticationProvider to generate password.<br/> + // An example:<br/> + // java -cp zookeeper-3.6.0-SNAPSHOT.jar:lib/log4j-1.2.17.jar:lib/slf4j-log4j12-1.7.5.jar:<br/> + // lib/slf4j-api-1.7.5.jar org.apache.zookeeper.server.auth.DigestAuthenticationProvider super:test<br/> + // The password here is 'test'.<br/> + private static String superDigest = "super<img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/biggrin.png" height="16" width="16" align="absmiddle" alt="" border="0"/>/InIHSb7yEEbrWz8b9l71RjZJU=";<br/> + private QuorumUtil qu;<br/> + private ZooKeeperAdmin zkAdmin;<br/> +<br/> + @Before<br/> + public void setup() throws InterruptedException, KeeperException.NoNodeException {<br/> #8212; End diff #8211;</p> <p> +1 awesome work! i only found little nits! thanx for sticking with this!</p></comment>
<comment id="15641215" author="githubbot" created="Sun, 6 Nov 2016 05:43:02 +0000"><p>Github user breed commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r86679075" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r86679075</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/test/ClientBase.java #8212;<br/> @@ -356,7 +356,7 @@ private static int getPort(String hostPort) {<br/> */<br/> public static void startServerInstance(File dataDir,<br/> ServerCnxnFactory factory, String hostPort) throws IOException,</p> <ul class="alternate" type="square"> <li>InterruptedException {<br/> + InterruptedException, KeeperException.NoNodeException { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> this isn't needed anymore right?</p></comment>
<comment id="15641220" author="githubbot" created="Sun, 6 Nov 2016 05:43:02 +0000"><p>Github user breed commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r86679058" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r86679058</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/server/DataTreeTest.java #8212;<br/> @@ -200,29 +198,34 @@ public void testSerializeDoesntLockDataNodeWhileWriting() throws Exception {<br/> BinaryOutputArchive oa = new BinaryOutputArchive(out) {<br/> @Override<br/> public void writeRecord(Record r, String tag) throws IOException {</p> <ul class="alternate" type="square"> <li>DataNode node = (DataNode) r;</li> <li>if (node.data.length == 1 amp;amp; node.data<span class="error">#91;0#93;</span> == 42) {</li> <li>final Semaphore semaphore = new Semaphore(0);</li> <li>new Thread(new Runnable() {</li> <li>@Override</li> <li>public void run() {</li> <li>synchronized (markerNode) {</li> <li>//When we lock markerNode, allow writeRecord to continue</li> <li>semaphore.release();<br/> + // Need check if the record is a DataNode instance because of changes in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a><br/> + // which adds default ACL to config node.<br/> + if (r instanceof DataNode) { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> is there a reason we added the instanceof here? if we didn't need it before, why do we need it now?</p></comment>
<comment id="15641315" author="hanm" created="Sun, 6 Nov 2016 07:01:13 +0000"><p>Update patch for addressing review comments from Ben and Raul.</p></comment>
<comment id="15641319" author="githubbot" created="Sun, 6 Nov 2016 07:04:14 +0000"><p>Github user hanm commented on the issue:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96</a></p> <p> Thanks @breed and @rgs1 for your time and review feedback. Pull request, patch, and review board is now updated.</p></comment>
<comment id="15641347" author="hadoopqa" created="Sun, 6 Nov 2016 07:27:03 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12837643/ZOOKEEPER-2014.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12837643/ZOOKEEPER-2014.patch</a><br/> against trunk revision bcb07a09b06c91243ed244f04a71b8daf629e286.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 57 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 20 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3524//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3524//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3524//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3524//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3524//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3524//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15645962" author="breed" created="Tue, 8 Nov 2016 00:34:52 +0000"><p>shall i commit it or are we waiting on something else?</p></comment>
<comment id="15645990" author="hanm" created="Tue, 8 Nov 2016 00:44:15 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=breed" class="user-hover" rel="breed">Benjamin Reed</a> We were previously waiting for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2624" title="Add test script for pull requests" class="issue-link" data-issue-key="ZOOKEEPER-2624"><del>ZOOKEEPER-2624</del></a> to land and for more review comments. Now <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2624" title="Add test script for pull requests" class="issue-link" data-issue-key="ZOOKEEPER-2624"><del>ZOOKEEPER-2624</del></a> landed and more review comments were collected and addressed, I think this one is ready to land <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. cc <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>.</p></comment>
<comment id="15656130" author="githubbot" created="Fri, 11 Nov 2016 04:49:27 +0000"><p>Github user fpj commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r87536973" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r87536973</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/server/DataTreeTest.java #8212;<br/> @@ -200,29 +198,34 @@ public void testSerializeDoesntLockDataNodeWhileWriting() throws Exception {<br/> BinaryOutputArchive oa = new BinaryOutputArchive(out) {<br/> @Override<br/> public void writeRecord(Record r, String tag) throws IOException {</p> <ul class="alternate" type="square"> <li>DataNode node = (DataNode) r;</li> <li>if (node.data.length == 1 amp;amp; node.data<span class="error">#91;0#93;</span> == 42) {</li> <li>final Semaphore semaphore = new Semaphore(0);</li> <li>new Thread(new Runnable() {</li> <li>@Override</li> <li>public void run() {</li> <li>synchronized (markerNode) {</li> <li>//When we lock markerNode, allow writeRecord to continue</li> <li>semaphore.release();<br/> + // Need check if the record is a DataNode instance because of changes in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a><br/> + // which adds default ACL to config node.<br/> + if (r instanceof DataNode) { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> @hanm hmm, I'm not sure about this. In the changes for `DataTree`, we only set the ACL of the `/zookeeper/config` znode, but setting ACLs was something we were doing before, so I'm confused about why we can have a mix of znode records and ACL records with the changes proposed here. Could you clarify, please?</p></comment>
<comment id="15656309" author="githubbot" created="Fri, 11 Nov 2016 06:37:16 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96#discussion_r87543684" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96#discussion_r87543684</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/server/DataTreeTest.java #8212;<br/> @@ -200,29 +198,34 @@ public void testSerializeDoesntLockDataNodeWhileWriting() throws Exception {<br/> BinaryOutputArchive oa = new BinaryOutputArchive(out) {<br/> @Override<br/> public void writeRecord(Record r, String tag) throws IOException {</p> <ul class="alternate" type="square"> <li>DataNode node = (DataNode) r;</li> <li>if (node.data.length == 1 amp;amp; node.data<span class="error">#91;0#93;</span> == 42) {</li> <li>final Semaphore semaphore = new Semaphore(0);</li> <li>new Thread(new Runnable() {</li> <li>@Override</li> <li>public void run() {</li> <li>synchronized (markerNode) {</li> <li>//When we lock markerNode, allow writeRecord to continue</li> <li>semaphore.release();<br/> + // Need check if the record is a DataNode instance because of changes in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a><br/> + // which adds default ACL to config node.<br/> + if (r instanceof DataNode) { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> @fpj - we were not setting ACLs on intrinsic znodes (i.e. /zookeeper/config) ZooKeeper implicitly created while initializing a DataTree before. And for this test case, it only creates znodes, not ACLs. As a result, it's reasonable for the previous test case to assume every record that's serializing is a DataNode record. Now with this patch, there is an ACL implicitly created when /zookeeper/config node is created, so the previous assumption (that all records to be serialized are DataNode record) does not hold. Thus, a change is required.</p> <p> For reference, you could put a break point on <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java#L133" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java#L133</a> while running this test case, and you will see there is one ACL that's serialized. Now you can remove the ACL associated with /zookeeper/config at <a href="https://github.com/apache/zookeeper/pull/96/files#diff-a676d93082759105dd8c79c0a76a8007R259" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96/files#diff-a676d93082759105dd8c79c0a76a8007R259</a>, and you will see the break point on ReferenceCountedACLCache.java previous set not get hit. That is the difference.</p> <p> Another way to experiment this is to create an ACL in this test (without applying this pull request first), something like:<br/> `final DataNode markerNode = tree.getNode("/marker");<br/> tree.setACL("/marker", ZooDefs.Ids.READ_ACL_UNSAFE, -1);` will do. Then we will see the same type casting failure - this simulates what this PR will do in terms of changing the type of records. Basically I think the root cause is the test itself could be made more robust, by eliminate the assumptions (that every record is a DataNode) that might not always hold.</p> </comment>
<comment id="15662002" author="githubbot" created="Sun, 13 Nov 2016 20:00:10 +0000"><p>Github user asfgit closed the pull request at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/96" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/96</a></p></comment>
<comment id="15662017" author="fpj" created="Sun, 13 Nov 2016 20:10:58 +0000"><p>+1, great work <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a>, thanks for the patch!</p></comment>
<comment id="15662042" author="hudson" created="Sun, 13 Nov 2016 20:31:00 +0000"><p>FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3155 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/3155/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/3155/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2014" title="Only admin should be allowed to reconfig a cluster" class="issue-link" data-issue-key="ZOOKEEPER-2014"><del>ZOOKEEPER-2014</del></a>: Only admin should be allowed to reconfig a cluster. (fpj: rev 73e102a58d01b27bc6208bbfbde2d12f0deba1f4)</p> <ul> <li>(edit) src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java</li> <li>(edit) src/java/test/org/apache/zookeeper/server/quorum/ReconfigLegacyTest.java</li> <li>(edit) src/java/main/org/apache/zookeeper/ZooKeeper.java</li> <li>(edit) src/java/main/org/apache/zookeeper/cli/CliCommand.java</li> <li>(edit) src/java/test/org/apache/zookeeper/TestableZooKeeper.java</li> <li>(edit) src/java/systest/org/apache/zookeeper/test/system/BaseSysTest.java</li> <li>(edit) src/java/test/org/apache/zookeeper/server/quorum/ReconfigDuringLeaderSyncTest.java</li> <li>(edit) src/java/test/org/apache/zookeeper/server/quorum/ReconfigBackupTest.java</li> <li>(edit) src/java/test/org/apache/zookeeper/server/quorum/LearnerTest.java</li> <li>(edit) src/java/main/org/apache/zookeeper/KeeperException.java</li> <li>(edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java</li> <li>(edit) src/java/test/org/apache/zookeeper/server/DataTreeTest.java</li> <li>(edit) src/c/tests/ZooKeeperQuorumServer.h</li> <li>(add) src/java/test/org/apache/zookeeper/test/ReconfigMisconfigTest.java</li> <li>(edit) src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml</li> <li>(edit) src/java/main/org/apache/zookeeper/cli/ReconfigCommand.java</li> <li>(edit) src/c/tests/TestReconfigServer.cc</li> <li>(add) src/java/test/org/apache/zookeeper/test/ReconfigExceptionTest.java</li> <li>(edit) src/c/include/zookeeper.h</li> <li>(edit) src/java/test/org/apache/zookeeper/server/quorum/RaceConditionTest.java</li> <li>(add) src/java/main/org/apache/zookeeper/admin/ZooKeeperAdmin.java</li> <li>(edit) src/java/test/org/apache/zookeeper/test/ACLTest.java</li> <li>(edit) build.xml</li> <li>(edit) src/java/main/org/apache/zookeeper/ZooKeeperMain.java</li> <li>(edit) src/java/main/org/apache/zookeeper/server/DataTree.java</li> <li>(edit) src/java/test/org/apache/zookeeper/server/quorum/ReconfigFailureCasesTest.java</li> <li>(edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java</li> <li>(edit) src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java</li> <li>(edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServerMain.java</li> <li>(edit) src/java/test/org/apache/zookeeper/test/ReconfigTest.java</li> <li>(edit) src/docs/src/documentation/content/xdocs/zookeeperReconfig.xml</li> <li>(edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java</li> <li>(edit) src/java/test/org/apache/zookeeper/server/quorum/StandaloneDisabledTest.java</li> <li>(edit) src/java/test/org/apache/zookeeper/test/StandaloneTest.java</li> <li>(edit) src/c/tests/ZooKeeperQuorumServer.cc</li> <li>(edit) src/java/main/org/apache/zookeeper/ClientCnxn.java</li> </ul> </comment>
<comment id="15728484" author="randgalt" created="Wed, 7 Dec 2016 11:07:25 +0000"><p>I realize I'm very late to this issue but I truly don't understand the benefit of this. This change has completely broken Curator and I'm now struggling to figure out how to fix it. How does breaking all existing clients help ZooKeeper usage?</p></comment>
<comment id="16002692" author="randgalt" created="Tue, 9 May 2017 13:43:25 +0000"><p>I'm terribly sorry I was so late to this issue. Now that it's released I see even more problems. I just sent this email to @dev</p> <div class="panel" style="border-width: 1px;"><div class="panelContent"> <p>reconfig() is limited to "super" user. Perversely, this reduces security as "super" user is utterly insecure. Requiring new databases to be post-applied via super user creates a security hole. For the time that the new ACLs for /zookeeper/config are to be changed the ZooKeeper instance will be in "super" user mode. Additionally, having to do all this is terribly cumbersome. Lastly, the docs only make passing mention of this. I think users will be very surprised by this - especially as the docs refer users to ReconfigExceptionTest.java which isn't part of the client distribution.</p> </div></div></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12401266">ZOOKEEPER-107</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="12310050">
<name>Regression</name>
<inwardlinks description="is broken by">
<issuelink>
<issuekey id="13026329">ZOOKEEPER-2642</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12837643" name="ZOOKEEPER-2014.patch" size="133799" author="hanm" created="Sun, 6 Nov 2016 07:01:13 +0000"/>
<attachment id="12837180" name="ZOOKEEPER-2014.patch" size="134375" author="hanm" created="Fri, 4 Nov 2016 16:45:20 +0000"/>
<attachment id="12836113" name="ZOOKEEPER-2014.patch" size="162854" author="hanm" created="Mon, 31 Oct 2016 04:29:38 +0000"/>
<attachment id="12833880" name="ZOOKEEPER-2014.patch" size="162840" author="hanm" created="Tue, 18 Oct 2016 05:14:33 +0000"/>
<attachment id="12832782" name="ZOOKEEPER-2014.patch" size="125461" author="hanm" created="Tue, 11 Oct 2016 22:33:08 +0000"/>
<attachment id="12832770" name="ZOOKEEPER-2014.patch" size="123420" author="hanm" created="Tue, 11 Oct 2016 21:31:00 +0000"/>
<attachment id="12832546" name="ZOOKEEPER-2014.patch" size="121127" author="hanm" created="Mon, 10 Oct 2016 21:39:35 +0000"/>
<attachment id="12831433" name="ZOOKEEPER-2014.patch" size="120656" author="hanm" created="Mon, 3 Oct 2016 23:49:23 +0000"/>
<attachment id="12830832" name="ZOOKEEPER-2014.patch" size="112307" author="hanm" created="Thu, 29 Sep 2016 01:38:25 +0000"/>
<attachment id="12830589" name="ZOOKEEPER-2014.patch" size="106533" author="hanm" created="Tue, 27 Sep 2016 22:38:08 +0000"/>
<attachment id="12830416" name="ZOOKEEPER-2014.patch" size="106168" author="hanm" created="Mon, 26 Sep 2016 22:45:02 +0000"/>
<attachment id="12826655" name="ZOOKEEPER-2014.patch" size="96286" author="hanm" created="Thu, 1 Sep 2016 16:23:47 +0000"/>
<attachment id="12826264" name="ZOOKEEPER-2014.patch" size="95965" author="hanm" created="Tue, 30 Aug 2016 22:51:33 +0000"/>
<attachment id="12825698" name="ZOOKEEPER-2014.patch" size="79501" author="hanm" created="Fri, 26 Aug 2016 19:48:43 +0000"/>
<attachment id="12663337" name="ZOOKEEPER-2014.patch" size="2320" author="rgs" created="Thu, 21 Aug 2014 04:10:37 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i1z667:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-2141] ACL cache in DataTree never removes entries</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-2141</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>The problem and potential solutions are discussed in <a href="http://mail-archives.apache.org/mod_mbox/zookeeper-user/201502.mbox/browser" class="external-link" target="_blank" rel="nofollow noopener">http://mail-archives.apache.org/mod_mbox/zookeeper-user/201502.mbox/browser</a></p> <p>I will attach a proposed patch in due course.</p></description>
<environment/>
<key id="12782166">ZOOKEEPER-2141</key>
<summary>ACL cache in DataTree never removes entries</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="adammilnesmith">Adam Milne-Smith</assignee>
<reporter username="karold">Karol Dudzinski</reporter>
<labels> </labels>
<created>Mon, 16 Mar 2015 10:28:31 +0000</created>
<updated>Thu, 21 Jul 2016 20:18:31 +0000</updated>
<resolved>Wed, 6 Apr 2016 18:09:26 +0000</resolved>
<version>3.4.6</version>
<fixVersion>3.4.9</fixVersion>
<fixVersion>3.5.2</fixVersion>
<due/>
<votes>0</votes>
<watches>9</watches>
<comments>
<comment id="15002182" author="karold" created="Thu, 12 Nov 2015 14:53:11 +0000"><p>I'm attaching a patch which implements the reference counted solution discussed on email. This patch is for the 3.4 branch.</p></comment>
<comment id="15002206" author="hadoopqa" created="Thu, 12 Nov 2015 14:59:56 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12771977/ZOOKEEPER-2141.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12771977/ZOOKEEPER-2141.patch</a><br/> against trunk revision 1713774.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2955//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2955//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15186805" author="adammilnesmith" created="Wed, 9 Mar 2016 09:13:11 +0000"><p>Attaching trunk patch</p></comment>
<comment id="15187012" author="hadoopqa" created="Wed, 9 Mar 2016 12:21:22 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12792212/ZOOKEEPER-2141.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12792212/ZOOKEEPER-2141.patch</a><br/> against trunk revision 1733679.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 3 new Findbugs (version 2.0.3) warnings.</p> <p> -1 release audit. The applied patch generated 2 release audit warnings (more than the trunk's current 0 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3094//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3094//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3094//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3094//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3094//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3094//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3094//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3094//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15188407" author="phunt" created="Thu, 10 Mar 2016 00:49:21 +0000"><p>qabot identified a couple issues:</p> <p>1) missing license headers in the new files<br/> 2) findbugs noticed some locking issues.</p></comment>
<comment id="15188871" author="adammilnesmith" created="Thu, 10 Mar 2016 07:54:25 +0000"><p>I'll take a look and fix these - thanks</p></comment>
<comment id="15190767" author="adammilnesmith" created="Fri, 11 Mar 2016 10:22:53 +0000"><p>Including fix for findbugs issues and headers</p></comment>
<comment id="15194909" author="adammilnesmith" created="Tue, 15 Mar 2016 08:18:18 +0000"><p>QA bot didn't pick up my last patch upload - JIRA was being incredibly slow at the time so I don't know if that was related. Uploading the patch again.</p></comment>
<comment id="15195603" author="phunt" created="Tue, 15 Mar 2016 16:39:26 +0000"><p>Hi Adam. qabot only looks at jiras in the "patch availabile" state. You need to "submit patch" button for that to happen.</p></comment>
<comment id="15195613" author="adammilnesmith" created="Tue, 15 Mar 2016 16:44:18 +0000"><p>Thanks Patrick. It looks like I did it correctly the first time but not subsequently.</p></comment>
<comment id="15195621" author="adammilnesmith" created="Tue, 15 Mar 2016 16:48:45 +0000"><p>Ticket in correct state now - uploading patch.</p></comment>
<comment id="15195968" author="hadoopqa" created="Tue, 15 Mar 2016 18:55:37 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12793592/ZOOKEEPER-2141.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12793592/ZOOKEEPER-2141.patch</a><br/> against trunk revision 1735116.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3099//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3099//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3099//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3099//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3099//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3099//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15195985" author="adammilnesmith" created="Tue, 15 Mar 2016 19:04:49 +0000"><p>I don't think the test failure was related to my change but it does look like I might have missed a find bugs warning - sorry about that.</p></comment>
<comment id="15196255" author="adammilnesmith" created="Tue, 15 Mar 2016 21:04:40 +0000"><p>Patrick,</p> <p>The remaining findbugs complaint was the lack of synchronisation around "that.aclIndex" in the equals(). The equals is only used by the tests and if passing the findbugs were not a requirement I probably wouldn't have been too worried about it - I'm not generally fond of an equals including mutable fields. I've added the synchronized(that) block in for now. Please do let me know if you don't think this is appropriate and would prefer something else like moving the equals logic to the test class only. </p> <p>I ran test-core-java again locally and ReconfigRecoveryTest.testCurrentObserverIsParticipantInNewConfig passed. Given the tests in ReconfigRecoveryTest seem a little intermittent on the trunk right now (<a href="https://builds.apache.org/job/ZooKeeper-trunk-jdk8/521/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk-jdk8/521/</a>) I don't think this was related to my change.</p> <p>Do let me know if you have any feedback on the code and I'll have a crack at any changes that you'd like to see.</p> <p>Thanks,<br/> Adam</p></comment>
<comment id="15196549" author="hadoopqa" created="Wed, 16 Mar 2016 00:34:41 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12793634/ZOOKEEPER-2141.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12793634/ZOOKEEPER-2141.patch</a><br/> against trunk revision 1735116.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3101//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3101//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3101//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3101//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3101//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3101//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15197318" author="fournc" created="Wed, 16 Mar 2016 13:36:40 +0000"><p>It's failing in AsyncHammerTest. Not sure if this is a flaky test or not. <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=adammilnesmith_gs" class="user-hover" rel="adammilnesmith_gs">Adam Milne-Smith</a> if you'll run that test locally and see if you think it should pass, I'll review this and get it committed. Thanks for this, nice to see you folks contributing!</p></comment>
<comment id="15197532" author="adammilnesmith" created="Wed, 16 Mar 2016 15:45:44 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fournc" class="user-hover" rel="fournc">Camille Fournier</a>. AsyncHammerTest was passing for me locally before I uploaded the most recent patch and it didn't fail AsyncHammerTest in the version of the patch before that either (PreCommit-ZOOKEEPER-Build/3099). The only change between patches was a synchronize block in an equals that is only invoked by the new test included in the patch.</p></comment>
<comment id="15199206" author="adammilnesmith" created="Thu, 17 Mar 2016 09:31:00 +0000"><p>I just ran the failing test locally 5 times with the patch and 5 times without the patch; it succeeded every time.</p></comment>
<comment id="15199812" author="hadoopqa" created="Thu, 17 Mar 2016 16:16:50 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12793634/ZOOKEEPER-2141.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12793634/ZOOKEEPER-2141.patch</a><br/> against trunk revision 1735369.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3105//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3105//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3105//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3105//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3105//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3105//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15200102" author="fournc" created="Thu, 17 Mar 2016 18:24:43 +0000"><p>This one failed on a cpp test....<br/> TestReconfigServer::testRemoveConnectedFollowerStarting zookeeper ... FAILED TO START</p> <p>Is this test flaky? Does anyone know? I don't think I can run the cpp tests from my computer.</p></comment>
<comment id="15203108" author="hadoopqa" created="Sun, 20 Mar 2016 04:53:41 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12793634/ZOOKEEPER-2141.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12793634/ZOOKEEPER-2141.patch</a><br/> against trunk revision 1735836.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3112//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3112//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3112//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3112//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3112//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3112//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15204790" author="fournc" created="Mon, 21 Mar 2016 18:13:24 +0000"><p>Do you all want this fixed on the 3.4 branch? The patch will only apply to trunk currently. LMK.</p></comment>
<comment id="15204817" author="adammilnesmith" created="Mon, 21 Mar 2016 18:27:06 +0000"><p>Fixing this for the 3.4 branch too would be ideal. Would you like me to provide a modified patch for the 3.4 branch? If so, should I attach it in the same way or differently for the branch version?</p></comment>
<comment id="15204821" author="fournc" created="Mon, 21 Mar 2016 18:29:20 +0000"><p>Yes please just make a patch that applies to the 3.4 branch and attach it here with a naming indication that it's for 3.4. Thanks!</p></comment>
<comment id="15204840" author="adammilnesmith" created="Mon, 21 Mar 2016 18:34:45 +0000"><p>No problem - will do - I should have some time one evening this week to do it.</p></comment>
<comment id="15207522" author="fournc" created="Tue, 22 Mar 2016 23:32:49 +0000"><p>Reviewed the patch against trunk, +1 on that and checked in. Waiting on patch against 3.4. Checking existing patch against 3.5.</p></comment>
<comment id="15207534" author="fournc" created="Tue, 22 Mar 2016 23:37:01 +0000"><p>Into 3.5 as well. Just waiting on 3.4.</p></comment>
<comment id="15207709" author="hudson" created="Wed, 23 Mar 2016 01:48:13 +0000"><p>SUCCESS: Integrated in ZooKeeper-trunk #2865 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2865/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2865/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2141" title="ACL cache in DataTree never removes entries" class="issue-link" data-issue-key="ZOOKEEPER-2141"><del>ZOOKEEPER-2141</del></a>. ACL cache in DataTree never removes entries<br/> (Adam Milne-Smith via camille) (camille: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1736259" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1736259</a>)</p> <ul> <li>trunk</li> <li>trunk/CHANGES.txt</li> <li>trunk/src/java/main/org/apache/zookeeper/server/DataTree.java</li> <li>trunk/src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java</li> <li>trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java</li> <li>trunk/src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java</li> <li>trunk/src/java/main/org/apache/zookeeper/server/ZKDatabase.java</li> <li>trunk/src/java/test/org/apache/zookeeper/server/ReferenceCountedACLCacheTest.java</li> </ul> </comment>
<comment id="15213623" author="adammilnesmith" created="Sun, 27 Mar 2016 21:18:06 +0000"><p>Sorry for the delay - I've attached a patch for the 3.4 branch. I ran test-core-java successfully twice. If there are any issues with it please let me know. Thanks!</p></comment>
<comment id="15213625" author="hadoopqa" created="Sun, 27 Mar 2016 21:20:20 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12795560/ZOOKEEPER-2141-3.4.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12795560/ZOOKEEPER-2141-3.4.patch</a><br/> against trunk revision 1736259.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3123//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3123//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15213628" author="adammilnesmith" created="Sun, 27 Mar 2016 21:29:04 +0000"><p>QA bot tried to apply the 3.4 branch patch to trunk, hence the failure above.</p></comment>
<comment id="15216359" author="fournc" created="Tue, 29 Mar 2016 17:15:23 +0000"><p>This is great, +1 on all of it, I've applied to trunk, 3.5 and 3.4. Thank you all!</p></comment>
<comment id="15216993" author="eribeiro" created="Tue, 29 Mar 2016 22:38:05 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=adammilnesmith" class="user-hover" rel="adammilnesmith">Adam Milne-Smith</a> and <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fournc" class="user-hover" rel="fournc">Camille Fournier</a>, I am <b>really</b> sorry for only having (limited) time to review/check this patch after it has been committed to trunk. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/sad.png" height="16" width="16" align="absmiddle" alt="" border="0"/> So, please, take it more like a couple of highlights, if you like.</p> <p>The patch is really cool, and great work, but I have seen some things that raised some questions I would like to point, plus a couple of minor (i.e., irrelevant) issues.</p> <p>1. The piece of code below, from <tt>ReferenceCountedACLCache</tt>, worried me a bit:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">public</span> <span class="code-keyword">synchronized</span> <span class="code-object">boolean</span> equals(<span class="code-object">Object</span> o) { <span class="code-keyword">if</span> (<span class="code-keyword">this</span> == o) <span class="code-keyword">return</span> <span class="code-keyword">true</span>; <span class="code-keyword">if</span> (o == <span class="code-keyword">null</span> || getClass() != o.getClass()) <span class="code-keyword">return</span> <span class="code-keyword">false</span>; ReferenceCountedACLCache that = (ReferenceCountedACLCache) o; <span class="code-keyword">synchronized</span> (that) { <span class="code-keyword">if</span> (aclIndex != that.aclIndex) <span class="code-keyword">return</span> <span class="code-keyword">false</span>; } (...) </pre> </div></div> <p>See, we are acquiring a lock of object <tt>foo1</tt> and then acquiring the lock of object <tt>foo2</tt> (<tt>that</tt>, in this case) inside it. My question is: wouldn't this potentially leads to a DEADLOCK? I mean, imagine a situation below, or something alike:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-object">Thread</span>-1: foo1.equals(foo2); <span class="code-object">Thread</span>-2: foo2.equals(foo1); </pre> </div></div> <p>I guess that with the <b>right thread interleaving</b>, it could lead to a deadlock. I was so amused by this possibility that wrote a dummy snippet to evaluate this, as you can see here (with appropriate insertion of <tt>Thread.sleeps</tt> to reproduce the desired interleaving):</p> <p><a href="https://gist.github.com/eribeiro/bd2aca6fbae0255b64ba0b4f896e6a8d" class="external-link" target="_blank" rel="nofollow noopener">https://gist.github.com/eribeiro/bd2aca6fbae0255b64ba0b4f896e6a8d</a></p> <p>and got some runs to successfully reproduce a deadlock as seen here:</p> <p><a href="https://gist.github.com/eribeiro/96f95b295a4b90c0d261057d4542063a" class="external-link" target="_blank" rel="nofollow noopener">https://gist.github.com/eribeiro/96f95b295a4b90c0d261057d4542063a</a></p> <p>Disclaimer: maybe this situation NEVER happens in this particular case (if so, sorry for disturbing you, <b>really</b>), but I thought it was worth mentioning. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/wink.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>I <b>guess</b> a possible solution would be to make <tt>aclIndex</tt> a <tt>volatile</tt> variable as a "lightweight" alternative to <tt>synchronized</tt>, right? Volatile makes has a happens before semantic and it prevents reordering of statements. Wdyt?</p> <p>2. The inherited code has the following snippet (now moved to <tt>ReferenceCountedACLCache</tt>):</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">public</span> <span class="code-keyword">synchronized</span> <span class="code-object">Long</span> convertAcls(Listlt;ACLgt; acls) { <span class="code-keyword">if</span> (acls == <span class="code-keyword">null</span>) <span class="code-keyword">return</span> -1L; </pre> </div></div> <p>What if the acls list is empty, i.e., <tt>acls = new ArrayListlt;gt;()</tt>? It's okay to cache an empty ACL <tt>List</tt> or could we just change the lines above to:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">public</span> <span class="code-keyword">synchronized</span> <span class="code-object">Long</span> convertAcls(Listlt;ACLgt; acls) { <span class="code-keyword">if</span> (acls == <span class="code-keyword">null</span> || acls.isEmpty()) <span class="code-keyword">return</span> -1L; </pre> </div></div> <p>Again, this can NEVER happen in this case above so, I am all for letting it as-is today. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p> 3. The comment in the following snippet seems a bit out of date (list of longs???):</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> /** * converts the list of acls to a list of longs. * Increments the reference counter <span class="code-keyword">for</span> <span class="code-keyword">this</span> ACL. * @param acls * @<span class="code-keyword">return</span> a list of longs that map to the acls */ <span class="code-keyword">public</span> <span class="code-keyword">synchronized</span> <span class="code-object">Long</span> convertAcls(Listlt;ACLgt; acls) { </pre> </div></div> <p> 4. AtomicLongWithEquals extends AtomicLong. I failed to see a <em>good</em> reason to create a custom AtomicLong, as its instances are not used as keys. What is the rationale behind this? Disclaimer: IMO, extending a j.u. library is an anti-pattern as we don't have control over it and future changes in the parent class can easily break the codebase.</p> <p> 5. ReferenceCountedACLCache.OPEN_UNSAFE_ACL_ID could be made static besides being final.</p> <p> 6. ReferenceCountedACLCacheTest#convertACLsNTimes performs n-1 convertions as seen here (see the ``lt;`` and the ``-1``):</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> <span class="code-keyword">for</span> (<span class="code-object">int</span> i = 0; i lt; num -1; i++) { cache.convertAcls(acl); } </pre> </div></div> <p>Is this the intended behaviour?</p> <p>There are other irrelevant observations, but I will refrain myself from citing them by now.</p> <p>Cheers!<br/> Eddie</p></comment>
<comment id="15217052" author="fournc" created="Tue, 29 Mar 2016 23:24:25 +0000"><p>Nice catch Eddie. Issue #1 is worth addressing, I'm less sure about the rest. <br/> <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=adammilnesmith" class="user-hover" rel="adammilnesmith">Adam Milne-Smith</a> why did you synchronize that value in the equals?</p></comment>
<comment id="15217445" author="fpj" created="Wed, 30 Mar 2016 05:51:52 +0000"><p>I'm changing the priority to blocker to make sure we don't ship the next release with a deadlock in it. Thanks a lot <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eribeiro" class="user-hover" rel="eribeiro">Edward Ribeiro</a>.</p></comment>
<comment id="15217496" author="fpj" created="Wed, 30 Mar 2016 06:31:22 +0000"><p>Ok, I checked the code <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eribeiro" class="user-hover" rel="eribeiro">Edward Ribeiro</a> has pointed out and it seems to be fairly harmless because it is in the equals code of the new cache class and I haven't seen it called anywhere else other than one test case (<tt>testSerializeDesirialize</tt>). We should fix it nonetheless.</p> <p>Can we simply remove that synchronization block around <tt>aclIndex</tt>? Would it make a significant difference to the semantics of the method? Also, since we are on the topic, has anyone checked carefully the synchronization in this patch? There are 22 matches and some of them were part of the code base already. I'm sure <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=adammilnesmith" class="user-hover" rel="adammilnesmith">Adam Milne-Smith</a> checked it carefully, but I wonder if <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fournc" class="user-hover" rel="fournc">Camille Fournier</a> or maybe <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a> have been able to do it too just to have a second opinion. </p></comment>
<comment id="15217511" author="adammilnesmith" created="Wed, 30 Mar 2016 06:44:20 +0000"><p>I think I made a comment about being uncertain about it further up in the thread somewhere but it was to make findbugs be quiet. I justified it as only used in a test and suggested I move it to the test code if you wanted.</p></comment>
<comment id="15217516" author="adammilnesmith" created="Wed, 30 Mar 2016 06:51:10 +0000"><p>I checked it carefully before findbugs suggested some synchronisation changes which I might have been too quick to adopt so I may have made some mistakes there. The feedback is greatly appreciated.</p></comment>
<comment id="15217529" author="adammilnesmith" created="Wed, 30 Mar 2016 07:02:22 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eribeiro" class="user-hover" rel="eribeiro">Edward Ribeiro</a> - I'll take a stab at fixing some of these.</p></comment>
<comment id="15217566" author="adammilnesmith" created="Wed, 30 Mar 2016 07:20:11 +0000"><p>To remove the deadlock concerns in the equals(), I was considering just making the access package local on those fields and moving the equals logic to the test class given this is the only place that uses it. Does this sound reasonable?</p></comment>
<comment id="15217648" author="fpj" created="Wed, 30 Mar 2016 08:24:07 +0000"><p>That's an option and I'm fine if you want to move the code to the tests, but I'm thinking that you have a couple of other options here:</p> <ol> <li>Make the synchronization of this and that non-overlapping. You can remove the synchronized modifier from the signature, have a <tt>synchronized (that)</tt> block that collects the values of the variables to be compared, and have a {{synchronized (this)} block that performs the comparisons with the local instance variables.</li> <li>Make aclIndex an AtomicLong would also work, although it might be overkill.</li> </ol> </comment>
<comment id="15217663" author="adammilnesmith" created="Wed, 30 Mar 2016 08:38:17 +0000"><p>I had been tempted to move the equals out on the basis of it not being required by any main code but happy to go with option 1. I can make that change now.</p></comment>
<comment id="15217692" author="adammilnesmith" created="Wed, 30 Mar 2016 09:02:33 +0000"><p>Responses to each (now that I'm at a computer):<br/> 1. Absolutely - will provide a patch for this very shortly.<br/> 2. Good question - I would have assumed if a node were assigned no acls at all then it should have no access rather than open unsafe. I believe there is no change in behaviour from this patch though.<br/> 3. I'll correct this in the aforementioned patch.<br/> 4. It was to be able to lean on the Map.equals() where there is an AtomicLong as the value - happy to make this change if desired.<br/> 5. I'll correct this in the aforementioned patch.<br/> 6. This is the intended behaviour as the line after the for loop calls it an extra time and returns.</p></comment>
<comment id="15217696" author="adammilnesmith" created="Wed, 30 Mar 2016 09:08:06 +0000"><p>Attaching trunk patch for equals() synchronization as discussed. Unlike before, this should apply to the 3.4 branch too.</p></comment>
<comment id="15217757" author="hadoopqa" created="Wed, 30 Mar 2016 10:10:47 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12796041/ZOOKEEPER-2141.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12796041/ZOOKEEPER-2141.patch</a><br/> against trunk revision 1736259.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3129//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3129//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3129//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3129//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3129//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3129//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15217762" author="adammilnesmith" created="Wed, 30 Mar 2016 10:17:48 +0000"><p>Notes on the pre-commit build results above:</p> <ul class="alternate" type="square"> <li>No new tests: I didn't include a test for the change to the equals. Would you like me to add a test to show deadlocking isn't possible?</li> <li>Core unit test failure: Some of the reconfig tests failed - they don't call any code touched by this patch.</li> </ul> </comment>
<comment id="15217794" author="adammilnesmith" created="Wed, 30 Mar 2016 10:54:04 +0000"><p>I've provided a patch for using option 1. The only remaining issue I can see with this is that we are delegating to HashMap.equals() which could result in a ConcurrentModificationException if another method was called on "that" concurrently. I can't envisage a reason why main code would have 2 ACL caches and compare them, but if we wanted to be cautious so this doesn't come back to bite anyone later, we could replace the HashMaps with ConcurrentHashMaps.</p></comment>
<comment id="15217921" author="eribeiro" created="Wed, 30 Mar 2016 12:56:03 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=adammilnesmith" class="user-hover" rel="adammilnesmith">Adam Milne-Smith</a>, I will try to check your patch today. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>Nevertheless, I would like to step back a bit and ask you <b>what would be the gain of having an equality check between two caches</b>? Why not get rid of the <tt>equals()</tt> in <tt>ReferenceCountedACLCache</tt> and let the equality be handled by the parent Object class (i.e., using the object reference)? Maybe, to make Findbugs happy it would be rewritten as:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">public</span> <span class="code-keyword">synchronized</span> equals(<span class="code-object">Object</span> object) { <span class="code-keyword">return</span> <span class="code-keyword">this</span> == object; } </pre> </div></div> <p>Caches are highly changing objects so I don't see any multi-threading <tt>equals()</tt> implementation being short of complex and error prone (beside that, two caches can be equal now and different a second later). And I question myself if there will be a really compelling reason to check for equality besides the test that <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a> pointed out. IMHO, we could also change <tt>testSerializeDeserialize</tt> to assert the class fields to make sure the serialization/deserialization worked fine.</p> <p>Furthermore, it's class is mean to be used by <tt>DataTree</tt> only so a single instance is okay, imho. But I am certainly missing some points here, so I would be glad if you help me figure it out a scenario where semantic equality is really necessary here by users of the cache.</p> <p>Regards,<br/> Eddie</p></comment>
<comment id="15217934" author="adammilnesmith" created="Wed, 30 Mar 2016 13:04:50 +0000"><p>I completely agree, I can't envisage a reason why main code would have 2 ACL caches and compare them, hence my suggestion above to make the access package local on those fields and moving the equals logic to the test class. I have an alternative patch locally doing just that which I can share as well if you'd like.</p> <p>Thanks,<br/> Adam</p></comment>
<comment id="15217955" author="adammilnesmith" created="Wed, 30 Mar 2016 13:22:24 +0000"><p>Providing alternative patch with no equals on the cache itself and an assertCachesEqual method in the test instead.</p></comment>
<comment id="15217962" author="adammilnesmith" created="Wed, 30 Mar 2016 13:27:25 +0000"><p>I've provided the alternative patch for consideration (<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2141" title="ACL cache in DataTree never removes entries" class="issue-link" data-issue-key="ZOOKEEPER-2141"><del>ZOOKEEPER-2141</del></a>-equalsMovedToTest.patch) without an equals on the cache. Happy for either to be used. This one is my preference but this is my first contribution and it's not really my call.</p></comment>
<comment id="15220606" author="fpj" created="Thu, 31 Mar 2016 20:22:43 +0000"><p>I'm fine with the version that moves the assertion to the test. I think you've introduced some white spaces in and I was wondering if you could just elaborate a bit on this comments:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>- + /* For reasons we don't all agree with, AtomicLong does not have an equals. */ </pre> </div></div> <p>both really minor, hope you don't mind.</p></comment>
<comment id="15220636" author="adammilnesmith" created="Thu, 31 Mar 2016 20:40:40 +0000"><p>I didn't notice which bit of whitespace was introduced but will look for and remove it. I'll remove the comment too and provide a new patch in the morning. The initial pass on a patch was a while ago but I think it was some sort of nod to the JDKs reasoning for AtomicLong not having a semantic equals - this shouldn't have made it into the patch - sorry about that.</p></comment>
<comment id="15220652" author="adammilnesmith" created="Thu, 31 Mar 2016 20:53:04 +0000"><p>Here's a version with the comment and accidental whitespace removed. I'm attaching it as <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2141" title="ACL cache in DataTree never removes entries" class="issue-link" data-issue-key="ZOOKEEPER-2141"><del>ZOOKEEPER-2141</del></a>.patch and deleting the <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2141" title="ACL cache in DataTree never removes entries" class="issue-link" data-issue-key="ZOOKEEPER-2141"><del>ZOOKEEPER-2141</del></a>-equalsMovedToTest.patch file to remove any ambiguity in case it affects QA bot's patch choice.</p></comment>
<comment id="15220677" author="hadoopqa" created="Thu, 31 Mar 2016 21:09:45 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12796401/ZOOKEEPER-2141.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12796401/ZOOKEEPER-2141.patch</a><br/> against trunk revision 1736259.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3133//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3133//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3133//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3133//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3133//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3133//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15222172" author="fournc" created="Fri, 1 Apr 2016 18:56:04 +0000"><p>OK I'm looking at this patch more carefully this time. It looks OK to me but would love for <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eribeiro" class="user-hover" rel="eribeiro">Edward Ribeiro</a> to take a look as well since he caught some details last time. If you +1 I'll check it in <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eribeiro" class="user-hover" rel="eribeiro">Edward Ribeiro</a></p></comment>
<comment id="15224818" author="eribeiro" created="Mon, 4 Apr 2016 18:57:30 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fournc" class="user-hover" rel="fournc">Camille Fournier</a>, thank you for your consideration! <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> And sorry for the delay to answer. Well, <b>I looked carefully and it's +1, IMHO.</b></p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=adammilnesmith" class="user-hover" rel="adammilnesmith">Adam Milne-Smith</a>, congrats for the good work! I would only to suggest a little thing (but see, this is <b>not</b> required to commit this patch, I am +1 in spite of this): you could have made <tt>aclIndex</tt> a volatile as below:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">volatile</span> <span class="code-object">long</span> aclIndex = 0; </pre> </div></div> <p>See this link for further information about the advantage of using <tt>volatiles</tt> with long/int/double: <a href="http://stackoverflow.com/a/3038233/2698109" class="external-link" target="_blank" rel="nofollow noopener">http://stackoverflow.com/a/3038233/2698109</a> . But again, <b>I am +1 even without this change</b>.</p> <p>Cheers,<br/> Ed</p></comment>
<comment id="15228885" author="hudson" created="Wed, 6 Apr 2016 18:53:40 +0000"><p>FAILURE: Integrated in ZooKeeper-trunk #2880 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2880/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2880/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2141" title="ACL cache in DataTree never removes entries" class="issue-link" data-issue-key="ZOOKEEPER-2141"><del>ZOOKEEPER-2141</del></a> ACL cache in DataTree never removes entries (Adam Milne-Smith via camille) (camille: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1738012" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1738012</a>)</p> <ul> <li>trunk/src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java</li> <li>trunk/src/java/test/org/apache/zookeeper/server/ReferenceCountedACLCacheTest.java</li> </ul> </comment>
</comments>
<attachments>
<attachment id="12795560" name="ZOOKEEPER-2141-3.4.patch" size="33160" author="adammilnesmith" created="Sun, 27 Mar 2016 21:18:06 +0000"/>
<attachment id="12796401" name="ZOOKEEPER-2141.patch" size="4708" author="adammilnesmith" created="Thu, 31 Mar 2016 20:53:04 +0000"/>
<attachment id="12796041" name="ZOOKEEPER-2141.patch" size="3778" author="adammilnesmith" created="Wed, 30 Mar 2016 09:08:06 +0000"/>
<attachment id="12793634" name="ZOOKEEPER-2141.patch" size="30974" author="adammilnesmith" created="Tue, 15 Mar 2016 21:04:40 +0000"/>
<attachment id="12793592" name="ZOOKEEPER-2141.patch" size="30932" author="adammilnesmith" created="Tue, 15 Mar 2016 17:10:04 +0000"/>
<attachment id="12793498" name="ZOOKEEPER-2141.patch" size="30932" author="adammilnesmith" created="Tue, 15 Mar 2016 08:18:18 +0000"/>
<attachment id="12792212" name="ZOOKEEPER-2141.patch" size="29030" author="adammilnesmith" created="Wed, 9 Mar 2016 09:13:11 +0000"/>
<attachment id="12771977" name="ZOOKEEPER-2141.patch" size="33062" author="karold" created="Thu, 12 Nov 2015 14:53:37 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i26su7:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1558] Leader should not snapshot uncommitted state</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1558</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Leader currently takes a snapshot when it calls loadData in the beginning of the lead() method. The loaded data, however, may contain uncommitted state.</p></description>
<environment/>
<key id="12610705">ZOOKEEPER-1558</key>
<summary>Leader should not snapshot uncommitted state</summary>
<type id="7" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21146avatarType=issuetype">Sub-task</type>
<parent id="12606827">ZOOKEEPER-1549</parent>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="fpj">Flavio Paiva Junqueira</assignee>
<reporter username="fpj">Flavio Paiva Junqueira</reporter>
<labels> </labels>
<created>Sat, 6 Oct 2012 13:45:19 +0000</created>
<updated>Thu, 13 Mar 2014 18:17:02 +0000</updated>
<resolved>Sat, 19 Oct 2013 10:06:18 +0000</resolved>
<version>3.4.6</version>
<fixVersion>3.4.6</fixVersion>
<component>quorum</component>
<due/>
<votes>0</votes>
<watches>5</watches>
<comments>
<comment id="13471006" author="fpj" created="Sat, 6 Oct 2012 13:50:14 +0000"><p>Preliminary patch, it does not include a test.</p></comment>
<comment id="13471028" author="hadoopqa" created="Sat, 6 Oct 2012 14:29:01 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12548121/ZOOKEEPER-1558.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12548121/ZOOKEEPER-1558.patch</a><br/> against trunk revision 1391526.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1208//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1208//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1208//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1208//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1208//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1208//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13490589" author="fpj" created="Mon, 5 Nov 2012 12:08:01 +0000"><p>I'm sorry for not making progress with this patch before. I verified that the patch I proposed works with the case that <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fanster.z" class="user-hover" rel="fanster.z">Jacky007</a> posted. Since this is an issue that has been introduced with Zab1.0, I'd like to have it added to the Zab1_0Test tests, so I'm trying to rewrite the tests to comply with the general way we have been writing tests there. I should be able to post something soon.</p></comment>
<comment id="13491003" author="fpj" created="Mon, 5 Nov 2012 22:49:02 +0000"><p>Includes a test case.</p></comment>
<comment id="13491031" author="hadoopqa" created="Mon, 5 Nov 2012 23:19:06 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12552174/ZOOKEEPER-1558.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12552174/ZOOKEEPER-1558.patch</a><br/> against trunk revision 1404288.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1248//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1248//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1248//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1248//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1248//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1248//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13491344" author="fpj" created="Tue, 6 Nov 2012 09:37:49 +0000"><p>Great, this one has gone through fine. I would appreciate a review of this patch. I was also wondering if this should go to 3.4 branch too.</p></comment>
<comment id="13491706" author="thawan" created="Tue, 6 Nov 2012 18:53:18 +0000"><ul class="alternate" type="square"> <li>This is minor but you can make Zab1_0Test class extends ClientBase and use its createTmpDir() method instead of creating tmpDir manually.</li> <li>Please update comments such as //Setup a database... and //Set the last.. to reflect what actually happen</li> <li>Can we also test that the leader take snapshot when it have quorum of supported? Not sure if it is possible, but if we don't shutdown the leader at the end of the test and start a follower, then we should be able to test that code path.</li> </ul> </comment>
<comment id="13491906" author="fpj" created="Tue, 6 Nov 2012 22:41:59 +0000"><p>Thanks for reviewing, Thawan. </p> <blockquote><p>his is minor but you can make Zab1_0Test class extends ClientBase and use its createTmpDir() method instead of creating tmpDir manually.</p></blockquote> <p>I'd rather do that in a separate jira, since it touches test cases that are unrelated to this issue.</p> <blockquote><p>Please update comments such as //Setup a database... and //Set the last.. to reflect what actually happen</p></blockquote> <p>Sure, will do.</p> <blockquote><p>Can we also test that the leader take snapshot when it have quorum of supported? Not sure if it is possible, but if we don't shutdown the leader at the end of the test and start a follower, then we should be able to test that code path.</p></blockquote> <p>I suppose you're talking about checking this:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">+ /* + * Take snapshot once it has a quorum of followers supporting + */ + zk.takeSnapshot(); + </pre> </div></div> <p>This snapshot is not strictly necessary for correctness, but it is convenient to do one at that point. I'd rather not extend the test case to verify it, since its addition does not affect correctness.</p></comment>
<comment id="13491909" author="fpj" created="Tue, 6 Nov 2012 22:42:24 +0000"><p>Cancelling patch to address comments.</p></comment>
<comment id="13492079" author="thawan" created="Wed, 7 Nov 2012 02:41:43 +0000"><p>I agree that the current patch fix the problem on the leader side. However, I would like to see how do we plan to fix the whole problem first so we know that we moving in the right direction. </p></comment>
<comment id="13539073" author="fpj" created="Sun, 23 Dec 2012 19:01:24 +0000"><p>Rebased patch.</p></comment>
<comment id="13574366" author="fpj" created="Fri, 8 Feb 2013 10:25:49 +0000"><p>I think this patch should go only to 3.4.6. We will have a more comprehensive patch for 3.5.0 (<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1549" title="Data inconsistency when follower is receiving a DIFF with a dirty snapshot" class="issue-link" data-issue-key="ZOOKEEPER-1549">ZOOKEEPER-1549</a>).</p></comment>
<comment id="13635863" author="fpj" created="Thu, 18 Apr 2013 23:51:11 +0000"><p>Is there anyone opposed to having the patch here committed only to 3.4.6 and having the more comprehensive fix of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1549" title="Data inconsistency when follower is receiving a DIFF with a dirty snapshot" class="issue-link" data-issue-key="ZOOKEEPER-1549">ZOOKEEPER-1549</a> to 3.50? The other option is to drop this jira and have <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1549" title="Data inconsistency when follower is receiving a DIFF with a dirty snapshot" class="issue-link" data-issue-key="ZOOKEEPER-1549">ZOOKEEPER-1549</a> also committed to 3.4.6.</p></comment>
<comment id="13747684" author="fpj" created="Thu, 22 Aug 2013 17:28:43 +0000"><p>I'd really like to either get a +1 here to commit it to 3.4.6 or a confirmation that we will also get ZK-1549 committed to 3.4.6. To provide some context, the fix of 3.5.0 has BC issues, check this comment by <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a>:</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1549?focusedCommentId=13567348amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13567348" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1549?focusedCommentId=13567348amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13567348</a></p></comment>
<comment id="13770096" author="fpj" created="Tue, 17 Sep 2013 22:35:18 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a>, Could you please have a look at my comment right before this one?</p></comment>
<comment id="13782369" author="thawan" created="Mon, 30 Sep 2013 22:47:55 +0000"><p>I think the patch need to be rebased in order to apply. </p> <p>With the recent issue of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1697" title="large snapshots can cause continuous quorum failure" class="issue-link" data-issue-key="ZOOKEEPER-1697"><del>ZOOKEEPER-1697</del></a>, I am wondering if we need to revisit the solution. If I understand correctly, this patch move the snapshot step from pre-leader election to after synchronization and before broadcast phase. I believe we already transition to use syncLimit by the time we take this snapshot. I believe we should be taking snapshot while using initLimit </p> <p>In any case, we should add more comment about timing consideration into the patch as well. </p></comment>
<comment id="13785581" author="fpj" created="Thu, 3 Oct 2013 21:56:57 +0000"><p>You may be thinking about a different jira. This is one is not about long transfers, but about taking a snapshot at the wrong time, which causes us to include uncommitted state in the snapshot. This solution is not complete, but takes care of the scenario described originally in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1549" title="Data inconsistency when follower is receiving a DIFF with a dirty snapshot" class="issue-link" data-issue-key="ZOOKEEPER-1549">ZOOKEEPER-1549</a>, which is supposed to go into 3.5.0 only (see discussion above). </p> <p>I'd like to come to a resolution for this jira, so I'd appreciate if you could either propose a different plan or review the patch, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a>.</p></comment>
<comment id="13790929" author="fpj" created="Wed, 9 Oct 2013 22:34:14 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a>, could you please chime in here?</p></comment>
<comment id="13791169" author="thawan" created="Thu, 10 Oct 2013 04:10:57 +0000"><p>Again, my concern is that the current solution would cause leader to be blocked taking the snapshot before starting to send ping to quorum members. If the snapshot taking time is larger than syncLimit, the quorum will tear down. You can simply simulate this situation by adding sleep which is longer that syncLimit into the new code where takeSnaphot() is called. </p> <p>If we agree that this is any issue, a simple fix is to create a method that take snapshot asynchronously (spin up a thread on demand similar to SyncRequestProcessor). Some refactoring and additional locking may be needed as well in order to do this cleanly. </p></comment>
<comment id="13791173" author="thawan" created="Thu, 10 Oct 2013 04:17:59 +0000"><p>Update a patch to make it apply cleanly with 3.4 branch</p></comment>
<comment id="13791574" author="fpj" created="Thu, 10 Oct 2013 15:07:44 +0000"><p>I was actually thinking about removing that call to takeSnapshot() from the leader so that we don't have the syncLimit problem you're referring to. </p></comment>
<comment id="13791843" author="thawan" created="Thu, 10 Oct 2013 18:51:58 +0000"><p>Yeah, I think that should work as well. Seem like a new txnlog file is produced on a new epoch so that should be fine. </p> <p>I am wondering if we should apply this to 3.5 so at least the problem in 1549 is partially fixed in trunk as well before 1549 land and we also get more testing.</p></comment>
<comment id="13793042" author="fpj" created="Fri, 11 Oct 2013 20:59:07 +0000"><p>Ok, I'll produce a new patch for 3.4. I think it would be best to simply get <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1549" title="Data inconsistency when follower is receiving a DIFF with a dirty snapshot" class="issue-link" data-issue-key="ZOOKEEPER-1549">ZOOKEEPER-1549</a> in. I've been ignoring it just because I'm focusing on the 3.4.6 release.</p></comment>
<comment id="13794585" author="fpj" created="Mon, 14 Oct 2013 22:43:18 +0000"><p>I have removed the call to takeSnapshot(). When I did it, ZkDatabaseCorruptionTest started failing and I realized that there was a bug in the test case. We set snapCount to have servers taking a number of snapshots during the test. However, by the time we set snapCount to 100, randRoll has already been set and the values are typically much larger than the 2000 ops we are running. Consequently, we never have a snapshot.</p> <p>To fix it, I have changed SyncRequestProcessor to change the value of randRoll when we set snapCount. For the purposes of this test, I think this is sufficient.</p></comment>
<comment id="13794586" author="fpj" created="Mon, 14 Oct 2013 22:43:51 +0000"><p>This patch is for the 3.4 branch, so I expect QA to fail.</p></comment>
<comment id="13794598" author="hadoopqa" created="Mon, 14 Oct 2013 22:54:51 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12608368/ZOOKEEPER-1558.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12608368/ZOOKEEPER-1558.patch</a><br/> against trunk revision 1531444.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1694//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1694//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1694//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1694//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1694//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1694//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13797305" author="thawan" created="Wed, 16 Oct 2013 21:46:24 +0000"><p>Minor style change request: please use "private static int randRoll ..." and move variable declaration to be on top of constructor (ideally below snapcount since it is a related variable) </p> <p>Other parts look good for me so +1 once style change is made </p> </comment>
<comment id="13799250" author="fpj" created="Fri, 18 Oct 2013 16:27:52 +0000"><p>Thanks for the review, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a>. I'm uploading a new patch.</p></comment>
<comment id="13799259" author="hadoopqa" created="Fri, 18 Oct 2013 16:35:48 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12609166/ZOOKEEPER-1558.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12609166/ZOOKEEPER-1558.patch</a><br/> against trunk revision 1533161.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1707//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1707//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1707//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1707//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1707//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1707//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13799531" author="thawan" created="Fri, 18 Oct 2013 21:22:06 +0000"><p>Thanks Flavio, the patch looks good to me</p></comment>
<comment id="13799845" author="fpj" created="Sat, 19 Oct 2013 09:31:00 +0000"><p>Thanks, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a>. I made a small change to get rid of the findbugs warning. </p></comment>
<comment id="13799846" author="hadoopqa" created="Sat, 19 Oct 2013 09:34:22 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12609263/ZOOKEEPER-1558.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12609263/ZOOKEEPER-1558.patch</a><br/> against trunk revision 1533161.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1708//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1708//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1708//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1708//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1708//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1708//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13799848" author="fpj" created="Sat, 19 Oct 2013 10:06:18 +0000"><p>Committed revision 1533725.</p></comment>
<comment id="13933736" author="fpj" created="Thu, 13 Mar 2014 18:17:02 +0000"><p>Closing issues after releasing 3.4.6.</p></comment>
</comments>
<attachments>
<attachment id="12609263" name="ZOOKEEPER-1558.patch" size="7802" author="fpj" created="Sat, 19 Oct 2013 09:31:00 +0000"/>
<attachment id="12609166" name="ZOOKEEPER-1558.patch" size="7366" author="fpj" created="Fri, 18 Oct 2013 16:27:52 +0000"/>
<attachment id="12608368" name="ZOOKEEPER-1558.patch" size="6969" author="fpj" created="Mon, 14 Oct 2013 22:43:18 +0000"/>
<attachment id="12607735" name="ZOOKEEPER-1558.patch" size="6033" author="thawan" created="Thu, 10 Oct 2013 04:17:59 +0000"/>
<attachment id="12562282" name="ZOOKEEPER-1558.patch" size="6235" author="fpj" created="Sun, 23 Dec 2012 19:01:24 +0000"/>
<attachment id="12552174" name="ZOOKEEPER-1558.patch" size="6347" author="fpj" created="Mon, 5 Nov 2012 22:49:02 +0000"/>
<attachment id="12548121" name="ZOOKEEPER-1558.patch" size="1294" author="fpj" created="Sat, 6 Oct 2012 13:54:25 +0000"/>
<attachment id="12548120" name="ZOOKEEPER-1558.patch" size="1177" author="fpj" created="Sat, 6 Oct 2012 13:52:46 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>244711</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05q8n:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>31348</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1190] ant package is not including many of the bin scripts in the package (zkServer.sh for example)</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1190</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>run "ant package" and look in the build/zookeeper-lt;versiongt;/bin directory. many of the bin scripts are missing.</p></description>
<environment/>
<key id="12523411">ZOOKEEPER-1190</key>
<summary>ant package is not including many of the bin scripts in the package (zkServer.sh for example)</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="eyang">Eric Yang</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Sat, 17 Sep 2011 00:30:19 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:49 +0000</updated>
<resolved>Fri, 7 Oct 2011 20:48:26 +0000</resolved>
<version>3.4.0</version>
<version>3.5.0</version>
<fixVersion>3.4.0</fixVersion>
<fixVersion>3.5.0</fixVersion>
<component>build</component>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="13106960" author="phunt" created="Sat, 17 Sep 2011 00:31:04 +0000"><p>I'm guessing it's the recent pkging changes - Eric would you mind triaging?</p></comment>
<comment id="13106968" author="eyang" created="Sat, 17 Sep 2011 00:39:46 +0000"><p>System related script has moved to sbin. In <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>, we make separation between system scripts and user scripts. zkServer.sh is one of the script that moved to sbin. zkEnv.sh is moved to lib exec. See <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a> on the directory layout change proposal.</p></comment>
<comment id="13114924" author="phunt" created="Mon, 26 Sep 2011 21:04:33 +0000"><p>The original intent was to have those scripts for developers and for users of the tar archive, that's why they are in bin. Using them used for other things, like packaging, is fine, but now things are a bit confused. For example the docs say bin/zkServer.sh, not sbin. It's nice that the original docs and file locations matched regardless of checking out the source or using the release tarball. Really bin vs sbin vs libexec is a packaging specific detail (one that may be different depending on the packaging type), one I would not like to enforce on the release artifact. Also, we really need to fix how releases are packaged (I've done this as part of the maven changes). We currently have a single tar release archive which contains both the source and the generated binaries. Really we should have a source artifact and separate binary artifacts (for example the way avro does things), where the binary artifacts could be tar/jars/rpm/deb/etc..</p></comment>
<comment id="13115022" author="eyang" created="Mon, 26 Sep 2011 23:09:20 +0000"><p>Does maven change come as part of 3.4.0 or 3.5.0? If maven comes in 3.4.0, then I would recommend to close this as "later". If maven comes in 3.5.0, then I would recommend to have multiple build targets in build.xml for separation of source tarball and binary artifacts and change the summary of this jira to "separation of source tarball layout and binary artifacts".</p></comment>
<comment id="13117398" author="phunt" created="Thu, 29 Sep 2011 16:17:08 +0000"><p>Regardless of maven, IMO we should not be mixing "release artifact" semantics with "packaging" semantics. I'd like to see our release artifact be pkging agnostic, and have the pkging code (regardless if it's our own or someone elses (ie Thomas's Debian, CDH, Bigtop, etc...) pull from the source (release artifact) locations.</p> <p>Can you create a patch for this in 3.4.0?</p></comment>
<comment id="13117399" author="phunt" created="Thu, 29 Sep 2011 16:18:23 +0000"><blockquote><p>Can you create a patch for this in 3.4.0?</p></blockquote> <p>if not perhaps we should back the packaging changes out of 3.4.0 and re-introduce in 3.4.1 or 3.5.0.</p></comment>
<comment id="13117466" author="eyang" created="Thu, 29 Sep 2011 17:47:36 +0000"><blockquote><p>Can you create a patch for this in 3.4.0?</p></blockquote> <p>I will target for 3.4.0.</p></comment>
<comment id="13117585" author="eyang" created="Thu, 29 Sep 2011 20:17:18 +0000"><ul> <li>Restore "package" to release tarball</li> <li>Added "bin-package" target for making binary package layout.</li> <li>Modified zkEnv.sh to detect the running layout.</li> </ul> </comment>
<comment id="13117716" author="hadoopqa" created="Thu, 29 Sep 2011 23:02:35 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12497053/ZOOKEEPER-1190.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12497053/ZOOKEEPER-1190.patch</a><br/> against trunk revision 1177432.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/597//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/597//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/597//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/597//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/597//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/597//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13121338" author="phunt" created="Wed, 5 Oct 2011 18:36:54 +0000"><p>I committed this to 3.4 and then while testing trunk I noticed that the "share" directory is still being created in the release artifact (I committed to trunk as well).</p> <p>Otherwise things look good, thanks Eric!</p> <p>Please add an additional patch to this JIRA to remove the generated "share" directory. Thanks.</p></comment>
<comment id="13121576" author="eyang" created="Wed, 5 Oct 2011 23:06:56 +0000"><p>Updated directory structures for contrib and recipes.</p></comment>
<comment id="13121598" author="hadoopqa" created="Wed, 5 Oct 2011 23:34:15 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12497917/ZOOKEEPER-1190-1.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12497917/ZOOKEEPER-1190-1.patch</a><br/> against trunk revision 1179371.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 10 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/606//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/606//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/606//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/606//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/606//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/606//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13121834" author="hudson" created="Thu, 6 Oct 2011 10:56:12 +0000"><p>Integrated in ZooKeeper-trunk #1325 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1325/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1325/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1190" title="ant package is not including many of the bin scripts in the package (zkServer.sh for example)" class="issue-link" data-issue-key="ZOOKEEPER-1190"><del>ZOOKEEPER-1190</del></a>. ant package is not including many of the bin scripts in the package (zkServer.sh for example) (Eric Yang via phunt)</p> <p>phunt : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1179371" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1179371</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/bin/zkEnv.sh</li> <li>/zookeeper/trunk/build.xml</li> </ul> </comment>
<comment id="13123169" author="phunt" created="Fri, 7 Oct 2011 20:48:26 +0000"><p>I applied and tested the patch to both 3.4 and trunk - looks good to me. Thanks Eric.</p></comment>
<comment id="13123430" author="hudson" created="Sat, 8 Oct 2011 10:57:31 +0000"><p>Integrated in ZooKeeper-trunk #1327 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1327/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1327/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1190" title="ant package is not including many of the bin scripts in the package (zkServer.sh for example)" class="issue-link" data-issue-key="ZOOKEEPER-1190"><del>ZOOKEEPER-1190</del></a>. ant package is not including many of the bin scripts in the package (zkServer.sh for example) (Eric Yang via phunt). Part 2.</p> <p>phunt : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1180217" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1180217</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/build.xml</li> <li>/zookeeper/trunk/src/contrib/build-contrib.xml</li> <li>/zookeeper/trunk/src/recipes/build-recipes.xml</li> <li>/zookeeper/trunk/src/recipes/lock/build.xml</li> <li>/zookeeper/trunk/src/recipes/queue/build.xml</li> </ul> </comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12499287">ZOOKEEPER-999</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12497917" name="ZOOKEEPER-1190-1.patch" size="4786" author="eyang" created="Wed, 5 Oct 2011 23:06:56 +0000"/>
<attachment id="12497053" name="ZOOKEEPER-1190.patch" size="6776" author="eyang" created="Thu, 29 Sep 2011 20:17:18 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>161</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05yef:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32672</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-846] zookeeper client doesn't shut down cleanly on the close call</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-846</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Using HBase 0.20.6 (with <a href="https://issues.apache.org/jira/browse/HBASE-2473" title="Add to admin create table start and end key params and desired number of regions" class="issue-link" data-issue-key="HBASE-2473"><del>HBASE-2473</del></a>) we encountered a situation where Regionserver<br/> process was shutting down and seemed to hang.</p> <p>Here is the bottom of region server log:<br/> <a href="http://pastebin.com/YYawJ4jA" class="external-link" target="_blank" rel="nofollow noopener">http://pastebin.com/YYawJ4jA</a></p> <p>zookeeper-3.2.2 is used.</p> <p>Here is relevant portion from jstack - I attempted to attach jstack twice in my email to dev@hbase.apache.org but failed:</p> <p>"DestroyJavaVM" prio=10 tid=0x00002aabb849c800 nid=0x6c60 waiting on condition <span class="error">#91;0x0000000000000000#93;</span><br/> java.lang.Thread.State: RUNNABLE</p> <p>"regionserver/10.32.42.245:60020" prio=10 tid=0x00002aabb84ce000 nid=0x6c81 in Object.wait() <span class="error">#91;0x0000000043755000#93;</span><br/> java.lang.Thread.State: WAITING (on object monitor)<br/> at java.lang.Object.wait(Native Method)</p> <ul class="alternate" type="square"> <li>waiting on lt;0x00002aaab76633c0gt; (a org.apache.zookeeper.ClientCnxn$Packet)<br/> at java.lang.Object.wait(Object.java:485)<br/> at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1099)</li> <li>locked lt;0x00002aaab76633c0gt; (a org.apache.zookeeper.ClientCnxn$Packet)<br/> at org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1077)<br/> at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:505)</li> <li>locked lt;0x00002aaabf5e0c30gt; (a org.apache.zookeeper.ZooKeeper)<br/> at org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper.close(ZooKeeperWrapper.java:681)<br/> at org.apache.hadoop.hbase.regionserver.HRegionServer.run(HRegionServer.java:654)<br/> at java.lang.Thread.run(Thread.java:619)</li> </ul> <p>"main-EventThread" daemon prio=10 tid=0x0000000043474000 nid=0x6c80 waiting on condition <span class="error">#91;0x00000000413f3000#93;</span><br/> java.lang.Thread.State: WAITING (parking)<br/> at sun.misc.Unsafe.park(Native Method)</p> <ul class="alternate" type="square"> <li>parking to wait for lt;0x00002aaabf6e9150gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)<br/> at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)<br/> at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)<br/> at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)<br/> at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:414)</li> </ul> </description>
<environment/>
<key id="12471442">ZOOKEEPER-846</key>
<summary>zookeeper client doesn't shut down cleanly on the close call</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="ted_yu">Ted Yu</reporter>
<labels> </labels>
<created>Thu, 12 Aug 2010 17:19:53 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:15 +0000</updated>
<resolved>Wed, 22 Sep 2010 06:39:00 +0000</resolved>
<version>3.2.2</version>
<fixVersion>3.3.2</fixVersion>
<fixVersion>3.4.0</fixVersion>
<component>java client</component>
<due/>
<votes>0</votes>
<watches>3</watches>
<comments>
<comment id="12897847" author="ted_yu" created="Thu, 12 Aug 2010 17:22:10 +0000"><p>jstack for Region Server</p></comment>
<comment id="12903843" author="mahadev" created="Sat, 28 Aug 2010 16:25:50 +0000"><p>We should fix this in 3.3.2 if this still exists.</p></comment>
<comment id="12907396" author="phunt" created="Wed, 8 Sep 2010 20:11:07 +0000"><p>might be related to <a href="https://issues.apache.org/jira/browse/HBASE-2966" title="HBase client stuck on org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1278) holding regionLockObject lock" class="issue-link" data-issue-key="HBASE-2966"><del>HBASE-2966</del></a>, upping priority</p></comment>
<comment id="12907523" author="phunt" created="Thu, 9 Sep 2010 05:28:33 +0000"><p>I believe I found the issue. Both this specific jira and <a href="https://issues.apache.org/jira/browse/HBASE-2966" title="HBase client stuck on org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1278) holding regionLockObject lock" class="issue-link" data-issue-key="HBASE-2966"><del>HBASE-2966</del></a>.</p> <p>During session close we set the "closing" flag, then later set the ZK state to CLOSED. zk client operations track outstanding<br/> requests to the server on the "outstandingqueue". There's a timing window where we can clear the outstanding<br/> queue (caused by the "closing" flag being set AND an error occurs on the socket) and exit the sendthread. Subsequent <br/> to this if an operation runs before the ZK state is set to CLOSED it will queue additional packets to the outstandingqueue. <br/> These packets will never be processed, and as a result the original operation will never complete.</p> <p>in queuepacket we need to check if closing is set before queueing a packet (we currently check the state only)</p> <p>I'm working on a test/fix.</p></comment>
<comment id="12907541" author="thkoch" created="Thu, 9 Sep 2010 07:07:29 +0000"><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-126" title="zookeeper client close operation may block indefinitely" class="issue-link" data-issue-key="ZOOKEEPER-126">ZOOKEEPER-126</a> and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-846" title="zookeeper client doesn#39;t shut down cleanly on the close call" class="issue-link" data-issue-key="ZOOKEEPER-846"><del>ZOOKEEPER-846</del></a> both have the same cause.</p></comment>
<comment id="12909014" author="phunt" created="Mon, 13 Sep 2010 21:53:11 +0000"><p>This patch fixes the problem by adding a check for close in queuepacket.</p> <p>Note that this also moves the close=true into queuepacket (otw the closeSession would never be queued during a close.</p> <p>I spend gt; 1 day trying to craft a test for this, unfortunately due to the small size of the timing window I wasn't able to get a test that failed with this case. However by inspection it seems to address a clear bug. All tests are passing.</p></comment>
<comment id="12909634" author="hadoopqa" created="Wed, 15 Sep 2010 07:19:17 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12454491/ZOOKEEPER-846.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12454491/ZOOKEEPER-846.patch</a><br/> against trunk revision 997192.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/111/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/111/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/111/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/111/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/111/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/111/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12910018" author="breed" created="Thu, 16 Sep 2010 05:31:18 +0000"><p>+1 looks good pat! it's nice that the checking and setting of closing is in the same routine. i agreed about skipping the test case.</p></comment>
<comment id="12913422" author="phunt" created="Wed, 22 Sep 2010 06:40:01 +0000"><p>committed to trunk and branch33</p></comment>
<comment id="12913497" author="hudson" created="Wed, 22 Sep 2010 10:51:28 +0000"><p>Integrated in ZooKeeper-trunk #944 (See <a href="https://hudson.apache.org/hudson/job/ZooKeeper-trunk/944/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/ZooKeeper-trunk/944/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-846" title="zookeeper client doesn#39;t shut down cleanly on the close call" class="issue-link" data-issue-key="ZOOKEEPER-846"><del>ZOOKEEPER-846</del></a>. zookeeper client doesn't shut down cleanly on the close call</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12403118">ZOOKEEPER-126</issuekey>
</issuelink>
</outwardlinks>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12473529">HBASE-2966</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12454491" name="ZOOKEEPER-846.patch" size="1149" author="phunt" created="Mon, 13 Sep 2010 21:53:11 +0000"/>
<attachment id="12451927" name="rs-13.stack" size="9939" author="ted_yu" created="Thu, 12 Aug 2010 17:22:10 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47577</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05zhr:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32849</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1208] Ephemeral node not removed after the client session is long gone</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1208</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Copying from email thread.</p> <p>We found our ZK server in a state where an ephemeral node still exists after<br/> a client session is long gone. I used the cons command on each ZK host to<br/> list all connections and couldn't find the ephemeralOwner id. We are using<br/> ZK 3.3.3. Has anyone seen this problem?</p> <p>I got the following information from the logs.</p> <p>The node that still exists is /kafka-tracking/consumers/UserPerformanceEvent-lt;hostgt;/owners/UserPerformanceEvent/529-7</p> <p>I saw that the ephemeral owner is 86167322861045079 which is session id 0x13220b93e610550.</p> <p>After searching in the transaction log of one of the ZK servers found that session expired</p> <p>9/22/11 12:17:57 PM PDT session 0x13220b93e610550 cxid 0x74 zxid 0x601bd36f7 closeSession null</p> <p>On digging further into the logs I found that there were multiple sessions created in quick succession and every session tried to create the same node. But i verified that the sessions were closed and opened in order<br/> 9/22/11 12:17:56 PM PDT session 0x13220b93e610550 cxid 0x0 zxid 0x601bd36b5 createSession 6000<br/> 9/22/11 12:17:57 PM PDT session 0x13220b93e610550 cxid 0x74 zxid 0x601bd36f7 closeSession null<br/> 9/22/11 12:17:58 PM PDT session 0x13220b93e610551 cxid 0x0 zxid 0x601bd36f8 createSession 6000<br/> 9/22/11 12:17:59 PM PDT session 0x13220b93e610551 cxid 0x74 zxid 0x601bd373a closeSession null<br/> 9/22/11 12:18:00 PM PDT session 0x13220b93e610552 cxid 0x0 zxid 0x601bd373e createSession 6000<br/> 9/22/11 12:18:01 PM PDT session 0x13220b93e610552 cxid 0x6c zxid 0x601bd37a0 closeSession null<br/> 9/22/11 12:18:02 PM PDT session 0x13220b93e610553 cxid 0x0 zxid 0x601bd37e9 createSession 6000<br/> 9/22/11 12:18:03 PM PDT session 0x13220b93e610553 cxid 0x74 zxid 0x601bd382b closeSession null<br/> 9/22/11 12:18:04 PM PDT session 0x13220b93e610554 cxid 0x0 zxid 0x601bd383c createSession 6000<br/> 9/22/11 12:18:05 PM PDT session 0x13220b93e610554 cxid 0x6a zxid 0x601bd388f closeSession null<br/> 9/22/11 12:18:06 PM PDT session 0x13220b93e610555 cxid 0x0 zxid 0x601bd3895 createSession 6000<br/> 9/22/11 12:18:07 PM PDT session 0x13220b93e610555 cxid 0x6a zxid 0x601bd38cd closeSession null<br/> 9/22/11 12:18:10 PM PDT session 0x13220b93e610556 cxid 0x0 zxid 0x601bd38d1 createSession 6000<br/> 9/22/11 12:18:11 PM PDT session 0x13220b93e610557 cxid 0x0 zxid 0x601bd38f2 createSession 6000<br/> 9/22/11 12:18:11 PM PDT session 0x13220b93e610557 cxid 0x51 zxid 0x601bd396a closeSession null</p> <p>Here is the log output for the sessions that tried creating the same node</p> <p>9/22/11 12:17:54 PM PDT session 0x13220b93e61054f cxid 0x42 zxid 0x601bd366b create '/kafka-tracking/consumers/UserPerformanceEvent-lt;hostnamegt;/owners/UserPerformanceEvent/529-7<br/> 9/22/11 12:17:56 PM PDT session 0x13220b93e610550 cxid 0x42 zxid 0x601bd36ce create '/kafka-tracking/consumers/UserPerformanceEvent-lt;hostnamegt;/owners/UserPerformanceEvent/529-7<br/> 9/22/11 12:17:58 PM PDT session 0x13220b93e610551 cxid 0x42 zxid 0x601bd3711 create '/kafka-tracking/consumers/UserPerformanceEvent-lt;hostnamegt;/owners/UserPerformanceEvent/529-7<br/> 9/22/11 12:18:00 PM PDT session 0x13220b93e610552 cxid 0x42 zxid 0x601bd3777 create '/kafka-tracking/consumers/UserPerformanceEvent-lt;hostnamegt;/owners/UserPerformanceEvent/529-7<br/> 9/22/11 12:18:02 PM PDT session 0x13220b93e610553 cxid 0x42 zxid 0x601bd3802 create '/kafka-tracking/consumers/UserPerformanceEvent-lt;hostnamegt;/owners/UserPerformanceEvent/529-7<br/> 9/22/11 12:18:05 PM PDT session 0x13220b93e610554 cxid 0x44 zxid 0x601bd385d create '/kafka-tracking/consumers/UserPerformanceEvent-lt;hostnamegt;/owners/UserPerformanceEvent/529-7<br/> 9/22/11 12:18:07 PM PDT session 0x13220b93e610555 cxid 0x44 zxid 0x601bd38b0 create '/kafka-tracking/consumers/UserPerformanceEvent-lt;hostnamegt;/owners/UserPerformanceEvent/529-7<br/> 9/22/11 12:18:11 PM PDT session 0x13220b93e610557 cxid 0x52 zxid 0x601bd396b create '/kafka-tracking/consumers/UserPerformanceEvent-lt;hostnamegt;/owners/UserPerformanceEvent/529-7</p> <p>Let me know if you need additional information.</p></description>
<environment/>
<key id="12525006">ZOOKEEPER-1208</key>
<summary>Ephemeral node not removed after the client session is long gone</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="k4j">kishore gopalakrishna</reporter>
<labels> </labels>
<created>Wed, 28 Sep 2011 04:35:47 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:11 +0000</updated>
<resolved>Mon, 14 Nov 2011 19:34:12 +0000</resolved>
<version>3.3.3</version>
<fixVersion>3.3.4</fixVersion>
<fixVersion>3.4.0</fixVersion>
<fixVersion>3.5.0</fixVersion>
<due/>
<votes>3</votes>
<watches>12</watches>
<comments>
<comment id="13116143" author="k4j" created="Wed, 28 Sep 2011 04:37:55 +0000"><p>Comment from Camille<br/> So, the node was created by 0x13220b93e610550 at 12:17:56, then that session closed at 12:17:57, the node did not delete, and a bunch of other sessions later tried to create the node. These sessions got nodeexists failures I presume?</p> <p>Forgive the block of text I'm going to write instead of code:</p> <p>I'm going to bet that the problem lies in PrepRequestProcessor. If we get the ephemerals for the session while an ephemeral is still in outstandingChanges and has not been committed, then another thread commits that ephemeral and removes it from outstanding changes before synchronizing in the outstandingChagnes block, we could never put it in the ephemeral set that we are using to reflect ephemerals to delete. I think we need to move the synchronized block up before we get the ephemerals from the database. But this is a bit of speculation at the moment. </p> <p>HashSetlt;Stringgt; es = zks.getZKDatabase()<br/> .getEphemerals(request.sessionId);</p> <p>Is outside the synchronized block that deletes the ephemerals:</p> <p> synchronized (zks.outstandingChanges) {<br/> for (ChangeRecord c : zks.outstandingChanges) {<br/> if (c.stat == null) </p> { // Doing a delete es.remove(c.path); } <p>else if (c.stat.getEphemeralOwner() == request.sessionId) </p> { es.add(c.path); } <p> } for (String path2Delete : es) {<br/> addChangeRecord(new ChangeRecord(txnHeader.getZxid(),<br/> path2Delete, null, 0, null));</p></comment>
<comment id="13116568" author="vishalmlst" created="Wed, 28 Sep 2011 16:02:02 +0000"><p>Hi Camille,</p> <p>outstandingChanges seems to be used mainly for bookeeping, no? Even if record was removed from outstandingChanges, the second for loop should add it back? Also, wouldn't the DataTree.killSession() remove the ephemeral when called through FinalRequestProcessor?</p> <p>Kishore, you metioned "I saw that the ephemeral owner is 86167322861045079 which is session id 0x13220b93e610550." sessionID 86167322861045079 is 0x13220B93E610557. This is the ID of the last session that you displayed above. </p> <ul class="alternate" type="square"> <li>Can you check if there has been any error in verifying the state of the cluster?</li> <li>Are all servers showing this znode? Were there any server failures?</li> <li>Can you attach ZK logs and describe what happened before the cluster went into this state?</li> </ul> <p>Thanks.</p></comment>
<comment id="13116700" author="fournc" created="Wed, 28 Sep 2011 19:07:31 +0000"><p>I only spent a few minutes looking at the problem, so it doesn't surprise me that my speculation might not hold up.</p> <p>Kishore, you never answered the questions I asked in my email, namely, all the other sessions that tried to create that node got NODEEXISTS exceptions? If they didn't, it should be a big red flag. As Vishal said, that ephemeral owner is 0x13220b93e610557. Are you sure you even have a problem here?</p></comment>
<comment id="13116754" author="k4j" created="Wed, 28 Sep 2011 20:08:00 +0000"><p>Hi Vishal and Camille,</p> <p>I will upload the logs soon. Yes we did see the NodeExists exception in the logs. Sorry about the sessionId used an online tool which did incorrect conversion<img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/sad.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>The node still exists and here is the stat</p> <p>version:0<br/> ctime:1316719091806<br/> czxid:25798981995<br/> length:109<br/> EphemeralOwner:86167322861045079<br/> mtime:1316719091806<br/> mzxid:25798981995<br/> numChildren:0<br/> pzxid:25798981995<br/> version:0</p> <p>Yes there is a problem for sure that the node exists even after the session is closed. You can see from the log that session 0x13220b93e610557 is closed.</p></comment>
<comment id="13143962" author="lakshman" created="Fri, 4 Nov 2011 12:47:35 +0000"><p>Similar issue occurred in our case as well. The ephemeral exists <b>only in one of the follower</b> even after it's owner session is expired. I wanted to know whether this is same as <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1264" title="FollowerResyncConcurrencyTest failing intermittently" class="issue-link" data-issue-key="ZOOKEEPER-1264"><del>ZOOKEEPER-1264</del></a>. Any hints?</p></comment>
<comment id="13147981" author="phunt" created="Thu, 10 Nov 2011 20:20:57 +0000"><p>I believe I see the issue.</p> <p>PrepRequestProcessor checks the session is valid on a create.</p> <p>However it doesn't not know about an in-progress close session request</p> <p>The session is not invalidated (session tracker) until<br/> FinalRequestProcessor. At which point a create in PrepRP would fail.<br/> However prior to that it will get into the pipeline. Resulting in the<br/> issue you are seeing.</p> <p>Q: what are you clients doing? It's weird that a create would come<br/> from the client after the session has been closed. Do you have<br/> multiple threads sharing a session?</p></comment>
<comment id="13148021" author="phunt" created="Thu, 10 Nov 2011 21:23:26 +0000"><p>The client (checked java) seems to protect against this. Was the<br/> session expired? IC. Based on the cxid of the close session being 0<br/> I'm guessing it's an expiration.</p></comment>
<comment id="13148032" author="k4j" created="Thu, 10 Nov 2011 21:44:37 +0000"><p>Hi Pat,</p> <p>I think its possible that create might come after close when there zookeeper.close is invoked in a shutdown hook. Application starts create session and waits for connected state in another thread and create an ephemeral znode. But if the application is killed immediately Ctrl C then shutdown hook can call close. </p> <p>We saw a case where the commit order was createsession, closesession and create node. Neha, will upload the logs shortly which clearly shows this and might help in narrowing down the use case and hopefully we can reproduce it.</p> </comment>
<comment id="13148043" author="phunt" created="Thu, 10 Nov 2011 22:02:39 +0000"><p>I don't think that's the case Kishore - notice the cxid of the close session is "0", that's only possible if the server expired the session.</p></comment>
<comment id="13148132" author="phunt" created="Fri, 11 Nov 2011 00:02:11 +0000"><p>This initial patch demonstrates the problem. Test only so far but I'm working on a fix.</p></comment>
<comment id="13148198" author="phunt" created="Fri, 11 Nov 2011 01:36:01 +0000"><p>This patch contains a fix against branch 33. It's working for me, all the tests are passing with this applied. The new test I added verifies that this is fixed.</p> <p>Give it a once over and I can create addl patches for 34/trunk.</p> <p>Just make sure I didn't bork something: locking, leaking, left a hole, etc...</p> <p>This will introduce more contention btw PRP and FRP, but I don't think that's avoidable.</p></comment>
<comment id="13148306" author="phunt" created="Fri, 11 Nov 2011 06:41:06 +0000"><p>An updated solution with a more elegant implementation of the fix.</p></comment>
<comment id="13148335" author="mahadev" created="Fri, 11 Nov 2011 08:00:42 +0000"><p>Sorry for being out of action (blame hadoop world <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>). Looks like you found it Pat. About the testcase, I am not sure about the session id being 0. How is it tracking that the same session is being closed and an create on the same session is being sent?</p></comment>
<comment id="13148517" author="fournc" created="Fri, 11 Nov 2011 14:48:33 +0000"><p>I like the fix, Pat.</p></comment>
<comment id="13148597" author="phunt" created="Fri, 11 Nov 2011 17:38:30 +0000"><p>@mahadev session id 0 just means to create a new session (see ClientCnxn). I ignore the returned sid because the session is tied to the socket (i.e. not included in subsequent requests by the client).</p></comment>
<comment id="13148634" author="mahadev" created="Fri, 11 Nov 2011 18:14:02 +0000"><p>You are right. I was worried abt the returned sid. Go ahead and upload patches for 3.4 and trunk. </p></comment>
<comment id="13148726" author="phunt" created="Fri, 11 Nov 2011 20:54:34 +0000"><p>Added patches for 3.4 and trunk. I verified that the test fails w/o this fix on each branch. Then verified that the test passed subsequent to the fix being applied.</p></comment>
<comment id="13148743" author="hadoopqa" created="Fri, 11 Nov 2011 21:25:28 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12503419/ZOOKEEPER-1208_trunk.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12503419/ZOOKEEPER-1208_trunk.patch</a><br/> against trunk revision 1201045.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 5 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/786//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13149709" author="fournc" created="Mon, 14 Nov 2011 16:11:14 +0000"><p>Patrick I'm going to check this in minus the printlns in the new test.</p></comment>
<comment id="13149714" author="fournc" created="Mon, 14 Nov 2011 16:13:56 +0000"><p>Actually, I'm not sure... are these useful at all? I'd rather not see printlns in test output unless it's really useful, but in the case of this test I'm not sure I can tell...</p></comment>
<comment id="13149745" author="k4j" created="Mon, 14 Nov 2011 17:03:47 +0000"><p>Can some one please summarize the root cause of the issue and also explain why the create is seen in txn log after session is closed. Also what about the initial suspicion Camille had about <br/> HashSetlt;Stringgt; es = zks.getZKDatabase()<br/> .getEphemerals(request.sessionId);</p> <p>being outside the synchronized block.</p> </comment>
<comment id="13149783" author="phunt" created="Mon, 14 Nov 2011 17:52:08 +0000"><p>@camille I'm usually fine with leaving printlns in tests (I look at the eclipse console), but I'm also fine if you want to convert them to info level logs.</p></comment>
<comment id="13149787" author="phunt" created="Mon, 14 Nov 2011 17:57:07 +0000"><p>@kishore I didn't copy this from the ML, here are the details:</p> <blockquote><p>Yes, I realized after that the cxid is 0 in your logs - that indicates it was expired and not closed explicitly by the client.</p></blockquote> <blockquote><p>This holds up my theory that the PrepRequestProcessor is accepting a create from the client after the session has been expired.</p></blockquote> <p>What's happen is the following<br/> 1) client creates session<br/> 2) leader wants to expire session, so sends message to the quorum<br/> 3) client sends create znode to follower which fwds to leader, leader accepts (preqrequestprocessor) the request because the quorum has not yet accepted the expiration (close session) request in FinalRequestProcessor.</p> <p>The fix is for the leader to note that the session is in the process of closing and not accept changes in PRP after it sees a close session request.</p></comment>
<comment id="13149829" author="fournc" created="Mon, 14 Nov 2011 19:19:25 +0000"><p>Committed to 3.4 and trunk, will get 3.3.4 in a second. Mahadev, feel free to cut another 3.4 RC whenever.</p></comment>
<comment id="13149831" author="mahadev" created="Mon, 14 Nov 2011 19:23:05 +0000"><p>Thanks Camille. I am trying to checkin <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1269" title="Multi deserialization issues" class="issue-link" data-issue-key="ZOOKEEPER-1269"><del>ZOOKEEPER-1269</del></a> for 3.4 as well. Will do an RC right after that!</p></comment>
<comment id="13149837" author="mahadev" created="Mon, 14 Nov 2011 19:29:26 +0000"><p>Sorry I meant <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1239" title="add logging/stats to identify fsync stalls" class="issue-link" data-issue-key="ZOOKEEPER-1239"><del>ZOOKEEPER-1239</del></a>.</p></comment>
<comment id="13150373" author="hudson" created="Tue, 15 Nov 2011 10:56:27 +0000"><p>Integrated in ZooKeeper-trunk #1365 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1365/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1365/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1208" title="Ephemeral node not removed after the client session is long gone" class="issue-link" data-issue-key="ZOOKEEPER-1208"><del>ZOOKEEPER-1208</del></a>. Ephemeral node not removed after the client session is long gone. (phunt via camille)</p> <p>camille : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1201832" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1201832</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SessionTracker.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SessionInvalidationTest.java</li> </ul> </comment>
</comments>
<attachments>
<attachment id="12503346" name="ZOOKEEPER-1208_br33.patch" size="10082" author="phunt" created="Fri, 11 Nov 2011 06:41:05 +0000"/>
<attachment id="12503320" name="ZOOKEEPER-1208_br33.patch" size="11197" author="phunt" created="Fri, 11 Nov 2011 01:36:01 +0000"/>
<attachment id="12503418" name="ZOOKEEPER-1208_br34.patch" size="9591" author="phunt" created="Fri, 11 Nov 2011 20:52:59 +0000"/>
<attachment id="12503419" name="ZOOKEEPER-1208_trunk.patch" size="9616" author="phunt" created="Fri, 11 Nov 2011 20:53:13 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>34379</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05ycn:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32664</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>trunk version 1201832</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1270] testEarlyLeaderAbandonment failing intermittently, quorum formed, no serving.</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1270</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Looks pretty serious - quorum is formed but no clients can attach. Will attach logs momentarily.</p> <p>This test was introduced in the following commit (all three jira commit at once):<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-335" title="zookeeper servers should commit the new leader txn to their logs." class="issue-link" data-issue-key="ZOOKEEPER-335"><del>ZOOKEEPER-335</del></a>. zookeeper servers should commit the new leader txn to their logs.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1081" title="modify leader/follower code to correctly deal with new leader" class="issue-link" data-issue-key="ZOOKEEPER-1081"><del>ZOOKEEPER-1081</del></a>. modify leader/follower code to correctly deal with new leader<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1082" title="modify leader election to correctly take into account current epoch" class="issue-link" data-issue-key="ZOOKEEPER-1082"><del>ZOOKEEPER-1082</del></a>. modify leader election to correctly take into account current</p></description>
<environment/>
<key id="12529326">ZOOKEEPER-1270</key>
<summary>testEarlyLeaderAbandonment failing intermittently, quorum formed, no serving.</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="fpj">Flavio Paiva Junqueira</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Fri, 28 Oct 2011 22:25:36 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:04 +0000</updated>
<resolved>Sat, 5 Nov 2011 11:46:06 +0000</resolved>
<fixVersion>3.4.0</fixVersion>
<fixVersion>3.5.0</fixVersion>
<component>server</component>
<due/>
<votes>0</votes>
<watches>4</watches>
<comments>
<comment id="13141649" author="phunt" created="Tue, 1 Nov 2011 21:53:00 +0000"><p>It looks like this issue might be related to Read only mode - after applying the patch from <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1268" title="problems with read only mode, intermittent test failures and ERRORs in the log" class="issue-link" data-issue-key="ZOOKEEPER-1268"><del>ZOOKEEPER-1268</del></a> I could not get this to happen again. I ran the QuorumPeerMain test over 30 times without a single failure, I run the full test suite 3 times without any issues. It's looking like ROM is somehow causing this failure - which seems likely given the logs and the way ROM operates.</p> <p>I'm moving this out of 3.4.0 now that <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1268" title="problems with read only mode, intermittent test failures and ERRORs in the log" class="issue-link" data-issue-key="ZOOKEEPER-1268"><del>ZOOKEEPER-1268</del></a> is applied there and I can no longer reproduce.</p></comment>
<comment id="13142657" author="phunt" created="Wed, 2 Nov 2011 22:58:49 +0000"><p>Looks like this is still hanging around, see time 2011-11-02 22:11:27,124</p> <p><a href="https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper_branch34/49/testReport/junit/org.apache.zookeeper.server.quorum/QuorumPeerMainTest/testEarlyLeaderAbandonment/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper_branch34/49/testReport/junit/org.apache.zookeeper.server.quorum/QuorumPeerMainTest/testEarlyLeaderAbandonment/</a></p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> 2011-11-02 22:11:27,113 [myid:2] - INFO [LearnerHandler-/127.0.0.1:41413:LearnerHandler@264] - Follower sid: 1 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@166340c 2011-11-02 22:11:27,113 [myid:2] - INFO [LearnerHandler-/127.0.0.1:41414:LearnerHandler@264] - Follower sid: 0 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@101ac93 2011-11-02 22:11:27,123 [myid:2] - INFO [LearnerHandler-/127.0.0.1:41413:LearnerHandler@319] - Synchronizing with Follower sid: 1 maxCommittedLog =100000003 minCommittedLog = 100000001 peerLastZxid = 100000003 2011-11-02 22:11:27,123 [myid:2] - INFO [LearnerHandler-/127.0.0.1:41414:LearnerHandler@319] - Synchronizing with Follower sid: 0 maxCommittedLog =100000003 minCommittedLog = 100000001 peerLastZxid = 100000003 2011-11-02 22:11:27,123 [myid:2] - INFO [LearnerHandler-/127.0.0.1:41413:LearnerHandler@407] - Sending snapshot last zxid of peer is 0x100000003 zxid of leader is 0x0sent zxid of db as 0x100000003 2011-11-02 22:11:27,124 [myid:2] - INFO [LearnerHandler-/127.0.0.1:41414:LearnerHandler@407] - Sending snapshot last zxid of peer is 0x100000003 zxid of leader is 0x0sent zxid of db as 0x100000003 2011-11-02 22:11:27,123 [myid:1] - INFO [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11230:Learner@323] - Getting a snapshot from leader 2011-11-02 22:11:27,124 [myid:0] - INFO [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11227:Learner@323] - Getting a snapshot from leader 2011-11-02 22:11:27,125 [myid:1] - INFO [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11230:FileTxnSnapLog@255] - Snapshotting: 100000003 2011-11-02 22:11:27,125 [myid:0] - INFO [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11227:FileTxnSnapLog@255] - Snapshotting: 100000003 2011-11-02 22:11:27,373 [myid:] - INFO [main-SendThread(localhost:11233):ClientCnxn$SendThread@933] - Opening socket connection to server localhost/127.0.0.1:11233 2011-11-02 22:11:27,373 [myid:] - INFO [main-SendThread(localhost:11233):ClientCnxn$SendThread@846] - Socket connection established to localhost/127.0.0.1:11233, initiating session 2011-11-02 22:11:27,373 [myid:2] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11233:NIOServerCnxnFactory@213] - Accepted socket connection from /127.0.0.1:37239 2011-11-02 22:11:27,374 [myid:2] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11233:NIOServerCnxn@354] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running 2011-11-02 22:11:27,374 [myid:2] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11233:NIOServerCnxn@1000] - Closed socket connection for client /127.0.0.1:37239 (no session established for client) 2011-11-02 22:11:27,374 [myid:] - INFO [main-SendThread(localhost:11233):ClientCnxn$SendThread@1059] - Unable to read additional data from server sessionid 0x233665616f20000, likely server has closed socket, closing socket connection and attempting reconnect 2011-11-02 22:11:27,714 [myid:] - INFO [main-SendThread(localhost:11230):ClientCnxn$SendThread@933] - Opening socket connection to server localhost/127.0.0.1:11230 2011-11-02 22:11:27,714 [myid:] - INFO [main-SendThread(localhost:11230):ClientCnxn$SendThread@846] - Socket connection established to localhost/127.0.0.1:11230, initiating session 2011-11-02 22:11:27,714 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11230:NIOServerCnxnFactory@213] - Accepted socket connection from /127.0.0.1:33215 2011-11-02 22:11:27,715 [myid:1] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11230:NIOServerCnxn@354] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running 2011-11-02 22:11:27,715 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11230:NIOServerCnxn@1000] - Closed socket connection for client /127.0.0.1:33215 (no session established for client) 2011-11-02 22:11:27,715 [myid:] - INFO [main-SendThread(localhost:11230):ClientCnxn$SendThread@1059] - Unable to read additional data from server sessionid 0x133665616f50000, likely server has closed socket, closing socket connection and attempting reconnect 2011-11-02 22:11:27,843 [myid:] - INFO [main-SendThread(localhost:11227):ClientCnxn$SendThread@933] - Opening socket connection to server localhost/127.0.0.1:11227 2011-11-02 22:11:27,843 [myid:] - INFO [main-SendThread(localhost:11227):ClientCnxn$SendThread@846] - Socket connection established to localhost/127.0.0.1:11227, initiating session </pre> </div></div></comment>
<comment id="13142670" author="phunt" created="Wed, 2 Nov 2011 23:18:03 +0000"><p>testEarlyLeaderAbandonment2.txt.gz contains the second failure logs - from apache jenkins on branch 34</p></comment>
<comment id="13142709" author="mahadev" created="Thu, 3 Nov 2011 00:12:24 +0000"><p>Looks like the zookeeperserver does not start running within the Quorum Peers. There is something really wrong which prevents the Followers/leaders to start running the ZooKeeperServers. I suspect, it has something to do with NEWLeader transaction (could be wrong). Need to look deeper. Another pair of eyes would help!</p></comment>
<comment id="13143272" author="fpj" created="Thu, 3 Nov 2011 16:10:56 +0000"><p>For coordination purposes, I'm having a look at this issue.</p></comment>
<comment id="13143390" author="fpj" created="Thu, 3 Nov 2011 18:04:36 +0000"><p>Here is my progress so far. Mahadev is right, it sounds like we are not setting the zkServer of ServerCnxFactory, which we do both in Learner and Leader by calling self.cnxnFactory.setZooKeeperServer(zk). We should also be seeing a message like: </p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>Have quorum of supporters; starting up and setting last processed zxid: </pre> </div></div> <p>in the log file Pat posted, but we aren't, which implies that the leader establishment procedure is not completing. Is this a timing issue? I'm skeptical about it being a time issue because we wait 10 seconds for the waitForAll call to complete, but I'm not sure if this completely unrealistic or not assuming that the jenkins machine is overloaded.</p> <p>Is there anything I'm missing here? I'll keep investigating...</p></comment>
<comment id="13143400" author="fpj" created="Thu, 3 Nov 2011 18:12:05 +0000"><p>I forgot to mention that I haven't been able to reproduce it, and I have been running for the past few hours.</p></comment>
<comment id="13143473" author="fournc" created="Thu, 3 Nov 2011 19:31:23 +0000"><p>You have come to the same conclusion I did. The leader sends snapshots to the followers and they both log that they are taking a snaphsot (implying that we got the NEWLEADER message), but you don't see anything in the log that indicates the leader actually managed to call processAck on either of the responses, where you should see something like:<br/> 2011-11-03 13:07:49,717 <span class="error">#91;myid:2#93;</span> - WARN <span class="error">#91;LearnerHandler-/127.0.0.1:63083:Leader@506#93;</span> - Commiting zxid 0x200000000 from /127.0.0.1:11228 not first!<br/> 2011-11-03 13:07:49,717 <span class="error">#91;myid:2#93;</span> - WARN <span class="error">#91;LearnerHandler-/127.0.0.1:63083:Leader@508#93;</span> - First is 0</p> <p>Not sure why yet though.</p></comment>
<comment id="13143481" author="fournc" created="Thu, 3 Nov 2011 19:51:25 +0000"><p>It would be nice if we could get a full stack dump on failure here. It seems like if this is some sort of a deadlock issue that would show it pretty quick. I will see if I can add that to QuorumPeerMainTest, to possibly get some more information.</p></comment>
<comment id="13143540" author="fournc" created="Thu, 3 Nov 2011 21:19:40 +0000"><p>tests that will print the whole stack trace in case of failure to reach client state</p></comment>
<comment id="13143542" author="fournc" created="Thu, 3 Nov 2011 21:22:26 +0000"><p>There's some extraneous stuff in ClientBase, but if anyone can repro this bug locally and run it with this stack tracing on that would be useful.</p></comment>
<comment id="13143567" author="fpj" created="Thu, 3 Nov 2011 22:28:12 +0000"><p>I haven't been able to reproduce the problem, but I'll leave it running in a loop. On your comment about ClientBase, Camille, I was wondering if you have any other insight.</p></comment>
<comment id="13143602" author="fournc" created="Thu, 3 Nov 2011 23:24:31 +0000"><p>It seems to me that everything comes up ok, and starts the election process, elects a leader, and gets a snapshot from the leader. But in the logs where you have 2 followers very closely synched in time (never my local box but seems to happen on the build boxes occasionally), after the followers have claimed to write a snapshot to disk (which means they must have gotten the NEWLEADER message) the whole process then stops, and you see no logs from the leader indicating it ran processAck for either follower. It feels to me like it could be a race condition in the leader somewhere, causing it to somehow miss that ACK but I can't seem to find it. Nothing in the diffs from the checkin related to ZAB1.0 seem to be much of a culprit... I'm a bit stumped but going to keep looking.</p></comment>
<comment id="13143625" author="phunt" created="Thu, 3 Nov 2011 23:48:37 +0000"><p>Camille - This patch is against trunk, is that true? (fails to apply against 3.4)</p> <p>Notice that the original traces are against 3.4 branch.</p> <p>I'm running this patch against my CI infra. will let you know.</p></comment>
<comment id="13143631" author="phunt" created="Fri, 4 Nov 2011 00:03:54 +0000"><p>here: (trunk)</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> 2011-11-03 17:03:55,228 [myid:] - ERROR [main:ClientBase@544] - Starting logAllStackTraces() Thread Sender-/127.0.0.1:48422 at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925) at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399) at org.apache.zookeeper.server.quorum.LearnerHandler.sendPackets(LearnerHandler.java:137) at org.apache.zookeeper.server.quorum.LearnerHandler.access$000(LearnerHandler.java:56) at org.apache.zookeeper.server.quorum.LearnerHandler$1.run(LearnerHandler.java:425) Thread Finalizer at java.lang.Object.wait(Native Method) at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118) at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134) at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159) Thread NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11227 at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method) at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:210) at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65) at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69) at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80) at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:194) at java.lang.Thread.run(Thread.java:619) Thread QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11233 at java.lang.Thread.sleep(Native Method) at org.apache.zookeeper.server.quorum.Leader.lead(Leader.java:361) at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:746) Thread main-EventThread at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925) at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:493) Thread SendWorker:0 at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342) at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829) at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60) at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665) Thread SendWorker:0 at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342) at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829) at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60) at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665) Thread Reference Handler at java.lang.Object.wait(Native Method) at java.lang.Object.wait(Object.java:485) at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116) Thread LearnerHandler-/127.0.0.1:48421 at java.lang.Object.wait(Native Method) at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:450) Thread Thread-20 at java.lang.Object.wait(Native Method) at java.lang.Thread.join(Thread.java:1143) at java.lang.Thread.join(Thread.java:1196) at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:151) at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:110) at org.apache.zookeeper.server.quorum.QuorumPeerTestBase$MainThread.run(QuorumPeerTestBase.java:107) at java.lang.Thread.run(Thread.java:619) Thread main-EventThread at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925) at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:493) Thread /127.0.0.1:11229 at java.net.PlainSocketImpl.socketAccept(Native Method) at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390) at java.net.ServerSocket.implAccept(ServerSocket.java:453) at java.net.ServerSocket.accept(ServerSocket.java:421) at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener.run(QuorumCnxManager.java:489) Thread SendWorker:1 at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342) at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829) at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60) at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665) Thread NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11233 at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method) at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:210) at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65) at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69) at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80) at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:194) at java.lang.Thread.run(Thread.java:619) Thread RecvWorker:1 at java.net.SocketInputStream.socketRead0(Native Method) at java.net.SocketInputStream.read(SocketInputStream.java:129) at java.net.SocketInputStream.read(SocketInputStream.java:182) at java.io.DataInputStream.readInt(DataInputStream.java:370) at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745) Thread Thread-26 at java.net.PlainSocketImpl.socketAccept(Native Method) at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390) at java.net.ServerSocket.implAccept(ServerSocket.java:453) at java.net.ServerSocket.accept(ServerSocket.java:421) at org.apache.zookeeper.server.quorum.Leader$LearnerCnxAcceptor.run(Leader.java:250) Thread /127.0.0.1:11235 at java.net.PlainSocketImpl.socketAccept(Native Method) at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390) at java.net.ServerSocket.implAccept(ServerSocket.java:453) at java.net.ServerSocket.accept(ServerSocket.java:421) at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener.run(QuorumCnxManager.java:489) Thread SendWorker:2 at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342) at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829) at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60) at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665) Thread main-SendThread(localhost:11233) at java.lang.Thread.sleep(Native Method) at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:925) at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:979) Thread WorkerReceiver[myid=0] at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342) at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollRecvQueue(QuorumCnxManager.java:881) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:205) at java.lang.Thread.run(Thread.java:619) Thread /127.0.0.1:11232 at java.net.PlainSocketImpl.socketAccept(Native Method) at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390) at java.net.ServerSocket.implAccept(ServerSocket.java:453) at java.net.ServerSocket.accept(ServerSocket.java:421) at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener.run(QuorumCnxManager.java:489) Thread WorkerSender[myid=2] at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:424) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:362) at java.lang.Thread.run(Thread.java:619) Thread SendWorker:2 at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342) at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829) at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60) at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665) Thread RecvWorker:2 at java.net.SocketInputStream.socketRead0(Native Method) at java.net.SocketInputStream.read(SocketInputStream.java:129) at java.net.SocketInputStream.read(SocketInputStream.java:182) at java.io.DataInputStream.readInt(DataInputStream.java:370) at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745) Thread Thread-22 at java.lang.Object.wait(Native Method) at java.lang.Thread.join(Thread.java:1143) at java.lang.Thread.join(Thread.java:1196) at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:151) at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:110) at org.apache.zookeeper.server.quorum.QuorumPeerTestBase$MainThread.run(QuorumPeerTestBase.java:107) at java.lang.Thread.run(Thread.java:619) Thread SendWorker:1 at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342) at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:829) at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:60) at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:665) Thread RecvWorker:0 at java.net.SocketInputStream.socketRead0(Native Method) at java.net.SocketInputStream.read(SocketInputStream.java:129) at java.net.SocketInputStream.read(SocketInputStream.java:182) at java.io.DataInputStream.readInt(DataInputStream.java:370) at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745) Thread Signal Dispatcher Thread RecvWorker:0 at java.net.SocketInputStream.socketRead0(Native Method) at java.net.SocketInputStream.read(SocketInputStream.java:129) at java.net.SocketInputStream.read(SocketInputStream.java:182) at java.io.DataInputStream.readInt(DataInputStream.java:370) at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745) Thread RecvWorker:2 at java.net.SocketInputStream.socketRead0(Native Method) at java.net.SocketInputStream.read(SocketInputStream.java:129) at java.net.SocketInputStream.read(SocketInputStream.java:182) at java.io.DataInputStream.readInt(DataInputStream.java:370) at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745) Thread LearnerHandler-/127.0.0.1:48422 at java.lang.Object.wait(Native Method) at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:450) Thread WorkerReceiver[myid=2] at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342) at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollRecvQueue(QuorumCnxManager.java:881) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:205) at java.lang.Thread.run(Thread.java:619) Thread Thread-21 at java.lang.Object.wait(Native Method) at java.lang.Thread.join(Thread.java:1143) at java.lang.Thread.join(Thread.java:1196) at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:151) at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:110) at org.apache.zookeeper.server.quorum.QuorumPeerTestBase$MainThread.run(QuorumPeerTestBase.java:107) at java.lang.Thread.run(Thread.java:619) Thread NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11230 at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method) at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:210) at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65) at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69) at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80) at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:194) at java.lang.Thread.run(Thread.java:619) Thread main at java.lang.Thread.dumpThreads(Native Method) at java.lang.Thread.getAllStackTraces(Thread.java:1487) at org.apache.zookeeper.test.ClientBase.logAllStackTraces(ClientBase.java:536) at org.apache.zookeeper.server.quorum.QuorumPeerMainTest.waitForAll(QuorumPeerMainTest.java:319) at org.apache.zookeeper.server.quorum.QuorumPeerMainTest.testEarlyLeaderAbandonment(QuorumPeerMainTest.java:148) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52) at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:52) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222) at org.junit.runners.ParentRunner.run(ParentRunner.java:292) at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39) at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:422) at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:931) at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:785) Thread main-SendThread(localhost:11230) at java.lang.Thread.sleep(Native Method) at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:161) at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1131) at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1071) Thread main-SendThread(localhost:11227) at java.lang.Thread.sleep(Native Method) at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:925) at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:979) Thread main-EventThread at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925) at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:493) Thread WorkerSender[myid=1] at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:424) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:362) at java.lang.Thread.run(Thread.java:619) Thread QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11230 at java.net.SocketInputStream.socketRead0(Native Method) at java.net.SocketInputStream.read(SocketInputStream.java:129) at java.io.BufferedInputStream.fill(BufferedInputStream.java:218) at java.io.BufferedInputStream.read(BufferedInputStream.java:237) at java.io.DataInputStream.readInt(DataInputStream.java:370) at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63) at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:83) at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:108) at org.apache.zookeeper.server.quorum.Learner.readPacket(Learner.java:152) at org.apache.zookeeper.server.quorum.Learner.syncWithLeader(Learner.java:363) at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:80) at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:733) Thread WorkerSender[myid=0] at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:424) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:362) at java.lang.Thread.run(Thread.java:619) Thread RecvWorker:1 at java.net.SocketInputStream.socketRead0(Native Method) at java.net.SocketInputStream.read(SocketInputStream.java:129) at java.net.SocketInputStream.read(SocketInputStream.java:182) at java.io.DataInputStream.readInt(DataInputStream.java:370) at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:745) Thread Sender-/127.0.0.1:48421 at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925) at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399) at org.apache.zookeeper.server.quorum.LearnerHandler.sendPackets(LearnerHandler.java:137) at org.apache.zookeeper.server.quorum.LearnerHandler.access$000(LearnerHandler.java:56) at org.apache.zookeeper.server.quorum.LearnerHandler$1.run(LearnerHandler.java:425) Thread QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11227 at java.net.SocketInputStream.socketRead0(Native Method) at java.net.SocketInputStream.read(SocketInputStream.java:129) at java.io.BufferedInputStream.fill(BufferedInputStream.java:218) at java.io.BufferedInputStream.read(BufferedInputStream.java:237) at java.io.DataInputStream.readInt(DataInputStream.java:370) at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63) at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:83) at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:108) at org.apache.zookeeper.server.quorum.Learner.readPacket(Learner.java:152) at org.apache.zookeeper.server.quorum.Learner.syncWithLeader(Learner.java:363) at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:80) at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:733) Thread WorkerReceiver[myid=1] at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342) at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollRecvQueue(QuorumCnxManager.java:881) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:205) at java.lang.Thread.run(Thread.java:619) Ending logAllStackTraces() </pre> </div></div></comment>
<comment id="13143690" author="fournc" created="Fri, 4 Nov 2011 02:11:39 +0000"><p>Looking at this some more I'm not entirely convinced it isn't a timing issue:</p> <blockquote> <p>I'm skeptical about it being a time issue because we wait 10 seconds for the waitForAll call to complete, but I'm not sure if this completely unrealistic or not assuming that the jenkins machine is overloaded.</p></blockquote> <p>I actually have the startup and shutdown running in a loop on my box. The one time I managed to get it to fail was due to 10 seconds not being a long enough wait time. The servers were almost up, in fact, but election just took a little while as did snapshotting etc and it never succeeded. </p></comment>
<comment id="13144092" author="phunt" created="Fri, 4 Nov 2011 16:01:19 +0000"><p>There's definitely a problem somewhere. See testEarlyLeaderAbandonment3.txt.gz</p> <p>Look at time 2011-11-04 03:41:24,779</p> <p>I modified the test to iterate 30 times (instead of 10) and sleep for 2 sec (rather than 1). I then ran this test continually overnight (300+times). It never failed, however when I looked at some of the console results I saw that it actually is failing, however the test is not catching this.</p> <p>So two issues really - 1) it looks like this is a real problem, from the exception it seems the leader has frozen? 2) the test needs to be updated regardless to fail in this case.</p></comment>
<comment id="13144163" author="fpj" created="Fri, 4 Nov 2011 17:01:52 +0000"><p>Let me dump what I have in mind right now. After checking the logs and the stack trace Pat provided, it looks like the leader is waiting on the loop right before it sets the zookeeper server (Line 361, Leader), as we had observed before. It implies that the leader is not receiving acks from followers. Since the logs say that the followers are snapshotting, one option is that the snapshot is not concluding for some reason. Another alternative is that the acknowledgments to the leader are getting lost. </p> <p>Since Pat increased the parameter values to have a longer timeout, I'm even more skeptical that this is a timing issue, but I don't think we can rule it out yet. </p></comment>
<comment id="13144167" author="phunt" created="Fri, 4 Nov 2011 17:08:03 +0000"><p>If you update the patch with addl debugging, and fix the test to actually fail in this case, I'll be happy to run it again on my cluster.</p> <p>add some log detail when the followers complete snapshotting so we can rule this out/in.</p></comment>
<comment id="13144171" author="fpj" created="Fri, 4 Nov 2011 17:10:28 +0000"><p>This is the code snippet for the handling of UPTODATE in Learner.java:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> case Leader.UPTODATE: if (!snapshotTaken) { zk.takeSnapshot(); } self.cnxnFactory.setZooKeeperServer(zk); break outerLoop; </pre> </div></div> <p>If the snapshot were completing, then it should be setting the zookeeper server. Given that we see the "Snapshotting" message in the logs, I assume that the follower is receiving an UPTODATE message, but it is failing to complete the snapshot.</p></comment>
<comment id="13144208" author="phunt" created="Fri, 4 Nov 2011 17:54:53 +0000"><p>Ok, here's whats' happening wrt the test not failing. </p> <p>Look after the time index I provided, notice that the followers fail to hear from the leader, at which point they re-negotiate the quorum, at which point the quorum IS RE-EST SUCCESSFULLY, and the clients are now able to connect to the service and the test continues.</p> <p>This is a side-effect of increasing the "waitForAll" time that we allow. We are giving time for the quorum to re-establish itself after the "hang". </p> <p>Likely this is why we have not seen this in the past, if it did every happen (in any test) it might have been ignored due to recovery.</p> <p>so now that we know the test is really failing, perhaps we should just go back to 10 iterations/1sec sleep so that the test will actually fail. (or perhaps there's a better way to address this in the test?)</p></comment>
<comment id="13144237" author="fpj" created="Fri, 4 Nov 2011 18:25:45 +0000"><p>Here is some progress. I was actually looking at the wrong snippet. The correct one was the NEWLEADER handler:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> case Leader.NEWLEADER: // it will be NEWLEADER in v1.0 zk.takeSnapshot(); snapshotTaken = true; writePacket(new QuorumPacket(Leader.ACK, newLeaderZxid, null, null), true); break; } </pre> </div></div> <p>We also take a snapshot here and by looking at the stack trace that Pat posted, we see that the learner handlers are stuck in the loop right after receiving the ack, which essentially waits for the leader to start. By the same stack trace, the leader is not starting because it is waiting for the followers to acknowledge the NEWLEADER message... but the followers have acknowledged the NEWLEADER message, otherwise the learner handlers wouldn't be executing that loop (Line 450). Unless I'm missing anything, the problem must be in Leader.processAck.</p></comment>
<comment id="13144244" author="fpj" created="Fri, 4 Nov 2011 18:42:31 +0000"><p>Here are the two cases that would cause the ack not to be added without generating any log message:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> if (outstandingProposals.size() == 0) { if (LOG.isDebugEnabled()) { LOG.debug("outstanding is 0"); } return; } if (lastCommitted gt;= zxid) { if (LOG.isDebugEnabled()) { LOG.debug("proposal has already been committed, pzxid:" + lastCommitted + " zxid: 0x" + Long.toHexString(zxid)); } // The proposal has already been committed return; } </pre> </div></div> <p>I'm trying to decide which one is likely to be causing it to return.</p></comment>
<comment id="13144272" author="fpj" created="Fri, 4 Nov 2011 19:36:01 +0000"><p>My latest conjecture is that we are getting acks for NEWLEADER before we have a chance to get it into the outstandingProposals queue, which would cause the ack to be dropped and the behavior we are observing. I tried to move the code in lead that adds NEWLEADER to the queue to before the point where we start the cnxAcceptor, but it broke a lot of tests, so I don't think this is the right approach.</p> <p>Pat, if you want to run again, I would suggest to put two info messages for the cases I posted last in Leader.processAck() to determine exactly which case is being triggered and preventing the leader from collecting the ack.</p></comment>
<comment id="13144292" author="phunt" created="Fri, 4 Nov 2011 20:09:32 +0000"><p>I'm running that on my cluster now. will report results.</p></comment>
<comment id="13144306" author="phunt" created="Fri, 4 Nov 2011 20:22:52 +0000"><p>This was printed a few times just before the failure:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> [junit] 2011-11-04 13:23:20,001 [myid:2] - INFO [LearnerHandler-/127.0.0.1:51057:Leader@478] - PDH outstandingProposals.size() is ZERO </pre> </div></div> <p>See attachment testEarlyLeaderAbandonment4</p></comment>
<comment id="13144310" author="phunt" created="Fri, 4 Nov 2011 20:26:31 +0000"><p>I'm not sure that's conclusive though, this is the patch, if I apply it on my local system the test passes, but the logs still contain this ZERO outstanding message:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> diff --git a/src/java/main/org/apache/zookeeper/server/quorum/Leader.java b/src/java/main/org/apache/zookeeper/server/quorum/Leader.java index a44f1ee..a4cc127 100644 --- a/src/java/main/org/apache/zookeeper/server/quorum/Leader.java +++ b/src/java/main/org/apache/zookeeper/server/quorum/Leader.java @@ -475,12 +475,14 @@ public class Leader { } if (outstandingProposals.size() == 0) { + LOG.info("PDH outstandingProposals.size() is ZERO"); if (LOG.isDebugEnabled()) { LOG.debug("outstanding is 0"); } return; } if (lastCommitted gt;= zxid) { + LOG.info("PDH lastCommitted = " + Long.toHexString(lastCommitted) + " zxid = " + Long.toHexString(zxid)); if (LOG.isDebugEnabled()) { LOG.debug("proposal has already been committed, pzxid:" + lastCommitted </pre> </div></div></comment>
<comment id="13144334" author="fpj" created="Fri, 4 Nov 2011 20:57:44 +0000"><p>It is ok to have the zero outstanding message, since the request might have been already acknowledged by a quorum. It is a problem if you get it and it hasn't been acknowledged by a quorum, which corresponds to the case I mentioned above.</p></comment>
<comment id="13144351" author="phunt" created="Fri, 4 Nov 2011 21:24:23 +0000"><p>why do I see this in my local test log then? (passes) </p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2011-11-04 13:33:12,979 [myid:0] - INFO [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11227:FileTxnSnapLog@255] - Snapshotting: 0 2011-11-04 13:33:12,979 [myid:2] - INFO [LearnerHandler-/127.0.0.1:43739:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 1 2011-11-04 13:33:12,981 [myid:2] - INFO [LearnerHandler-/127.0.0.1:43740:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 0 2011-11-04 13:33:12,985 [myid:2] - INFO [LearnerHandler-/127.0.0.1:43740:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 0 lt;then immediately a client connects successfullygt; </pre> </div></div> <p>This is at the same point in the log where we see the crash (but this is a passing version)</p></comment>
<comment id="13144372" author="phunt" created="Fri, 4 Nov 2011 21:43:57 +0000"><p>here's more log information for a passing case. I added a new LOG after the size==0 check to check for the case where we get an ack and there is something outstanding.</p> <p>Notice each follower is sending 2 acks. ack!</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2011-11-04 14:35:43,549 [myid:1] - INFO [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11230:FileTxnSnapLog@255] - Snapshotting: 0 2011-11-04 14:35:43,549 [myid:2] - INFO [LearnerHandler-/127.0.0.1:45594:Leader@484] - PDH outstandingProposals.size() is NOT zero zxid = 100000000 sid = 0 followerAddr = /127.0.0.1:11234 2011-11-04 14:35:43,549 [myid:2] - WARN [LearnerHandler-/127.0.0.1:45594:Leader@509] - Commiting zxid 0x100000000 from /127.0.0.1:11234 not first! 2011-11-04 14:35:43,550 [myid:2] - WARN [LearnerHandler-/127.0.0.1:45594:Leader@511] - First is 0 2011-11-04 14:35:43,550 [myid:2] - INFO [LearnerHandler-/127.0.0.1:45594:Leader@535] - Have quorum of supporters; starting up and setting last processed zxid: 4294967296 2011-11-04 14:35:43,566 [myid:2] - INFO [LearnerHandler-/127.0.0.1:45595:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 1 followerAddr = /127.0.0.1:11234 2011-11-04 14:35:43,569 [myid:2] - INFO [LearnerHandler-/127.0.0.1:45594:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 0 followerAddr = /127.0.0.1:11234 2011-11-04 14:35:43,570 [myid:2] - INFO [LearnerHandler-/127.0.0.1:45595:Leader@478] - PDH outstandingProposals.size() is ZERO zxid = 100000000 sid = 1 followerAddr = /127.0.0.1:11234 </pre> </div></div></comment>
<comment id="13144378" author="fournc" created="Fri, 4 Nov 2011 21:49:03 +0000"><p>2 acks is expected. This threw me the first time I saw it in the code, but it's right as far as I could reason looking through follower and leader, the first ack is after NEWLEADER, the second is right before we start the zk server.</p></comment>
<comment id="13144413" author="fpj" created="Fri, 4 Nov 2011 22:24:54 +0000"><p>With this patch, we make sure that the newleader message is queued before we process acks to newleader. </p></comment>
<comment id="13144416" author="fpj" created="Fri, 4 Nov 2011 22:29:46 +0000"><p>Camille, It sounds right that we need multiple acks from the follower, but it sounds awkward that they are acknowledging the same message. Perhaps this is to guarantee a correct implementation and for backward compatibility?</p></comment>
<comment id="13144426" author="phunt" created="Fri, 4 Nov 2011 22:46:04 +0000"><p>it's running in my test harness now (both camille's patch and fpj)</p></comment>
<comment id="13144480" author="shralex" created="Sat, 5 Nov 2011 00:20:15 +0000"><p>Please note that <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1194" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1194</a> fixes the problem of NEWLEADER message not being in outstandingProposals when NEWLEADER acks arrive. </p> <p>I haven't followed ZK-1270 closely, but just thought you should be aware of ZK-1194</p></comment>
<comment id="13144483" author="phunt" created="Sat, 5 Nov 2011 00:24:35 +0000"><p>Thanks Alexander. How does that patch compare to this? Esp wrt risk?</p> <p>Do you think we should choose 1194 over this change?</p> <p>Flavio?</p></comment>
<comment id="13144492" author="shralex" created="Sat, 5 Nov 2011 00:48:42 +0000"><p>I think that ZK-1194 risk is very low. It modifies 2 lines of code in Leader.java to make sure that the leader is in connectingFollowers (electingFollowers) before returning from getEpochToPropose (waitForEpochAck). It includes 2 tests for these two changes.</p> <p>According to my understanding, ZK-1194 patch can replace all changes to Leader and LearnerHandler that appear in the patches above for ZK-1270. Specifically with ZK-1194 in it is not necessary to explicitly check that NEWLEADER message got into the outstandingProposals, and to wait for this condition in LeaderHandler. </p> <p>I'm not sure what was the purpose of the changes to the other files in ZK-1270 but I'm pretty sure ZK-1194 addresses the same issue as the changes to Leader and LearnerHandler made here. Also - ZK-1194 handles another possible race condition not addressed in ZK-1270.</p></comment>
<comment id="13144518" author="mahadev" created="Sat, 5 Nov 2011 01:56:05 +0000"><p>Alex/Pat,<br/> I'd really prefer the patch on this jira for now. Alex, I am in the middle of making a release. The patch on <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1194" title="Two possible race conditions during leader establishment" class="issue-link" data-issue-key="ZOOKEEPER-1194"><del>ZOOKEEPER-1194</del></a> does not apply and I really would not like to wait for consensus on the fix on ZOOKEEEPR-1194. We can definitely put the fix in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1194" title="Two possible race conditions during leader establishment" class="issue-link" data-issue-key="ZOOKEEPER-1194"><del>ZOOKEEPER-1194</del></a> in 3.5 or 3.4.1. Fair enough? </p></comment>
<comment id="13144530" author="shralex" created="Sat, 5 Nov 2011 02:46:14 +0000"><p>Hi Mahadev,</p> <p>I understand, I'm only speaking up here because the patches overlap. When ZK-1194 goes in the changes to Leader and LearnerHandler from ZK-1270 become unnecessary.</p> <p>Actually, now that I looked closer on ZK-1270 I realized that the changes to Leader.java and LearnerHandler.java are the only code changes here and the rest are tests. So ZK-1270 is subsumed by ZK-1194.</p> <p>I think it would be best to adopt the code changes from ZK-1194 (changes to 2 lines of code) and merge the tests in these patches. But this is up to you of course.</p> <p>Alex</p></comment>
<comment id="13144555" author="shralex" created="Sat, 5 Nov 2011 03:57:59 +0000"><p>I'm attaching an alternative patch to this.</p></comment>
<comment id="13144556" author="mahadev" created="Sat, 5 Nov 2011 03:59:31 +0000"><p>Alex,<br/> Can you please upload a patch that applies to trunk and 3.4 branch here? I'd like to get this done tonight.</p></comment>
<comment id="13144557" author="mahadev" created="Sat, 5 Nov 2011 04:01:54 +0000"><p>Alex,<br/> Please make sure that you grant code changes to Apache. You just have to click on the box that says "Grant license to Apache" when attaching the patch.</p> <p>Do reattach the patch with the grant. thanks</p></comment>
<comment id="13144562" author="fournc" created="Sat, 5 Nov 2011 04:17:44 +0000"><p>If readyToStart becomes unused with this patch can we please go ahead and remove it?</p></comment>
<comment id="13144566" author="phunt" created="Sat, 5 Nov 2011 04:25:06 +0000"><p>note: flavio's patch is causing the following 11 tests to fail consistently:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>org.apache.zookeeper.test.DisconnectedWatcherTest.testChildWatcherAutoResetWithChroot org.apache.zookeeper.test.DisconnectedWatcherTest.testDefaultWatcherAutoResetWithChroot org.apache.zookeeper.test.DisconnectedWatcherTest.testDeepChildWatcherAutoResetWithChroot org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithGlobal org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithLocal org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetDisabledWithGlobal org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetDisabledWithLocal org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithGlobal org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithLocal org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetDisabledWithGlobal org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetDisabledWithLocal </pre> </div></div></comment>
<comment id="13144588" author="phunt" created="Sat, 5 Nov 2011 05:14:07 +0000"><p>Note: these same tests are failing with the 1270-1194 patch.</p></comment>
<comment id="13144590" author="shralex" created="Sat, 5 Nov 2011 05:16:14 +0000"><p>Camille, we should remove readyToStart, but it is still used in Zab1_0Test, which uses it to check that the leader is ready and able to receive connections. We can most probably check this some other way, but I suggest to leave this for now and fix later.</p></comment>
<comment id="13144595" author="mahadev" created="Sat, 5 Nov 2011 05:20:07 +0000"><p>+1 on Alex's suggestion. Lets stick to minimal changes for now <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>.</p></comment>
<comment id="13144601" author="fournc" created="Sat, 5 Nov 2011 05:39:59 +0000"><p>without my clientbase junk</p></comment>
<comment id="13144602" author="fournc" created="Sat, 5 Nov 2011 05:53:32 +0000"><p>branch 3.4 version of clean patch</p></comment>
<comment id="13144611" author="mahadev" created="Sat, 5 Nov 2011 06:36:59 +0000"><p>Just committed Camille's final patch to trunk and 3.4. Thanks to Camille/Flavio/Alex/Pat on this! A true community patch <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. </p></comment>
<comment id="13144633" author="fpj" created="Sat, 5 Nov 2011 08:54:07 +0000"><p>Sorry for missing part of the fun.</p> <p>Alex, Thanks for spotting the duplicate, that was a great catch. I'm not convinced that your patch completely solves the problem, though. LearnerHandler sends NEWLEADER concurrently with the leader adding NEWLEADER to outstandingRequests, so even fixing the barriers as you did does not prevent the race I mentioned above, I think.</p> <p>I must say that I didn't find my proposed patch very elegant, but I'm not entirely sure that yours covers all cases, so let me know what you think. </p></comment>
<comment id="13144651" author="hudson" created="Sat, 5 Nov 2011 10:56:20 +0000"><p>Integrated in ZooKeeper-trunk #1356 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1356/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1356/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1270" title="testEarlyLeaderAbandonment failing intermittently, quorum formed, no serving." class="issue-link" data-issue-key="ZOOKEEPER-1270"><del>ZOOKEEPER-1270</del></a>. testEarlyLeaderAbandonment failing intermittently, quorum formed, no serving. (Flavio, Camille and Alexander Shraer via mahadev)</p> <p>mahadev : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1197891" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1197891</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ClientBase.java</li> </ul> </comment>
<comment id="13144658" author="shralex" created="Sat, 5 Nov 2011 11:27:04 +0000"><p>Hi Flavio,</p> <p>LearnerHandler sends NEWLEADER messages after running waitForEpochAck.<br/> The patch makes sure that waitForEpochAck does not return until the leader also runs it. Leader runs waitForEpochAck after inserting NEWLEADER message into the outstandingProposals.</p> <p>Alex</p></comment>
<comment id="13144662" author="fpj" created="Sat, 5 Nov 2011 11:46:06 +0000"><p>Sounds right, thanks for the clarification.</p></comment>
<comment id="13145929" author="phunt" created="Mon, 7 Nov 2011 23:20:31 +0000"><p>this is still failing on 3.4 branch (incl this latest patch).</p> <p>See testEarlyLeaderAbandonment5.txt.gz (attached).</p> <p>Notice now that the stat is continually run, without the clients attempting to connect to the server. The test doesn't seem to be cutting over from detecting the service is up to starting the clients.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="12310010">
<name>Incorporates</name>
<outwardlinks description="incorporates">
<issuelink>
<issuekey id="12523643">ZOOKEEPER-1194</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12502580" name="ZOOKEEPER-1270-1194.patch" size="8437" author="fournc" created="Sat, 5 Nov 2011 05:39:58 +0000"/>
<attachment id="12502577" name="ZOOKEEPER-1270-and-1194-branch34.patch" size="10596" author="shralex" created="Sat, 5 Nov 2011 05:13:35 +0000"/>
<attachment id="12502573" name="ZOOKEEPER-1270-and-1194.patch" size="11270" author="shralex" created="Sat, 5 Nov 2011 04:05:16 +0000"/>
<attachment id="12502572" name="ZOOKEEPER-1270-and-1194.patch" size="11270" author="shralex" created="Sat, 5 Nov 2011 03:57:59 +0000"/>
<attachment id="12502557" name="ZOOKEEPER-1270.patch" size="7328" author="phunt" created="Sat, 5 Nov 2011 00:22:28 +0000"/>
<attachment id="12502538" name="ZOOKEEPER-1270.patch" size="1737" author="fpj" created="Fri, 4 Nov 2011 22:24:54 +0000"/>
<attachment id="12502555" name="ZOOKEEPER-1270_br34.patch" size="6936" author="phunt" created="Sat, 5 Nov 2011 00:22:07 +0000"/>
<attachment id="12502223" name="ZOOKEEPER-1270tests.patch" size="5700" author="fournc" created="Thu, 3 Nov 2011 21:19:40 +0000"/>
<attachment id="12502225" name="ZOOKEEPER-1270tests2.patch" size="5045" author="fournc" created="Thu, 3 Nov 2011 21:21:22 +0000"/>
<attachment id="12501395" name="testEarlyLeaderAbandonment.txt.gz" size="44242" author="phunt" created="Fri, 28 Oct 2011 22:35:43 +0000"/>
<attachment id="12502062" name="testEarlyLeaderAbandonment2.txt.gz" size="49034" author="phunt" created="Wed, 2 Nov 2011 23:18:02 +0000"/>
<attachment id="12502467" name="testEarlyLeaderAbandonment3.txt.gz" size="60480" author="phunt" created="Fri, 4 Nov 2011 16:01:18 +0000"/>
<attachment id="12502521" name="testEarlyLeaderAbandonment4.txt.gz" size="47956" author="phunt" created="Fri, 4 Nov 2011 20:22:52 +0000"/>
<attachment id="12502838" name="testEarlyLeaderAbandonment5.txt.gz" size="55620" author="phunt" created="Mon, 7 Nov 2011 23:20:31 +0000"/>
<attachment id="12502581" name="zookeeper-1270-1194-34.patch" size="7762" author="fournc" created="Sat, 5 Nov 2011 05:53:32 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>215186</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05y8n:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32646</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1046] Creating a new sequential node results in a ZNODEEXISTS error</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1046</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>On several occasions, I've seen a create() with the sequential flag set fail with a ZNODEEXISTS error, and I don't think that should ever be possible. In past runs, I've been able to closely inspect the state of the system with the command line client, and saw that the parent znode's cversion is smaller than the sequential number of existing children znode under that parent. In one example:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>[zk:lt;ip:portgt;(CONNECTED) 3] stat /zkrsm cZxid = 0x5 ctime = Mon Jan 17 18:28:19 PST 2011 mZxid = 0x5 mtime = Mon Jan 17 18:28:19 PST 2011 pZxid = 0x1d819 cversion = 120710 dataVersion = 0 aclVersion = 0 ephemeralOwner = 0x0 dataLength = 0 numChildren = 2955 </pre> </div></div> <p>However, the znode /zkrsm/000000000000002d_record0000120804 existed on disk.</p> <p>In a recent run, I was able to capture the Zookeeper logs, and I will attach them to this JIRA. The logs are named as nodeX.lt;zxid_prefixesgt;.log, and each new log represents an application process restart.</p> <p>Here's the scenario:</p> <ol> <li>There's a cluster with nodes 1,2,3 using zxid 0x3.</li> <li>All three nodes restart, forming a cluster of zxid 0x4.</li> <li>Node 3 restarts, leading to a cluster of 0x5.</li> </ol> <p>At this point, it seems like node 1 is the leader of the 0x5 epoch. In its log (node1.0x4-0x5.log) you can see the first (of many) instances of the following message:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2011-04-11 21:16:12,607 16649 [ProcessThread:-1] INFO org.apache.zookeeper.server.PrepRequestProcessor - Got user-level KeeperException when processing sessionid:0x512f466bd44e0002 type:create cxid:0x4da376ab zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a Error Path:/zkrsm/00000000000000b2_record0001761440 Error:KeeperErrorCode = NodeExists for /zkrsm/00000000000000b2_record0001761440 </pre> </div></div> <p>This then repeats forever as my application isn't expecting to ever get this error message on a sequential node create, and just continually retries. The message even transfers over to node3.0x5-0x6.log once the 0x6 epoch comes into play.</p> <p>I don't see anything terribly fishy in the transition between the epochs; the correct snapshots seem to be getting transferred, etc. Unfortunately I don't have a ZK snapshot/log that exhibits the problem when starting with a fresh system.</p> <p>Some oddities you might notice in these logs:</p> <ul> <li>Between epochs 0x3 and 0x4, the zookeeper IDs of the nodes changed due to a bug in our application code. (They are assigned randomly, but are supposed to be consistent across restarts.)</li> <li>We manage node membership dynamically, and our application restarts the ZooKeeperServer classes whenever a new node wants to join (without restarting the entire application process). This is why you'll see messages like the following in node1.0x4-0x5.log before a new election begins: <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2011-04-11 21:16:00,762 4804 [QuorumPeer:/0.0.0.0:2888] INFO org.apache.zookeeper.server.quorum.Learner - shutdown called </pre> </div></div></li> <li>There is in fact one of these dynamic membership changes in node1.0x4-0x5.log, just before the 0x4 epoch is formed. I'm not sure how this would be related though, as no transactions are done during this period.</li> </ul> </description>
<environment><p>A 3 node-cluster running Debian squeeze.</p></environment>
<key id="12504115">ZOOKEEPER-1046</key>
<summary>Creating a new sequential node results in a ZNODEEXISTS error</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="vishalmlst">Vishal Kher</assignee>
<reporter username="strib">Jeremy Stribling</reporter>
<labels>
<label>sequence</label>
</labels>
<created>Tue, 12 Apr 2011 22:24:19 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:03 +0000</updated>
<resolved>Thu, 14 Jul 2011 14:24:41 +0000</resolved>
<version>3.3.2</version>
<version>3.3.3</version>
<fixVersion>3.3.4</fixVersion>
<fixVersion>3.4.0</fixVersion>
<component>server</component>
<due/>
<votes>2</votes>
<watches>3</watches>
<comments>
<comment id="13019092" author="strib" created="Tue, 12 Apr 2011 22:26:40 +0000"><p>The logs are too big to attach, but you can download them from <a href="http://pdos.csail.mit.edu/~strib/zk_node_exists.tgz" class="external-link" target="_blank" rel="nofollow noopener">http://pdos.csail.mit.edu/~strib/zk_node_exists.tgz</a> <span class="error">#91;24 MB, 670 MB unzipped#93;</span>.</p></comment>
<comment id="13019357" author="fournc" created="Wed, 13 Apr 2011 14:39:04 +0000"><p>You saw this problem in the past in a single node setup, correct?</p></comment>
<comment id="13019398" author="strib" created="Wed, 13 Apr 2011 15:59:33 +0000"><p>Correct. Sorry, forgot to mention that.</p></comment>
<comment id="13019656" author="fournc" created="Thu, 14 Apr 2011 01:26:12 +0000"><p>So, from a first pass through the code, I'm not sure how this is happening. It looks like the parent cversion is always updated when you add a child node, and that is reflected in both the data tree that would be serialized and the transaction log replay (which itself would update the parent node cversion). It would be nice if we could get the log. and snapshot. files from the zk data directories the next time you see this. Can you force it to happen more often by updating your cluster more frequently or bouncing nodes?</p></comment>
<comment id="13019657" author="strib" created="Thu, 14 Apr 2011 01:33:04 +0000"><p>Thanks for looking into. I will grab all the data I can the next time I see this happen, but it's difficult since I've never had it happen on my own setup, only when others report it to me, and by then the data may have been rotated away.</p> <p>I haven't found a test to reproduce this yet, but I will try to come up with one when I get some time.</p> </comment>
<comment id="13019660" author="strib" created="Thu, 14 Apr 2011 01:44:18 +0000"><p>The log and snapshot files for an occurrence of this with a single node using ZK 3.3.2.</p></comment>
<comment id="13019661" author="strib" created="Thu, 14 Apr 2011 01:47:10 +0000"><p>I was wrong #8211; I was able to find the log/snapshot files from a run with Zookeeper 3.3.2 (single node). If you start up Zookeeper 3.3.2 with this as your data dir, you can reproduce the problem with the following command in zkCli:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre># create -s /zkrsm/000000000000002d_record test Node already exists: /zkrsm/000000000000002d_record </pre> </div></div> <p>Unfortunately, I do not have logs for the run that led to this state, I only have logs from after the restart, which shouldn't give you any more info than just running with these snapshots yourself.</p></comment>
<comment id="13020139" author="strib" created="Fri, 15 Apr 2011 00:55:10 +0000"><p>For the record, I have another example of this happening, this time without a lot complicated cluster dynamics. The scenario is:</p> <ol> <li>There is a 3-node cluster</li> <li>A sequential node is created with seq. num. X</li> <li>The leader dies very shortly after that (within a couple of transactions)</li> <li>A new leader is elected (who has seen all of the transactions committed by the previous leader)</li> <li>The new leader immediately hits the problem where it returns ZNODEEXISTS when a seq. node is returned</li> </ol> <p>I have logs from before and after the problem, as well as Zookeeper snapshots that contain the problem, but unfortunately the transaction log containing the actual problematic transaction was rotated away. If anyone wants to see what I do have, let me know and I'll upload them somewhere.</p> <p>I will also try to write a simple test that creates lots of sequential nodes, kills the leader, and sees if the problem occurs.</p></comment>
<comment id="13020145" author="fournc" created="Fri, 15 Apr 2011 01:01:36 +0000"><p>Thanks Jeremy.<br/> Today I ran the single node test with your log above and got even stranger results; instead of giving me NODEEXISTS errors I was simply overwriting nodes. This was through a java ZooKeeper instead of zkCli. Going to look into it further now.</p></comment>
<comment id="13020237" author="savu.andrei" created="Fri, 15 Apr 2011 08:25:34 +0000"><p>I've seen a similar behavior while writing a strictly increasing sequence of numbers as sequential nodes. You can find the code at the following link <span class="error">#91;1#93;</span>. The repository also contains some basic tools for fault injection.</p> <p><span class="error">#91;1#93;</span> <a href="https://github.com/andreisavu/zookeeper-mq" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/andreisavu/zookeeper-mq</a></p></comment>
<comment id="13020441" author="fournc" created="Fri, 15 Apr 2011 21:31:52 +0000"><p>This one is a bear. I believe what is happening is the following:</p> <p>Your code is creating and deleting large numbers of sequential nodes. At time T, it is in the process of deleting a bunch of nodes when ZK decides to take a snapshot of the state.</p> <p>When we take a snapshot, we spawn a separate thread and serialize the nodes of the tree in that thread. We get into your /zkrsm node in DataTree.serializeNode, get that node from the tree, synchronize on it, and write out the record of that node including its current cversion (used to generate sequential node information) and the list of children. However, we then release the sync on that node, and attempt to iterate through the children to serialize them out. In the meantime, the other thread is merrily deleting children of this node, increasing the cversion of /zkrsm all the while. So the list of children that we got while serializing the parent is defunct. When we try to serialize these now-deleted children, we see that they are null and continue on.</p> <p>Now, you finish this snapshot, delete some more nodes under /zkrsm, create some more sequential nodes under /zkrsm, and crash. When you start back up again, you read that snapshot and start playing through the log transactions after the snapshot zxid. Unfotunately, the first N transactions in your log after the snapshot zxid are deletions of nodes that didn't make it into the snapshot because you deleted them before they could be serialized to the snapshot. We will try to process the delete transaction and get a NoNodeException, but ignore it because we know that can happen due to what I wrote above. But what we don't do is increment the cversion of the parent node after this failed deletion. So our parent's cversion is less than the version it would be if you played just the transaction log through, or of the system before the crash. Now you want to continue creating sequential nodes where you left off, but your cversion is wrong so you try to create a node that already exists. Whoops.</p> <p>So, now we just need to fix it. Should we be incrementing the cversion of the parent even on a NoNode exception during txn log replay? I suspect that is the right thing to do. Thoughts?</p></comment>
<comment id="13020447" author="strib" created="Fri, 15 Apr 2011 22:00:12 +0000"><p>Wow, nice sleuthing. Sounds very plausible #8211; we are doing a lot of deletions under that same node, and it could definitely be concurrent with the node creation. But not knowing the code very well, I'll defer to others for confirmation.</p> <p>I will try to implement this change locally for our app and see if we run into the problem again. I assume you're talking about the OpCode.delete case in PrepRequestProcessor::pRequest? And copying the cversion increment into a catch clause after the getRecordForPath(path) call?</p></comment>
<comment id="13020490" author="fournc" created="Fri, 15 Apr 2011 23:55:38 +0000"><p>No, it'll need to be fixed in the DataTree deleteNode method somehow. I'm not really sure the best way to do it yet. But an easy manual test to run is, with the log and snapshot files attached to this ticket, if you start up a zk with the version-2 directory containing just log.1, the cversion of /zkrsm is 84340. If you start it up with log.1 and snapshot.1460d, the cversion of /zkrsm is 84245. If you fix this bug, both should show cversion of 84340.</p></comment>
<comment id="13020502" author="strib" created="Sat, 16 Apr 2011 00:19:19 +0000"><p>A quick and dirty patch that seems to fix the problem. Applies from src/ with `patch -p1`.</p></comment>
<comment id="13020503" author="strib" created="Sat, 16 Apr 2011 00:20:48 +0000"><p>Thanks Camille. The patch I just attached seems to solve the problem for the log/snap combo you point out above. I haven't tested it extensively yet, and it's not very elegant so you probably want to rewrite it and I'm not going to put this into "patch available" yet. But if you have a chance, please let me know if there's anything obviously wrong in this patch.</p></comment>
<comment id="13020505" author="strib" created="Sat, 16 Apr 2011 00:24:45 +0000"><p>(By the way, the patch is against the 3.3.3 release, not the trunk.)</p></comment>
<comment id="13023368" author="vishalmlst" created="Fri, 22 Apr 2011 20:02:11 +0000"><p>Hi Jeremy, Camille,</p> <p>The patch that Jeremy attached will fix the problem, but it will result in incrementing cversion() for every delete operation that fails with NoNodeException. That is, an attempt to delete a node that does not exist will also increment the cversion. Am I correct?</p> <p>If yes, then do you think it would be better to change <blockquote><p>public void deleteNode(String path, long zxid)</p></blockquote> to <blockquote><p>public void deleteNode(String path, long zxid, boolean forceIncrementCversion)</p></blockquote>.</p> <p>If forceIncrementCversion is set, the code will work similar to Jeremy's patch. ZkDataBase.processTxn() will always set the flag to false. FileTxnSnapLog.processTransaction() will always set the flag to true. We will also need to add third argument to DataTree.processTxn().</p> <p>Questions for Camille:</p> <ul class="alternate" type="square"> <li>Why does this have to be in DataTree.deleteNode() and cannot be part of exception handling at the higher layer? Isn't this a special case for Txn exception handling rather than deleting the node from DT?</li> <li>You mentioned that your test resulted in overwriting the nodes instead of causing NODEXIST. Is this because of the same bug?</li> </ul> <p>Thanks.</p></comment>
<comment id="13023466" author="fournc" created="Fri, 22 Apr 2011 23:57:05 +0000"><p>I think it could and possibly should be in the exception handling at the higher layer. I haven't had much of a chance to look through it in details yet. I think there's definitely still some work to be done here, if you have a better idea it would be cool to see it.</p> <p>Which test are you referring to? I realized after posting that one of my tests was writing to a different node name entirely instead of overwriting a node name so that was a human operator problem.</p></comment>
<comment id="13029990" author="vishalmlst" created="Fri, 6 May 2011 16:08:13 +0000"><p>Hi Camille, Jeremy,</p> <p>I have attached a patch that I think should fix the problem that Camille<br/> pointed out.</p> <p>There are subtle effects of this patch that needs to be carefully<br/> reviewed:</p> <p>1. Previously, DataTree.processTxn() did not return error if<br/> create/delete failed with nodeexist/nonode exception (the if condition<br/> was a bit strange also). I think we should not do this. Per my<br/> understanding, such a failure can occur only when we are replaying the<br/> transactions. It should not occur when the server is doing live<br/> transactions (unless there is a bug). So processTxn should return<br/> error even in this case to the caller. The caller should decided<br/> whether to ignore these errors or not. In FileTxnSnapLog we handle the<br/> error by incrementing cversion of the parent. In FinalRequestProcessor<br/> we do not do anything special, but we do not ignore the error as well.</p> <p>2. We could increment cversion in DeleteNode itself (as I mentioned in<br/> my previous comment). But I think changes in the attached patch is a<br/> better approach. I would like to confirm whether not incrementing<br/> cversion in DeleteNode() is going to introduce any synchronization<br/> issue (since the lock on the parent will be released and then<br/> reacquired). I don't think there is any problem here, but it will be<br/> good if you can confirm this.</p> <p>I noticed that the same bug can occur while creating a node as<br/> well. Patch handles create and delete.</p> <p>I was able to test this patch using the snapshots and logs that Jermey<br/> had attached. I had to revert the logs to the state where this bug<br/> would be seen the first time. I ended up doing: rm #42;.1d8#42; #42;.1d9#42;</p> <p>Then I can see that "create -s /zkrsm/000000000000002d_record test"<br/> succeeds with this patch (and fails without).</p> <p>I have not thought about writing a test for this yet (sounds complex to me).</p> <p>Thanks.<br/> -Vishal</p></comment>
<comment id="13029992" author="vishalmlst" created="Fri, 6 May 2011 16:09:05 +0000"><p>Submitting path for trunk. Does not inlcude test.</p></comment>
<comment id="13030009" author="hadoopqa" created="Fri, 6 May 2011 16:34:17 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478444/ZOOKEEPER-1046.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478444/ZOOKEEPER-1046.patch</a><br/> against trunk revision 1099329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/251//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/251//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/251//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/251//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/251//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/251//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13030050" author="fournc" created="Fri, 6 May 2011 17:40:57 +0000"><p>Hey Vishal,</p> <p>Looking at the patch at a glance it looks good to me. Would be nice to have just a flat unit test against the DataTree incrementCversion. Is there any way to take those logs that Jeremy provided and turn them into a test for this fix? It would be somewhat heavy I'll admit but it's a somewhat significant bug and I think it warrants a good test.</p></comment>
<comment id="13031711" author="fournc" created="Wed, 11 May 2011 14:02:55 +0000"><p>Hey Vishal,</p> <p>Any chance you could get some sort of test for this soon? It looks like it will be a merge conflict with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a> so it would be good to have this in first since it is a rather nasty bug and I'd like to make sure we don't make the same mistake in the multi-txn space.</p> <p>Thanks.</p></comment>
<comment id="13032777" author="vishalmlst" created="Fri, 13 May 2011 00:53:05 +0000"><p>I will upload a test soon.</p></comment>
<comment id="13033038" author="vishalmlst" created="Fri, 13 May 2011 13:40:27 +0000"><p>+ tests</p></comment>
<comment id="13033039" author="vishalmlst" created="Fri, 13 May 2011 13:41:55 +0000"><p>Added tests. Submitting patch for trunk.</p></comment>
<comment id="13033049" author="hadoopqa" created="Fri, 13 May 2011 14:13:32 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12479099/ZOOKEEPER-1046.patch1" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12479099/ZOOKEEPER-1046.patch1</a><br/> against trunk revision 1099329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 16 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/263//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/263//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/263//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/263//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/263//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/263//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13033249" author="fournc" created="Fri, 13 May 2011 19:54:27 +0000"><p>Looks great Vishal! +1 from me</p></comment>
<comment id="13036998" author="phunt" created="Fri, 20 May 2011 18:49:26 +0000"><p>It's not clear to me at this point, is this being fixed on 3.3 and trunk? ("fix for" indicates trunk only) Which patch is which? (typically we indicate in the patch file name if it's for a branch, vs the "simple" name if for trunk)</p></comment>
<comment id="13037047" author="breed" created="Fri, 20 May 2011 20:00:29 +0000"><p>+1 great job figuring out the problem and fixing it! looks good to me.</p></comment>
<comment id="13037302" author="hudson" created="Sat, 21 May 2011 10:56:21 +0000"><p>Integrated in ZooKeeper-trunk #1189 (See <a href="https://builds.apache.org/hudson/job/ZooKeeper-trunk/1189/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/ZooKeeper-trunk/1189/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1046" title="Creating a new sequential node results in a ZNODEEXISTS error" class="issue-link" data-issue-key="ZOOKEEPER-1046"><del>ZOOKEEPER-1046</del></a>: Creating a new sequential node results in a ZNODEEXISTS error</p> <p>camille : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1125581" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1125581</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java</li> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/DataTreeTest.java</li> </ul> </comment>
<comment id="13037626" author="fournc" created="Sun, 22 May 2011 16:43:21 +0000"><p>Patrick, I missed your comment in my rushing on Friday. Do we want to push this into the 3.3 branch as well?</p></comment>
<comment id="13037683" author="breed" created="Mon, 23 May 2011 00:40:06 +0000"><p>yes, we should get this into the 3.3 branch.</p></comment>
<comment id="13039388" author="fournc" created="Wed, 25 May 2011 22:28:45 +0000"><p>So I'm trying to get this patch working in 3.3, and I notice the following:</p> <p>One of the tests in the patch is a modification of LoadFromLogTest, which was introduced to show fixes for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-882" title="Startup loads last transaction from snapshot" class="issue-link" data-issue-key="ZOOKEEPER-882"><del>ZOOKEEPER-882</del></a>. <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-882" title="Startup loads last transaction from snapshot" class="issue-link" data-issue-key="ZOOKEEPER-882"><del>ZOOKEEPER-882</del></a> claims to have been fixed on 3.3.3 and 3.4, but the test is not there in the 3.3.3 branch. When we port fixes from trunk to branches, are we not also porting the tests?</p></comment>
<comment id="13044330" author="fournc" created="Sat, 4 Jun 2011 16:58:47 +0000"><p>3.3 branch patch</p></comment>
<comment id="13044331" author="fournc" created="Sat, 4 Jun 2011 16:59:42 +0000"><p>I think I got the code into a 3.3 patch. If someone could take a look and ok it I will push it back into the branch.</p></comment>
<comment id="13044332" author="hadoopqa" created="Sat, 4 Jun 2011 17:01:47 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12481458/ZOOKEEPER-1046-for333" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12481458/ZOOKEEPER-1046-for333</a><br/> against trunk revision 1125581.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 14 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/305//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/305//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13046596" author="breed" created="Thu, 9 Jun 2011 15:01:10 +0000"><p>i was reviewing this code again, and i think we still have a problem. the txns are supposed to be idempotent, but the way we maintain the cversion is not idempotent. i think it is possible for different replicas to have different cversions for the same znode.</p> <p>i think the ultimate fix is to encode the cversion of the parent into the create and delete txns.</p></comment>
<comment id="13046704" author="vishalmlst" created="Thu, 9 Jun 2011 17:54:18 +0000"><p>Does this imply a transaction log version upgrade?</p></comment>
<comment id="13046720" author="breed" created="Thu, 9 Jun 2011 18:16:53 +0000"><p>yes, it would require a transaction log and protocol upgrade.</p></comment>
<comment id="13046893" author="fournc" created="Thu, 9 Jun 2011 22:54:28 +0000"><p>Do we want to try to do this as part of 3.4? Are you guys addressing this in some of your other patches?</p></comment>
<comment id="13046899" author="breed" created="Thu, 9 Jun 2011 22:59:01 +0000"><p>i 3.4 would be a good time to do it since we are doing a small protocol change in the initial handshake.</p></comment>
<comment id="13048693" author="fournc" created="Mon, 13 Jun 2011 18:21:03 +0000"><p>OK. So who wants to do this? Should I pull this patch out of trunk and only apply it to 3.3? I'd like to get this cleared up and finalized so we know the bug and the related bugs are all fixed.</p></comment>
<comment id="13049181" author="breed" created="Tue, 14 Jun 2011 13:43:48 +0000"><p>yes, i think we should stick with this patch for 3.3. i think it might be better to do a patch based on what is already in trunk rather than reverting. we should definitely get the protocol change into 3.4.0. i'll try to get to it today.</p></comment>
<comment id="13049197" author="fournc" created="Tue, 14 Jun 2011 14:21:47 +0000"><p>Is this going to force me to write some kind of upgrade script for the ZK servers I have running 3.3.3?</p></comment>
<comment id="13049288" author="breed" created="Tue, 14 Jun 2011 17:20:45 +0000"><p>no, i think we need to back it backwards compatible with 3.3.x, so we need to be able to process txns without the parent cversion. so, no upgrade needed.</p></comment>
<comment id="13049290" author="breed" created="Tue, 14 Jun 2011 17:22:01 +0000"><p>making a blocker to ensure that it gets into 3.4.0</p></comment>
<comment id="13049607" author="breed" created="Wed, 15 Jun 2011 04:47:48 +0000"><p>it turns out that the fix is really easy and small and easy to make backwards compatible except for one killer problem: closeSession. The closeSession may do a massive amount of deletes, so potentially we would need to go through and figure out everything to delete and send a cversion for each.</p> <p>i've been looking and i think we can simplify things. cversion is only used to pick suffixes for sequential nodes, so we really only need to increment on creates. if we did this, the fix would really become trivial and would also make the numbering of creates sequential.</p> <p>of course this is the only way we use it, others may use it for something else. it would be an api semantic break.</p></comment>
<comment id="13049774" author="fournc" created="Wed, 15 Jun 2011 13:58:11 +0000"><p>It's ok with me to make the change and ignore deletes.</p></comment>
<comment id="13049814" author="fpj" created="Wed, 15 Jun 2011 15:30:09 +0000"><p>If cversion counts the number of created children, we can always learn the number of deleted children by subtracting the number of current children from cversion, no? I was also wondering if there is any use case you're aware of in which it needs to have both counted. </p> <p>So far the proposal of counting only creations seems good to me.</p></comment>
<comment id="13049817" author="breed" created="Wed, 15 Jun 2011 15:36:31 +0000"><p>nice observation flavio! i haven't seen anyone using cversion outside of the sequence number on sequence znodes.</p></comment>
<comment id="13050070" author="phunt" created="Wed, 15 Jun 2011 22:04:31 +0000"><p>I strongly oppose changing the semantics of cversion. Certainly not in 3.3, as part of a minor upgrade perhaps. While we (the core code) only use it for sequence numbering, there is no telling what users are using it for, and switching it out from under them is a very bad idea IMO. It may lead to hard to track down issues for users, users who appreciate our rock steady api.</p> <p>Can we use Flavio's suggestion to:<br/> 1) do what Ben is suggesting, fix cversion in StatPersisted to only track creates<br/> 2) update the cversion in Stat as Flavio is suggesting before passing to the user</p> <p>this would maintain the semantics on the client side. Downside is that it's a bit of a hack (not sure if it would even work, given we have to translate in both directions, to/from user). How bad I don't know - thoughts?</p></comment>
<comment id="13050078" author="breed" created="Wed, 15 Jun 2011 22:21:30 +0000"><p>two clarifying points:</p> <ul> <li>this is not for 3.3. this would be a 3.4 change. we will stick with camille's fix for 3.3</li> </ul> <ul> <li>we never get the cversion from the user. you can't do conditional ops with it or pass it in any of the calls.</li> </ul> </comment>
<comment id="13050090" author="phunt" created="Wed, 15 Jun 2011 22:39:25 +0000"><p>Ok, thanks for the clarification. In that case what do you think about this for 3.4+ ? Is it going to be possible to do this right, but also w/o too much overhead? (ie simply) vs the gains of changing the API? 3.4 I'm less worried about the semantic change, but I'd still like to avoid it if reasonably possible...</p></comment>
<comment id="13050222" author="breed" created="Thu, 16 Jun 2011 05:19:06 +0000"><p>actually, flavio's suggestion can go in quite well. we track the cversion in the persistentStat and there is one function that fills in Stat and we can do the fixup there: cversion*2 - numChildren. it will work and it isn't really that messy. the only thing i don't like is that it might confuse core developers to see a different cversion on disk than they see coming back from requests.</p></comment>
<comment id="13050431" author="fournc" created="Thu, 16 Jun 2011 14:05:50 +0000"><p>I checked in the fix for the 3.3 branch<br/> svn commit: r1136440</p> </comment>
<comment id="13050558" author="phunt" created="Thu, 16 Jun 2011 16:47:04 +0000"><p>@breed yet more debt for those looking for things to complain about. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/wink.png" height="16" width="16" align="absmiddle" alt="" border="0"/> Still, I'm willing to take the heat if it's going to benefit users. My suggestion would be to document it in multiple places - in the jute definition file, and in the method you mention. Reference this JIRA in those comments.</p></comment>
<comment id="13052993" author="breed" created="Wed, 22 Jun 2011 01:57:18 +0000"><p>this patch makes the CreateTxn idempotent and uses camille's workaround with older txns.</p></comment>
<comment id="13053005" author="hadoopqa" created="Wed, 22 Jun 2011 02:26:43 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12483386/ZOOKEEPER-1046_2.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12483386/ZOOKEEPER-1046_2.patch</a><br/> against trunk revision 1138213.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 30 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/345//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/345//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/345//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/345//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/345//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/345//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13053007" author="fournc" created="Wed, 22 Jun 2011 02:37:25 +0000"><p>To be fair, I only found the bug, Vishal K wrote the fix. Will take a look at this tomorrow am.</p></comment>
<comment id="13053345" author="fournc" created="Wed, 22 Jun 2011 17:11:52 +0000"><p>Looked at the patch. Besides a couple extraneous printlns it looks ok to me. Shall I remove these myself and commit this to trunk?</p></comment>
<comment id="13053371" author="breed" created="Wed, 22 Jun 2011 18:17:18 +0000"><p>oops, i missed those. yeah if you could remove and commit that would be great. btw, does the 3.3 patch still need to go in?</p></comment>
<comment id="13053379" author="fournc" created="Wed, 22 Jun 2011 18:26:23 +0000"><p>Checked in 3.3 last thursday (1136440)</p> <p>Should we be worried about the -1 javac from jenkins? I don't know what that error means since clearly this thing can compile if it can pass tests.</p></comment>
<comment id="13053385" author="fournc" created="Wed, 22 Jun 2011 18:37:24 +0000"><p>removed printlns</p></comment>
<comment id="13053399" author="hadoopqa" created="Wed, 22 Jun 2011 19:04:15 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12483478/zookeeper-1046-3" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12483478/zookeeper-1046-3</a><br/> against trunk revision 1138213.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 30 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/347//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/347//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/347//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/347//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/347//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/347//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13053412" author="fournc" created="Wed, 22 Jun 2011 19:24:48 +0000"><p>Ah, here is the error:</p> <p>zookeeperbuildcontrib.compile:<br/> <span class="error">#91;echo#93;</span> contrib: loggraph<br/> <span class="error">#91;javac#93;</span> Compiling 34 source files to /grid/0/hudson/hudson-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/build/contrib/loggraph/classes<br/> <span class="error">#91;javac#93;</span> /grid/0/hudson/hudson-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/TxnLogSource.java:185: deserializeTxn(byte[],org.apache.zookeeper.txn.TxnHeader) in org.apache.zookeeper.server.util.SerializeUtils cannot be applied to (org.apache.jute.InputArchive,org.apache.zookeeper.txn.TxnHeader)<br/> <span class="error">#91;javac#93;</span> Record r = SerializeUtils.deserializeTxn(iab, hdr);<br/> <span class="error">#91;javac#93;</span> ^<br/> <span class="error">#91;javac#93;</span> /grid/0/hudson/hudson-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/TxnLogSource.java:333: deserializeTxn(byte[],org.apache.zookeeper.txn.TxnHeader) in org.apache.zookeeper.server.util.SerializeUtils cannot be applied to (org.apache.jute.InputArchive,org.apache.zookeeper.txn.TxnHeader)<br/> <span class="error">#91;javac#93;</span> Record r = SerializeUtils.deserializeTxn(iab, hdr);<br/> <span class="error">#91;javac#93;</span> ^<br/> <span class="error">#91;javac#93;</span> Note: Some input files use unchecked or unsafe operations.<br/> <span class="error">#91;javac#93;</span> Note: Recompile with -Xlint:unchecked for details.<br/> <span class="error">#91;javac#93;</span> 2 errors</p> </comment>
<comment id="13053425" author="hadoopqa" created="Wed, 22 Jun 2011 19:51:01 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12483488/zookeeper-1046-4.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12483488/zookeeper-1046-4.patch</a><br/> against trunk revision 1138213.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 30 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/348//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/348//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/348//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/348//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/348//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/348//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13053457" author="hadoopqa" created="Wed, 22 Jun 2011 20:34:17 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12483497/zookeeper-1046-5.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12483497/zookeeper-1046-5.patch</a><br/> against trunk revision 1138595.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 35 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/349//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/349//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/349//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/349//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/349//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/349//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13053656" author="breed" created="Thu, 23 Jun 2011 04:56:38 +0000"><p>+1 good find. sorry i missed the contrib.</p></comment>
<comment id="13053942" author="fournc" created="Thu, 23 Jun 2011 16:05:12 +0000"><p>committed to trunk: <br/> New Revision: 1138957<br/> New Revision: 1138958 (jute file)</p></comment>
<comment id="13054361" author="hudson" created="Fri, 24 Jun 2011 10:56:23 +0000"><p>Integrated in ZooKeeper-trunk #1223 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1223/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1223/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1046" title="Creating a new sequential node results in a ZNODEEXISTS error" class="issue-link" data-issue-key="ZOOKEEPER-1046"><del>ZOOKEEPER-1046</del></a>: Creating a new sequential node results in a ZNODEEXISTS error<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1046" title="Creating a new sequential node results in a ZNODEEXISTS error" class="issue-link" data-issue-key="ZOOKEEPER-1046"><del>ZOOKEEPER-1046</del></a>: Creating a new sequential node results in a ZNODEEXISTS error</p> <p>camille : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1138958" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1138958</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/src/zookeeper.jute</li> </ul> <p>camille : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1138957" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1138957</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/SerializationPerfTest.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/DeserializationPerfTest.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/DataTreeTest.java</li> <li>/zookeeper/trunk/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/TxnLogSource.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ReadOnlyModeTest.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataNode.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/LogFormatter.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Follower.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/DataTreeUnitTest.java</li> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Learner.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/upgrade/UpgradeSnapShotV1.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Observer.java</li> </ul> </comment>
<comment id="13055028" author="mahadev" created="Sun, 26 Jun 2011 06:37:15 +0000"><p>Camille/Ben, did you forget to resolve thei jira? Is this already committed to 3.4 release?</p></comment>
<comment id="13055170" author="fournc" created="Sun, 26 Jun 2011 20:42:14 +0000"><p>trunk:<br/> New Revision: 1138957<br/> New Revision: 1138958 (jute file)<br/> 3.3:<br/> svn commit: r1136440</p></comment>
<comment id="13060760" author="vishalmlst" created="Wed, 6 Jul 2011 18:53:34 +0000"><p>Hi Ben, Camille,</p> <p>Sorry for the delayed response. I don't think this patch fixes the bug entirely.</p> <blockquote> <p>#8212; src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java (revision 1138571)<br/> +++ src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java (working copy)<br/> <span class="error">#91;...#93;</span><br/> + if ((hdr.getType() == OpCode.create amp;amp;<br/> + rc.err == Code.NODEEXISTS.intValue()) amp;amp;<br/> + ((CreateTxn)txn).getParentCVersion() == -1) { </p></blockquote> <p>The if condition above is applied only when we are using older version of CreateTxn. Don't we need the part that sets the value for cversion when ((CreateTxn)txn).getParentCVersion() is gt; 0? Looks like we need an else here that sets parent cversion to the cversion in createTxn. Am I missing something?</p> <p>-Vishal</p></comment>
<comment id="13060766" author="vishalmlst" created="Wed, 6 Jul 2011 19:01:18 +0000"><p>Reopening this bug based on my previous comment. </p></comment>
<comment id="13060846" author="fournc" created="Wed, 6 Jul 2011 21:16:22 +0000"><p>I think you are right, Vishal, good catch. The perils of making changes without reproducible tests! Do you want to submit a fix for it?</p></comment>
<comment id="13061339" author="vishalmlst" created="Thu, 7 Jul 2011 14:24:44 +0000"><p>I can work on the patch. I will see if we can have a test that fails without the patch.</p></comment>
<comment id="13063593" author="vishalmlst" created="Mon, 11 Jul 2011 23:07:54 +0000"><p><br/> Attaching patch for trunk. For some reason some of the core tests are failing for me (and also on hudson). The test that is relevant to this patch is passing.</p></comment>
<comment id="13063594" author="vishalmlst" created="Mon, 11 Jul 2011 23:08:49 +0000"><p>for trunk.</p></comment>
<comment id="13063609" author="hadoopqa" created="Mon, 11 Jul 2011 23:34:43 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12486118/ZOOKEEPER-1046-6.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12486118/ZOOKEEPER-1046-6.patch</a><br/> against trunk revision 1144087.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 16 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/389//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/389//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/389//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/389//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/389//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/389//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13063952" author="fournc" created="Tue, 12 Jul 2011 15:25:38 +0000"><p>Looks great Vishal, thanks for seeing this through. Only question is whether we want to increase the log level to info from debug in the case that we see the NODEEXISTS failure in FileTxnSnapLog. I suspect we want to leave it at debug, if you agree I'll just correct that and check it in.</p></comment>
<comment id="13064002" author="vishalmlst" created="Tue, 12 Jul 2011 17:04:07 +0000"><p>Hi Camille,</p> <p>Thanks. I am ok with that change. I am hoping it won't be too much of an effort for you as last time to merge this in 3.3.</p></comment>
<comment id="13064025" author="fournc" created="Tue, 12 Jul 2011 17:32:52 +0000"><p>Nah, since it only applies to the 3.4 release (ben's change is just for 3.4), it is no effort at all. Thanks!</p></comment>
<comment id="13064555" author="fournc" created="Wed, 13 Jul 2011 13:51:17 +0000"><p>Checked in Vishal's fix: r1146025 - in /zookeeper/trunk: ./ src/java/main/org/apache/zookeeper/server/ src/java/main/org/apache/zookeeper/server/persistence/ src/java/test/org/apache/zookeeper/test/</p></comment>
<comment id="13064829" author="mahadev" created="Wed, 13 Jul 2011 20:47:37 +0000"><p>camille/vishal, <br/> Are we waiting for this to be ported to 3.3 branch before resolving this? </p></comment>
<comment id="13064839" author="fournc" created="Wed, 13 Jul 2011 21:03:41 +0000"><p>I'm waiting on the build to run successfully before I resolve it.</p></comment>
<comment id="13064844" author="mahadev" created="Wed, 13 Jul 2011 21:05:32 +0000"><p>great, thanks!</p></comment>
<comment id="13065177" author="hudson" created="Thu, 14 Jul 2011 10:56:42 +0000"><p>Integrated in ZooKeeper-trunk #1243 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1243/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1243/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1046" title="Creating a new sequential node results in a ZNODEEXISTS error" class="issue-link" data-issue-key="ZOOKEEPER-1046"><del>ZOOKEEPER-1046</del></a>: Creating a new sequential node results in a ZNODEEXISTS error</p> <p>camille : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1146025" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1146025</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java</li> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/DataTreeTest.java</li> </ul> </comment>
<comment id="13139007" author="tdunning" created="Sat, 29 Oct 2011 00:27:28 +0000"><p>Camille, </p> <p>I think you are right. The code for multi needs to handle whatever it has to in order to guarantee idempotency.</p></comment>
</comments>
<attachments>
<attachment id="12486118" name="ZOOKEEPER-1046-6.patch" size="8587" author="vishalmlst" created="Mon, 11 Jul 2011 23:07:54 +0000"/>
<attachment id="12481458" name="ZOOKEEPER-1046-for333" size="13497" author="fournc" created="Sat, 4 Jun 2011 16:58:47 +0000"/>
<attachment id="12478444" name="ZOOKEEPER-1046.patch" size="8530" author="vishalmlst" created="Fri, 6 May 2011 16:08:13 +0000"/>
<attachment id="12476501" name="ZOOKEEPER-1046.patch" size="1434" author="strib" created="Sat, 16 Apr 2011 00:19:19 +0000"/>
<attachment id="12479099" name="ZOOKEEPER-1046.patch1" size="13488" author="vishalmlst" created="Fri, 13 May 2011 13:40:27 +0000"/>
<attachment id="12476295" name="ZOOKEEPER-1046.tgz" size="4249612" author="strib" created="Thu, 14 Apr 2011 01:44:18 +0000"/>
<attachment id="12483386" name="ZOOKEEPER-1046_2.patch" size="26271" author="breed" created="Wed, 22 Jun 2011 01:57:18 +0000"/>
<attachment id="12483478" name="zookeeper-1046-3" size="25942" author="fournc" created="Wed, 22 Jun 2011 18:37:24 +0000"/>
<attachment id="12483488" name="zookeeper-1046-4.patch" size="27030" author="fournc" created="Wed, 22 Jun 2011 19:29:03 +0000"/>
<attachment id="12483497" name="zookeeper-1046-5.patch" size="28735" author="fournc" created="Wed, 22 Jun 2011 20:06:55 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47502</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05yxb:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32757</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
<customfieldname>Tags</customfieldname>
<customfieldvalues>
<customfieldvalue>sequential znodeexists</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-880] QuorumCnxManager$SendWorker grows without bounds</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-880</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>We're seeing an issue where one server in the ensemble has a steady growing number of QuorumCnxManager$SendWorker threads up to a point where the OS runs out of native threads, and at the same time we see a lot of exceptions in the logs. This is on 3.2.2 and our config looks like:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>tickTime=3000 dataDir=/somewhere_thats_not_tmp clientPort=2181 initLimit=10 syncLimit=5 server.0=sv4borg9:2888:3888 server.1=sv4borg10:2888:3888 server.2=sv4borg11:2888:3888 server.3=sv4borg12:2888:3888 server.4=sv4borg13:2888:3888 </pre> </div></div> <p>The issue is on the first server. I'm going to attach threads dumps and logs in moment.</p></description>
<environment/>
<key id="12475256">ZOOKEEPER-880</key>
<summary>QuorumCnxManager$SendWorker grows without bounds</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="vishalmlst">Vishal Kher</assignee>
<reporter username="jdcryans">Jean-Daniel Cryans</reporter>
<labels> </labels>
<created>Mon, 27 Sep 2010 23:40:46 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:01 +0000</updated>
<resolved>Wed, 16 Mar 2011 18:49:33 +0000</resolved>
<version>3.4.0</version>
<fixVersion>3.4.0</fixVersion>
<due/>
<votes>0</votes>
<watches>4</watches>
<comments>
<comment id="12915546" author="jdcryans" created="Mon, 27 Sep 2010 23:42:32 +0000"><p>Attaching the logs of the problematic server (sv4borg9) that I restarted this afternoon and the logs from one of the other servers from that point. Also attaching the jstack of first server.</p></comment>
<comment id="12915553" author="jdcryans" created="Mon, 27 Sep 2010 23:54:07 +0000"><p>Also we checked dmesg, syslog, df, ifconfig, ethtool, and ifstat for anything unusual and nothing obvious comes out.</p></comment>
<comment id="12915559" author="jdcryans" created="Mon, 27 Sep 2010 23:59:01 +0000"><p>Oh but it looks like the process on sv4borg9 is generating a lot of IO (50% on one CPU on average according to top). Seems to be mostly writes.</p></comment>
<comment id="12915625" author="fpj" created="Tue, 28 Sep 2010 05:44:09 +0000"><p>J-D, Has it happened just once or it is reproducible? Does it also happen with 3.3?</p></comment>
<comment id="12915627" author="jdcryans" created="Tue, 28 Sep 2010 05:52:07 +0000"><p>It's currently happening (currently at 344 threads and growing, was at 76 when I created this jira), it's still there when I bounce the peer, and it does happen on 3.3.1 too.</p></comment>
<comment id="12915634" author="phunt" created="Tue, 28 Sep 2010 06:14:15 +0000"><blockquote><p>one server in the ensemble has a steady growing number of QuorumCnxManager$SendWorker threads </p></blockquote> <p>to be overly clear - this is happening on just 1 server, the other servers on the cluster are not seeing this, is that right?</p> <p>any insight on GC and JVM activity. Are there significant pauses on the GC, or perhaps swapping of that jvm? How active is the JVM? How active (cpu) are the other processes on this host? You mentioned they are using 50% disk, what about cpu? </p> <p>Is there a way you could move the ZK datadir on that host to an unused spindle and see if that helps at all?</p> <p>If I understood correctly the JVM hosting the ZK server is hosting other code as well, is that right? You mentioned something about hbase managing the ZK server, could you elaborate on that as well?</p> </comment>
<comment id="12915832" author="jdcryans" created="Tue, 28 Sep 2010 16:59:32 +0000"><blockquote><p>to be overly clear - this is happening on just 1 server, the other servers on the cluster are not seeing this, is that right?</p></blockquote> <p>Yes, sv4borg9.</p> <blockquote><p>any insight on GC and JVM activity. Are there significant pauses on the GC, or perhaps swapping of that jvm? How active is the JVM? How active (cpu) are the other processes on this host? You mentioned they are using 50% disk, what about cpu?</p></blockquote> <p>No swapping, GC activity is normal as far as I can tell by the GC log, 1 active CPU for that process according to top (the rest of the cpus are idle most of the time). </p> <blockquote><p>If I understood correctly the JVM hosting the ZK server is hosting other code as well, is that right? You mentioned something about hbase managing the ZK server, could you elaborate on that as well?</p></blockquote> <p>That machine is also the Namenode, JobTracker and HBase master (all in their own JVMs). The only thing special is that the quorum peers are started by HBase.</p> <blockquote><p>Is there a way you could move the ZK datadir on that host to an unused spindle and see if that helps at all?</p></blockquote> <p>I'll look into that.</p></comment>
<comment id="12915838" author="phunt" created="Tue, 28 Sep 2010 17:18:05 +0000"><p>JD tried moving the datadirectory to another disk (new datadir), that didn't help, same problem. Also note: the snapshot file is ~2mb in size.</p></comment>
<comment id="12915848" author="jdcryans" created="Tue, 28 Sep 2010 17:36:30 +0000"><p>Here's a new run, at TRACE-level, starting from a fresh log and a cleaned up dataDir on a different disk.</p></comment>
<comment id="12915849" author="breed" created="Tue, 28 Sep 2010 17:37:27 +0000"><p>is there an easy way to reproduce this?</p></comment>
<comment id="12915850" author="jdcryans" created="Tue, 28 Sep 2010 17:40:11 +0000"><blockquote><p>is there an easy way to reproduce this?</p></blockquote> <p>Unfortunately none I can see... we have 5 clusters that use the same hardware and ZK configurations and we only find this issue on this cluster, on this specific node, although all the other nodes of that cluster have the same InterruptedExceptions (but aren't leaking SendWorkers).</p></comment>
<comment id="12916544" author="phunt" created="Thu, 30 Sep 2010 16:30:42 +0000"><p>I tried reproducing this with 5 servers on my laptop and using check_tcp that I compiled. I can't get it to happen. However I do notice a large number of connections (from nagios to election port) in the SYN_RECV state (some in close_wait as well).</p> <p>JD - can you turn off nagios, restart the effected server (clear the log4j logs as well), then look to see if the problem is still occuring? update this jira with the logs from the "bad" server and one other (at least) would be helpful. Thanks!</p></comment>
<comment id="12916546" author="phunt" created="Thu, 30 Sep 2010 16:40:43 +0000"><p>This issue sounds very similar to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-883" title="Idle cluster increasingly consumes CPU resources" class="issue-link" data-issue-key="ZOOKEEPER-883"><del>ZOOKEEPER-883</del></a> #8211; they are also using Nagios to monitor the election port in that case as well.</p></comment>
<comment id="12917685" author="vishalmlst" created="Mon, 4 Oct 2010 17:59:43 +0000"><p>While debugging for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-822" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-822</a> I found that senderWorkerMap would not have an entry for a server, but there will be a RecvWorker and SendWorker thread running for the server. In my case, this was seen when the leader died (i.e., during leader election). However, I think this can happen when a peer disconnects from another peer. The cause was incorrect handling of add/remove of entries from senderWorkerMap, which is exposed due to race conditions in QuorumCnxManager. There is a patch available for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-822" title="Leader election taking a long time to complete" class="issue-link" data-issue-key="ZOOKEEPER-822"><del>ZOOKEEPER-822</del></a>.</p> <p>I am not sure if the <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-822" title="Leader election taking a long time to complete" class="issue-link" data-issue-key="ZOOKEEPER-822"><del>ZOOKEEPER-822</del></a> is causing trouble here as well. I just wanted to point out the possibility.</p></comment>
<comment id="12931457" author="tsuna" created="Fri, 12 Nov 2010 17:38:09 +0000"><p>Bumping up the severity. This took down one of our clusters again.</p></comment>
<comment id="12931464" author="fpj" created="Fri, 12 Nov 2010 17:43:38 +0000"><p>Benoit, just to clarify, is this also due to monitoring or scanning?</p></comment>
<comment id="12933602" author="vishalmlst" created="Thu, 18 Nov 2010 23:07:03 +0000"><p>Hi Benoit,</p> <p>May I suggest to see if you can reproduce this problem with 3.3.3<br/> (with patch for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-822" title="Leader election taking a long time to complete" class="issue-link" data-issue-key="ZOOKEEPER-822"><del>ZOOKEEPER-822</del></a>)? I was going through<br/> QuorumCnxManager.java for 3.2.2. It clearly leaks a SendWorker thread<br/> for every other connection.</p> <p>After receiving a connection from a peer, it creates a new thread and<br/> inserts its reference in senderWorkerMap.</p> <p> SendWorker sw = new SendWorker(s, sid);<br/> RecvWorker rw = new RecvWorker(s, sid);<br/> sw.setRecv(rw);</p> <p> SendWorker vsw = senderWorkerMap.get(sid);<br/> senderWorkerMap.put(sid, sw);</p> <p>Then it kills the old thread for the peer (created from earlier<br/> connection)</p> <p> if(vsw != null)<br/> vsw.finish();</p> <p>However, the SendWorker.finish method removes an entry from<br/> senderWorkerMap. This results in removing a reference for<br/> recently created SendWorker thread.<br/> senderWorkerMap.remove(sid);</p> <p>Thus, it will end up removing both the entries. As a result, one thread<br/> will be leaked for every other connection.</p> <p>If you count the number of error messages in<br/> hbase-hadoop-zookeeper-sv4borg9.log, you will see that messages from<br/> RecvWorker is approximately twice of SendWorker. I think this proves<br/> the point.</p> <p>$:/tmp/hadoop # grep "RecvWorker" hbase-hadoop-zookeeper-sv4borg9.log | wc -l<br/> 60<br/> $:/tmp/hadoop # grep "SendWorker" hbase-hadoop-zookeeper-sv4borg9.log | wc -l<br/> 32</p> <p>-Vishal</p></comment>
<comment id="12933718" author="fpj" created="Fri, 19 Nov 2010 08:18:22 +0000"><p>One problem here is that we had some discussions over IRC and the information is not reflected here. </p> <p>If you have a look at the logs, you'll observe this:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> 2010-09-28 10:31:22,227 DEBUG org.apache.zookeeper.server.quorum.QuorumCnxManager: Connection request /10.10.20.5:41861 2010-09-28 10:31:22,227 DEBUG org.apache.zookeeper.server.quorum.QuorumCnxManager: Connection request: 0 2010-09-28 10:31:22,227 DEBUG org.apache.zookeeper.server.quorum.QuorumCnxManager: Address of remote peer: 0 2010-09-28 10:31:22,229 WARN org.apache.zookeeper.server.quorum.QuorumCnxManager: Connection broken: java.io.IOException: Channel eof at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:595) </pre> </div></div> <p>If I remember the discussion with J-D correctly, that node trying to connect is running Nagios. My conjecture at the time was that the IOException was killing the receiver thread, but not the sender thread (RecvWorker.finish() does not close its SendWorker counterpart).</p> <p>Your point is good, but it sounds like that the race you mention would have to be triggered continuously to cause the number of SendWorker threads to grow steadily. It sounds unlikely to me.</p></comment>
<comment id="12933829" author="vishalmlst" created="Fri, 19 Nov 2010 15:10:41 +0000"><p>Hi Flavio,</p> <p>You are right. We can see RecvWorker leaving but no messages from SendWorker.</p> <p>2010-09-27 16:02:59,111 WARN org.apache.zookeeper.server.quorum.QuorumCnxManager: Connection broken:<br/> java.io.IOException: Channel eof<br/> at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:595)<br/> 2010-09-27 16:02:59,162 WARN org.apache.zookeeper.server.quorum.QuorumCnxManager: Connection broken:<br/> java.io.IOException: Channel eof<br/> at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:595)<br/> 2010-09-27 16:03:14,269 WARN org.apache.zookeeper.server.quorum.QuorumCnxManager: Connection broken:<br/> java.io.IOException: Channel eof<br/> at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:595)</p> <p>I thought that RecvWorker in 3.3.1 called sw.finish() before exiting. Adding this call in RecvWorker should fix this problem.</p> <p>-Vishal</p></comment>
<comment id="12933842" author="vishalmlst" created="Fri, 19 Nov 2010 15:45:23 +0000"><p>Leader has the same problem as well. LearnerHandler expects a QuorumPacket to be received as the first packet after connection. However, if Nagios was monitoring server port as well, then one would expect to see a lot of such messages:<br/> LOG.error("First packet " + qp.toString()<br/> + " is not FOLLOWERINFO or OBSERVERINFO!");</p> <p>Is Nagios not monitoring the server port?</p></comment>
<comment id="12933871" author="jdcryans" created="Fri, 19 Nov 2010 17:13:48 +0000"><p>Nagios is monitoring all 5 ensemble members the exact same way (checking connectivity on all 3 ports), although only 1 machine shows the issue. We tried stopping the monitoring on the problematic machine, but still got a growing number of threads.</p></comment>
<comment id="12933891" author="phunt" created="Fri, 19 Nov 2010 18:01:23 +0000"><p>Flavio (and others) we should update the docs to include details on which ports can/should be monitored, and which ports should NOT be monitored (or if monitoring is supported any conditions).</p> <p>Can we update the docs as part of any patch/fix? Thanks.</p></comment>
<comment id="12933897" author="tsuna" created="Fri, 19 Nov 2010 18:14:33 +0000"><p>Do we agree that monitoring wasn't causing the issue? As JD said, even after we stopped it, the problem re-occurred.</p></comment>
<comment id="12933928" author="fpj" created="Fri, 19 Nov 2010 19:32:57 +0000"><p>I think we agree that monitoring alone was not causing the issue. But, your logs indicate that there were some orphan threads due to the monitoring, and we can see it from excerpts of your logs like the one I posted above. Without the monitoring, the same problem is being triggered, though, but apparently in a different way and it is not clear why. You can see it from all the "Channel eof" messages on the log. </p> <p>To solve this issue, we need to understand the following:</p> <ol> <li>What's causing those IOExceptions?</li> <li>Why are we even starting a new connection if there is no leader election going on?</li> </ol> <p>Do you folks have any idea if there is anything in your environment that could be causing those TCP connections to break? </p></comment>
<comment id="12933941" author="vishalmlst" created="Fri, 19 Nov 2010 19:59:45 +0000"> <p>The root cause of frequent disconnect needs to be resolved. In the mean time, I have fixed the problem that was causing the leak of every other thread of SendWorker.</p> <p>I tested the patch by connecting to 3888 on one of the servers using telnet.</p> <p>2010-11-19 14:51:10,081 - INFO <span class="error">#91;/10.17.119.101:3888:QuorumCnxManager$Listener@477#93;</span> - Received connection request /10.16.251.39:2074<br/> 2010-11-19 14:51:14,364 - DEBUG <span class="error">#91;/10.17.119.101:3888:QuorumCnxManager$SendWorker@553#93;</span> - Address of remote peer: 8103510703875099187<br/> 2010-11-19 14:51:19,440 - WARN <span class="error">#91;Thread-7:QuorumCnxManager$RecvWorker@726#93;</span> - Connection broken for id 8103510703875099187, my id = 1, error = <br/> java.io.IOException: Received packet with invalid packet: 218824692<br/> at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:711)<br/> 2010-11-19 14:51:19,441 - WARN <span class="error">#91;Thread-7:QuorumCnxManager$RecvWorker@730#93;</span> - Interrupting SendWorker lt;============= SendWorker is getting killed.<br/> 2010-11-19 14:51:19,442 - DEBUG <span class="error">#91;Thread-7:QuorumCnxManager$SendWorker@571#93;</span> - Calling finish for 8103510703875099187<br/> 2010-11-19 14:51:19,443 - DEBUG <span class="error">#91;Thread-7:QuorumCnxManager$SendWorker@591#93;</span> - Removing entry from senderWorkerMap sid=8103510703875099187<br/> 2010-11-19 14:51:19,443 - WARN <span class="error">#91;Thread-6:QuorumCnxManager$SendWorker@643#93;</span> - Interrupted while waiting for message on queue<br/> java.lang.InterruptedException<br/> at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:1899)<br/> at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1976)<br/> at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:342)<br/> at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:631)<br/> 2010-11-19 14:51:19,456 - DEBUG <span class="error">#91;Thread-6:QuorumCnxManager$SendWorker@571#93;</span> - Calling finish for 8103510703875099187<br/> 2010-11-19 14:51:19,457 - WARN <span class="error">#91;Thread-6:QuorumCnxManager$SendWorker@652#93;</span> - Send worker leaving thread</p> <p>Can you see if this fixes the problem?</p></comment>
<comment id="12933943" author="vishalmlst" created="Fri, 19 Nov 2010 20:01:16 +0000"><p>patch for trunk</p></comment>
<comment id="12933967" author="hadoopqa" created="Fri, 19 Nov 2010 20:32:45 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12460041/ZOOKEEPER-880.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12460041/ZOOKEEPER-880.patch</a><br/> against trunk revision 1036967.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 8 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/39//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/39//testReport/</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/39//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/39//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/39//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/39//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12934533" author="phunt" created="Mon, 22 Nov 2010 17:58:41 +0000"><p>We really should have a test for this case. Vishal can you add it? (the more the better)</p></comment>
<comment id="12934542" author="phunt" created="Mon, 22 Nov 2010 18:35:50 +0000"><p>JD said he saw this even with monitoring confirmed off. So that's the acid test. JD said he would test this patch soonest. (thanks all!) </p></comment>
<comment id="12934700" author="jdcryans" created="Tue, 23 Nov 2010 01:57:56 +0000"><p>+1 It fixes the leak. Thanks!</p></comment>
<comment id="12965344" author="vishalmlst" created="Tue, 30 Nov 2010 19:03:39 +0000"><p>Thanks for verifying the patch. Do you know why the servers kept disconnecting from each other?</p> <p>Patrick - I will attach a patch with a test shortly. How do I get around the findbugs issues. I haven't touch any of the reported code.</p></comment>
<comment id="12965347" author="jdcryans" created="Tue, 30 Nov 2010 19:06:54 +0000"><p>@Vishal We haven't figured that out yet... </p></comment>
<comment id="12965349" author="vishalmlst" created="Tue, 30 Nov 2010 19:08:43 +0000"><p>Submitting patch with a test.</p> </comment>
<comment id="12965351" author="vishalmlst" created="Tue, 30 Nov 2010 19:10:54 +0000"><p>with junit. haven't fixed eariler findbugs since they are not in the related code path.</p></comment>
<comment id="12965367" author="hadoopqa" created="Tue, 30 Nov 2010 19:33:14 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12464977/ZOOKEEPER-880.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12464977/ZOOKEEPER-880.patch</a><br/> against trunk revision 1038827.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/57//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/57//testReport/</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/57//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/57//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/57//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/57//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12965400" author="vishalmlst" created="Tue, 30 Nov 2010 20:16:32 +0000"><p>I dont think the test failure is realted to my changes.<br/> <span class="error">#91;exec#93;</span> <span class="error">#91;exec#93;</span> /grid/0/hudson/hudson-slave/workspace/PreCommit-ZOOKEEPER-Build/trunk/src/c/tests/TestClient.cc:363: Assertion: equality assertion failed <span class="error">#91;Expected: -101, Actual : -4#93;</span><br/> <span class="error">#91;exec#93;</span> <span class="error">#91;exec#93;</span> Failures !!!<br/> <span class="error">#91;exec#93;</span> <span class="error">#91;exec#93;</span> Run: 33 Failure total: 1 Failures: 1 Errors: 0</p> <p>The tests that I added seemed to pass<br/> <span class="error">#91;exec#93;</span> <span class="error">#91;junit#93;</span> 2010-11-30 19:19:52,796 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:JUnit4ZKTestRunner$LoggedInvokeMethod@56#93;</span> - FINISHED TEST METHOD testWorkerThreads<br/> <span class="error">#91;exec#93;</span> <span class="error">#91;junit#93;</span> 2010-11-30 19:19:52,796 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:ZKTestCase$1@59#93;</span> - SUCCEEDED testWorkerThreads<br/> <span class="error">#91;exec#93;</span> <span class="error">#91;junit#93;</span> 2010-11-30 19:19:52,796 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:ZKTestCase$1@54#93;</span> - FINISHED testWorkerThreads<br/> <span class="error">#91;exec#93;</span> <span class="error">#91;junit#93;</span> Tests run: 5, Failures: 0, Errors: 0, Time elapsed: 202.307 sec</p> </comment>
<comment id="12968604" author="vishalmlst" created="Tue, 7 Dec 2010 07:05:12 +0000"><p>Reattaching patch after minor changes. Can someone review it and help with findbugs issue?</p> <p>Thanks.</p></comment>
<comment id="12968613" author="hadoopqa" created="Tue, 7 Dec 2010 07:36:09 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12465666/ZOOKEEPER-880.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12465666/ZOOKEEPER-880.patch</a><br/> against trunk revision 1040752.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/62//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/62//testReport/</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/62//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/62//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/62//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/62//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12977114" author="vishalmlst" created="Tue, 4 Jan 2011 05:02:31 +0000"><p>Can someone review this patch and help with findbugs issue? Jean-Daniel has already given +1 to the patch. Thanks.</p></comment>
<comment id="12980168" author="mahadev" created="Tue, 11 Jan 2011 16:36:33 +0000"><p>+1, the patch looks good.</p></comment>
<comment id="12980169" author="mahadev" created="Tue, 11 Jan 2011 16:37:01 +0000"><p>Vishal, Ill just run ant test on 3.3.3 and will commit it today.</p></comment>
<comment id="12980224" author="mahadev" created="Tue, 11 Jan 2011 18:16:26 +0000"><p>Sorry, I just saw that flavio had already reviewed the patch. Vishal/Flavio, can you guys please comment on the jira when you add a review board request and when you review it? Its easier to track on a jira than the mailing list.</p></comment>
<comment id="12980225" author="mahadev" created="Tue, 11 Jan 2011 18:16:51 +0000"><p>also the links to it .</p></comment>
<comment id="12980288" author="mahadev" created="Tue, 11 Jan 2011 19:41:26 +0000"><p>the patch does not apply to 3.3.3 branch. Vishal can you please generate a patch against 3.3.3 as well incorporating flavios comments? This should be a blocker for 3.3.3 release.</p></comment>
<comment id="12980562" author="vishalmlst" created="Wed, 12 Jan 2011 05:09:04 +0000"><p>Mahadev, Thanks for reviewing the patch. I believe you are referring to the patch for 932 on the reviewboard.<br/> 932 includes the fix for this bug as well (it is in the same code path that I reworked and the tests are similar as well). How about we wait till 932 is approved (it is in the final review stages)?</p></comment>
<comment id="12986863" author="vishalmlst" created="Wed, 26 Jan 2011 06:42:57 +0000"><p>Mahadev,</p> <p>I am not sure which review comments you are referring to. Flavio is yet to review this particular patch. Considering that we are looking to get 3.3.3 out, do you want me to port this patch to 3.3.3 or do you want to wait till Flavio reviews 932. Both (932 and this patch) touch the same code. 932 also includes a fix for this bug. Ideally, I prefer 932 to be reviewed so that we will get both the bugs fixed in 3.3.3.</p></comment>
<comment id="12988687" author="vishalmlst" created="Mon, 31 Jan 2011 08:36:44 +0000"><p>Mahadev,</p> <p>How do I generate a patch for "branch 3.3.3"? Do you mean 3.3 (<a href="http://svn.apache.org/repos/asf/zookeeper/branches/branch-3.3/)?" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/repos/asf/zookeeper/branches/branch-3.3/)?</a></p></comment>
<comment id="12988830" author="mahadev" created="Mon, 31 Jan 2011 18:23:53 +0000"><p>vishal,<br/> Sorry i meant, 3.3 branch.</p></comment>
<comment id="12989047" author="vishalmlst" created="Tue, 1 Feb 2011 05:22:39 +0000"><p>Patch for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-900" title="FLE implementation should be improved to use non-blocking sockets" class="issue-link" data-issue-key="ZOOKEEPER-900">ZOOKEEPER-900</a> is not applied to 3.3. Without this patch QuorumCnxManager can block indefinitely in SocketChannel.read() (see <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-900" title="FLE implementation should be improved to use non-blocking sockets" class="issue-link" data-issue-key="ZOOKEEPER-900">ZOOKEEPER-900</a> for more details). I would suggest to include this patch in 3.3.3 as well. If you agree, I will integrate patches for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-900" title="FLE implementation should be improved to use non-blocking sockets" class="issue-link" data-issue-key="ZOOKEEPER-900">ZOOKEEPER-900</a> and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-880" title="QuorumCnxManager$SendWorker grows without bounds" class="issue-link" data-issue-key="ZOOKEEPER-880"><del>ZOOKEEPER-880</del></a> and submit for review. Let me know.</p></comment>
<comment id="12990957" author="fpj" created="Sat, 5 Feb 2011 11:32:34 +0000"><p>Hi Vishal, Let me see I'm getting the flow of patches right. <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-880" title="QuorumCnxManager$SendWorker grows without bounds" class="issue-link" data-issue-key="ZOOKEEPER-880"><del>ZOOKEEPER-880</del></a> will probably conflict with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-932" title="Move blocking read/write calls to SendWorker and RecvWorker Threads" class="issue-link" data-issue-key="ZOOKEEPER-932">ZOOKEEPER-932</a>, right? You're suggesting then that we have <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-880" title="QuorumCnxManager$SendWorker grows without bounds" class="issue-link" data-issue-key="ZOOKEEPER-880"><del>ZOOKEEPER-880</del></a> in 3.3.3, and that you regenerate <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-932" title="Move blocking read/write calls to SendWorker and RecvWorker Threads" class="issue-link" data-issue-key="ZOOKEEPER-932">ZOOKEEPER-932</a> for trunk? In this case, we have that:</p> <ol> <li>We need two patches for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-880" title="QuorumCnxManager$SendWorker grows without bounds" class="issue-link" data-issue-key="ZOOKEEPER-880"><del>ZOOKEEPER-880</del></a>, one for 3.3.3 and one for 3.4.0;</li> <li>We need one patch for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-932" title="Move blocking read/write calls to SendWorker and RecvWorker Threads" class="issue-link" data-issue-key="ZOOKEEPER-932">ZOOKEEPER-932</a> for 3.4.0;</li> <li>The 3.4.0 patch for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-932" title="Move blocking read/write calls to SendWorker and RecvWorker Threads" class="issue-link" data-issue-key="ZOOKEEPER-932">ZOOKEEPER-932</a> depends on the patch for 3.4.0 for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-880" title="QuorumCnxManager$SendWorker grows without bounds" class="issue-link" data-issue-key="ZOOKEEPER-880"><del>ZOOKEEPER-880</del></a>.</li> </ol> <p>I'm just trying to understand what we have to commit for which release and the order. If what I describe matches your proposal, then it is is good for me. </p></comment>
<comment id="12991286" author="vishalmlst" created="Mon, 7 Feb 2011 07:02:56 +0000"><p>Hi flavio,</p> <p>Ideally, I would like to have 932 part of 3.3.3 as well. But since 932 is not a blocker (and not approved yet), I understand if it doesn't get in 3.3.3.</p> <p>The order/dependency of patches that you have described is correct. Patch for 932 in a way depends on 880, but it will override 880 since it includes a fix for 880 as well. So we won't have to do any additional "merge" of 880 with 932. We will first commit 880 and then 932 to trunk.</p> <p>Also, I think patch for 900 needs to go in 3.3.3.</p></comment>
<comment id="12997947" author="mahadev" created="Tue, 22 Feb 2011 18:27:32 +0000"><p>vishal, <br/> for 3.3 is it possible to have a patch for this issue? (Just 880)? I think we can move <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-932" title="Move blocking read/write calls to SendWorker and RecvWorker Threads" class="issue-link" data-issue-key="ZOOKEEPER-932">ZOOKEEPER-932</a>, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-900" title="FLE implementation should be improved to use non-blocking sockets" class="issue-link" data-issue-key="ZOOKEEPER-900">ZOOKEEPER-900</a> to trunk. </p></comment>
<comment id="12998068" author="vishalmlst" created="Tue, 22 Feb 2011 22:35:51 +0000"><p>Hi Mahadev,</p> <p>Sure. I will send out the patch for 3.3. asap.</p></comment>
<comment id="12998070" author="mahadev" created="Tue, 22 Feb 2011 22:38:39 +0000"><p>thanks vishal.</p></comment>
<comment id="12998489" author="vishalmlst" created="Wed, 23 Feb 2011 18:27:57 +0000"><p>Submitting patch for 3.3 branch.<br/> Testing done:</p> <ul class="alternate" type="square"> <li>ant test-core-java</li> <li>Ran CnxManagerTest 15 times</li> <li>Created 3 node cluster. Rebooted leader several times. Verified thread count.</li> <li>systest</li> </ul> </comment>
<comment id="12998492" author="mahadev" created="Wed, 23 Feb 2011 18:31:13 +0000"><p>thanks Vishal!</p></comment>
<comment id="12998493" author="vishalmlst" created="Wed, 23 Feb 2011 18:31:29 +0000"><p>submitting patch</p></comment>
<comment id="12998495" author="mahadev" created="Wed, 23 Feb 2011 18:33:55 +0000"><p>+1 the patch looks good to me. Ill leave the committing to ben!</p></comment>
<comment id="12998497" author="hadoopqa" created="Wed, 23 Feb 2011 18:42:02 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12471761/ZOOKEEPER-880-3.3.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12471761/ZOOKEEPER-880-3.3.patch</a><br/> against trunk revision 1072085.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/156//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/156//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12998555" author="breed" created="Wed, 23 Feb 2011 21:28:58 +0000"><p>thanx for backporting vishal!</p></comment>
<comment id="12998602" author="breed" created="Wed, 23 Feb 2011 23:19:14 +0000"><p>Committed revision 1073983.</p></comment>
<comment id="13004187" author="vishalmlst" created="Tue, 8 Mar 2011 20:28:53 +0000"><p>For some reason the patch didn't get committed to trunk. Reopening to submit patch to trunk.</p></comment>
<comment id="13004189" author="vishalmlst" created="Tue, 8 Mar 2011 20:29:44 +0000"><p>Changing version tags.</p></comment>
<comment id="13004244" author="vishalmlst" created="Tue, 8 Mar 2011 21:54:02 +0000"><p>Submitting patch for trunk.</p></comment>
<comment id="13006577" author="hadoopqa" created="Mon, 14 Mar 2011 19:04:02 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12473063/ZOOKEEPER-trunk-880" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12473063/ZOOKEEPER-trunk-880</a><br/> against trunk revision 1074995.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/187//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/187//testReport/</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/187//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/187//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/187//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/187//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13007568" author="breed" created="Wed, 16 Mar 2011 17:08:50 +0000"><p>+1 looks good vishal. does this patch fix other issues as well? (like <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-939" title="the threads number of a zookeeper is increased all the time" class="issue-link" data-issue-key="ZOOKEEPER-939"><del>ZOOKEEPER-939</del></a>?)</p></comment>
<comment id="13007622" author="breed" created="Wed, 16 Mar 2011 18:49:33 +0000"><p>Committed revision 1082260.</p></comment>
<comment id="13007887" author="hudson" created="Thu, 17 Mar 2011 10:54:30 +0000"><p>Integrated in ZooKeeper-trunk #1124 (See <a href="https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1124/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1124/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-880" title="QuorumCnxManager$SendWorker grows without bounds" class="issue-link" data-issue-key="ZOOKEEPER-880"><del>ZOOKEEPER-880</del></a>. QuorumCnxManager$SendWorker grows without bounds</p></comment>
<comment id="13008608" author="vishalmlst" created="Fri, 18 Mar 2011 20:08:19 +0000"><p>Hi Ben,</p> <p>The patch might fix <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-939" title="the threads number of a zookeeper is increased all the time" class="issue-link" data-issue-key="ZOOKEEPER-939"><del>ZOOKEEPER-939</del></a>. However, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-939" title="the threads number of a zookeeper is increased all the time" class="issue-link" data-issue-key="ZOOKEEPER-939"><del>ZOOKEEPER-939</del></a> does not describe how they ran into this situation (and has not attached logs). <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-939" title="the threads number of a zookeeper is increased all the time" class="issue-link" data-issue-key="ZOOKEEPER-939"><del>ZOOKEEPER-939</del></a> can be closed if the problem is not seen after this patch.</p> <p>-Vishal</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12480225">ZOOKEEPER-934</issuekey>
</issuelink>
<issuelink>
<issuekey id="12480773">ZOOKEEPER-939</issuekey>
</issuelink>
</outwardlinks>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12475489">ZOOKEEPER-883</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12455853" name="TRACE-hbase-hadoop-zookeeper-sv4borg9.log.gz" size="575370" author="jdcryans" created="Tue, 28 Sep 2010 17:36:29 +0000"/>
<attachment id="12471761" name="ZOOKEEPER-880-3.3.patch" size="8643" author="vishalmlst" created="Wed, 23 Feb 2011 18:27:57 +0000"/>
<attachment id="12465666" name="ZOOKEEPER-880.patch" size="8635" author="vishalmlst" created="Tue, 7 Dec 2010 07:05:12 +0000"/>
<attachment id="12464977" name="ZOOKEEPER-880.patch" size="8691" author="vishalmlst" created="Tue, 30 Nov 2010 19:08:43 +0000"/>
<attachment id="12460041" name="ZOOKEEPER-880.patch" size="2073" author="vishalmlst" created="Fri, 19 Nov 2010 19:59:45 +0000"/>
<attachment id="12473063" name="ZOOKEEPER-trunk-880" size="14118" author="vishalmlst" created="Tue, 8 Mar 2011 21:54:02 +0000"/>
<attachment id="12455777" name="hbase-hadoop-zookeeper-sv4borg12.log.gz" size="3002" author="jdcryans" created="Mon, 27 Sep 2010 23:42:32 +0000"/>
<attachment id="12455778" name="hbase-hadoop-zookeeper-sv4borg9.log.gz" size="4392" author="jdcryans" created="Mon, 27 Sep 2010 23:42:32 +0000"/>
<attachment id="12455779" name="jstack" size="36411" author="jdcryans" created="Mon, 27 Sep 2010 23:42:32 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47567</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05zef:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32834</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-531] Hudson trunk failure in heirarchical quorum test (interrupt problem)</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-531</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Flavio, can you take a look, this is very unusual. This test seems to be failing due to interrupt being received and not handled properly:</p> <p><a href="http://hudson.zones.apache.org/hudson/view/ZooKeeper/job/ZooKeeper-trunk/470/testReport/org.apache.zookeeper.test/HierarchicalQuorumTest/testHierarchicalQuorum/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/view/ZooKeeper/job/ZooKeeper-trunk/470/testReport/org.apache.zookeeper.test/HierarchicalQuorumTest/testHierarchicalQuorum/</a></p> <p>I don't know why the interrupt would be received though...</p> <p>here's an example:<br/> 2009-09-21 10:46:47,681 - WARN <span class="error">#91;Thread-8:QuorumCnxManager$SendWorker@539#93;</span> - Interrupted while waiting for message on queue<br/> java.lang.InterruptedException<br/> at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:1899)<br/> at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1934)<br/> at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)<br/> at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:533)</p></description>
<environment/>
<key id="12436219">ZOOKEEPER-531</key>
<summary>Hudson trunk failure in heirarchical quorum test (interrupt problem)</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="5">Cannot Reproduce</resolution>
<assignee username="fpj">Flavio Paiva Junqueira</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Mon, 21 Sep 2009 17:09:13 +0000</created>
<updated>Fri, 26 Mar 2010 17:25:00 +0000</updated>
<resolved>Tue, 12 Jan 2010 20:12:06 +0000</resolved>
<fixVersion>3.3.0</fixVersion>
<component>quorum</component>
<component>server</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<attachments> </attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>214128</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i060jb:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33018</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-2251] Add Client side packet response timeout to avoid infinite wait.</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-2251</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>I came across one issue related to Client side packet response timeout In my cluster many packet drops happened for some time.</p> <p>One observation is the zookeeper client got hanged. As per the thread dump it is waiting for the response/ACK for the operation performed (synchronous API used here).<br/> I am using zookeeper.serverCnxnFactory=org.apache.zookeeper.server.NIOServerCnxnFactory</p> <p>Since only few packets missed there is no DISCONNECTED event occurred.</p> <p>Need add a "response time out" for the operations or packets.</p> <p><b>Comments from <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a></b><br/> My observation about the problem:-</p> <ul> <li>Can use tools like 'Wireshark' to simulate the artificial packet loss.</li> <li>Assume there is only one packet in the 'outgoingQueue' and unfortunately the server response packet lost. Now, client will enter into infinite waiting. <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/ClientCnxn.java#L1515" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/ClientCnxn.java#L1515</a></li> <li>Probably we can discuss more about this problem and possible solutions(add packet ACK timeout or another better approach) in the jira.</li> </ul> </description>
<environment/>
<key id="12857097">ZOOKEEPER-2251</key>
<summary>Add Client side packet response timeout to avoid infinite wait.</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="arshad.mohammad">Mohammad Arshad</assignee>
<reporter username="nijel">nijel</reporter>
<labels>
<label>fault</label>
<label>pull-request-available</label>
</labels>
<created>Wed, 19 Aug 2015 02:47:03 +0000</created>
<updated>Mon, 20 May 2019 17:50:59 +0000</updated>
<resolved>Fri, 27 Jul 2018 03:16:40 +0000</resolved>
<version>3.4.9</version>
<version>3.5.2</version>
<version>3.4.11</version>
<fixVersion>3.6.0</fixVersion>
<fixVersion>3.5.5</fixVersion>
<component>java client</component>
<due/>
<votes>4</votes>
<watches>17</watches>
<timeestimate seconds="0">0h</timeestimate>
<timespent seconds="12600">3.5h</timespent>
<comments>
<comment id="14706468" author="suda" created="Fri, 21 Aug 2015 09:38:23 +0000"><p>Hello, I'm trying to reproduce this bug.</p> <p>However I'm not sure about the meaning of "only few packets missed".<br/> If some IP packets were lost, TCP layer (in the OS kernel) should be able to detect and retransmit lost packets.<br/> So I guess the lost packets are eventually delivered to the client OS, but ZK client get hangs due to unexpected delay of the delivered packets.</p> <p>Could you please share your client workload and its thread dump?</p> <p>BTW, for partial packet loss simulation, <a href="http://www.linuxfoundation.org/collaborate/workgroups/networking/netem#Packet_loss" class="external-link" target="_blank" rel="nofollow noopener">Linux netem</a> or my <a href="http://osrg.github.io/earthquake/post/zookeeper-2212/" class="external-link" target="_blank" rel="nofollow noopener">Earthquake tool</a>(found <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2212" title="distributed race condition related to QV version" class="issue-link" data-issue-key="ZOOKEEPER-2212"><del>ZOOKEEPER-2212</del></a>, and perhaps also reproduced <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2080" title="Fix deadlock in dynamic reconfiguration" class="issue-link" data-issue-key="ZOOKEEPER-2080"><del>ZOOKEEPER-2080</del></a>) might be useful. <br/> (Wireshark is a packet analyzer, and doesn't provide any network simulation feature.)</p></comment>
<comment id="14728996" author="nijel" created="Thu, 3 Sep 2015 13:00:20 +0000"><p>hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=suda" class="user-hover" rel="suda">Akihiro Suda</a><br/> i got this issue from one of our site. The issue is from ResourceManager.<br/> I could get very few info. The thread which got blocked is as follows</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">StandByTransitionThread Handler" daemon prio=10 tid=0x000000000119a800 nid=0x641e3 in <span class="code-object">Object</span>.wait() [0x00007ff3f67ab000] 1836 java.lang.<span class="code-object">Thread</span>.State: WAITING (on object monitor) 1837 at java.lang.<span class="code-object">Object</span>.wait(Native Method) 1838 - waiting on lt;0x00000007855f2010gt; (a org.apache.zookeeper.ClientCnxn$Packet) 1839 at java.lang.<span class="code-object">Object</span>.wait(<span class="code-object">Object</span>.java:503) 1840 at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1414) 1841 - locked lt;0x00000007855f2010gt; (a org.apache.zookeeper.ClientCnxn$Packet) 1842 at org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1386) 1843 at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:677) 1844 - locked lt;0x000000078660daf0gt; (a org.apache.zookeeper.ZooKeeper) 1845 at org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore.closeZkClients(ZKRMStateStore.java:360) 1846 - locked lt;0x0000000781087940gt; (a org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore) 1847 at org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore.closeInternal(ZKRMStateStore.java:382) 1848 - locked lt;0x0000000781087940gt; (a org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore) 1849 at org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore.serviceStop(RMStateStore.java:486) 1850 at org.apache.hadoop.service.AbstractService.stop(AbstractService.java:221) 1851 - locked lt;0x00000007823b2a80gt; (a java.lang.<span class="code-object">Object</span>) 1852 at org.apache.hadoop.service.AbstractService.close(AbstractService.java:250) 1853 at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$RMActiveServices.serviceStop(ResourceManager.java:549) 1854 at org.apache.hadoop.service.AbstractService.stop(AbstractService.java:221) 1855 - locked lt;0x00000007823d0610gt; (a java.lang.<span class="code-object">Object</span>) 1856 at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.stopActiveServices(ResourceManager.java:958) 1857 at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.transitionToStandby(ResourceManager.java:1018) 1858 - locked lt;0x0000000780059c60gt; (a org.apache.hadoop.yarn.server.resourcemanager.ResourceManager) 1859 at org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.handleTransitionToStandBy(ResourceManager.java:703) 1860 at org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$StandByTransitionThread.run(RMStateStore.java:884) </pre> </div></div> <p>My analysis is that it is waiting for the packet response<br/> Hope this helps</p></comment>
<comment id="14730278" author="suda" created="Fri, 4 Sep 2015 03:54:03 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nijel" class="user-hover" rel="nijel">nijel</a>, thank you for the information.</p> <p>The <a href="https://github.com/apache/zookeeper/blob/7f10f9c53a48b296dd27c7a104b303b10b045a89/src/java/main/org/apache/zookeeper/ClientCnxn.java#L1515" class="external-link" target="_blank" rel="nofollow noopener"><tt>wait()</tt></a> might be waiting for this <a href="https://github.com/apache/zookeeper/blob/7f10f9c53a48b296dd27c7a104b303b10b045a89/src/java/main/org/apache/zookeeper/ClientCnxn.java#L736" class="external-link" target="_blank" rel="nofollow noopener"><tt>notifyAll()</tt></a>.</p> <p>A typical call stack for the notifyAll() is as follows:</p> <ul class="alternate" type="square"> <li><tt>Object.notifyAll()</tt></li> <li><a href="https://github.com/apache/zookeeper/blob/7f10f9c53a48b296dd27c7a104b303b10b045a89/src/java/main/org/apache/zookeeper/ClientCnxn.java#L736" class="external-link" target="_blank" rel="nofollow noopener"><tt>ClientCnxn.finishPacket()</tt></a></li> <li><a href="https://github.com/apache/zookeeper/blob/7f10f9c53a48b296dd27c7a104b303b10b045a89/src/java/main/org/apache/zookeeper/ClientCnxn.java#L948" class="external-link" target="_blank" rel="nofollow noopener"><tt>ClientCnxn$SendThread.readResponse()</tt></a></li> <li><a href="https://github.com/apache/zookeeper/blob/7f10f9c53a48b296dd27c7a104b303b10b045a89/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java#L99" class="external-link" target="_blank" rel="nofollow noopener"><tt>ClientCnxnSocketNIO.doIO()</tt></a></li> <li><a href="https://github.com/apache/zookeeper/blob/7f10f9c53a48b296dd27c7a104b303b10b045a89/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java#L361" class="external-link" target="_blank" rel="nofollow noopener"><tt>ClientCnxnSocketNIO.doTransport()</tt></a></li> <li><a href="https://github.com/apache/zookeeper/blob/7f10f9c53a48b296dd27c7a104b303b10b045a89/src/java/main/org/apache/zookeeper/ClientCnxn.java#L1236" class="external-link" target="_blank" rel="nofollow noopener"><tt>ClientCnxn$SendThread.run()</tt></a></li> </ul> <p>If you can still reproduce the bug, could you please add some logs for the above methods and share the result (plus ZooKeeper version and YARN version)?</p> <p>Thanks</p></comment>
<comment id="14946850" author="arshad.mohammad" created="Wed, 7 Oct 2015 13:32:44 +0000"><p>How to reproduce the:<br/> From the logs it is very clear that Client is waiting in <tt>org.apache.zookeeper.ClientCnxn.submitRequest()</tt> on Packet object.</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">synchronized</span> (packet) { <span class="code-keyword">while</span> (!packet.finished) { packet.wait(); } } </pre> </div></div> <p>Above wait ends when packet.notifyAll() is called from <tt>org.apache.zookeeper.ClientCnxn.finishPacket(Packet)</tt><br/> To reproduce client hang scenario through test we can override the <tt>org.apache.zookeeper.ClientCnxn.finishPacket(Packet)</tt> method, so that it does not call packet.notifyAll(). </p></comment>
<comment id="14946857" author="arshad.mohammad" created="Wed, 7 Oct 2015 13:38:59 +0000"><p>Submitting a patch to fix this issue.<br/> Implementation summary:</p> <ol> <li>time out handling is done for sync API</li> <li>added zookeeper.request.timeout property, default value is 120000 milliseconds(2 minute)</li> <li>added new error code TIMEOUT (-122);</li> <li>added new exception TimeoutException</li> <li>added test case</li> </ol> </comment>
<comment id="14946889" author="hadoopqa" created="Wed, 7 Oct 2015 14:02:44 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12765389/ZOOKEEPER-2251-01.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12765389/ZOOKEEPER-2251-01.patch</a><br/> against trunk revision 1706631.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2905//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2905//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2905//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2905//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2905//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2905//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14948067" author="arshad.mohammad" created="Thu, 8 Oct 2015 04:42:44 +0000"><p>In previous patch, I had missed the test cases. Submitting <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2251" title="Add Client side packet response timeout to avoid infinite wait." class="issue-link" data-issue-key="ZOOKEEPER-2251"><del>ZOOKEEPER-2251</del></a>-02.patch with test case included</p></comment>
<comment id="14948082" author="hadoopqa" created="Thu, 8 Oct 2015 05:07:52 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12765520/ZOOKEEPER-2251-02.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12765520/ZOOKEEPER-2251-02.patch</a><br/> against trunk revision 1706631.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2906//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2906//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2906//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2906//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2906//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2906//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14948352" author="nijel" created="Thu, 8 Oct 2015 09:19:35 +0000"><p>thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad" class="user-hover" rel="arshad.mohammad">Mohammad Arshad</a> for the patch<br/> overall looks good</p> <p>few comments<br/> 1. The log message </p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">LOG.info(<span class="code-quote">"{} configured value is {}."</span>, ZOOKEEPER_REQUEST_TIMEOUT, 148 requestTimeoutProp); </pre> </div></div> <p>can be written after the value is read. Or in invalid case duplicate logs will come</p> <p>2. Change test class and test method name to reflect timeout feature</p> <p>3. Number format exception logs looks like not a complete sentence.</p> </comment>
<comment id="14948362" author="nijel" created="Thu, 8 Oct 2015 09:26:34 +0000"><p>One more comment<br/> can you add this config in document as well ?</p></comment>
<comment id="14948758" author="eribeiro" created="Thu, 8 Oct 2015 14:36:19 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad" class="user-hover" rel="arshad.mohammad">Mohammad Arshad</a>, the patch looks good, congrats. One question: why <tt>ZKClientHangTest</tt> creates 3 servers if the core of the test needs just one (<tt>clientPorts<span class="error">#91;0#93;</span></tt>) that the client connects to? More servers are more time to wait for the unit test to run, slowing things down.</p></comment>
<comment id="14950237" author="arshad.mohammad" created="Fri, 9 Oct 2015 11:23:44 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eribeiro" class="user-hover" rel="eribeiro">Edward Ribeiro</a>for looking into the patch. Quorum servers are required because this patch also hits the logic of reconnect.<br/> now connecting to all the servers.</p></comment>
<comment id="14950508" author="arshad.mohammad" created="Fri, 9 Oct 2015 14:50:17 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nijel" class="user-hover" rel="nijel">nijel</a> for your review comments. Submitting new patch <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2251" title="Add Client side packet response timeout to avoid infinite wait." class="issue-link" data-issue-key="ZOOKEEPER-2251"><del>ZOOKEEPER-2251</del></a>-03.patch which handles all the above comments. </p></comment>
<comment id="14950697" author="hadoopqa" created="Fri, 9 Oct 2015 16:57:05 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12765803/ZOOKEEPER-2251-03.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12765803/ZOOKEEPER-2251-03.patch</a><br/> against trunk revision 1706631.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2908//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2908//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14951011" author="eribeiro" created="Fri, 9 Oct 2015 18:59:53 +0000"><p>Oh, I see now. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> Just a small review comment: give preference to use StringBuilder instead of StringBuffer, specially if the use is as a method variable, because StringBuffer methods are synchronized while StringBuilder methods are not.</p></comment>
<comment id="15054528" author="suda" created="Sat, 12 Dec 2015 18:39:41 +0000"><p>I recently experienced this bug in my cluster.<br/> Any update?</p></comment>
<comment id="15055549" author="arshad.mohammad" created="Mon, 14 Dec 2015 07:07:50 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=suda" class="user-hover" rel="suda">Akihiro Suda</a> for sharing that you experienced this problem. <br/> Regarding the status, implementation was done long back, review and commit is pending. Meanwhile many changes have happened so the current patch need to be rebased. I will soon rebase and submit new patch</p></comment>
<comment id="15055604" author="suda" created="Mon, 14 Dec 2015 08:10:44 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad" class="user-hover" rel="arshad.mohammad">Mohammad Arshad</a>, thank you for the response.</p> <p>The attached patch assumes that a response packet can be "lost".<br/> But I'm still not sure what "lost" means.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2251?focusedCommentId=14706468amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14706468" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-2251?focusedCommentId=14706468amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14706468</a></p> <p>If TCP packets are actually lost, Linux kernel (on the server) should retransmit packets.<br/> If even retransmitted packets are lost, client kernel should raise <tt>ETIMEDOUT</tt> after 924.6 seconds by default. (It depends on the value of <tt>/proc/sys/net/ipv4/tcp_retries2</tt>.)</p> <p>So I think infinite wait should not happen even if packets are lost.</p> <p>I can come up with following possibilities:</p> <p>1. Client kernel raised <tt>ETIMEDOUT</tt>, and JVM raised a corresponding <tt>java.lang.IOException</tt>. But client ZK did not catch the <tt>IOException</tt> correctly. It's a bug of client.</p> <p>2. Server sent a TCP FIN packet. Client received the TCP FIN packet and raised <tt>IOException</tt>, but client ZK did not catch the <tt>IOException</tt> correctly. It's a bug of client.</p> <p>3. No TCP FIN packet were sent. It's a bug of server.</p> <p>4. Bug of kernel or JVM.</p> <p>I think we should dig out what really happens when we hit the bug, before merging the patch and closing the JIRA.</p> <p>(No matter what is the real cause of the bug, the patch is useful! Because non-privileged users cannot modify <tt>/proc/sys/net/ipv4/*</tt>.)</p> <p>I would like to hear your comments.</p> <p>I'm also trying to reproduce the bug again, and digging out what are really happening.</p> <p>Thanks!</p></comment>
<comment id="15056085" author="arshad.mohammad" created="Mon, 14 Dec 2015 15:14:45 +0000"><p>I think irrespective of the reason, why packet(server response) not received, there should be some time-out. Can not keep waiting infinitely</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">synchronized</span> (packet) { <span class="code-keyword">while</span> (!packet.finished) { packet.wait(); } } </pre> </div></div> <p>Seems you have good system understanding. please share if you find the reason.</p></comment>
<comment id="15063503" author="nijel" created="Fri, 18 Dec 2015 05:36:23 +0000"><p>hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=marshad" class="user-hover" rel="marshad">Mohammad Arshad</a> and <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=suda" class="user-hover" rel="suda">Akihiro Suda</a></p> <p>I observed this when i am doing reliability test for a banking customer<br/> Here we test for any network abnormality and packet drop.</p> <p>Here in the scenario packet is sent and wait for ever. Even if the server is not responding due to any reason, this issue can happen</p> <p>so my opinion is to have this time out since many services' high availability solution depends on zookeeper.</p> </comment>
<comment id="15063517" author="hadoopqa" created="Fri, 18 Dec 2015 05:41:43 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12765803/ZOOKEEPER-2251-03.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12765803/ZOOKEEPER-2251-03.patch</a><br/> against trunk revision 1720227.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2999//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2999//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15063565" author="suda" created="Fri, 18 Dec 2015 06:21:06 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad" class="user-hover" rel="arshad.mohammad">Mohammad Arshad</a> and <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nijel" class="user-hover" rel="nijel">nijel</a>,<br/> Thank you for comments,<br/> and sorry for that I'm still not able to identify the root cause of the bug.</p> <p>I'm ok for having this timeout.<br/> I would like to respect committers' decision.</p> <p>Cc: <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> (zktraffic author), could you please look on this?</p></comment>
<comment id="15182726" author="arshad.mohammad" created="Mon, 7 Mar 2016 08:05:33 +0000"><p>Submitting new patch as previous patch had a deadlock scenario</p></comment>
<comment id="15182742" author="hadoopqa" created="Mon, 7 Mar 2016 08:26:48 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch</a><br/> against trunk revision 1733679.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3091//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3091//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3091//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3091//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3091//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3091//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15495374" author="adamwhitney" created="Fri, 16 Sep 2016 04:52:07 +0000"><p>I think I'm seeing this problem using activemq with replicated leveldb ... every once in a while our network loses some packets when zookeeper server is acking back to the zookeeper client in activemq, and intermittently it seems to lead to a hang on the activemq side. Unfortunately, I don't have the ability yet to get a thread dump, so I can't tell for sure, but the cause and symptoms of my issue match very well with this bug. It looks like this bug has passed all the reviews ... is there any reason why it is not yet merged?</p></comment>
<comment id="15495560" author="hadoopqa" created="Fri, 16 Sep 2016 06:46:04 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch</a><br/> against trunk revision b2a484cfe743116d2531fe5d1e1d78b3960c511e.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3434//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3434//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15702561" author="m.martinez" created="Mon, 28 Nov 2016 17:25:16 +0000"><p>Hi. We are definitely running into what looks to be this problem and I was wondering if there was any movement towards incorporating the fix into a release version?</p> <p>I've worked around the issue in one part of our code by wrapping my own timeout around the call that is vulnerable to the deadlock.</p> <p>However, this isn't possible in some cases where 3rd party code (in our case, Accumulo client amp; Thrift libraries) call down into the ZooKeeper client code and hit this.</p> <p>This has become a pretty critical issue for us. </p></comment>
<comment id="15702576" author="hadoopqa" created="Mon, 28 Nov 2016 17:29:46 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch</a><br/> against trunk revision d72f27279a13986ee0c011e1e5b34edf3a310da9.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3534//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3534//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15702711" author="m.martinez" created="Mon, 28 Nov 2016 18:24:30 +0000"><p>Is the problem simply that the patch needs to be updated to match the latest code?</p></comment>
<comment id="15713491" author="hanm" created="Fri, 2 Dec 2016 00:09:49 +0000"><blockquote><p>Is the problem simply that the patch needs to be updated to match the latest code?</p></blockquote> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=m.martinez" class="user-hover" rel="m.martinez">Mel Martinez</a> Thanks for bumping this up. Community has been working on a couple of high priority issues to prepare incoming 3.4.10 and 3.5.3 releases. This issue was not labelled with version info so it does not get much visibility in the queue. Just updated the JIRA and reviewing the patch.</p> <blockquote><p>We are definitely running into what looks to be this problem</p></blockquote> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=m.martinez" class="user-hover" rel="m.martinez">Mel Martinez</a> Which version of ZooKeeper you are running?</p> <p>On a side note, the patch does look outdated (i.e. the doc changes refer to 3.5.2 which is released already) and needs to be rebased. <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad" class="user-hover" rel="arshad.mohammad">Mohammad Arshad</a> Do you mind update the patch and send a pull request on git? We can start iterating from there.</p></comment>
<comment id="15713743" author="m.martinez" created="Fri, 2 Dec 2016 02:00:29 +0000"><p>Michael Han - we are using version 3.4.5. </p> <p>We would almost certainly upgrade to a newer version if we knew this problem would be addressed. </p> </comment>
<comment id="15723037" author="githubbot" created="Mon, 5 Dec 2016 18:58:42 +0000"><p>GitHub user arshadmohammad opened a pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/119" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/119</a></p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2251" title="Add Client side packet response timeout to avoid infinite wait." class="issue-link" data-issue-key="ZOOKEEPER-2251"><del>ZOOKEEPER-2251</del></a>:Add Client side packet response timeout to avoid infinite wait.</p> <p> Add Client side packet response timeout to avoid infinite wait.</p> <p>You can merge this pull request into a Git repository by running:</p> <p> $ git pull <a href="https://github.com/arshadmohammad/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/arshadmohammad/zookeeper</a> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2251" title="Add Client side packet response timeout to avoid infinite wait." class="issue-link" data-issue-key="ZOOKEEPER-2251"><del>ZOOKEEPER-2251</del></a></p> <p>Alternatively you can review and apply these changes as the patch at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/119.patch" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/119.patch</a></p> <p>To close this pull request, make a commit to your master/trunk branch<br/> with (at least) the following in the commit message:</p> <p> This closes #119</p> <hr /> <p>commit b4ac9f9f7f3742ac2bd08e383c9650cbf4962691<br/> Author: arshadmohammad lt;arshad.mohammad.k@gmail.comgt;<br/> Date: 2016-12-05T18:55:10Z</p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2251" title="Add Client side packet response timeout to avoid infinite wait." class="issue-link" data-issue-key="ZOOKEEPER-2251"><del>ZOOKEEPER-2251</del></a>:Add Client side packet response timeout to avoid infinite wait.</p> <hr /></comment>
<comment id="15723058" author="m.martinez" created="Mon, 5 Dec 2016 19:06:11 +0000"><p>Is 'master' the correct integration branch to point that pull request to? </p> <p>I'm not familiar with the ZooKeeper project's branch strategy so I'm just asking.</p></comment>
<comment id="15723085" author="hadoopqa" created="Mon, 5 Dec 2016 19:19:26 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/101//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/101//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/101//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/101//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/101//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/101//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15725558" author="eribeiro" created="Tue, 6 Dec 2016 14:00:20 +0000"><p>AFAIK, if the JIRA issue states that it fixes 3.4.10, 3.5.3, and 3.6.0 then you should point to the earliest branch (branch-3.4). When applying the PR the committer can port it to branch-3.5 and master. By the way, I advise you to see if the patch applies cleanly on branch-3.4, branch-3.5 and master so you can save committer time (that is scarce) from having to deal with conflicts. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/wink.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p><em>Please</em>, correct me if I am wrong, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=breed" class="user-hover" rel="breed">Benjamin Reed</a>. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="15734533" author="githubbot" created="Fri, 9 Dec 2016 06:58:38 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/119#discussion_r91666999" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/119#discussion_r91666999</a></p> <p> #8212; Diff: src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml #8212;<br/> @@ -1538,6 +1538,24 @@ public abstract class ServerAuthenticationProvider implements AuthenticationProv<br/> lt;paragt;Specifies path to kinit binary. Default is "/usr/bin/kinit".lt;/paragt;<br/> lt;/listitemgt;<br/> lt;/varlistentrygt;<br/> + lt;varlistentrygt;<br/> + lt;termgt;zookeeper.request.timeoutlt;/termgt;<br/> + lt;listitemgt;<br/> + lt;paragt;<br/> + lt;emphasis role="bold"gt;New in 3.5.3:lt;/emphasisgt;<br/> #8212; End diff #8211;</p> <p> This probably would not make to 3.5.3. 3.6.0 would be a more realistic value.</p></comment>
<comment id="15734534" author="githubbot" created="Fri, 9 Dec 2016 06:58:38 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/119#discussion_r91666945" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/119#discussion_r91666945</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/KeeperException.java #8212;<br/> @@ -387,6 +389,8 @@ public void setCode(int code) {<br/> EPHEMERALONLOCALSESSION (EphemeralOnLocalSession),<br/> /** Attempts to remove a non-existing watcher */<br/> NOWATCHER (-121),<br/> + /** Not received packet timely */<br/> + TIMEOUT (-122),<br/> #8212; End diff #8211;</p> <p> Similar error code needs to be added to C client to make both client library compatible.</p></comment>
<comment id="15734535" author="githubbot" created="Fri, 9 Dec 2016 06:58:38 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/119#discussion_r91666647" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/119#discussion_r91666647</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java #8212;<br/> @@ -1495,10 +1504,21 @@ public ReplyHeader submitRequest(RequestHeader h, Record request,<br/> Packet packet = queuePacket(h, r, request, response, null, null, null,<br/> null, watchRegistration, watchDeregistration);<br/> synchronized (packet) {<br/> + long waitStartTime = System.currentTimeMillis();<br/> while (!packet.finished) {</p> <ul class="alternate" type="square"> <li>packet.wait();<br/> + packet.wait(requestTimeout); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> This unconditionally adds a timeout is a pretty significant semantic change. Whether or not we should wait indefinitely is a separate issue to discuss later, but from a compatibility point of view we'd at least provide a configuration option to let user opt in this feature rather than having this turned on by default. So by default there is no timeout and client still waits indefinitely, user who wants to opt in to turn on the timeout needs to explicit say so and provide a value they think make sense to them. Otherwise, we'd have to solve the problem of what the default timeout value we should set in ZK config if this feature is turned on by default, and that problem is hard and very likely there is no default value that makes everyone happy.</p></comment>
<comment id="15734548" author="hanm" created="Fri, 9 Dec 2016 07:06:20 +0000"><p>Has anyone that watching this issue able to have a deterministic reproduce of the issue? The timeout solution is trivial but it's important to try to figure out root cause of packet loss otherwise we could just fix the surface and then have unexpected bug bite us. </p></comment>
<comment id="15734817" author="githubbot" created="Fri, 9 Dec 2016 09:39:06 +0000"><p>Github user wuwen5 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/119#discussion_r91682496" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/119#discussion_r91682496</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java #8212;<br/> @@ -1495,10 +1504,21 @@ public ReplyHeader submitRequest(RequestHeader h, Record request,<br/> Packet packet = queuePacket(h, r, request, response, null, null, null,<br/> null, watchRegistration, watchDeregistration);<br/> synchronized (packet) {<br/> + long waitStartTime = System.currentTimeMillis();<br/> while (!packet.finished) {</p> <ul class="alternate" type="square"> <li>packet.wait();<br/> + packet.wait(requestTimeout);<br/> + if (!packet.finished amp;amp; ((System.currentTimeMillis() <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> System.currentTimeMillis() is dependent on System clock. It probably micro-corrected by an external programme..</p> <p> I think using System.nanoTime() to measure elapsed time is the correct solution.</p></comment>
<comment id="15749214" author="m.martinez" created="Wed, 14 Dec 2016 19:23:52 +0000"><p>Unfortunately I don't have a simple deterministic test. But we had an environment where two of our zookeeper servers were sharing their nodes with another cpu amp; memory (amp; thread) hungry process and this seemed to result in a lot of zookeepertimeoutexceptions at the client as well as unfortunately frequent hits on this particular deadlock (which does get caught in jvisualvm thread dumps). We could not run more than a day or two on our sustained ingest tests without hitting this.</p> <p>We've moved the two zookeepers to dedicated nodes (the third already was on it's own node) and things have looked stable so far (on this particular issue), but my management is rightfully concerned that we should have this fix in place.</p> <p>We would be perfectly fine with a parameterized wait time option and a default of the current indefinite wait.</p></comment>
<comment id="15750059" author="hanm" created="Thu, 15 Dec 2016 01:43:38 +0000"><p>Thanks for the info, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=m.martinez" class="user-hover" rel="m.martinez">Mel Martinez</a>. </p> <p>On a side note about sharing ZK with other processes: it is generally advised to have ZK deployed on dedicated resource - sometimes you might even want to have dedicated device for storing transaction log files. </p></comment>
<comment id="15750088" author="githubbot" created="Thu, 15 Dec 2016 01:55:52 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/119#discussion_r92530333" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/119#discussion_r92530333</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java #8212;<br/> @@ -1495,10 +1504,21 @@ public ReplyHeader submitRequest(RequestHeader h, Record request,<br/> Packet packet = queuePacket(h, r, request, response, null, null, null,<br/> null, watchRegistration, watchDeregistration);<br/> synchronized (packet) {<br/> + long waitStartTime = System.currentTimeMillis();<br/> while (!packet.finished) {</p> <ul class="alternate" type="square"> <li>packet.wait();<br/> + packet.wait(requestTimeout);<br/> + if (!packet.finished amp;amp; ((System.currentTimeMillis() <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Yes, and actually we have a Time class which we can use here that uses nanoTime internally for exact same reason. </p></comment>
<comment id="15751475" author="m.martinez" created="Thu, 15 Dec 2016 14:12:00 +0000"><p>Yes, we've been figuring this out.</p> <p>Unfortunately, customer deployment requirements can sometimes limit our control over the environment. We are trying to make things as robust and fault tolerant as possible while still allowing for as much flexibility in how things are deployed. There are obviously limits to that!</p></comment>
<comment id="15816184" author="m.martinez" created="Tue, 10 Jan 2017 21:05:40 +0000"><p>Bumping this. We've put in lots of mitigations around this, but we consider this still an important issue for us that needs to be resolved. Really hope this can make it into 3.4.10.</p> </comment>
<comment id="15817267" author="hanm" created="Wed, 11 Jan 2017 05:44:35 +0000"><p>The PR needs some update to address review comments before we can commit this. In particular, it would be good to have a feature flag that controls the on / off of client side timeout (for reasons commented in PR), also C client side work.</p> <p>Not sure if <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad" class="user-hover" rel="arshad.mohammad">Mohammad Arshad</a> still on this but if not, maybe <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=m.martinez" class="user-hover" rel="m.martinez">Mel Martinez</a> you can start driving this by contributing a patch? </p></comment>
<comment id="15819610" author="m.martinez" created="Thu, 12 Jan 2017 00:07:19 +0000"><p>I'll have to go through Lab protocols for approval to submit a patch. I'll look into it. </p> <p>I'll need to set up to build with Ivy against our internal Nexus as well since I'm behind a firewall. Sigh ... busywork. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/biggrin.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="15820232" author="hanm" created="Thu, 12 Jan 2017 05:34:44 +0000"><p>Thanks!</p></comment>
<comment id="15878608" author="m.martinez" created="Wed, 22 Feb 2017 16:18:01 +0000"><p>Update: I'm sorry, but I've been pulled away from this in my tasking. This is still a real concern for us, and I think I'll eventually be able to get back to it, but it won't happen real quick.</p></comment>
<comment id="16385516" author="awkejiang" created="Mon, 5 Mar 2018 03:00:56 +0000"><p>what's the release plan for this patch?</p></comment>
<comment id="16387776" author="andorm" created="Tue, 6 Mar 2018 13:34:32 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=awkejiang" class="user-hover" rel="awkejiang">Ke Jiang</a></p> <p>I believe that <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a>'s concerns have to be addressed first on GitHub.</p></comment>
<comment id="16547209" author="hadoopqa" created="Tue, 17 Jul 2018 23:20:54 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch</a><br/> against trunk revision cea251a185435e88f54efc5defb92ec9584fc80f.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3697//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3697//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16550168" author="hadoopqa" created="Fri, 20 Jul 2018 03:21:13 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12791733/ZOOKEEPER-2251-04.patch</a><br/> against trunk revision 4c12f75a9dd546032eafb2d2840061399c2a6a5e.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3698//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3698//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16552300" author="hadoopqa" created="Mon, 23 Jul 2018 03:56:54 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1986//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1986//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1986//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1986//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1986//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1986//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16559185" author="hanm" created="Fri, 27 Jul 2018 03:16:40 +0000"><p>Issue resolved by pull request 119<br/> <a href="https://github.com/apache/zookeeper/pull/119" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/119</a></p></comment>
<comment id="16559223" author="hudson" created="Fri, 27 Jul 2018 04:14:18 +0000"><p>SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #122 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/122/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/122/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2251" title="Add Client side packet response timeout to avoid infinite wait." class="issue-link" data-issue-key="ZOOKEEPER-2251"><del>ZOOKEEPER-2251</del></a>: Add Client side packet response timeout to avoid (hanm: rev 9f82798415351a20136ceb1640b1781723e51cc1)</p> <ul> <li>(add) src/java/test/org/apache/zookeeper/ClientRequestTimeoutTest.java</li> <li>(edit) zookeeper-docs/src/documentation/content/xdocs/zookeeperProgrammers.xml</li> <li>(edit) src/java/main/org/apache/zookeeper/ZooKeeper.java</li> <li>(edit) src/java/main/org/apache/zookeeper/client/ZKClientConfig.java</li> <li>(edit) src/java/main/org/apache/zookeeper/ClientCnxn.java</li> <li>(edit) src/java/main/org/apache/zookeeper/KeeperException.java</li> </ul> </comment>
</comments>
<attachments>
<attachment id="12765389" name="ZOOKEEPER-2251-01.patch" size="7825" author="arshad.mohammad" created="Wed, 7 Oct 2015 13:38:59 +0000"/>
<attachment id="12765520" name="ZOOKEEPER-2251-02.patch" size="14073" author="arshad.mohammad" created="Thu, 8 Oct 2015 04:42:44 +0000"/>
<attachment id="12765803" name="ZOOKEEPER-2251-03.patch" size="11304" author="arshad.mohammad" created="Fri, 9 Oct 2015 14:50:17 +0000"/>
<attachment id="12791733" name="ZOOKEEPER-2251-04.patch" size="16861" author="arshad.mohammad" created="Mon, 7 Mar 2016 08:05:33 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i2j31z:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-2172] Cluster crashes when reconfig a new node as a participant</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-2172</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>The operations are quite simple: start three zk servers one by one, then reconfig the cluster to add the new one as a participant. When I add the third one, the zk cluster may enter a weird state and cannot recover.</p> <p> I found “2015-04-20 12:53:48,236 <span class="error">#91;myid:1#93;</span> - INFO <span class="error">#91;ProcessThread(sid:1 cport:-1)::PrepRequestProcessor@547#93;</span> - Incremental reconfig” in node-1 log. So the first node received the reconfig cmd at 12:53:48. Latter, it logged “2015-04-20 12:53:52,230 <span class="error">#91;myid:1#93;</span> - ERROR <span class="error">#91;LearnerHandler-/10.0.0.2:55890:LearnerHandler@580#93;</span> - Unexpected exception causing shutdown while sock still open” and “2015-04-20 12:53:52,231 <span class="error">#91;myid:1#93;</span> - WARN <span class="error">#91;LearnerHandler-/10.0.0.2:55890:LearnerHandler@595#93;</span> - ******* GOODBYE /10.0.0.2:55890 ********”. From then on, the first node and second node rejected all client connections and the third node didn’t join the cluster as a participant. The whole cluster was done.</p> <p> When the problem happened, all three nodes just used the same dynamic config file zoo.cfg.dynamic.10000005d which only contained the first two nodes. But there was another unused dynamic config file in node-1 directory zoo.cfg.dynamic.next which already contained three nodes.</p> <p> When I extended the waiting time between starting the third node and reconfiguring the cluster, the problem didn’t show again. So it should be a race condition problem.</p></description>
<environment><p>Ubuntu 12.04 + java 7</p></environment>
<key id="12822558">ZOOKEEPER-2172</key>
<summary>Cluster crashes when reconfig a new node as a participant</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="arshad.mohammad">Mohammad Arshad</assignee>
<reporter username="ziyouw">Ziyou Wang</reporter>
<labels> </labels>
<created>Tue, 21 Apr 2015 04:14:24 +0000</created>
<updated>Wed, 7 Mar 2018 14:37:08 +0000</updated>
<resolved>Thu, 8 Sep 2016 21:01:46 +0000</resolved>
<version>3.5.0</version>
<fixVersion>3.5.3</fixVersion>
<fixVersion>3.6.0</fixVersion>
<component>leaderElection</component>
<component>quorum</component>
<component>server</component>
<due/>
<votes>0</votes>
<watches>16</watches>
<comments>
<comment id="14504287" author="ziyouw" created="Tue, 21 Apr 2015 04:16:19 +0000"><p>Error log when this bug happened.</p></comment>
<comment id="14546965" author="michim" created="Sat, 16 May 2015 22:43:40 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a> could you also post the initial configuration files for all the nodes? <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> could you take a look at these log files when you get a chance?</p></comment>
<comment id="14546968" author="shralex" created="Sat, 16 May 2015 22:50:28 +0000"><p>Thanks Michi for the pointer, I'll take a look, but may not have time today.</p> <p>In general the .next file is created when a server acks a reconfig request and deleted when it commits the request.<br/> We check that a quorum is synced before starting the reconfig but once someone knows about a reconfig proposal and can talk to a quorum of nodes, there is no going back #8211; if a quorum of the new config isn't available the system will get stuck (just like without reconfig the system will get stuck if there's no quorum). </p></comment>
<comment id="14546972" author="michim" created="Sat, 16 May 2015 22:56:15 +0000"><p>Would it be possible that this is hitting the case described in <a href="http://zookeeper.apache.org/doc/trunk/zookeeperReconfig.html#sc_reconfig_general" class="external-link" target="_blank" rel="nofollow noopener">http://zookeeper.apache.org/doc/trunk/zookeeperReconfig.html#sc_reconfig_general</a> :</p> <blockquote><p>Finally, note that once connected to the leader, a joiner adopts the last committed configuration, in which it is absent (the initial config of the joiner is backed up before being rewritten). If the joiner restarts in this state, it will not be able to boot since it is absent from its configuration file. In order to start it you’ll once again have to specify an initial configuration.</p></blockquote></comment>
<comment id="14546973" author="shralex" created="Sat, 16 May 2015 22:59:21 +0000"><p>quite possible. the question is why weren't 1 and 2 enough to form a quorum. 3 doesn't need to be up if both 1 and 2 are participants in the last committed config.</p></comment>
<comment id="14546974" author="shralex" created="Sat, 16 May 2015 23:02:57 +0000"><p>looks like the config here is using the patch of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2031" title="Support tagging a QuorumServer" class="issue-link" data-issue-key="ZOOKEEPER-2031">ZOOKEEPER-2031</a></p></comment>
<comment id="14547023" author="michim" created="Sun, 17 May 2015 02:32:22 +0000"><p>node1 doesn't seem to receive the vote from itself. it receives votes from node2 and node3:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>node-1.log:2015-04-20 12:55:03,358 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@698] - Notification: 2 (message format version), 2 (n.leader), 0x100000084 (n.zxid), 0x1 (n.round), LOOKING (n.state), 2 (n.sid), 0x1 (n.peerEPoch), LEADING (my state)10000005d (n.config version) node-1.log:2015-04-20 12:55:51,547 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@698] - Notification: 2 (message format version), 1 (n.leader), 0x0 (n.zxid), 0x1 (n.round), LOOKING (n.state), 3 (n.sid), 0x1 (n.peerEPoch), LEADING (my state)10000005d (n.config version) </pre> </div></div> <p>node2 receives votes from node1 and itself:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>node-2.log:2015-04-20 12:55:03,361 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@698] - Notification: 2 (message format version), 1 (n.leader), 0x0 (n.zxid), 0xffffffffffffffff (n.round), LEADING (n.state), 1 (n.sid), 0x1 (n.peerEPoch), LOOKING (my state)10000005d (n.config version) node-2.log:2015-04-20 12:55:54,564 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@698] - Notification: 2 (message format version), 2 (n.leader), 0x100000084 (n.zxid), 0x1 (n.round), LOOKING (n.state), 2 (n.sid), 0x1 (n.peerEPoch), LOOKING (my state)10000005d (n.config version) </pre> </div></div> <p>Is node3's vote somehow confusing node1?</p> <p>Yes, I think this cluster is using the patch from <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2031" title="Support tagging a QuorumServer" class="issue-link" data-issue-key="ZOOKEEPER-2031">ZOOKEEPER-2031</a>. Do you think that might be related to this issue?</p></comment>
<comment id="14547490" author="shralex" created="Mon, 18 May 2015 03:15:16 +0000"><p>Server 1 continues to be leading till the end of the execution. It is able to push its version to server 3 but for some reason its leader election messages have round 0xffffffffffffffff so I think this is why servers 2 and 3 don't adopt it as leader. It also doesnt timeout for some reason.</p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>, this looks related to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1732" title="ZooKeeper server unable to join established ensemble" class="issue-link" data-issue-key="ZOOKEEPER-1732"><del>ZOOKEEPER-1732</del></a> and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1805" title="quot;Don#39;t carequot; value in ZooKeeper election breaks rolling upgrades" class="issue-link" data-issue-key="ZOOKEEPER-1805"><del>ZOOKEEPER-1805</del></a>, any thoughts ?</p> <p>Unlike what the description says, the .next file provided here is identical to the other config file and contains a config with servers 1 and 2, so it probably resulted from the reconfiguration adding server 2. Which server is this coming from ? server 2 probably ? That may happen if server 1 committed the reconfig but server 2 hasn't learned the commit yet (but its other config file has to be different in this case). </p> <p>It would be helpful if you can reproduce the scenario without using the ZK-2031 patch and provide all the config files, including the initial ones, from the servers and all the reconfig commands you run and when.</p> <p>I can see from the logs that there were many attempts to reconfigure (probably add server 2) before it was synced with server 1 so they failed, which is normal. Then a reconfig succeeds at time 12:51:48, then more reconfig commands are invoked (like minute 12:51:56), which is before server 3 even starts. Is this intentional ? What do these commands attempt to do ? </p> </comment>
<comment id="14549742" author="michim" created="Tue, 19 May 2015 03:58:45 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a> would it be possible to reproduce it without zk-2031? If not, could you try reproducing this with debug log enabled? Thanks!</p></comment>
<comment id="14555672" author="ziyouw" created="Fri, 22 May 2015 06:33:53 +0000"><p>Hi Alexander and Michi,</p> <p>Thanks a lot for looking at this bug. The zk-2031 is developed as a part of our system. So I cannot remove this patch away to reproduce this problem. I will try to reproduce this problem with debug log enabled.</p> <p>BTW. we hit this problems many time after reporting this issue. If we move to a slower environment, e.g. a nested host, it need more time between start and reconfig to avoid it. So I suspect it may be caused when the node 3 doesn't finish sync latest data from leader, the reconfig comes and breaks some thing. Do you have some idea about this?</p> <p>For Alexander's quesitons, our system had a bug in such case when reporting this jira. It just retried to do the reconfig to add node2 even the node 2 is already in the list. I already fixed it, but we still hit this jira problem again now.</p></comment>
<comment id="14557965" author="ziyouw" created="Mon, 25 May 2015 04:45:11 +0000"><p>I open the zookeeper debug log and reproduce the problem again.</p></comment>
<comment id="14557967" author="ziyouw" created="Mon, 25 May 2015 04:47:18 +0000"><p>No, it is just a bug in previous system. It just will try to reconfig the second node even it already join the cluster. So it also just use "reconfig -add" to add the second node to the participant list. </p></comment>
<comment id="14557968" author="ziyouw" created="Mon, 25 May 2015 04:47:21 +0000"><p>No, it is just a bug in previous system. It just will try to reconfig the second node even it already join the cluster. So it also just use "reconfig -add" to add the second node to the participant list. </p></comment>
<comment id="14557969" author="ziyouw" created="Mon, 25 May 2015 04:50:06 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=michim" class="user-hover" rel="michim">Michi Mutsuzaki</a> and <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=alemayo" class="user-hover" rel="alemayo">A. M.</a>,</p> <p>I opened the debug log for zookeeper and reproduce this problem. Could you help to check the problem again? Thanks a lot.</p></comment>
<comment id="14558059" author="michim" created="Mon, 25 May 2015 09:20:30 +0000"><p>Thanks Ziyou.</p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a> <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> it looks like node1 and node2 are not forming a quorum because node2 has seen zxid 0x100000059 but node1 keeps sending 0x0 as its zxid. Isn't node1 supposed send the highest zxid it has seen?</p> <p>From zookeeper-1.log:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2015-05-25 12:34:36,920 [myid:1] - DEBUG [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@423] - Sending new notification. My id =1 recipient=2 zxid=0x0 leader=1 config version = 100000049 2015-05-25 12:34:39,090 [myid:1] - DEBUG [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@423] - Sending new notification. My id =1 recipient=3 zxid=0x0 leader=1 config version = 100000049 2015-05-25 12:35:28,128 [myid:1] - DEBUG [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@423] - Sending new notification. My id =1 recipient=2 zxid=0x0 leader=1 config version = 100000049 2015-05-25 12:35:30,301 [myid:1] - DEBUG [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@423] - Sending new notification. My id =1 recipient=3 zxid=0x0 leader=1 config version = 100000049 </pre> </div></div> <p>From zookeeper-2.log:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2015-05-25 12:34:36,918 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@698] - Notification: 2 (message format version), 2 (n.leader), 0x100000059 (n.zxid), 0x1 (n.round), LOOKING (n.state), 2 (n.sid), 0x1 (n.peerEPoch), LOOKING (my state)100000049 (n.config version) 2015-05-25 12:34:36,923 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@698] - Notification: 2 (message format version), 1 (n.leader), 0x0 (n.zxid), 0xffffffffffffffff (n.round), LEADING (n.state), 1 (n.sid), 0x1 (n.peerEPoch), LOOKING (my state)100000049 (n.config version) 2015-05-25 12:35:28,124 [myid:2] - DEBUG [QuorumPeer[myid=2]/10.0.0.2:1300:FastLeaderElection@688] - Sending Notification: 2 (n.leader), 0x100000059 (n.zxid), 0x1 (n.round), 1 (recipient), 2 (myid), 0x1 (n.peerEpoch) 2015-05-25 12:35:28,125 [myid:2] - DEBUG [QuorumPeer[myid=2]/10.0.0.2:1300:FastLeaderElection@688] - Sending Notification: 2 (n.leader), 0x100000059 (n.zxid), 0x1 (n.round), 2 (recipient), 2 (myid), 0x1 (n.peerEpoch) </pre> </div></div></comment>
<comment id="14558594" author="shralex" created="Tue, 26 May 2015 00:18:08 +0000"><p>Michi, I agree that its weird, and again I see this 0xffffffffffffffff round number which I think causes the other server to ignore the leader's messages and continue looking even though server 1 is leading (without timing out for some reason). This looks related to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1732" title="ZooKeeper server unable to join established ensemble" class="issue-link" data-issue-key="ZOOKEEPER-1732"><del>ZOOKEEPER-1732</del></a> and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1805" title="quot;Don#39;t carequot; value in ZooKeeper election breaks rolling upgrades" class="issue-link" data-issue-key="ZOOKEEPER-1805"><del>ZOOKEEPER-1805</del></a>. <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a> could you take a look ?</p> <p>It also seems like there are a lot of client sessions being established and destroyed (clients connect and disconnect).<br/> And in particular when the reconfig adding server 3 happens (12:33:21,797 on server 1) the client session 0x14d8b08424a0014 (this is the client that submitted the reconfig) gets closed in the middle of the operation. Then, the connection to server 2 is suddenly closed with the error (on server 2)</p> <p>2015-05-25 12:33:25,786 <span class="error">#91;myid:2#93;</span> - WARN [QuorumPeer<span class="error">#91;myid=2#93;</span>/10.0.0.2:1300:Follower@92] - Exception when following the leader java.net.SocketTimeoutException: Read timed out</p> <p>Could it be that the termination of a client session in the middle of an op messes up server-to-server connections ?</p></comment>
<comment id="14558632" author="ziyouw" created="Tue, 26 May 2015 02:50:04 +0000"><p>The reason why there are many clients connect and disconnect is we use zk cli to do the operations. So the cli just create a client, do the operation and shutdown it.</p> <p>From our tests, I think it should be a race condition problem and may not have relationship with the cli. When the cluster is running in a faster environment, we just need to wait a small interval between starting the node3 and reconfiguring it to join cluster, then we almost can avoid this problem. But when we move to a slower environment, it can be reproduced consistently again. So the temp solution is extending the waiting time and we can avoid it again. </p></comment>
<comment id="14558641" author="shralex" created="Tue, 26 May 2015 03:04:04 +0000"><p>when you run in the slower environment does server 2 still disconnect like in the logs when you add server 3 ? </p> <p>Can you please provide your initial configs for all 3 servers ? and the reconfig commands you run ? I'd like to try to reproduce this.</p></comment>
<comment id="14558698" author="ziyouw" created="Tue, 26 May 2015 05:18:02 +0000"><p>Yes, it has the same problem.</p> <p>The step is:<br/> 1. Start server 1, its zoo.cfg contains:<br/> standaloneEnabled=false<br/> syncLimit=2<br/> tickTime=2000<br/> initLimit=5</p> <p>ant its dynamic config file just contains itself.</p> <p>2. Start server 2, its zoo.cfg is the same and its init dynamic config file contains 1 and itself. Then reconfig itself as a participant after it sync data from 1 (need to try a few time until the reconfig can be finished).</p> <p>3. Start server 3, use the same zoo.cfg and its init dynamic config file contains 1, 2 and itself. Then reconfig itself as the third participant (where we hit the bug).</p> <p>Since it is a race condition, it may be not easy to be reproduced in your environment. In my dev, the zk server is running in a docker-in-VM <br/> environment. If I change the script to just wait 5 secs after starting the server 3, the problem can be reproduced every time. </p></comment>
<comment id="14558709" author="shralex" created="Tue, 26 May 2015 05:45:34 +0000"><p>Thanks. The basic scenario you described works for me, but you're right of course - there may be a race condition.</p> <p>It would be great if you could help investigate this further. For example, why does server 2 disconnect when you add server 3 ? BTW, server 3 doesn't even have to be up in order for you to add it to the ensemble since you have 2 out of 3 servers without it. </p> <p>I also wonder if the problem has anything to do with the client shutting off right after #8211; does it happen if you don't close the connection on the client ? </p></comment>
<comment id="14558958" author="ziyouw" created="Tue, 26 May 2015 10:29:55 +0000"><p>BTW, all the reconfigs are sent to server1 to finish.</p> <p>I can check the problem, but I am not familiar with the state machine in zookeeper. And you are right, we can config server 3 even before it starts. But we need to deploy a cluster automatically, it is weird to config server 2 after it starts and config server 3 before it starts.</p> <p>As I mentioned, we just use CLI to do the reconfig. So I need to change the cli to test this. I think the client should already get the result from the server before it shutdown.</p></comment>
<comment id="14559062" author="shralex" created="Tue, 26 May 2015 12:42:09 +0000"><p>I was just suggesting this to see if we can minimize the scenario causing the race condition. For example what happens when you don't start server 3 at all. I also really doubt that the problem is at the client. ZK should work whether or not the client disconnects in the middle of an operation. I'm just trying to think how we could track down the bug.</p> <p>I'd try to understand whether the client's shut down is somehow not handled well in the server.<br/> Could you see if the problem is still there when you a) not shutting down the client after reconfig ? if the problem goes away can you try b) have a write after the reconfig and shut it down the client only after the write completes ?</p></comment>
<comment id="14559143" author="ziyouw" created="Tue, 26 May 2015 14:12:35 +0000"><p>OK, I see. I will try this.</p> <p>For debug purpose, do you want to add more log to related code? You can point out the places and I can add them. Right now, even with debug log, I still don't see much important log in the bug moment.</p> <p>For the server 2 disconnect problem, since all the servers are running in one os (different containers), they use exactly the same system clock. The server 2 got a read timeout first and the server 1 shutdown the connection latter. So I think the server 1's state machine may enter some error state first.</p></comment>
<comment id="14560424" author="shralex" created="Wed, 27 May 2015 05:18:20 +0000"><p>I'm not sure where to add the debug messages yet, but happy to point you to the relevant places once we determine where they are. Is it possible that servers 2 and 3 are using the same resources somehow ? Ports, data directory or something else ? this may explain why one joining messes up the connection to the other.</p></comment>
<comment id="14564347" author="ziyouw" created="Fri, 29 May 2015 07:35:42 +0000"><p>No, they are in totally independent docker containers (then isolate ip, port, file system), so they don't share any resources directly.</p> <p>I changed the client issue, but the problem is still there. I also tried the same reconfig steps in a faster environment (outside of docker container). It cannot be reproduced any more. So the slow environment just extends the bug window and makes it can be reproduced consistently. </p></comment>
<comment id="14565874" author="shralex" created="Sat, 30 May 2015 07:29:16 +0000"><p>can you post the logs from the run you mention where the client doesn't disconnect ?</p></comment>
<comment id="14566031" author="fpj" created="Sat, 30 May 2015 14:58:58 +0000"><p>There are a few really weird things here. Check these notifications:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>Notification: 2 (message format version), -9223372036854775808 (n.leader), 0x0 (n.zxid), 0x1 (n.round), LOOKING (n.state), 3 (n.sid), 0x0 (n.peerEPoch), LEADING (my state)100000049 (n.config version) </pre> </div></div> <p>I checked the logs of 3 and does sound like it sent this notification. </p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>Sending Notification: -9223372036854775808 (n.leader), 0x0 (n.zxid), 0x1 (n.round), 1 (recipient), 3 (myid), 0x0 (n.peerEpoch) </pre> </div></div> <p>The initialization of leader election here doesn't sound right. And, as <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> has pointed out, 2 and 3 apparently received notifications with 0xffffffffffffffff as the round of the sender.</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>Notification: 2 (message format version), 1 (n.leader), 0x0 (n.zxid), 0xffffffffffffffff (n.round), LEADING (n.state), 1 (n.sid), 0x1 (n.peerEPoch), LOOKING (my state)100000049 (n.config version) </pre> </div></div> <p>I found no evidence in the log of 1 that it has actually set or sent such a value. </p> <p>The values I'm seeing in the notification across logs look a bit strange.</p></comment>
<comment id="14566340" author="michim" created="Sun, 31 May 2015 04:35:18 +0000"><p>I'm guessing node1 is hitting this case?</p> <p><a href="https://github.com/apache/zookeeper/blob/76bb6747c8250f28157636cf4011b78e7569727a/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L332" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/76bb6747c8250f28157636cf4011b78e7569727a/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L332</a></p> <p>In this case we don't log the message that gets sent out.</p></comment>
<comment id="14567362" author="ziyouw" created="Mon, 1 Jun 2015 14:34:50 +0000"><p>In this test, the ReconfigCommand class is changed to stay after finishing the reconfig request. The client connection for reconfiguring node 2 stays about extra 5 secs there. But the client connection for reconfiguring node 3 still fails immediately. So it means client connection is broken by something in server side.</p></comment>
<comment id="14568511" author="ziyouw" created="Tue, 2 Jun 2015 04:42:04 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>,</p> <p>I tried this and upload the logs. Seems the bug itself will break the client connection. In the client side, after it issues the request, I just get an exception: KeeperErrorCode = ConnectionLoss. So even we don't close the session, the server does.</p></comment>
<comment id="14568514" author="ziyouw" created="Tue, 2 Jun 2015 04:48:24 +0000"><p>When the bug is triggered, the client connection which is used to issue the reconfig request also will be broken. The client will get a ConnectionLoss error as the reconfig result.</p></comment>
<comment id="14569805" author="rgs" created="Tue, 2 Jun 2015 21:39:37 +0000"><p>That's expected right?</p></comment>
<comment id="14569823" author="rgs" created="Tue, 2 Jun 2015 21:45:23 +0000"><p>Slightly related: <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2202" title="Cluster crashes when reconfig adds an unreachable observer" class="issue-link" data-issue-key="ZOOKEEPER-2202">ZOOKEEPER-2202</a>.</p></comment>
<comment id="14570213" author="ziyouw" created="Wed, 3 Jun 2015 03:26:54 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>thought the bug may be caused when the client connection is closed. But the result shows that the server will close the connection before the client. In correct case, the connection should be kept until the client receives the new config status.</p></comment>
<comment id="14570229" author="shralex" created="Wed, 3 Jun 2015 03:52:25 +0000"><p>In zoo-2-3.log you can see server 3 processing requests till the end of the run. The other servers seem ok too, the only thing is the connection being closed right after the reconfig, but this is expected - the leader election algorithm is being reset. Server 2 should still be connected to server 1 through the leader port and can continue processing requests. So the last logs seem quite ok. </p> <p>Can we conclude that the bug happens when the client disconnects before getting a response ?</p></comment>
<comment id="14570531" author="ziyouw" created="Wed, 3 Jun 2015 09:25:30 +0000"><p>The bug shows again with the same code change in last change.</p></comment>
<comment id="14570539" author="ziyouw" created="Wed, 3 Jun 2015 09:38:03 +0000"><p>The bug just was not triggered in that run. Please check the new log. I use the same code to try again and hit the bug this time. I really doubt that it is caused by client connections, because it is hard to explain why we cannot hit this bug with the same client after waiting some time.</p></comment>
<comment id="14571772" author="rgs" created="Wed, 3 Jun 2015 22:41:06 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a>: it might be helpful to dump the FLE (FastLeaderElection) and ZAB messages when the bug is triggered. You could do this with zktraffic (<a href="https://github.com/twitter/zktraffic" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/twitter/zktraffic</a>), i.e.:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"></pre> </div></div> <p>$ sudo pip install zktraffic<br/> $ sudo fle-dump --iface=eth0</p> <ol> <li>from another terminal<br/> $ sudo zab-dump --iface=eth0</li> </ol> </comment>
<comment id="14571946" author="suda" created="Thu, 4 Jun 2015 01:23:59 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a><br/> FYI this patch for zktraffic might be useful: <a href="https://github.com/twitter/zktraffic/pull/30" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/twitter/zktraffic/pull/30</a> (Deeper dissection of Quorum packets and Reconfig packets)</p> </comment>
<comment id="14572133" author="shralex" created="Thu, 4 Jun 2015 04:45:31 +0000"><p>Server 1:</p> <p>2015-06-03 17:15:27,692 <span class="error">#91;myid:1#93;</span> - DEBUG <span class="error">#91;ProcessThread(sid:1 cport:-1)::QuorumCnxManager@365#93;</span> - Opening channel to server 3<br/> 2015-06-03 17:15:27,710 <span class="error">#91;myid:1#93;</span> - DEBUG <span class="error">#91;ProcessThread(sid:1 cport:-1)::QuorumCnxManager@371#93;</span> - Connected to server 3<br/> ...<br/> 2015-06-03 17:15:31,649 <span class="error">#91;myid:1#93;</span> - ERROR <span class="error">#91;LearnerHandler-/10.0.0.2:50710:LearnerHandler@580#93;</span> - Unexpected exception causing shutdown while sock still open<br/> java.net.SocketTimeoutException: Read timed out<br/> at java.net.SocketInputStream.socketRead0(Native Method)<br/> at java.net.SocketInputStream.read(Unknown Source)<br/> at java.net.SocketInputStream.read(Unknown Source)<br/> at java.io.BufferedInputStream.fill(Unknown Source)<br/> at java.io.BufferedInputStream.read(Unknown Source)<br/> at java.io.DataInputStream.readInt(Unknown Source)<br/> at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63)<br/> at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:83)<br/> at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:103)<br/> at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:493)<br/> 2015-06-03 17:15:31,650 <span class="error">#91;myid:1#93;</span> - WARN <span class="error">#91;LearnerHandler-/10.0.0.2:50710:LearnerHandler@595#93;</span> - ******* GOODBYE /10.0.0.2:50710 ********<br/> Server 3:</p> <p>2015-06-03 17:15:27,702 <span class="error">#91;myid:3#93;</span> - INFO <span class="error">#91;/10.0.0.3:1200:QuorumCnxManager$Listener@556#93;</span> - Received connection request /10.0.0.1:39184<br/> 2015-06-03 17:15:31,718 <span class="error">#91;myid:3#93;</span> - WARN <span class="error">#91;/10.0.0.3:1200:QuorumCnxManager@268#93;</span> - Exception reading or writing challenge: java.net.SocketTimeoutException: Read timed out</p> <p>It seems that server 3 is still in the initial connection phase while server 1 already passed it and wants to start working (fails on the qp = new QuorumPacket() line).</p> <p>It may be helpful to log everything server 3 gets from server 1 before it crashes in QuorumCnxnManager receiveConnection, exactly what execution path is taken, etc. You could also print server 1's side in LearnerHandler.java</p> <p>Also, are you sure that the zookeeper distribution on these two servers is the same ?</p> </comment>
<comment id="14572134" author="shralex" created="Thu, 4 Jun 2015 04:46:46 +0000"><p>btw, sorry for being slow to respond</p></comment>
<comment id="14572346" author="shralex" created="Thu, 4 Jun 2015 08:13:50 +0000"><p>I might have misread the log - the exception on server 1 may be due to a problem talking with server 2. Would be good to log the server id to which the learnerhandler belongs.</p> <p>Another suggestion is to log more things in Follower.java - case Leader.PROPOSAL and Leader.COMMIT.<br/> Its possible that something happens there that causes the follower to hang and the leader's socket to timeout.</p></comment>
<comment id="14572383" author="ziyouw" created="Thu, 4 Jun 2015 08:46:02 +0000"><p>Yes, I also suspect this is caused when server 3 is still syncing data from server 1 or server 2. So it explains why this bug is easier to be triggered in slow environment and can be avoided by waiting.</p> <p>So you mean I need to add extra log in QuorumCnxnManager and LearnerHandler for this case?</p> <p>Yes, the three servers use the same docker image.</p></comment>
<comment id="14572425" author="ziyouw" created="Thu, 4 Jun 2015 09:17:14 +0000"><p>Hi, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a>and <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=suda" class="user-hover" rel="suda">Akihiro Suda</a></p> <p>Thanks a lot for this info. I can try this when I try to reproduce it next time.</p></comment>
<comment id="14572900" author="shralex" created="Thu, 4 Jun 2015 14:44:50 +0000"><p>Yeah, just add a lot of logging statements if you could, in QuorumCnxnManager, LearnerHandler and Follower.java where proposals and COMMITS are received. I'd actually start from the latter to see if server 2 somehow gets stuck in the middle of processing a reconfig command.</p></comment>
<comment id="14587117" author="shralex" created="Mon, 15 Jun 2015 23:14:02 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a>, could you please check if the bug still exists with 2212 patch applied ?</p></comment>
<comment id="14588049" author="ziyouw" created="Tue, 16 Jun 2015 13:48:20 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, thanks for notifying this. I try the 2212 patch today and find it indeed reduce the chance to reproduce the problem. From the log, I can see this logic:</p> <p>if (!rqv.equals(curQV)) {<br/> LOG.info("restarting leader election");<br/> self.shuttingDownLE = true;<br/> self.getElectionAlg().shutdown();<br/> break;<br/> }</p> <p>will be executed in node 2 once and node 3 twice in success case.</p> <p>But I still can hit the problem (although it is hard than before). In the fail case, I find the above logic only is executed once in the node 3.</p> <p>Sorry for updating this jira late, I am busy for some urgent issues before.</p></comment>
<comment id="14589603" author="ziyouw" created="Wed, 17 Jun 2015 10:34:58 +0000"><p>Log files after applying patch 2212. The bug is hard to be reproduced after applying 2212.</p></comment>
<comment id="14591101" author="suda" created="Thu, 18 Jun 2015 01:45:49 +0000"><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2212" title="distributed race condition related to QV version" class="issue-link" data-issue-key="ZOOKEEPER-2212"><del>ZOOKEEPER-2212</del></a> seems not directly related to this bug.</p> <p>If ZK hits a race condition that is resolved in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2212" title="distributed race condition related to QV version" class="issue-link" data-issue-key="ZOOKEEPER-2212"><del>ZOOKEEPER-2212</del></a>, <tt>LOG.debug("Skip processReconfig(), state: {}", self.getServerState());</tt> must be found in log files.<br/> <a href="https://github.com/apache/zookeeper/blob/ec056d3c3a18b862d0cd83296b7d4319652b0b1c/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L308" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/ec056d3c3a18b862d0cd83296b7d4319652b0b1c/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L308</a></p> <p>Perhaps the bug got hard due to other causes (e.g., network latency gets shorter)?</p> </comment>
<comment id="14591102" author="suda" created="Thu, 18 Jun 2015 01:45:53 +0000"><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2212" title="distributed race condition related to QV version" class="issue-link" data-issue-key="ZOOKEEPER-2212"><del>ZOOKEEPER-2212</del></a> seems not directly related to this bug.</p> <p>If ZK hits a race condition that is resolved in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2212" title="distributed race condition related to QV version" class="issue-link" data-issue-key="ZOOKEEPER-2212"><del>ZOOKEEPER-2212</del></a>, <tt>LOG.debug("Skip processReconfig(), state: {}", self.getServerState());</tt> must be found in log files.<br/> <a href="https://github.com/apache/zookeeper/blob/ec056d3c3a18b862d0cd83296b7d4319652b0b1c/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L308" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/ec056d3c3a18b862d0cd83296b7d4319652b0b1c/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L308</a></p> <p>Perhaps the bug got hard due to other causes (e.g., network latency gets shorter)?</p> </comment>
<comment id="14591132" author="ziyouw" created="Thu, 18 Jun 2015 02:20:33 +0000"><p>Just check the patch again. Yes, we should not hit 2212 here. But it is really weird to find the affection in our case. I just use three docker containers to run the nodes in the same host. So I don't think the network latency will change, but I am not sure the disk latency changes or not.</p></comment>
<comment id="14593156" author="suda" created="Fri, 19 Jun 2015 07:56:29 +0000"><p>Hi,</p> <p>It is so interesting that both of servers 1 and 2 timeout at 15:55:08,439 after reconfig has begun at 15:55:04.<br/> After these timeouts, both <tt>ZooKeeperServer</tt> cannot be revived and the ensemble gets weird.<br/> (However in zoo-3-2.log (Jun 3), server 2 raises <tt>EOFException</tt>, not <tt>SocketTimeoutException</tt> at 17:15:31).</p> <p>These timeouts are raised by <a href="https://github.com/apache/zookeeper/blob/77e46cad03d64530ea53be53f5e38e8f1e7e8eee/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java#L515" class="external-link" target="_blank" rel="nofollow noopener">this while loop</a> in server 1 and <a href="https://github.com/apache/zookeeper/blob/77e46cad03d64530ea53be53f5e38e8f1e7e8eee/src/java/main/org/apache/zookeeper/server/quorum/Follower.java#L89" class="external-link" target="_blank" rel="nofollow noopener">this while loop</a> in server 2.</p> <p>Unfortunately, we are not sure which types of QuorumPacket are triggering these timeouts.<br/> So I think it might be helpful to add <tt>LOG.debug(qp.getType())</tt> at <a href="https://github.com/apache/zookeeper/blob/77e46cad03d64530ea53be53f5e38e8f1e7e8eee/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java#L532" class="external-link" target="_blank" rel="nofollow noopener">this switch</a> for server 1 and <a href="https://github.com/apache/zookeeper/blob/77e46cad03d64530ea53be53f5e38e8f1e7e8eee/src/java/main/org/apache/zookeeper/server/quorum/Follower.java#L114" class="external-link" target="_blank" rel="nofollow noopener">this switch</a> for server 2.</p> <p>Perhaps they are not pinging each other?<br/> <a href="https://github.com/apache/zookeeper/blob/77e46cad03d64530ea53be53f5e38e8f1e7e8eee/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java#L924-925" class="external-link" target="_blank" rel="nofollow noopener">This</a> comment in <tt>LearnerHandler.ping()</tt> seems interesting.</p> <div class="panel" style="border-width: 1px;"><div class="panelContent"> <p>// If learner hasn't sync properly yet, don't send ping packet<br/> // otherwise, the learner will crash</p> </div></div></comment>
<comment id="14597197" author="ziyouw" created="Tue, 23 Jun 2015 05:38:55 +0000"><p>Add log to record quorum packet types.</p></comment>
<comment id="14597203" author="ziyouw" created="Tue, 23 Jun 2015 05:44:18 +0000"><p>Thanks for looking on this. I always suspect this problem may has relationship with the sync. Because I need to wait more time to avoid it when the cluster is running with a slow disk.</p> <p>I upload the log files after I add the log to record the quorum packet type.</p></comment>
<comment id="14597439" author="suda" created="Tue, 23 Jun 2015 10:12:30 +0000"><p>Hi,<a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a></p> <p>Thank you for logging.</p> <p>From the latest logs, we can confirm that:</p> <ul> <li>server 1 is not <a href="https://github.com/apache/zookeeper/blob/09ce56a867002f34bda9257ae8edca4085852169/src/java/main/org/apache/zookeeper/server/quorum/Leader.java#L599" class="external-link" target="_blank" rel="nofollow noopener">pinging(packet type=5) to server 2</a> after reconfig at 13:30:33,573, and hence server 2 cannot <a href="https://github.com/apache/zookeeper/blob/09ce56a867002f34bda9257ae8edca4085852169/src/java/main/org/apache/zookeeper/server/quorum/Follower.java#L116" class="external-link" target="_blank" rel="nofollow noopener">pong</a> to server 1. then server 1 timeouts for pong from server 2 and shutdowns(<a href="https://github.com/apache/zookeeper/blob/09ce56a867002f34bda9257ae8edca4085852169/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java#L619-622" class="external-link" target="_blank" rel="nofollow noopener">this</a> at 13:30:37,560 and <a href="https://github.com/apache/zookeeper/blob/09ce56a867002f34bda9257ae8edca4085852169/src/java/main/org/apache/zookeeper/server/quorum/Leader.java#L603" class="external-link" target="_blank" rel="nofollow noopener">this</a> at 13:30:53,638).</li> <li>server 1 is not <a href="https://github.com/apache/zookeeper/blob/09ce56a867002f34bda9257ae8edca4085852169/src/java/main/org/apache/zookeeper/server/quorum/Leader.java#L1066" class="external-link" target="_blank" rel="nofollow noopener">proposing(packet type=2) to server 2</a>. <tt>CommitProcessor</tt> is working at 13:30:33,575, but <tt>ProposalRequestProcessor</tt> seems not.</li> </ul> <p>Maybe <tt>Leader.lead()</tt> and <tt>Leader.propose()</tt> are racing due to some reasons related to syncing?<br/> I will check this later.</p></comment>
<comment id="14598909" author="ziyouw" created="Wed, 24 Jun 2015 05:56:23 +0000"><p>Can we add more logs to find the race condition here? I guess the problem will happens when server 3 still is syncing data from leader. So if you can slow down this sync process and do the reconfig before it finishes, we may also can reproduce this process in normal environment. </p></comment>
<comment id="14602661" author="suda" created="Fri, 26 Jun 2015 10:20:01 +0000"><p>Yes, as many logs as possible might be helpful.<br/> Plus some additional information such as the accurate ZK version, workload scripts, or filesystem information might be also helpful.</p> <p>I am trying to reproduce the bug by injecting some {{Thread.sleep()}}s into syncing-related functions using byteman.<br/> But I could not reproduced the bug at this moment, as I am not sure which function should be injected.</p></comment>
<comment id="14634903" author="mitake" created="Tue, 21 Jul 2015 10:12:23 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a>,</p> <p>It seems that I could reproduce this problem. Just adding new servers with reconfig one by one, then the ensemble rejects every client request.<br/> (Of course there is a possibility of my misunderstanding)</p> <p>I used our distributed systems debugger named <a href="https://github.com/osrg/earthquake" class="external-link" target="_blank" rel="nofollow noopener">earthquake</a>. It uses byteman and inspect execution of debuggee (zookeeper server in this case). It tries to cause corner case situations that is hard to be produced in ordinal testing by reordering inspected method calls and returns.</p> <p>We are preparing a docker image for easy reproducing in your environment. Please wait for a while.</p> <p>I'm analyzing the problem and would like to post the root cause and patch, but it may take a time because I'm new to zookeeper. So I attached logs (zookeeper-123.out) and the history of ensemble (history.txt). The logs seem to be similar to yours.<br/> The format of the history is earthquake specific format, so it wouldn't be easy to read. But I think you can interpret the event sequence roughly (it is just a sequence of method calls and returns + their stacktrace). It would be great if I can hear your comments.</p></comment>
<comment id="14636159" author="shralex" created="Wed, 22 Jul 2015 03:36:51 +0000"><p>It looks like server 2 is crashing before the first reconfig is invoked (18:14:48 is when the reconfig happens).</p> <p>This is what happens on server 2:</p> <p>INFO: paramMap: </p> {quorumPacket=PING 200000001 null} <p>quorum packet send in Follower : org.jboss.byteman.rule.exception.ExecuteException: MethodExpression.interpret : exception invoking method packetToString file /earthquake/reconfig-trunk/materials/server.btm line 34<br/> 2015-07-21 18:14:43,735 <span class="error">#91;myid:2#93;</span> - ERROR <span class="error">#91;SyncThread:2:ZooKeeperCriticalThread@48#93;</span> - Severe unrecoverable error, from thread : SyncThread:2<br/> org.jboss.byteman.rule.exception.ExecuteException: MethodExpression.interpret : exception invoking method packetToString file /earthquake/reconfig-trunk/materials/server.btm line 34<br/> at org.jboss.byteman.rule.expression.MethodExpression.interpret(MethodExpression.java:347)<br/> at org.jboss.byteman.rule.expression.MethodExpression.interpret(MethodExpression.java:334)<br/> at org.jboss.byteman.rule.Action.interpret(Action.java:144)<br/> at net.osrg.earthquake.PBEQHelper_HelperAdapter_Interpreted_2.fire(server.btm)<br/> at net.osrg.earthquake.PBEQHelper_HelperAdapter_Interpreted_2.execute0(server.btm)<br/> at net.osrg.earthquake.PBEQHelper_HelperAdapter_Interpreted_2.execute(server.btm)<br/> at org.jboss.byteman.rule.Rule.execute(Rule.java:684)<br/> at org.jboss.byteman.rule.Rule.execute(Rule.java:653)<br/> at org.apache.zookeeper.server.quorum.Learner.writePacket(Learner.java)<br/> at org.apache.zookeeper.server.quorum.SendAckRequestProcessor.flush(SendAckRequestProcessor.java:62)<br/> at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:186)<br/> at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:113)<br/> Caused by: java.lang.NullPointerException<br/> at org.apache.zookeeper.server.quorum.LearnerHandler.packetToString(LearnerHandler.java:261)<br/> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br/> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<br/> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br/> at java.lang.reflect.Method.invoke(Method.java:606)<br/> at org.jboss.byteman.rule.expression.MethodExpression.interpret(MethodExpression.java:341)<br/> ... 11 more<br/> 2015-07-21 18:14:43,735 <span class="error">#91;myid:2#93;</span> - INFO <span class="error">#91;SyncThread:2:ZooKeeperServer$ZooKeeperServerListenerImpl@442#93;</span> - Thread SyncThread:2 exits, error code 1<br/> 2015-07-21 18:14:43,735 <span class="error">#91;myid:2#93;</span> - INFO <span class="error">#91;SyncThread:2:LearnerZooKeeperServer@165#93;</span> - Shutting down<br/> 2015-07-21 18:14:43,735 <span class="error">#91;myid:2#93;</span> - INFO <span class="error">#91;SyncThread:2:ZooKeeperServer@465#93;</span> - shutting down<br/> 2015-07-21 18:14:43,735 <span class="error">#91;myid:2#93;</span> - INFO <span class="error">#91;SyncThread:2:FollowerRequestProcessor@138#93;</span> - Shutting down<br/> 2015-07-21 18:14:43,735 <span class="error">#91;myid:2#93;</span> - INFO <span class="error">#91;SyncThread:2:CommitProcessor@358#93;</span> - Shutting down<br/> 2015-07-21 18:14:43,736 <span class="error">#91;myid:2#93;</span> - INFO <span class="error">#91;FollowerRequestProcessor:2:FollowerRequestProcessor@109#93;</span> - FollowerRequestProcessor exited loop!</p> <p>then server 1, the leader, is sending an incremental reconfig and timing out and closing the connection.</p> <p>2015-07-21 18:14:48,750 <span class="error">#91;myid:1#93;</span> - INFO <span class="error">#91;ProcessThread(sid:1 cport:-1)::PrepRequestProcessor@512#93;</span> - Incremental reconfig<br/> Jul 21, 2015 6:14:48 PM net.osrg.earthquake.PBInspector EventFuncReturn<br/> INFO: paramMap: </p> {quorumPacket=PROPOSAL 200000002 null} <p>.....<br/> 2015-07-21 18:15:02,739 <span class="error">#91;myid:1#93;</span> - WARN [QuorumPeer<span class="error">#91;myid=1#93;</span>(plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):LearnerHandler@937] - Closing connection to peer due to transaction timeout.</p> </comment>
<comment id="14636214" author="shralex" created="Wed, 22 Jul 2015 04:44:31 +0000"><p>I may be wrong, but it looks like the crash on server 2 happens after the sync, when the server tries to respond to the leader's PING. It executes the following:</p> <p> protected void processPacket(QuorumPacket qp) throws Exception{<br/> switch (qp.getType()) {<br/> case Leader.PING: <br/> ping(qp); </p> <p>So just tries to send a PING back. The ping() function in Learner.java sends the same packet back, just changes the data, it doesn't create a new packet. I wonder if its a problem somehow that a new packet is not being created. The exception message is NullPointerException, so maybe somehow the old packet gets deallocated ?</p></comment>
<comment id="14636344" author="mitake" created="Wed, 22 Jul 2015 05:54:15 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, thanks for your reply.</p> <p>As you pointed, the crash is caused in the inspection layer (written in byteman). Sorry for bothering.</p> <p>But the NullPointerException is a little bit odd. The exception is caused by the byteman script like this:<br/> RULE quorum packet receive in Follower<br/> CLASS Learner<br/> METHOD readPacket<br/> HELPER net.osrg.earthquake.PBEQHelper<br/> BIND argMap = new java.util.HashMap()<br/> AT EXIT<br/> IF $# == 1<br/> DO<br/> argMap.put("quorumPacket", org.apache.zookeeper.server.quorum.LearnerHandler.packetToString($1));<br/> eventFuncReturn("Learner.readPacket", argMap);<br/> ENDRULE</p> <p>IIUC, the quorumpacket will never be null in follower. I'll look at the problem.</p></comment>
<comment id="14642401" author="ziyouw" created="Mon, 27 Jul 2015 07:42:36 +0000"><p>Thanks for watching on this. For this JIRA, I think the problem will happen if we do reconfig before the new node can sync all data from leader. So cloud we use earthquake to simulate this race condition? Currently, this problem only can be hit in VM environment.</p></comment>
<comment id="14642415" author="mitake" created="Mon, 27 Jul 2015 08:09:04 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a>,</p> <p>Could you check my understanding is correct? IIUC, your situation is like below:<br/> 1. server 1 boot<br/> 2. server 2 boot<br/> 3. client issues reconfig to server 1<br/> 4. server 2 tries to sync with server 1 with Learner.syncWithLeader()<br/> 5. server 3 boot<br/> 6. client issues reconfig to server 1</p> <p>(reconfig requests in 3 and 6 are overwrapping)</p> <p>Is this correct, I'll be able to reproduce the situation with earthquake.</p> </comment>
<comment id="14642435" author="mitake" created="Mon, 27 Jul 2015 08:30:16 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a> BTW, if it is possible, could you share your dockerfile for your testing?</p></comment>
<comment id="14642436" author="mitake" created="Mon, 27 Jul 2015 08:30:21 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a> BTW, if it is possible, could you share your dockerfile for your testing?</p></comment>
<comment id="14642437" author="mitake" created="Mon, 27 Jul 2015 08:30:23 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a> BTW, if it is possible, could you share your dockerfile for your testing?</p></comment>
<comment id="14642439" author="mitake" created="Mon, 27 Jul 2015 08:31:44 +0000"><p>Sorry for bothering with duplicated replies...</p></comment>
<comment id="14643947" author="mitake" created="Tue, 28 Jul 2015 06:56:35 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ziyouw" class="user-hover" rel="ziyouw">Ziyou Wang</a>,</p> <p>I found a little bit strange code path like below:<br/> 1. In the tail of Leader.shutdown(), leader tries to remove all learner handlers with synchronized (learners). The loop calls LearnerHandler.shutdown().<br/> 2. In LearnerHandler.shutdown(), learder.removeLearnerHandler() is called.<br/> 3. In Leader.removeLearnerHandler(), the member of Leader, learners, is also locked by synchronized</p> <p>Seems that the above sequence can cause deadlock.</p> <p>I removed synchronized(learners) in removeLearnerHandler in the attached patch. Could you test it on your environment?</p> <ol> <li>the targetting version is 3.5.0</li> </ol> </comment>
<comment id="14643952" author="mitake" created="Tue, 28 Jul 2015 06:58:02 +0000"><p>Sorry, the synchronized is reentrant, the patch would be wrong... please ignore it.</p></comment>
<comment id="14643954" author="mitake" created="Tue, 28 Jul 2015 07:04:05 +0000"><p>But the attached logs (with DEBUG level) don't contain messages of QuorumPeer.updateServerState(). Perhaps shutdown process of leader is stopping QuorumPeer main thread?</p></comment>
<comment id="14651669" author="ziyouw" created="Mon, 3 Aug 2015 09:43:44 +0000"><p>Sorry, I had some problems to receive mails from the registered mail address in last week.</p> <p>The situation is quite simple: start one zk server, and reconfig in server 1 to add the new server in the cluster, then start and reconfig the next server. But 4 should be finished before 3, because when we increase the node number from 1 to 2, zk must make sure the cluster still in majority after reconfig. When we add the second server into the cluster, then the server 3 is started and reconfigured to be part of the cluster.</p></comment>
<comment id="14651679" author="ziyouw" created="Mon, 3 Aug 2015 09:50:40 +0000"><p>Sorry, it is commercial code and I don't have the right to share it. But the environment is quite simple, I just run each zk server in one docker container and all the containers are running in the same VM. I think the key problem of this environment is the disk latency should be longer than normal cases. And this problem will become even serious if all of them are running with a slow disk.</p></comment>
<comment id="15390949" author="arshad.mohammad" created="Sun, 24 Jul 2016 05:39:58 +0000"><p>We also faced this issue.<br/> The problem occurs when reconfig's PROPOSAL and COMMITANDACTIVATE come in between the snapshot and the uptodate<br/> Following steps can followed to reproduce this issue very easily:</p> <ol> <li>start three server zookeeper cluster, lets say servers are server-1, server-2, server-3</li> <li>create big data in zookeeper, around 150 MB</li> <li>install the fourth server server-4, add server information of all the four servers in server-4 <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">server.1=192.168.1.3:2888:3888:participant server.2=192.168.1.3:2889:3889:participant server.3=192.168.1.3:2890:3890:participant server.4=192.168.1.2:2890:3890:participant </pre> </div></div></li> <li>connect to any of the existing servers</li> <li>start server-4, immediately run reconfig command from already connected client.<br/> <tt>reconfig -add server.4=192.168.1.2:2890:3890:participant;2181</tt></li> <li>open zookeeper/conf folder, you will find zoo.cfg.dynamic.next and existing quorum dynamic configuration file zoo.cfg.dynamic.100000000<br/> zoo.cfg.dynamic.next --gt; this has information of all the servers<br/> zoo.cfg.dynamic.100000000 --gt; this has information of only existing servers server-1,server-2,server-3</li> <li>Even though server-4 started and joined the quorum, if try to to restart, it will fail with following errors <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">2016-07-24 11:00:11,689 [myid:4] - ERROR [main:QuorumPeerMain@98] - Unexpected exception, exiting abnormally java.lang.RuntimeException: My id 4 not in the peer list at org.apache.zookeeper.server.quorum.QuorumPeer.start(QuorumPeer.java:748) at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:183) at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:120) at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:79) </pre> </div></div></li> </ol> </comment>
<comment id="15390956" author="arshad.mohammad" created="Sun, 24 Jul 2016 06:04:01 +0000"><p>The issue occurs when reconfig's PROPOSAL and COMMITANDACTIVATE come in between the snapshot and the uptodate, while syncing with the leader.<br/> In the existing code the reconfig commit is not processed as it should be processed for follower. In case of observer the reconfig's commit is processed properly.<br/> We can process the reconfig's commit for follower in the same way as it is being processed for observer to fix this issue.<br/> Submitting the fix</p></comment>
<comment id="15390957" author="shralex" created="Sun, 24 Jul 2016 06:11:32 +0000"><p>Could you please provide the logs ?</p> <p>The existence of .next file indicates that there was a failure in the middle of reconfig, and the commitandactivate<br/> message didn't arrive to the server on which you find this file. Which server was it ? just 4 or all of them ?<br/> The zoo.cfg.dynamic.100000000 file is the old configuration.</p> <p>Did the other servers continue to operate normally ? did they reboot ? were they able to serve requests afterwards ? would be helpful if you describe this too.</p> <p>7) is actually expected if server 4 crashed before it got the commitandactivate message. I described this in the manual:</p> <p>"Finally, note that once connected to the leader, a joiner adopts the last committed configuration, in which it is absent (the initial config of the joiner is backed up before being rewritten). If the joiner restarts in this state, it will not be able to boot since it is absent from its configuration file. In order to start it you’ll once again have to specify an initial configuration."</p></comment>
<comment id="15393388" author="arshad.mohammad" created="Tue, 26 Jul 2016 07:53:02 +0000"><blockquote><p>The existence of .next file indicates that there was a failure in the middle of reconfig, and the commitandactivate message didn't arrive to the server on which you find this file. </p></blockquote> <p>Failure may be one of scenarios where .next file is not deleted but not the only scenario. In this scenario .next file exists because of logical problem in the code.<br/> commitandactivate message arrives but it is not getting process because of bellow reason:<br/> sequence of events:<br/> 1) case Leader.NEWLEADER:<br/> lastSeenQuorumVerifier is updated with 100000000 and .next file created.<br/> 2) case Leader.PROPOSAL(reconfig): <br/> lastSeenQuorumVerifier is updated with 200000000 and earlier .next file overridden<br/> 3) case Leader.COMMITANDACTIVATE:<br/> Because snapshot in taken in step 1 snapshotTaken=true and <tt>self.processReconfig();</tt> is not called. This call was supposed to delete .next file and create the updated zoo.cfg.dynamic.200000000 file<br/> code reference:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">if</span> (!snapshotTaken) { ---- <span class="code-object">boolean</span> majorChange = self.processReconfig(qv, ByteBuffer.wrap(qp.getData()).getLong(), qp.getZxid(), <span class="code-keyword">true</span>); ---- } </pre> </div></div> <p>4) <br/> case Leader.UPTODATE:<br/> this calls self.processReconfig but again it is skipped because the lastSeenQuorumVerifier version is higher. it got updated in 2)</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> <span class="code-keyword">public</span> <span class="code-keyword">synchronized</span> QuorumVerifier setQuorumVerifier(QuorumVerifier qv, <span class="code-object">boolean</span> writeToDisk){ <span class="code-keyword">if</span> ((quorumVerifier != <span class="code-keyword">null</span>) amp;amp; (quorumVerifier.getVersion() gt;= qv.getVersion())) { </pre> </div></div> <blockquote><p>Which server was it ? just 4 or all of them ?</p></blockquote> <p>just 4</p> <blockquote><p>is actually expected if server 4 crashed before it got the commitandactivate message. I described this in the manual:</p></blockquote> <p>But the sever did not crash. It is in normal flow</p> <blockquote><p>Could you please provide the logs ?</p></blockquote> <p>Can you please try to reproduce with the above steps, we can reach to a conclusion fast. Let me know, if not reproducing I will reproduce and share the logs</p></comment>
<comment id="15393954" author="shralex" created="Tue, 26 Jul 2016 15:34:36 +0000"><p>Hi Arshad, your patch makes sense to me (as you say - processReconfig should be called and it wasn't when the snapshot flag was on), <br/> but we probably shouldn't commit it without a test. Since you have a clear scenario when this fails without the patch, would you be able to add a test ?<br/> I'm away until Aug 8 but can review when I'm back.</p></comment>
<comment id="15407936" author="arshad.mohammad" created="Thu, 4 Aug 2016 15:25:33 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, Please find new patch <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2172" title="Cluster crashes when reconfig a new node as a participant" class="issue-link" data-issue-key="ZOOKEEPER-2172"><del>ZOOKEEPER-2172</del></a>-03.patch, which includes test case as well.</p></comment>
<comment id="15407977" author="hadoopqa" created="Thu, 4 Aug 2016 15:47:04 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12822094/ZOOKEEPER-2172-03.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12822094/ZOOKEEPER-2172-03.patch</a><br/> against trunk revision 1755100.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3323//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3323//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3323//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3323//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3323//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3323//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15414507" author="shralex" created="Wed, 10 Aug 2016 00:32:26 +0000"><p>Arshad Mohammad, thanks for adding the test! </p> <p>Does this test consistently fail without your fix ? the reason I'm asking is that you pointed out previously that the issue occurs when a large snapshot is being taken, whereas in the test I don't see that the state is large. How do you make sure that COMMITANDACTIVATE is received while snapshotting ?</p></comment>
<comment id="15414659" author="arshad.mohammad" created="Wed, 10 Aug 2016 03:44:26 +0000"><ol> <li>Without fix, I just run 10 times, 9 times it failed one time it passed.<br/> After fix: 10 times passed out of 10 run<br/> At first place, covering this reconfig scenario through test cases is very difficult.<br/> This test case has been added to give reviewer a confidence in the fix. Hope the test case serves the purpose.</li> <li><blockquote><p>How do you make sure that COMMITANDACTIVATE is received while snapshotting ?</p></blockquote> <p>Not while snapshotting, but in between snapshotting and updtodate message.<br/> Before sending Leader.ACK sleep is added which gives a bigger time window for reconfig PROPOSAL and COMMITANDACTIVATE arrival<br/> and finally packet arrival seqence becomes Leader.NEWLEADER(snapshotting done here) --gt; reconfig Leader.PROPOSAL --gt; reconfig Leader.COMMITANDACTIVATE --gt; Leader.UPTODATE</p></li> </ol> </comment>
<comment id="15418102" author="shralex" created="Thu, 11 Aug 2016 23:21:39 +0000"><p>Thanks Arshad, I verified that the test fails before the patch and passes afterwards. I realize that the patch is complex, and appreciate you writing it! I was trying to understand the logic.</p> <p>A few minor comments:</p> <ul class="alternate" type="square"> <li>Please rename the test so that the name reflects what is being tested. Such as ReconfigDuringLeaderSync / ReconfigDuringSnapshot or something similar.</li> <li>Please don't assume that SERVER_COUNT = 3 (so the extra server can be number 4). You could use a different variable in the test instead of SERVER_COUNT, or just give the new server an id based on SERVER_COUNT instead of 4.</li> <li>The test shuts down the 4th server in one method and the other three in another. Consider doing this in the same place and also closing the client handles.</li> <li>getQP could be static, maybe rename to getCustomQuorumPeer or something like that</li> <li>Please add more comments explaining the logic of the test. For example, in writePacket please add a comment that you're delaying the ACK message a follower sends as response to a NEWLEADER message, so that the leader has a chance to send the reconfig and only then the UPTODATE (basically your comment in this thread above). Without the comment its not clear why you're checking for ACK while setting the newLeaderMessage flag. (I hope I understood the logic correctly). Similarly, when the 4th server is being started, please add a comment saying that this server will delay the response to a NEWLEADER message. Basically, more comments would be helpful <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></li> <li>In the code, shouldn't the condition of the if be "pif.hdr.getZxid() == qp.getZxid() amp;amp; qp.getType() == Leader.COMMITANDACTIVATE" ?<br/> otherwise the logic inside the if may not be correct (the configuration info qv is extracted from pif).</li> </ul> <p>Maybe change to:</p> <p> if (pif.hdr.getZxid() != qp.getZxid()) </p> { LOG.warn("Committing " + qp.getZxid() + ", but next proposal is " + pif.hdr.getZxid()); } <p> else if (qp.getType() == Leader.COMMITANDACTIVATE) {</p> </comment>
<comment id="15419988" author="shralex" created="Sat, 13 Aug 2016 16:26:46 +0000"><p>another thing you could add is to check that the quorumverifier was updated e.g., when you start the fourth server do that with only itself and the leader<br/> and then at the end of the test check that its quorum verifier includes all 4 servers. Checking the file deletion is ok, but its sort of a symptom of the fact<br/> that reconfiguration didn't complete on that server, so this is an attempt to check the configuration explicitly.</p></comment>
<comment id="15420065" author="hadoopqa" created="Sat, 13 Aug 2016 20:36:04 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12823593/ZOOKEEPER-2172-04.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12823593/ZOOKEEPER-2172-04.patch</a><br/> against trunk revision 1756262.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3363//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3363//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3363//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3363//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3363//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3363//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15420066" author="arshad.mohammad" created="Sat, 13 Aug 2016 20:39:37 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, addressed all the comments in the latest patch.</p></comment>
<comment id="15420112" author="shralex" created="Sat, 13 Aug 2016 22:59:43 +0000"><p>Thanks!<br/> I made a few more changes:</p> <ul class="alternate" type="square"> <li>starting the new server with only itself and the leader in the inittial config, so we can know that its config was really updated after reconfig</li> <li>changed the Learner.java logic a bit, to match what was there before ZK-107 (see revision history). Also I noticed that if majorChange = true we often skip important logic when throwing an exception, so I moved the exception part to the end of each code block.</li> </ul> <p>Can another committer take a look before we commit ? <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a> <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a></p></comment>
<comment id="15420113" author="shralex" created="Sat, 13 Aug 2016 23:11:15 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad" class="user-hover" rel="arshad.mohammad">Mohammad Arshad</a>, please take a look</p></comment>
<comment id="15420117" author="hadoopqa" created="Sat, 13 Aug 2016 23:26:10 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12823597/ZOOKEPER-2172-05.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12823597/ZOOKEPER-2172-05.patch</a><br/> against trunk revision 1756262.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3365//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3365//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3365//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3365//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3365//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3365//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15420144" author="shralex" created="Sun, 14 Aug 2016 00:38:33 +0000"><p>On second thought, investigating the right way to throw the exception should probably be done in a separate jira, so I reverted some of my changes.</p></comment>
<comment id="15420145" author="shralex" created="Sun, 14 Aug 2016 00:47:21 +0000"><p>I opened <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2513" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-2513</a> as a followup</p></comment>
<comment id="15420214" author="hadoopqa" created="Sun, 14 Aug 2016 04:49:53 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12823602/ZOOKEEPER-2172-06.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12823602/ZOOKEEPER-2172-06.patch</a><br/> against trunk revision 1756262.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3366//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3366//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3366//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3366//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3366//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3366//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15420233" author="arshad.mohammad" created="Sun, 14 Aug 2016 06:16:48 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> for authoring the patch, patch is improved a lot.<br/> It is good that the changes you introduced in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2172" title="Cluster crashes when reconfig a new node as a participant" class="issue-link" data-issue-key="ZOOKEEPER-2172"><del>ZOOKEEPER-2172</del></a>-05.patch have removed in the latest patch and created new jira to address those concerns.<br/> I corrected following nits in the <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2172" title="Cluster crashes when reconfig a new node as a participant" class="issue-link" data-issue-key="ZOOKEEPER-2172"><del>ZOOKEEPER-2172</del></a>-06.patch and submitted new patch</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>ZOOKEEPER-2172-06.patch:10: trailing whitespace. ZOOKEEPER-2172-06.patch:30: trailing whitespace. boolean majorChange = ZOOKEEPER-2172-06.patch:31: space before tab in indent. self.processReconfig(qv, ByteBuffer.wrap(qp.getData()).getLong(), qp.getZxid(), true); ZOOKEEPER-2172-06.patch:35: trailing whitespace. } ZOOKEEPER-2172-06.patch:111: trailing whitespace. * </pre> </div></div></comment>
<comment id="15420241" author="hadoopqa" created="Sun, 14 Aug 2016 06:36:14 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12823615/ZOOKEEPER-2172-07.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12823615/ZOOKEEPER-2172-07.patch</a><br/> against trunk revision 1756262.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3368//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3368//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3368//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3368//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3368//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3368//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15420429" author="shralex" created="Sun, 14 Aug 2016 18:29:44 +0000"><p>+1 from me. Since I removed most my changes, I feel comfortable committing this but lets wait a week or so to let<br/> other people comment if they wish. </p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad" class="user-hover" rel="arshad.mohammad">Mohammad Arshad</a> would you like to take a stab at <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2513" title="majorChange exceptions during leader sync" class="issue-link" data-issue-key="ZOOKEEPER-2513">ZOOKEEPER-2513</a> ?</p></comment>
<comment id="15474994" author="phunt" created="Thu, 8 Sep 2016 21:01:46 +0000"><p>Given this has signoff by Alex and it's been pending for a while I've committed it to 3.5.3 and trunk. Thanks Arshad (and Alex)!</p></comment>
<comment id="15475076" author="hudson" created="Thu, 8 Sep 2016 21:27:37 +0000"><p>FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3070 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/3070/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/3070/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2172" title="Cluster crashes when reconfig a new node as a participant" class="issue-link" data-issue-key="ZOOKEEPER-2172"><del>ZOOKEEPER-2172</del></a>: Cluster crashes when reconfig a new node as a participant (Arshad Mohammad via phunt) (phunt: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1759907" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1759907</a>)</p> <ul> <li>(edit) trunk/CHANGES.txt</li> <li>(edit) trunk/src/java/main/org/apache/zookeeper/server/quorum/Learner.java</li> <li>(add) trunk/src/java/test/org/apache/zookeeper/server/quorum/ReconfigDuringLeaderSyncTest.java</li> </ul> </comment>
<comment id="15492587" author="arshad.mohammad" created="Thu, 15 Sep 2016 06:59:16 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Bhupendra" class="user-hover" rel="Bhupendra">Bhupendra Kumar Jain</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ajithshetty" class="user-hover" rel="ajithshetty">Ajith S</a> for helping me in analysing this issue.<br/> Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>,<a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a> for reviewing and committing the patch.<br/> Thanks every one for participating in the discussion and providing useful information.</p></comment>
<comment id="16389307" author="yuvald" created="Wed, 7 Mar 2018 09:29:32 +0000"><p>Hi,</p> <p> </p> <p>This issue happens in a few of our customers using 3.4.8 version.</p> <p>During this days we are upgrading to 3.4.10.</p> <p>As 3.5.3 is in Beta, is it possible to backport this fix?</p> <p> </p> <p>Thanks,</p> <p> </p> <p>Yuval </p></comment>
<comment id="16389378" author="andorm" created="Wed, 7 Mar 2018 10:38:46 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yuvald" class="user-hover" rel="yuvald">Yuval Dori</a></p> <p>Are you sure about it's the same issue?</p> <p>Dynamic reconfig is a 3.5+ feature.</p></comment>
<comment id="16389390" author="yuvald" created="Wed, 7 Mar 2018 11:01:01 +0000"><p>1. The use case here was adding node to ZK cluster using zookeeper-3.5.jar. It's not the same use case as for our customers. the first use 5 machines with 3 ZK instances. shutdown 2 machine (one with ZK. so 2 ZK left) and got "java.lang.IllegalStateException: instance must be started before calling this method". The second customer got this error when deploying the application.</p> <p>This is this issue stack trace: </p> <p>2015-04-20 12:53:52,230 <span class="error">#91;myid:1#93;</span> - ERROR <span class="error">#91;LearnerHandler-/10.0.0.2:55890:LearnerHandler@580#93;</span> - Unexpected exception causing shutdown while sock still open <br/> java.io.EOFException <br/> at java.io.DataInputStream.readInt(Unknown Source) <br/> at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63) <br/> at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:83) <br/> at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:103) <br/> at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:493) <br/> 2015-04-20 12:53:52,231 <span class="error">#91;myid:1#93;</span> - WARN <span class="error">#91;LearnerHandler-/10.0.0.2:55890:LearnerHandler@595#93;</span> - ******* GOODBYE /10.0.0.2:55890 ******** </p> <p>And this our customers stack trace: </p> <p>2018-02-15T09:58:12.094+0100; ERROR; WSOSTSLXWIT01/MANAGER; P3424/T194; <span class="error">#91;SPACE/LearnerHandler-/10.17.46.142:49336/LearnerHandler#93;</span>; Unexpected exception causing shutdown while sock still open <br/> java.net.SocketTimeoutException: Read timed out <br/> at java.net.SocketInputStream.socketRead0(Native Method) <br/> at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) <br/> at java.net.SocketInputStream.read(SocketInputStream.java:171) <br/> at java.net.SocketInputStream.read(SocketInputStream.java:141) <br/> at java.io.BufferedInputStream.fill(BufferedInputStream.java:246) <br/> at java.io.BufferedInputStream.read(BufferedInputStream.java:265) <br/> at java.io.DataInputStream.readInt(DataInputStream.java:387) <br/> at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63) <br/> at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:83) <br/> at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:99) <br/> at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:542) </p> <p>As you can see the row lines for BinaryInputArchive.java and LearnerHandler.java are different but I thought its related to the different versions (3.4.8 vs 3.5). </p> <p> </p> <p>The first customer tested it with ZK 3.5.3 and it didn't reproduced!</p> <p>What is this new feature that was added to 3.5?</p> <p>I'll be happy to hear whether do you think if it's related or not.</p> <p>Thanks,</p> <p> </p> <p>Yuval</p></comment>
<comment id="16389444" author="andorm" created="Wed, 7 Mar 2018 11:48:57 +0000"><p>These are 2 totally different errors I believe.</p> <p>I'm pretty sure they're not related, because the Jira is about a feature which is available from 3.5 versions only as mentioned.</p> <p>Would you please kindly move this discussion to ZooKeeper 'user' mailing list and provide some more information (ensemble topology, config files, log files, step-by-step scenario, etc.)?</p></comment>
<comment id="16389604" author="yuvald" created="Wed, 7 Mar 2018 14:14:59 +0000"><p>Thanks Andor.</p> <p>Do you think it's another ZK bug or something else?</p> <p> </p> <p> </p></comment>
<comment id="16389608" author="andorm" created="Wed, 7 Mar 2018 14:16:59 +0000"><p>Could be.</p></comment>
<comment id="16389619" author="yuvald" created="Wed, 7 Mar 2018 14:27:46 +0000"><p>So, in order to further investigate it, do I need to subscribe here:</p> <p><a href="https://zookeeper.apache.org/lists.html" class="external-link" target="_blank" rel="nofollow noopener">https://zookeeper.apache.org/lists.html</a> ?</p> <p> </p> <p>Thanks,</p> <p> </p> <p>Yuval</p> <p> </p> <p> </p> <p> </p></comment>
<comment id="16389636" author="andorm" created="Wed, 7 Mar 2018 14:37:08 +0000"><p>Yes, please subscribe to 'users' list.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="13089692">ZOOKEEPER-2855</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10001">
<name>dependent</name>
<inwardlinks description="is depended upon by">
<issuelink>
<issuekey id="12997163">ZOOKEEPER-2513</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12819814" name="ZOOKEEPER-2172-02.patch" size="2557" author="arshad.mohammad" created="Sun, 24 Jul 2016 06:04:01 +0000"/>
<attachment id="12822094" name="ZOOKEEPER-2172-03.patch" size="12024" author="arshad.mohammad" created="Thu, 4 Aug 2016 15:23:46 +0000"/>
<attachment id="12823593" name="ZOOKEEPER-2172-04.patch" size="12977" author="arshad.mohammad" created="Sat, 13 Aug 2016 20:17:51 +0000"/>
<attachment id="12823602" name="ZOOKEEPER-2172-06.patch" size="13890" author="shralex" created="Sun, 14 Aug 2016 00:38:33 +0000"/>
<attachment id="12823615" name="ZOOKEEPER-2172-07.patch" size="13148" author="arshad.mohammad" created="Sun, 14 Aug 2016 06:16:48 +0000"/>
<attachment id="12747504" name="ZOOKEEPER-2172.patch" size="680" author="mitake" created="Tue, 28 Jul 2015 06:56:35 +0000"/>
<attachment id="12823597" name="ZOOKEPER-2172-05.patch" size="16606" author="shralex" created="Sat, 13 Aug 2016 22:59:43 +0000"/>
<attachment id="12746313" name="history.txt" size="64819" author="mitake" created="Tue, 21 Jul 2015 10:07:02 +0000"/>
<attachment id="12726778" name="node-1.log" size="175329" author="ziyouw" created="Tue, 21 Apr 2015 04:16:19 +0000"/>
<attachment id="12726779" name="node-2.log" size="110773" author="ziyouw" created="Tue, 21 Apr 2015 04:16:19 +0000"/>
<attachment id="12726780" name="node-3.log" size="20101" author="ziyouw" created="Tue, 21 Apr 2015 04:16:19 +0000"/>
<attachment id="12736571" name="zoo-1.log" size="1625062" author="ziyouw" created="Mon, 1 Jun 2015 14:34:50 +0000"/>
<attachment id="12736729" name="zoo-2-1.log" size="1681893" author="ziyouw" created="Tue, 2 Jun 2015 04:48:24 +0000"/>
<attachment id="12736730" name="zoo-2-2.log" size="445019" author="ziyouw" created="Tue, 2 Jun 2015 04:48:24 +0000"/>
<attachment id="12736731" name="zoo-2-3.log" size="61607" author="ziyouw" created="Tue, 2 Jun 2015 04:48:24 +0000"/>
<attachment id="12736572" name="zoo-2.log" size="507235" author="ziyouw" created="Mon, 1 Jun 2015 14:34:50 +0000"/>
<attachment id="12740083" name="zoo-2212-1.log" size="4107098" author="ziyouw" created="Wed, 17 Jun 2015 10:34:58 +0000"/>
<attachment id="12740084" name="zoo-2212-2.log" size="3248193" author="ziyouw" created="Wed, 17 Jun 2015 10:34:58 +0000"/>
<attachment id="12740085" name="zoo-2212-3.log" size="122714" author="ziyouw" created="Wed, 17 Jun 2015 10:34:58 +0000"/>
<attachment id="12737136" name="zoo-3-1.log" size="1849645" author="ziyouw" created="Wed, 3 Jun 2015 09:25:30 +0000"/>
<attachment id="12737137" name="zoo-3-2.log" size="880313" author="ziyouw" created="Wed, 3 Jun 2015 09:25:30 +0000"/>
<attachment id="12737138" name="zoo-3-3.log" size="69558" author="ziyouw" created="Wed, 3 Jun 2015 09:25:30 +0000"/>
<attachment id="12736573" name="zoo-3.log" size="58292" author="ziyouw" created="Mon, 1 Jun 2015 14:34:50 +0000"/>
<attachment id="12741219" name="zoo-4-1.log" size="1452933" author="ziyouw" created="Tue, 23 Jun 2015 05:38:55 +0000"/>
<attachment id="12741220" name="zoo-4-2.log" size="450117" author="ziyouw" created="Tue, 23 Jun 2015 05:38:55 +0000"/>
<attachment id="12741221" name="zoo-4-3.log" size="61149" author="ziyouw" created="Tue, 23 Jun 2015 05:38:55 +0000"/>
<attachment id="12726781" name="zoo.cfg.dynamic.10000005d" size="181" author="ziyouw" created="Tue, 21 Apr 2015 04:16:19 +0000"/>
<attachment id="12726782" name="zoo.cfg.dynamic.next" size="181" author="ziyouw" created="Tue, 21 Apr 2015 04:16:19 +0000"/>
<attachment id="12735115" name="zookeeper-1.log" size="1376680" author="ziyouw" created="Mon, 25 May 2015 04:45:11 +0000"/>
<attachment id="12746314" name="zookeeper-1.out" size="51717" author="mitake" created="Tue, 21 Jul 2015 10:07:02 +0000"/>
<attachment id="12735116" name="zookeeper-2.log" size="259399" author="ziyouw" created="Mon, 25 May 2015 04:45:11 +0000"/>
<attachment id="12746315" name="zookeeper-2.out" size="33860" author="mitake" created="Tue, 21 Jul 2015 10:07:02 +0000"/>
<attachment id="12735117" name="zookeeper-3.log" size="63128" author="ziyouw" created="Mon, 25 May 2015 04:45:11 +0000"/>
<attachment id="12746316" name="zookeeper-3.out" size="60142" author="mitake" created="Tue, 21 Jul 2015 10:07:02 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i2disv:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-2201] Network issues can cause cluster to hang due to near-deadlock</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-2201</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p><tt>DataTree.serializeNode</tt> synchronizes on the <tt>DataNode</tt> it is about to serialize then writes it out via <tt>OutputArchive.writeRecord</tt>, potentially to a network connection. Under default linux TCP settings, a network connection where the other side completely disappears will hang (blocking on the <tt>java.net.SocketOutputStream.socketWrite0</tt> call) for over 15 minutes. During this time, any attempt to create/delete/modify the <tt>DataNode</tt> will cause the leader to hang at the beginning of the request processor chain:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>"ProcessThread(sid:5 cport:-1):" prio=10 tid=0x00000000026f1800 nid=0x379c waiting for monitor entry [0x00007fe6c2a8c000] java.lang.Thread.State: BLOCKED (on object monitor) at org.apache.zookeeper.server.PrepRequestProcessor.getRecordForPath(PrepRequestProcessor.java:163) - waiting to lock lt;0x00000000d4cd9e28gt; (a org.apache.zookeeper.server.DataNode) - locked lt;0x00000000d2ef81d0gt; (a java.util.ArrayList) at org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(PrepRequestProcessor.java:345) at org.apache.zookeeper.server.PrepRequestProcessor.pRequest(PrepRequestProcessor.java:534) at org.apache.zookeeper.server.PrepRequestProcessor.run(PrepRequestProcessor.java:131) </pre> </div></div> <p>Additionally, any attempt to send a snapshot to a follower or to disk will hang.</p> <p>Because the ping packets are sent by another thread which is unaffected, followers never time out and become leader, even though the cluster will make no progress until either the leader is killed or the TCP connection times out. This isn't exactly a deadlock since it will resolve itself eventually, but as mentioned above this will take gt; 15 minutes with the default TCP retry settings in linux.</p> <p>A simple solution to this is: in <tt>DataTree.serializeNode</tt> we can take a copy of the contents of the <tt>DataNode</tt> (as is done with its children) in the synchronized block, then call <tt>writeRecord</tt> with the copy of the <tt>DataNode</tt> outside of the original <tt>DataNode</tt> synchronized block.</p></description>
<environment/>
<key id="12834449">ZOOKEEPER-2201</key>
<summary>Network issues can cause cluster to hang due to near-deadlock</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="dnadolny">Donny Nadolny</assignee>
<reporter username="dnadolny">Donny Nadolny</reporter>
<labels> </labels>
<created>Tue, 2 Jun 2015 01:30:25 +0000</created>
<updated>Thu, 21 Jul 2016 20:18:45 +0000</updated>
<resolved>Sat, 6 Jun 2015 16:54:09 +0000</resolved>
<version>3.4.6</version>
<version>3.5.0</version>
<fixVersion>3.4.7</fixVersion>
<fixVersion>3.5.2</fixVersion>
<fixVersion>3.6.0</fixVersion>
<due/>
<votes>0</votes>
<watches>10</watches>
<comments>
<comment id="14568367" author="hadoopqa" created="Tue, 2 Jun 2015 01:41:21 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12736704/ZOOKEEPER-2201.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12736704/ZOOKEEPER-2201.patch</a><br/> against trunk revision 1682823.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2739//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2739//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14570314" author="phunt" created="Wed, 3 Jun 2015 05:52:06 +0000"><p>The approach looks reasonable to me and this is a serious issue. Perhaps <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> or <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hdeng" class="user-hover" rel="hdeng">Hongchao Deng</a> might have some insight?</p> <p>Can you use copyStatPersisted instead of copying yourself?</p> <p>Also can you provide a patch for trunk as well as branch 3.4? We'll need to fix that in both places and as you can see the patch is not applying cleanly to trunk.</p> <p>Thanks!</p></comment>
<comment id="14570893" author="dnadolny" created="Wed, 3 Jun 2015 14:17:04 +0000"><p>patch against trunk</p></comment>
<comment id="14570897" author="dnadolny" created="Wed, 3 Jun 2015 14:19:54 +0000"><p>patch against 3.4 branch</p></comment>
<comment id="14570900" author="hadoopqa" created="Wed, 3 Jun 2015 14:21:23 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12737283/ZOOKEEPER-2201-branch-34.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12737283/ZOOKEEPER-2201-branch-34.patch</a><br/> against trunk revision 1683163.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2746//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2746//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14570901" author="dnadolny" created="Wed, 3 Jun 2015 14:21:48 +0000"><p>I had seen <tt>DataNode.copyStat</tt> which gives a <tt>Stat</tt> but didn't notice <tt>DataTree.copyStatPersisted</tt>.<br/> I've updated the code to use <tt>copyStatPersisted</tt>, and included a patch against trunk and another against the 3.4 branch. My previous one was against 3.4.6 specifically.<br/> (Hmm, I see now that JIRA adds comments about an attachment as a plain comment in the ticket. I was hoping for a description beside the file itself...)</p></comment>
<comment id="14570930" author="dnadolny" created="Wed, 3 Jun 2015 14:36:58 +0000"><p>The failure above is for the patch against the branch, which of course can't be applied against trunk. I'll re-upload the trunk patch to get the build kicked off again.</p></comment>
<comment id="14570938" author="hadoopqa" created="Wed, 3 Jun 2015 14:48:24 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12737286/ZOOKEEPER-2201.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12737286/ZOOKEEPER-2201.patch</a><br/> against trunk revision 1683163.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2747//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2747//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2747//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2747//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2747//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2747//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14571255" author="dnadolny" created="Wed, 3 Jun 2015 16:07:07 +0000"><p>The failure above is due to a flaky test which fails occasionally depending on timing. I've filed a ticket (and patch) to fix that at <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2204" title="LearnerSnapshotThrottlerTest.testHighContentionWithTimeout fails occasionally" class="issue-link" data-issue-key="ZOOKEEPER-2204"><del>ZOOKEEPER-2204</del></a>. I'll upload the patch for trunk once more in the hopes I don't get unlucky and hit the same transient failure twice.</p></comment>
<comment id="14571274" author="hadoopqa" created="Wed, 3 Jun 2015 16:18:38 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12737302/ZOOKEEPER-2201.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12737302/ZOOKEEPER-2201.patch</a><br/> against trunk revision 1683163.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2749//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2749//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2749//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2749//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2749//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2749//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14573432" author="rgs" created="Thu, 4 Jun 2015 19:24:33 +0000"><p>testHighContentionWithTimeout has now been fixed: <a href="https://github.com/apache/zookeeper/commit/fac170aa2e82c63aeea60d756a450ce343c43e6d" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/commit/fac170aa2e82c63aeea60d756a450ce343c43e6d</a>. Could you re-kick the build? Thanks!</p></comment>
<comment id="14573461" author="rgs" created="Thu, 4 Jun 2015 19:46:32 +0000"><p>Why is this true:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">+ <span class="code-comment">//we <span class="code-keyword">do</span> not need to make a copy of node.data because the contents </span>+ <span class="code-comment">//are never changed </span>+ nodeCopy = <span class="code-keyword">new</span> DataNode(node.data, node.acl, statCopy); </pre> </div></div> <p>? Can't node.data change after we leave the synchronized block if setData is called: <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java#L643" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java#L643</a> ? Ditto for the acl: <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java#L744" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java#L744</a> </p> <p>Also, could we encapsulate the DataNode copying logic in DataNode#clone (I suspect it is or will be duplicated otherwise)? </p></comment>
<comment id="14573628" author="dnadolny" created="Thu, 4 Jun 2015 21:38:07 +0000"><p><tt>node.data</tt> can change to be a new reference if we call <tt>setData</tt>, what I meant was that we never call <tt>node.data[x] = ...</tt> so that it was safe to give the <tt>nodeCopy</tt> the same reference to the underlying array. Compare that with <tt>node.children</tt> which is a mutable <tt>Set</tt> so the existing code needs to take a copy of that first.</p> <p>With the acl (and stat info), yes those can both change, but what we ensure by synchronizing on <tt>node</tt> is that we get a consistent copy of the <tt>DataNode</tt> state as it once existed - it can change after we take our copy, just like it could change after we wrote it over the wire, but we've captured a consistent view of it in both cases.</p> <p>For moving it to a <tt>DataNode.clone</tt> method, I'm not sure. I thought about that when I was initially writing this and decided against it at the time because I think this is a very specific kind of <tt>clone</tt>: we're getting the same reference to <tt>data</tt>, but for <tt>children</tt> we'd get a copy, however the copy would still point to the same children <tt>DataNode</tt> instances that the original did. I see it as a weird kind of shallow copy, so I'm not sure it makes sense to move it.</p> <p>I've resubmitted the original patch for now, although I'm open to moving it to a <tt>copy</tt> method.</p></comment>
<comment id="14573657" author="hadoopqa" created="Thu, 4 Jun 2015 21:53:41 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12737702/ZOOKEEPER-2201.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12737702/ZOOKEEPER-2201.patch</a><br/> against trunk revision 1683605.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2752//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2752//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2752//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2752//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2752//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2752//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14573939" author="rgs" created="Fri, 5 Jun 2015 02:01:51 +0000"><blockquote><p>node.data can change to be a new reference if we call setData, what I meant was that we never call node.data<span class="error">#91;x#93;</span> = ... so that it was safe to give the nodeCopy the same reference to the underlying array. Compare that with node.children which is a mutable Set so the existing code needs to take a copy of that first.</p></blockquote> <p>ah - thanks for clarifying.yeah, i guess if data was immutable (ByteBuffer maybe?) clone() would make more sense. or if agree it's a shallow copy since we get the data by reference. or we made data private and added a setter. then clone would make sense. </p> </comment>
<comment id="14573948" author="rgs" created="Fri, 5 Jun 2015 02:14:48 +0000"><p>+1, though if someone has an idea to elegantly implement clone and encapsulate that logic (and express that data is immutable), that would be nice <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="14575364" author="hdeng" created="Fri, 5 Jun 2015 22:40:45 +0000"><p>+1<br/> The patch looks good!</p></comment>
<comment id="14575827" author="rgs" created="Sat, 6 Jun 2015 16:54:37 +0000"><p>Merged:</p> <p><a href="http://svn.apache.org/viewvc?view=revisionamp;revision=1683878" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewvc?view=revisionamp;revision=1683878</a><br/> <a href="http://svn.apache.org/viewvc?view=revisionamp;revision=1683930" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewvc?view=revisionamp;revision=1683930</a><br/> <a href="http://svn.apache.org/viewvc?view=revisionamp;revision=1683931" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewvc?view=revisionamp;revision=1683931</a></p> <p>(pasting SVN URLs since the github mirror seems to be lagging). </p> <p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dnadolny" class="user-hover" rel="dnadolny">Donny Nadolny</a>! </p></comment>
<comment id="14576117" author="hudson" created="Sun, 7 Jun 2015 06:04:55 +0000"><p>SUCCESS: Integrated in ZooKeeper-trunk #2718 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2718/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2718/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2201" title="Network issues can cause cluster to hang due to near-deadlock" class="issue-link" data-issue-key="ZOOKEEPER-2201"><del>ZOOKEEPER-2201</del></a>: Network issues can cause cluster to hang due to near-deadlock<br/> (Donny Nadolny via rgs) (rgs: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1683878" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1683878</a>)</p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/DataTreeTest.java</li> </ul> </comment>
</comments>
<attachments>
<attachment id="12737283" name="ZOOKEEPER-2201-branch-34.patch" size="4952" author="dnadolny" created="Wed, 3 Jun 2015 14:19:54 +0000"/>
<attachment id="12737702" name="ZOOKEEPER-2201.patch" size="4916" author="dnadolny" created="Thu, 4 Jun 2015 21:38:26 +0000"/>
<attachment id="12737302" name="ZOOKEEPER-2201.patch" size="4916" author="dnadolny" created="Wed, 3 Jun 2015 16:07:38 +0000"/>
<attachment id="12737286" name="ZOOKEEPER-2201.patch" size="4916" author="dnadolny" created="Wed, 3 Jun 2015 14:37:34 +0000"/>
<attachment id="12737282" name="ZOOKEEPER-2201.patch" size="4916" author="dnadolny" created="Wed, 3 Jun 2015 14:17:04 +0000"/>
<attachment id="12736704" name="ZOOKEEPER-2201.patch" size="5249" author="dnadolny" created="Tue, 2 Jun 2015 01:32:14 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i2fhnj:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1731] Unsynchronized access to ServerCnxnFactory.connectionBeans results in deadlock</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1731</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>We had a cluster of 3 peers (running 3.4.3) fail after we took down 1 peer briefly for maintenance. A second peer became unresponsive and the leader lost quorum. Thread dumps on the second peer showed two threads consistently stuck in these states:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>"QuorumPeer[myid=0]/0.0.0.0:2181" prio=10 tid=0x00002aaab8d20800 nid=0x598a runnable [0x000000004335d000] java.lang.Thread.State: RUNNABLE at java.util.HashMap.put(HashMap.java:405) at org.apache.zookeeper.server.ServerCnxnFactory.registerConnection(ServerCnxnFactory.java:131) at org.apache.zookeeper.server.ZooKeeperServer.finishSessionInit(ZooKeeperServer.java:572) at org.apache.zookeeper.server.quorum.Learner.revalidate(Learner.java:444) at org.apache.zookeeper.server.quorum.Follower.processPacket(Follower.java:133) at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:86) at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:740) "NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181" daemon prio=10 tid=0x00002aaab84b0800 nid=0x5986 runnable [0x0000000040878000] java.lang.Thread.State: RUNNABLE at java.util.HashMap.removeEntryForKey(HashMap.java:614) at java.util.HashMap.remove(HashMap.java:581) at org.apache.zookeeper.server.ServerCnxnFactory.unregisterConnection(ServerCnxnFactory.java:120) at org.apache.zookeeper.server.NIOServerCnxn.close(NIOServerCnxn.java:971) - locked lt;0x000000078d8a51f0gt; (a java.util.HashSet) at org.apache.zookeeper.server.NIOServerCnxnFactory.closeSessionWithoutWakeup(NIOServerCnxnFactory.java:307) at org.apache.zookeeper.server.NIOServerCnxnFactory.closeSession(NIOServerCnxnFactory.java:294) - locked lt;0x000000078d82c750gt; (a org.apache.zookeeper.server.NIOServerCnxnFactory) at org.apache.zookeeper.server.ZooKeeperServer.processConnectRequest(ZooKeeperServer.java:834) at org.apache.zookeeper.server.NIOServerCnxn.readConnectRequest(NIOServerCnxn.java:410) at org.apache.zookeeper.server.NIOServerCnxn.readPayload(NIOServerCnxn.java:200) at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:236) at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:224) at java.lang.Thread.run(Thread.java:662) </pre> </div></div> <p>It shows both threads concurrently modifying ServerCnxnFactory.connectionBeans which is a java.util.HashMap.</p> <p>This cluster was serving thousands of clients, which seems to make this condition more likely as it appears to occur when one client connects and another disconnects at about the same time.</p></description>
<environment/>
<key id="12658066">ZOOKEEPER-1731</key>
<summary>Unsynchronized access to ServerCnxnFactory.connectionBeans results in deadlock</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="davelatham">Dave Latham</assignee>
<reporter username="davelatham">Dave Latham</reporter>
<labels> </labels>
<created>Tue, 16 Jul 2013 17:59:56 +0000</created>
<updated>Thu, 3 Mar 2016 01:33:04 +0000</updated>
<resolved>Fri, 2 Aug 2013 17:45:21 +0000</resolved>
<fixVersion>3.4.6</fixVersion>
<due/>
<votes>0</votes>
<watches>8</watches>
<comments>
<comment id="13722600" author="davelatham" created="Mon, 29 Jul 2013 16:35:42 +0000"><p>Here's a simple patch that merely changes ServerCnxnFactory.connectionBeans to use a ConcurrentHashMap rather than a plain HashMap. <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fournc" class="user-hover" rel="fournc">Camille Fournier</a> pointed out that this same fix was already done in 3.5 as part of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1505" title="Multi-thread CommitProcessor" class="issue-link" data-issue-key="ZOOKEEPER-1505"><del>ZOOKEEPER-1505</del></a>. </p></comment>
<comment id="13722611" author="hadoopqa" created="Mon, 29 Jul 2013 16:42:11 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12594725/ZOOKEEPER-1731.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12594725/ZOOKEEPER-1731.patch</a><br/> against trunk revision 1503101.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1525//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1525//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13722640" author="davelatham" created="Mon, 29 Jul 2013 17:03:10 +0000"><p>Note this patch is for branch-3.4 and so doesn't apply to trunk.</p></comment>
<comment id="13727807" author="fournc" created="Fri, 2 Aug 2013 17:03:37 +0000"><p>Looks good checking in</p></comment>
<comment id="13933789" author="fpj" created="Thu, 13 Mar 2014 18:17:13 +0000"><p>Closing issues after releasing 3.4.6.</p></comment>
</comments>
<attachments>
<attachment id="12594725" name="ZOOKEEPER-1731.patch" size="1196" author="davelatham" created="Mon, 29 Jul 2013 16:35:42 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>338260</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i1mcdz:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>338580</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1324] Remove Duplicate NEWLEADER packets from the Leader to the Follower.</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1324</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description/>
<environment/>
<key id="12534519">ZOOKEEPER-1324</key>
<summary>Remove Duplicate NEWLEADER packets from the Leader to the Follower.</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="fpj">Flavio Paiva Junqueira</assignee>
<reporter username="mahadev">Mahadev Konar</reporter>
<labels> </labels>
<created>Fri, 9 Dec 2011 18:39:17 +0000</created>
<updated>Thu, 13 Mar 2014 18:17:02 +0000</updated>
<resolved>Tue, 14 May 2013 12:29:13 +0000</resolved>
<version>3.5.0</version>
<fixVersion>3.4.6</fixVersion>
<fixVersion>3.5.0</fixVersion>
<component>quorum</component>
<due/>
<votes>0</votes>
<watches>10</watches>
<comments>
<comment id="13543358" author="thawan" created="Thu, 3 Jan 2013 22:26:52 +0000"><p>no-whitespace-changes version of the patch (so indentation may not be correct)</p></comment>
<comment id="13543362" author="thawan" created="Thu, 3 Jan 2013 22:30:47 +0000"><p>The same patch but with the whitespace changes (by Eclipse)</p></comment>
<comment id="13543365" author="thawan" created="Thu, 3 Jan 2013 22:32:56 +0000"><p>I was tracking down why I saw some followers taking snapshot 2 times during quorum forming and found that this is the problem. The fix is according to what Flavio suggested in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1319" title="Missing data after restarting+expanding a cluster" class="issue-link" data-issue-key="ZOOKEEPER-1319"><del>ZOOKEEPER-1319</del></a></p></comment>
<comment id="13543395" author="thawan" created="Thu, 3 Jan 2013 22:59:42 +0000"><p>version with the right whitespace</p></comment>
<comment id="13543411" author="hadoopqa" created="Thu, 3 Jan 2013 23:29:35 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12563186/ZOOKEEPER-1324.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12563186/ZOOKEEPER-1324.patch</a><br/> against trunk revision 1427034.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1319//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1319//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1319//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1319//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1319//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1319//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13543521" author="eribeiro" created="Fri, 4 Jan 2013 02:02:32 +0000"><p>Thawan, have you looked at <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1498" title="Zab1.0 sends NEWLEADER packet twice" class="issue-link" data-issue-key="ZOOKEEPER-1498"><del>ZOOKEEPER-1498</del></a>? It seems to be a duplicate of this issue. See if it's okay to mark it as duplicate, please?</p></comment>
<comment id="13545541" author="fpj" created="Mon, 7 Jan 2013 00:48:24 +0000"><p>I understand I suggested this solution previously, but I find a bit hacky. Let me think some more about this and see if I can come up with something better. It would be great if we could just use the one the leader is queuing already. In the case we end up committing this patch, I suggest we add a comment explaining why we have that if statement. Otherwise, in the future, we might end up wondering what it is doing there.</p></comment>
<comment id="13546887" author="fpj" created="Tue, 8 Jan 2013 13:41:01 +0000"><p>What about this change? I still need to clean up the patch, so it is not final yet, but the change I'm proposing can be reviewed.</p></comment>
<comment id="13547301" author="thawan" created="Tue, 8 Jan 2013 21:35:52 +0000"><p>I understand the fact that you want to treat NEWLEADER like another proposal and reuse existing facility to handle it. However, treating this like a normal proposal also comes with some issues.<br/> 1. Currently procesAck() have to a special logic to handle NEWLEADER proposal, it need to start up ZK server<br/> 2. We are sending NEWLEADER proposal implicitly as part of sending outstanding proposals to the learners. Now you have to keep adding NEWLEADER back into outstanding proposals whenever a new learner joins the quorum since it is removed whenever NEWLEADER packet is committed.<br/> 3. There is no need to for observers to see outstanding proposals. This is minor optimization, but we don't send outstanding proposals to the observer in startForwarding() in our internal branch. </p> <p>If we really want to clean this up, I suggested that we do it another way around. I think queuing NEWLEADER packet into the packet queue explicitly make the code easier to follow. Additional, we may factor out NEWLEADER to use its own method for collecting the votes similar to waitForEpochAck(), so that we don't overload processAck() and outstanding proposals to do multiple things. Let me know what you think</p></comment>
<comment id="13547355" author="fpj" created="Tue, 8 Jan 2013 22:35:25 +0000"><p>Having a different method for collecting the ack and not overloading processAck sounds great. On adding NEWLEADER to the packet queue, I need a confirmation to make sure I understand your proposal. I think you're suggesting that we replace adding a new leader proposal to outstandingProposals in #lead() with a barrier method that waits for enough acks to return, but we keep adding NEWLEADER to the queue in LearnerHandler as we have today.</p></comment>
<comment id="13549144" author="thawan" created="Wed, 9 Jan 2013 22:52:29 +0000"><p>This is the first revision of the fix. Below are some thought about the diff</p> <p>1. This change also prevent the leader from counting Observer's NEWLEADER_ACK causing the quorum to form prematurely. I will submit a unit test in a separate jira</p> <p>2. I just noticed that the learner send ACK back to leader for both NEWLEADER and UPTODATE. I don't think UPTODATE's ack is part of the protocol, but didn't want to change it</p> <p>3. After LearnerHandler call waitForNewLeaderAck(), it still wait and check if ZK server is started or not. I don't think we need that check anymore but it doesn't hurt to leave it as well. </p></comment>
<comment id="13549163" author="hadoopqa" created="Wed, 9 Jan 2013 23:07:16 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12564047/ZOOKEEPER-1324.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12564047/ZOOKEEPER-1324.patch</a><br/> against trunk revision 1427034.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1327//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1327//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1327//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1327//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1327//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1327//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13549198" author="thawan" created="Wed, 9 Jan 2013 23:44:05 +0000"><p>Fix findbugs warning and check that NEWLEADER's ACK is from the correct epoch</p></comment>
<comment id="13549219" author="fpj" created="Thu, 10 Jan 2013 00:12:24 +0000"><p>It looks pretty good, Thawan, thanks for coming up with it fast. </p> <p>I was planning on removing that ack in learner handler after receiving UPTODATE. I believe it is there for backward compatibility with the 3.3 branch. </p> <p>I was also wondering about the synchronization of startZKServer. That whole block of code was previously synchronized in processAck, but if I'm reading it right only lastCommitted can have concurrent accesses in that block, is it right? </p></comment>
<comment id="13549224" author="hadoopqa" created="Thu, 10 Jan 2013 00:16:57 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12564058/ZOOKEEPER-1324.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12564058/ZOOKEEPER-1324.patch</a><br/> against trunk revision 1427034.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1328//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1328//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1328//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1328//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1328//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1328//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13549267" author="thawan" created="Thu, 10 Jan 2013 01:22:01 +0000"><p>synchronization of lastCommitted is based on findbugs warning. </p> <p>My understanding is that leader object is used to lock the entire request processing pipeline. So it might be safer to do synchronized the entire method in order to guarantee that lastCommitted and DB's zxid is set atomically when the server start (and the system start processing request). </p></comment>
<comment id="13549345" author="thawan" created="Thu, 10 Jan 2013 04:01:09 +0000"><p>Fix synchronization and print list of supporting followers when quorum is formed</p></comment>
<comment id="13549348" author="hadoopqa" created="Thu, 10 Jan 2013 04:27:09 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12564118/ZOOKEEPER-1324.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12564118/ZOOKEEPER-1324.patch</a><br/> against trunk revision 1427034.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1329//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1329//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1329//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1329//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1329//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1329//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13550454" author="fpj" created="Thu, 10 Jan 2013 21:38:18 +0000"><p>Thanks, Thawan. +1, it looks good to me.</p></comment>
<comment id="13554357" author="fpj" created="Tue, 15 Jan 2013 21:14:11 +0000"><p>Committed revision 1433651.</p></comment>
<comment id="13554937" author="hudson" created="Wed, 16 Jan 2013 11:00:16 +0000"><p>Integrated in ZooKeeper-trunk #1804 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1804/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1804/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1324" title="Remove Duplicate NEWLEADER packets from the Leader to the Follower." class="issue-link" data-issue-key="ZOOKEEPER-1324"><del>ZOOKEEPER-1324</del></a>. Remove Duplicate NEWLEADER packets from the Leader to the Follower. (thawan via fpj) (Revision 1433651)</p> <p> Result = SUCCESS<br/> fpj : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1433651" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1433651</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java</li> </ul> </comment>
<comment id="13555805" author="shralex" created="Thu, 17 Jan 2013 03:27:50 +0000"><p>Hi Thawan, Flavio and Patrick.</p> <p>Unfortunately, this patch (committed yesterday) creates a big problem for me. In order to merge ZK-107 with it I basically need to re-implement ZK-1324, and I don't feel I'm the expert on ZK-1324. Since ZK-107 is a much much bigger patch, and since it is ready to be committed for months now, I suggest to roll back ZK-1324, commit ZK-107 and have ZK-1324 re-implemented on top by someone who understand what this patch is about. I'm really sorry about this Thawan, its not your fault, and I can help re-implementing it, I just think that playing continuous catchup having me re-implement such subtle code committed by others like in ZK-1324 is a very bad idea...</p> <p>Best Regards,<br/> Alex</p></comment>
<comment id="13556035" author="fpj" created="Thu, 17 Jan 2013 10:15:09 +0000"><p>Hi Alex,</p> <p>This is indeed kind of unfortunate. I gave it a number of days between +1'ing it and committing so that people could also review and comment. No one did, so I committed it. In general, I agree that you don't have to understand what every single patch that touches zk core does in detail, but it would be great if you could scan the list for issues that could affect <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a> and flag it by linking the jiras. There are other jiras coming that could affect <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a>, like <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1549" title="Data inconsistency when follower is receiving a DIFF with a dirty snapshot" class="issue-link" data-issue-key="ZOOKEEPER-1549">ZOOKEEPER-1549</a>, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1551" title="Observers ignore txns that come after snapshot and UPTODATE " class="issue-link" data-issue-key="ZOOKEEPER-1551"><del>ZOOKEEPER-1551</del></a>, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1552" title="Enable sync request processor in Observer" class="issue-link" data-issue-key="ZOOKEEPER-1552"><del>ZOOKEEPER-1552</del></a>, so we need to keep it in mind. We haven't been doing a good job with marking the components that jiras affect, so I'll try to be more careful about that.</p> <p>I'd rather not revert this patch, but I'd say that we can help you port the patch. If Thawan doesn't have the time, I'll help you out. </p></comment>
<comment id="13556150" author="shralex" created="Thu, 17 Jan 2013 13:12:32 +0000"><p>Hi Flavio,</p> <p>You're right, I should have paid closer attention. But I actually did notice this JIRA and wrote Patrick about two weeks ago that I'm concerned about several JIRAs touching the same code as ZK-107 and that we should commit ZK-107 ASAP. At some point I think we need a lock/freeze on significant other changes to commit ZK-107, otherwise its an endless catch-up.</p> <p>Regarding this specific patch. I'm not sure what it means to "port the patch". The code in Leader.java and a few other files that is changed by ZK-1324 was restructured and then modified in subtle ways ZK-107. I really believe that the easiest and cleanest way to merge is to have ZK-107 as a starting point and implement ZK-1324 relative to it (on top of it), and not the other way. It is of course possible that Thawan or you do that on your local machine (you can use the latest ZK-107 patch) but then the re-implementation of ZK-1324 will be part of ZK-107. I think this is not a good solution, since ZK-1324 will be spread across two JIRAs and it will be difficult to find problems later In both these JIRAs. </p> <p>Alex</p></comment>
<comment id="13556233" author="fpj" created="Thu, 17 Jan 2013 14:53:28 +0000"><p>You should have written on the jira directly instead of going through a private channel with Pat. I'm of course aware of your effort, but it is easy to forget when it is not marked explicitly in the jira. Let me also say that if we had created a 107 branch as I suggested a while back, we could be marking jiras to produce versions of the patches for that branch. </p> <p>As for what to do now, I'm not sure what the best course of action is. I don't like the idea of reverting the commit, but at the same time I feel bad about giving you more work to do. I'd like to hear what the others involved in this discussion have to say about it.</p> </comment>
<comment id="13556477" author="thawan" created="Thu, 17 Jan 2013 19:04:48 +0000"><p>I skim through ZK-107 and I think the core logic that this patch try to fix doesn't conflict with ZK-107, but I guess it would need a rewrite. I am fine with any approach, we can also move this patch down to 3.4 and recreate a jira/patch to fix this again in 3.5 </p></comment>
<comment id="13556672" author="phunt" created="Thu, 17 Jan 2013 22:32:52 +0000"><p>Alex (et. al.) - how close is 107 to being ready for commit? If it's still a ways off then reverting this one patch isn't going to help much in the grander scheme of things.</p> <p>Thawan/Flavio - If we revert 1324 then apply 107 how much work is it to get 1324 patch working again? Based on Thawan's comments it doesn't seem like it's too big an issue for you to do.</p></comment>
<comment id="13556689" author="shralex" created="Thu, 17 Jan 2013 22:46:08 +0000"><p>Hi Patrick, IMHO 107 is pretty much ready for commit. Michi is working on the missing C tests, and I'm meeting him this weekend to try to finish this together. So hopefully next week its going to be completely ready. We also need to commit ZK-1620 so that my tests pass. </p></comment>
<comment id="13556764" author="fpj" created="Thu, 17 Jan 2013 23:45:19 +0000"><p>Just to review what I'm reading here:</p> <ol> <li>No one is against reverting and Alex strongly prefers reverting, so we'll do it, yes?</li> <li>This jira is not marked for 3.4.6, but Thawan mentions the 3.4 branch in his comment. Should the latest patch be committed to 3.4.6? It sounds like it should, so I'm marking it, but please let me know if you disagree.</li> <li>We will work a different patch for 3.5.0 based on <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a>.</li> </ol> <p>If there is any concern about these points, please comment. </p></comment>
<comment id="13556780" author="fpj" created="Fri, 18 Jan 2013 00:14:14 +0000"><p>Reverted previous commit (Committed revision 1434978.). Need to provide a patch on top of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a> and commit current patch to branch 3.4. </p></comment>
<comment id="13557243" author="fpj" created="Fri, 18 Jan 2013 14:30:12 +0000"><p>Committed to branch 3.4. Committed revision 1435159.</p></comment>
<comment id="13637934" author="fpj" created="Mon, 22 Apr 2013 11:27:00 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a> Should we wrap up this jira? I've checked that there are conflicts, so the latest patch has gone stale. Do you have time to generate a patch for trunk or you want me to do it?</p></comment>
<comment id="13638349" author="abranzyck" created="Mon, 22 Apr 2013 19:20:43 +0000"><p>This patch skips adding the NEWLEADER quorum packet in Leader.startForwarding, since it will be added in LearnerHandler a few lines below the call to Leader.startForwarding.</p></comment>
<comment id="13638353" author="abranzyck" created="Mon, 22 Apr 2013 19:22:59 +0000"><p>The Zab1.0 tests are modified, since they checked for the NEWLEADER packet to be duplicated.</p></comment>
<comment id="13638371" author="abranzyck" created="Mon, 22 Apr 2013 19:48:24 +0000"><p>I hope submitting a proposal patch for a JIRA assigned to someone else is no problem. I prepared this for the duplicate JIRA <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1694" title="ZooKeeper Leader sends a repeated NEWLEADER quorum packet to followers" class="issue-link" data-issue-key="ZOOKEEPER-1694"><del>ZOOKEEPER-1694</del></a>.</p></comment>
<comment id="13638380" author="hadoopqa" created="Mon, 22 Apr 2013 20:01:38 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12579889/ZOOKEEPER-1324.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12579889/ZOOKEEPER-1324.patch</a><br/> against trunk revision 1463329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1464//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1464//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1464//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1464//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1464//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1464//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13638442" author="fpj" created="Mon, 22 Apr 2013 21:22:19 +0000"><p>German, In the other jira, I suggested that you had a look at what has been done so far in this jira and if you had any concern with the patch that has been proposed, that you please raise it. Could you please have a look at the latest patch proposed before yours add comments to this jira? If you make any additions, please do it on top of the patch that has been proposed and reviewed. In the case you make any modification, please explain it in the jira.</p> <p>In the case you haven't done it yet, I suggest you have a look at the "how to contribute" page:</p> <p><a href="https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute" class="external-link" target="_blank" rel="nofollow noopener">https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute</a></p></comment>
<comment id="13638811" author="abranzyck" created="Tue, 23 Apr 2013 05:53:58 +0000"><p>OK, I see now that you meant the patch on the 3.4 branch.<br/> I have read the "how to contribute" page, but I will do it again more carefully.</p></comment>
<comment id="13639177" author="fpj" created="Tue, 23 Apr 2013 15:47:18 +0000"><p>Here is a preliminary patch for trunk. I have tried to port the latest one from <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a>, but the changes due to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a> made it non-trivial. I'd really like perhaps <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> to also have a look at it to make sure I'm not breaking anything badly for the reconfiguration mechanism. </p> <p>One test failed for me: ReconfigRecoveryTest. I haven't had a chance to look too closely into it, though. If anyone has an idea, I'd like to hear, otherwise I'll have a look at it again later on.</p> </comment>
<comment id="13639750" author="shralex" created="Tue, 23 Apr 2013 22:47:58 +0000"><p>Hi Flavio, </p> <p>Sure, I can definitely go over the patch</p></comment>
<comment id="13646732" author="marshall" created="Wed, 1 May 2013 17:26:27 +0000"><p>Alex, have you had a chance to go over this patch yet? We're seeing this problem in our production environment and would love to get this addressed as soon as possible.</p> <p>Thanks!</p></comment>
<comment id="13647239" author="shralex" created="Thu, 2 May 2013 03:33:00 +0000"><p>Hi Flavio,</p> <p>All the reconfiguration-related code that was executed when a NEWLEADER message gets enough acks is now omitted in the patch (previously this was in Leader.java, tryToCommit(), the "else" clause of "if ((zxid amp; 0xffffffffL) != 0)"). This is important for reconfiguration recovery - the leader discovers a new configuration during recovery and must apply it by executing this code. Its quite possible that this causes the reconfiguration recovery tests to fail.</p> <p>There is a related new comment about this "if" in processAck() that I didn't fully understand. </p> <p>Thanks,<br/> Alex</p></comment>
<comment id="13647330" author="abranzyck" created="Thu, 2 May 2013 05:57:32 +0000"><p>Hello all,<br/> I hope I don't bother you too much with this comment, given that I don't actually understand most of the code in the current proposed patch.<br/> It seems to me that this is a problem in 3.4 and it should be corrected with as few changes as possible. Other improvements should go to 3.5. And it seems to me that the problem is that NEWLEADER gets both inserted in the outstandingProposals and sent to the follower directly. So apparently, this could be solved with the very small change bellow. It just skips the inserting of NEWLEADER in the outstanding proposals and keeps all the current processing. Line numbers might not be exact, since it was done for trunk a few weeks ago.<br/> I could propose it on top of the current patch, but it would mean removing all of it (except where it changes the test case), without really understanding what it is doing, and adding these few lines.<br/> Could anybody, maybe Flavio, please explain where I get this problem wrong?<br/> Best regards,<br/> Germán Blanco.<br/> #8212; src/java/main/org/apache/zookeeper/server/quorum/Leader.java (revision 1470391)<br/> +++ src/java/main/org/apache/zookeeper/server/quorum/Leader.java (working copy)<br/> @@ -1116,10 +1116,11 @@<br/> Listlt;Longgt;zxids = new ArrayListlt;Longgt;(outstandingProposals.keySet());<br/> Collections.sort(zxids);<br/> for (Long zxid: zxids) {</p> <ul class="alternate" type="square"> <li>if (zxid lt;= lastSeenZxid) {<br/> + QuorumPacket qp = outstandingProposals.get(zxid).packet;<br/> + if ((zxid lt;= lastSeenZxid) || (qp.getType() == Leader.NEWLEADER)) { continue; }</li> <li>handler.queuePacket(outstandingProposals.get(zxid).packet);<br/> + handler.queuePacket(qp);<br/> }<br/> }<br/> if (handler.getLearnerType() == LearnerType.PARTICIPANT) {</li> </ul> </comment>
<comment id="13647365" author="fpj" created="Thu, 2 May 2013 07:27:55 +0000"><p>German, This issue has already been resolved for branch 3.4, check this out:</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13557243amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13557243" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13557243amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13557243</a></p> <p>We are now working on the patch for trunk.</p></comment>
<comment id="13647369" author="fpj" created="Thu, 2 May 2013 07:51:49 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> Thanks a lot for having a look at the new patch. Part of this patch was moving a bit of code around. In the original patch prior to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a> getting in, we were removing this "if ((zxid amp; 0xffffffffL) != 0)" because were not calling tryToCommit for the newleader proposal any longer. When looking at the trunk code, it seemed to me that you had some duplicate code in the else block because you needed to have it executed for both branches (if ((zxid amp; 0xffffffffL) != 0) succeeds or not). But, because we removed this check "if ((zxid amp; 0xffffffffL) != 0)", we don't have to duplicate that piece of code any longer, and it is executed in the case that the request a reconfig one.</p> <p>For completeness, the duplicated bit of code I'm referring to is this:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">QuorumVerifier newQV = self.getLastSeenQuorumVerifier(); <span class="code-object">Long</span> designatedLeader = getDesignatedLeader(p, zxid); self.processReconfig(newQV, designatedLeader, zk.getZxid(), <span class="code-keyword">true</span>); <span class="code-keyword">if</span> (designatedLeader != self.getId()) { allowedToCommit = <span class="code-keyword">false</span>; } </pre> </div></div> <p>One bit that I just realized while writing this post is that the else block in the current trunk code is executed even if the request is not a reconfig request. Is this correct? Note that we don't process the newleader proposal in this method any longer. </p> <p>The other thing I was thinking is that if it is really incorrect, then the tests should have captured. Assuming that I need to fix the patch, it would be nice to determine why the reconfig tests didn't capture it and fix the tests. </p></comment>
<comment id="13647380" author="shralex" created="Thu, 2 May 2013 08:23:18 +0000"><p>Hi Flavio,</p> <p>no problem! yes, this is the code I'm referring to. Right, this will run if the packet is not <br/> reconfig (the "else" clause), specifically when the leader finds out an outstanding reconfig<br/> it must complete during recovery. </p> <p>A recap of how this part of the recovery process works - the leader sends the new config it must complete to others inside a NEWLEADER message (see LearnerHandler where the NEWLEADER message is constructed), and once it has enough acks this code you quote is executed so that it applies the config to itself. The NEWLEADER acts as a reconfig proposal, and the UPTODATE message acts as a reconfig "commit". So - this code must still be executed somewhere in a similar situation as before (i.e., where you have enough acks for NEWLEADER). Actually, I totally missed the fact that startForwarding sends out the outstandingProposals, so for example I'm not putting the configuration in the NEWLEADER message which was inserted into the outstandingProposals queue in Leader.java - I'm guessing that this duplicate NEWLEADER message is a problem for reconfig recovery too! </p> <p>BTW, could you please address the other part of German's comment ? Why wouldn't his proposed change solve the issue (skip the NEWLEADER message in the startForwarding() where you send all messages in the outstaningProposals) ? I think if you explain it'll help us understand better what you guys are doing in this patch <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>Thanks,<br/> Alex</p> </comment>
<comment id="13647398" author="fpj" created="Thu, 2 May 2013 09:41:41 +0000"><p>It sounds like German's approach is pretty much the same I had proposed previously in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1319" title="Missing data after restarting+expanding a cluster" class="issue-link" data-issue-key="ZOOKEEPER-1319"><del>ZOOKEEPER-1319</del></a>. You can also check this comment in this same jira:</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13543365amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13543365" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13543365amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13543365</a></p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a> gives a good summary of the changes proposed here:</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13547301amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13547301" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13547301amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13547301</a></p> <p>and here:</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13549144amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13549144" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13549144amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13549144</a></p></comment>
<comment id="13647408" author="fpj" created="Thu, 2 May 2013 10:14:17 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> Most of the else block has been moved to startZkServer. I have not moved the reconfig part, though, but from what I'm getting in your comments, it sounds like we should. </p> <p>I also just remembered that one of the reconfig tests failed, so perhaps this is the cause. </p></comment>
<comment id="13647411" author="shralex" created="Thu, 2 May 2013 10:19:18 +0000"><p>Yeah, I think German is proposing the same thing as in your link, and it seems that its a one-line solution to the duplicate NEWLEADER problem.</p> <p>A few thoughts about Thawan's comments:</p> <p>I agree that it would be better not to send outstandingProposals to observers and not to ack UPTODATE messages, but these seem like separate issues from this JIRA's purpose. </p> <ul class="alternate" type="square"> <li>the following is already done in the trunk (part of ZK-107):</li> </ul> <p>gt;1. This change also prevent the leader from counting Observer's NEWLEADER_ACK causing the <br/> gt; quorum to form prematurely. I will submit a unit test in a separate jira</p> <ul class="alternate" type="square"> <li>I don't fully understand the following comment, don't think it works this way:</li> </ul> <p>gt; 2. We are sending NEWLEADER proposal implicitly as part of sending outstanding proposals to <br/> gt; the learners. Now you have to keep adding NEWLEADER back into outstanding proposals whenever gt; a new learner joins the quorum since it is removed whenever NEWLEADER packet is committed.</p> <p>If I understand correctly, when a new learner joins an already established leader we don't need to commit a NEWLEADER message, so no need to put it in outstanding proposals.</p> <p>So it seems like the main remaining motivation for this patch is decoupling the ACK processing for NEWLEADER from the ACK processing of other messages. </p> </comment>
<comment id="13647907" author="fpj" created="Thu, 2 May 2013 21:12:05 +0000"><blockquote><p>I agree that it would be better not to send outstandingProposals to observers and not to ack UPTODATE messages, but these seem like separate issues from this JIRA's purpose. </p></blockquote> <p>Sure, it's a good observation, but I think we ended up not doing anything about it, at least I can't see anything related to it in the patch. </p> <blockquote><p>The following is already done in the trunk (part of ZK-107): 1. This change also prevent the leader from counting Observer's NEWLEADER_ACK causing the quorum to form prematurely. I will submit a unit test in a separate jira</p></blockquote> <p>This seems to be part of the merge, it would be good if you could check that it is not conflicting with what was done in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a>.</p> <blockquote><p>We are sending NEWLEADER proposal implicitly as part of sending outstanding proposals to the learners. Now you have to keep adding NEWLEADER back into outstanding proposals whenever a new learner joins the quorum since it is removed whenever NEWLEADER packet is committed.</p></blockquote> <p>There was probably some confusion here, I don't think there is anything in the patch trying to do things this way. We simply remove the line that adds newleader to outstandingProposals.</p> <blockquote><p>So it seems like the main remaining motivation for this patch is decoupling the ACK processing for NEWLEADER from the ACK processing of other messages. </p></blockquote> <p>This is the main motivation for me.</p> <p>I'll produce a new patch shortly.</p></comment>
<comment id="13647942" author="shralex" created="Thu, 2 May 2013 21:52:18 +0000"><p>Regarding the membership check - I think this is done here in the patch:</p> <p> if (learnerType == LearnerType.PARTICIPANT) </p> { newLeaderProposal.addAck(sid); } <p>the implementation of addAck already checks that sid is a voting member of each required config of newLeaderProposal before counting the ack for that config. So the extra check above is not necessary (although it doesn't hurt).</p></comment>
<comment id="13647961" author="thawan" created="Thu, 2 May 2013 22:08:43 +0000"><blockquote><p>We are sending NEWLEADER proposal implicitly as part of sending outstanding proposals to the learners. Now you have to keep adding NEWLEADER back into outstanding proposals whenever a new learner joins the quorum since it is removed whenever NEWLEADER packet is committed.</p></blockquote> <p>This is just a response to the initial attempt to fix this bug in this patch (<a href="https://issues.apache.org/jira/secure/attachment/12563751/ZOOKEEPER-1324.patch" class="external-link" rel="nofollow">https://issues.apache.org/jira/secure/attachment/12563751/ZOOKEEPER-1324.patch</a>) where we try to reuse processAck to collect votes for NEWLEADER_ACK.</p> <p>Comments about the latest patch:<br/> 1. in 3.4 version of this patch, we have an if statement to ignore UPDATE_ACK ((zxid amp; 0xffffffffL) == 0) in processAck(). Looking at the code, the learner from both 3.4 and 3.5 still sending UPTODATE_ACK, so I think we still need to have that similar logic unless it is needed by reconfiguration. </p> <p>2. (Minor) in ackSetsToString(), can you change the delimiter from ":" to "," to match 3.4 branch? </p> </comment>
<comment id="13647962" author="fpj" created="Thu, 2 May 2013 22:09:27 +0000"><blockquote><p>Regarding the membership check - I think this is done here in the patch</p></blockquote> <p>I have fixed it in the new patch I uploaded. When you mentioned a check for observers, I thought it was related to outstanding proposals. The one you point out is in the processing of acks, right?</p> <p>In any case, have a look at the new patch, please. Special attention to Leader#startZkServer(). </p> <p>All tests pass with this patch for me.</p></comment>
<comment id="13647973" author="shralex" created="Thu, 2 May 2013 22:21:35 +0000"><p>One case where this "if" actually changed behavior is when sid is switching from being Observer to being Participant. The "if" would see that sid is an Ovserver in the current config and prevent sid from counting towards the new-config too, where sid is actually a Participant. </p> <p>I'm not 100% sure what the right thing to do here. On one hand, acking a NEWLEADER message means that state transfer is complete, Observer or not, so why not count this guy's vote. On the other hand, he is not yet a participant, and in the normal (non-recovery) case we wouldn't count its vote (he wouldn't send any). </p> <p>My intuition is that both options are safe in this case since the ACK means state transfer complete, and for liveness its better to allow it to vote, i.e., to remove the if as Flavio now did.</p></comment>
<comment id="13647988" author="shralex" created="Thu, 2 May 2013 22:39:04 +0000"><p>Thawan, I think that (zxid amp; 0xffffffffL) == 0 means its a NEWLEADER ack, not UPTODATE ack.<br/> See how the zxid of NEWLEADER message is chosen in leader.lead() </p></comment>
<comment id="13648049" author="thawan" created="Fri, 3 May 2013 00:16:33 +0000"><p>Both NEWLEADER_ACK and UPTODATE_ACK is using the same zxid. See Learner.java line 322,476-477 (<a href="http://svn.apache.org/viewvc/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Learner.java?revision=1453693amp;view=markup" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewvc/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Learner.java?revision=1453693amp;view=markup</a>). I think the new code should check of package type instead of checking zxid. It will make the code clearer. </p> </comment>
<comment id="13648057" author="shralex" created="Fri, 3 May 2013 00:27:12 +0000"><p>I see. I wonder if it'll break anything not to send the UPTODATE ACK at all. I don't think its needed by the protocol.</p></comment>
<comment id="13648263" author="fpj" created="Fri, 3 May 2013 08:15:55 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a></p> <blockquote><p>in 3.4 version of this patch, we have an if statement to ignore UPDATE_ACK ((zxid amp; 0xffffffffL) == 0) in processAck(). Looking at the code, the learner from both 3.4 and 3.5 still sending UPTODATE_ACK, so I think we still need to have that similar logic unless it is needed by reconfiguration. </p></blockquote> <p>We still have that if statement. The one I was talking about previously that has been removed is in Leader#tryToCommit().</p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a></p> <blockquote><p>acking a NEWLEADER message means that state transfer is complete, Observer or not, so why not count this guy's vote. On the other hand, he is not yet a participant, and in the normal (non-recovery) case we wouldn't count its vote (he wouldn't send any). </p></blockquote> <p>In the case you describe, I thought that the observer (changing to participant) should actually be able to vote because we also need a quorum for the new config, which may also come in a newleader message, no? If this is correct, then we shouldn't have the if statement.</p> <blockquote><p>I think that (zxid amp; 0xffffffffL) == 0 means its a NEWLEADER ack, not UPTODATE ack.</p></blockquote> <p>You're both right. We send a second ack after the uptodate, and it uses the same zxid. It is there for backward compatibility reasons, the ack itself is strictly necessary for the correctness of the protocol.</p> <p>Once we decide what to do with the if statement Alex referred to, I'll make any necessary changes and upload a new patch.</p></comment>
<comment id="13648264" author="fpj" created="Fri, 3 May 2013 08:16:41 +0000"><p>Cancelling patch to address comments. </p></comment>
<comment id="13648329" author="shralex" created="Fri, 3 May 2013 11:15:25 +0000"><p>gt; In the case you describe, I thought that the observer (changing to participant) should <br/> gt; actually be able to vote because we also need a quorum for the new config, which may also come <br/> gt; in a newleader message, no? If this is correct, then we shouldn't have the if statement.</p> <p>Yes, that's why I also think that for sake of liveness we should let him vote and remove the if as you did. I was just pointing out that this is slightly different than what we do for the normal case, when this is a reconfig op and not a NEWLEADER message. In that case this server<br/> wouldn't even be able to vote since observers don't vote. Anyway, seems like he should vote if possible, so the if should not be there.</p> </comment>
<comment id="13648510" author="fpj" created="Fri, 3 May 2013 15:47:49 +0000"><p>There is really only the minor change that Thawan has requested, everything else is the same. Is this patch ready to go?</p></comment>
<comment id="13650254" author="hadoopqa" created="Mon, 6 May 2013 23:53:27 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12581700/ZOOKEEPER-1324.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12581700/ZOOKEEPER-1324.patch</a><br/> against trunk revision 1463329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1468//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1468//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1468//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1468//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1468//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1468//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13656099" author="phunt" created="Mon, 13 May 2013 16:45:33 +0000"><p>This has been committed to branch-3.4, is it ready for trunk?</p></comment>
<comment id="13656173" author="fpj" created="Mon, 13 May 2013 17:55:32 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> has reviewed it, but has not +1 it. Alex? It would be nice if <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thawan" class="user-hover" rel="thawan">Thawan Kooburat</a> could +1 it too, since he originated the initial patch and I have modified it to apply to trunk with the <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a> changes. </p></comment>
<comment id="13656437" author="shralex" created="Mon, 13 May 2013 21:56:22 +0000"><p>+1</p></comment>
<comment id="13656528" author="thawan" created="Mon, 13 May 2013 23:37:38 +0000"><p>+1 for me. </p> <p>Minor suggestion is to incorporate some portion of Alex's comment(<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13647380amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13647380" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1324?focusedCommentId=13647380amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13647380</a>) into the code itself. Since the processReconfig() is now moved into startZkServer() and it might hard to trace back to its origin in the future. </p></comment>
<comment id="13656557" author="fpj" created="Mon, 13 May 2013 23:58:46 +0000"><p>Added a comment as requested. Is it ok?</p></comment>
<comment id="13656603" author="thawan" created="Tue, 14 May 2013 00:50:48 +0000"><p>Thanks, we should commit this one</p></comment>
<comment id="13657007" author="fpj" created="Tue, 14 May 2013 12:29:13 +0000"><p>Trunk commit: Committed revision 1482318.</p></comment>
<comment id="13657014" author="fpj" created="Tue, 14 May 2013 12:39:59 +0000"><p>Latest patch didn't apply cleanly to me, so I'm uploading what I have committed.</p></comment>
<comment id="13658244" author="hudson" created="Wed, 15 May 2013 11:04:57 +0000"><p>Integrated in ZooKeeper-trunk #1926 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1926/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1926/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1324" title="Remove Duplicate NEWLEADER packets from the Leader to the Follower." class="issue-link" data-issue-key="ZOOKEEPER-1324"><del>ZOOKEEPER-1324</del></a>. Remove Duplicate NEWLEADER packets <br/> from the Leader to the Follower. (Thawan, fpj via fpj) (Revision 1482318)</p> <p> Result = SUCCESS<br/> fpj : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1482318" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1482318</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java</li> </ul> </comment>
<comment id="13933735" author="fpj" created="Thu, 13 Mar 2014 18:17:02 +0000"><p>Closing issues after releasing 3.4.6.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="12310000">
<name>Duplicate</name>
<inwardlinks description="is duplicated by">
<issuelink>
<issuekey id="12643906">ZOOKEEPER-1694</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12645566">ZOOKEEPER-1697</issuekey>
</issuelink>
<issuelink>
<issuekey id="12401266">ZOOKEEPER-107</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12565476" name="ZOOKEEPER-1324-branch-3.4.patch" size="12216" author="fpj" created="Fri, 18 Jan 2013 14:30:12 +0000"/>
<attachment id="12583118" name="ZOOKEEPER-1324-trunk-committed.patch" size="19361" author="fpj" created="Tue, 14 May 2013 12:39:59 +0000"/>
<attachment id="12583038" name="ZOOKEEPER-1324.patch" size="18838" author="fpj" created="Mon, 13 May 2013 23:58:46 +0000"/>
<attachment id="12581700" name="ZOOKEEPER-1324.patch" size="18477" author="fpj" created="Fri, 3 May 2013 15:47:49 +0000"/>
<attachment id="12581617" name="ZOOKEEPER-1324.patch" size="18477" author="fpj" created="Thu, 2 May 2013 22:04:55 +0000"/>
<attachment id="12580062" name="ZOOKEEPER-1324.patch" size="17897" author="fpj" created="Tue, 23 Apr 2013 15:47:18 +0000"/>
<attachment id="12564118" name="ZOOKEEPER-1324.patch" size="11841" author="thawan" created="Thu, 10 Jan 2013 04:01:09 +0000"/>
<attachment id="12564058" name="ZOOKEEPER-1324.patch" size="11777" author="thawan" created="Wed, 9 Jan 2013 23:44:05 +0000"/>
<attachment id="12564047" name="ZOOKEEPER-1324.patch" size="11288" author="thawan" created="Wed, 9 Jan 2013 22:30:38 +0000"/>
<attachment id="12563751" name="ZOOKEEPER-1324.patch" size="8067" author="fpj" created="Tue, 8 Jan 2013 13:41:01 +0000"/>
<attachment id="12563186" name="ZOOKEEPER-1324.patch" size="2543" author="thawan" created="Thu, 3 Jan 2013 22:59:42 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>220241</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05y2n:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32619</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1839] Deadlock in NettyServerCnxn</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1839</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Deadlock found during NettyServerCnxn closure. Please see the attached threaddump.</p></description>
<environment/>
<key id="12684468">ZOOKEEPER-1839</key>
<summary>Deadlock in NettyServerCnxn</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="rakeshr">Rakesh Radhakrishnan</assignee>
<reporter username="rakeshr">Rakesh Radhakrishnan</reporter>
<labels> </labels>
<created>Fri, 13 Dec 2013 14:25:26 +0000</created>
<updated>Thu, 13 Mar 2014 18:16:56 +0000</updated>
<resolved>Mon, 16 Dec 2013 04:21:55 +0000</resolved>
<version>3.4.5</version>
<fixVersion>3.4.6</fixVersion>
<fixVersion>3.5.0</fixVersion>
<component>server</component>
<due/>
<votes>0</votes>
<watches>7</watches>
<comments>
<comment id="13847519" author="rakeshr" created="Fri, 13 Dec 2013 14:28:57 +0000"><p>From threaddump, it seems the deadlock is occuring in following way:</p> <p>NettyServerCnxn -gt; sendCloseSession<br/> When closing it got an exception and invokes CnxnChannelHandler#exceptionCaught, this will acquire 'factory.cnxns' and call NioWorker#close. Now closure will try to acquire 'channels lock'</p> <p>NioWorker -gt; writeFromTaskLoop<br/> Here NioWorker has acquired 'channels lock' and fireExceptionCaught. Now, exceptionCaught will be calling NettyServerCnxn#close() and try to acquire lock on 'factory.cnxns'</p></comment>
<comment id="13847527" author="rakeshr" created="Fri, 13 Dec 2013 14:37:06 +0000"><p>I have attached an initial draft patch. In the proposed fix, it will close the connection channel outside the 'ServerConnectionFactory.cnxns' lock. Please help me to review the changes. Thanks</p></comment>
<comment id="13848232" author="rakeshr" created="Sat, 14 Dec 2013 05:06:12 +0000"><p>Marked the issue for 3.4 release, please feel free to change the version if anyone has different opinion.</p></comment>
<comment id="13848242" author="hadoopqa" created="Sat, 14 Dec 2013 05:43:52 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12618597/ZOOKEEPER-1839.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12618597/ZOOKEEPER-1839.patch</a><br/> against trunk revision 1550213.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1835//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1835//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1835//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1835//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1835//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1835//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13848298" author="michim" created="Sat, 14 Dec 2013 09:02:50 +0000"><p>Thanks for the patch Rakesh, it looks good to me. One minor nit about code formatting:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>+ LOG.warn( + "Ignoring exception closing cnxn sessionid 0x" + + Long.toHexString(cnxn.getSessionId()), e); </pre> </div></div> <p>could be:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>+ LOG.warn("Ignoring exception closing cnxn sessionid 0x" + + Long.toHexString(cnxn.getSessionId()), e); </pre> </div></div> <p>Rakesh, where did you see this deadlock? Is this related to some of the windows test failures?</p></comment>
<comment id="13848576" author="rakeshr" created="Sun, 15 Dec 2013 10:35:54 +0000"><p>Thank you Michi for the review, updated the modified patch by addressing the comment. I've observed this, when running NioNettySuiteTest in Windows machine. But when analyzing the threaddump and netty source code, I feel this case can occur in any env.</p></comment>
<comment id="13848577" author="hadoopqa" created="Sun, 15 Dec 2013 11:05:53 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12618812/ZOOKEEPER-1839.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12618812/ZOOKEEPER-1839.patch</a><br/> against trunk revision 1550213.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1838//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1838//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1838//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1838//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1838//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1838//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13848805" author="michim" created="Mon, 16 Dec 2013 04:16:55 +0000"><p>+1 Thanks Rakesh!</p></comment>
<comment id="13848809" author="michim" created="Mon, 16 Dec 2013 04:21:55 +0000"><p>trunk: <a href="http://svn.apache.org/viewvc?view=revisionamp;revision=1551111" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewvc?view=revisionamp;revision=1551111</a><br/> 3.4: <a href="http://svn.apache.org/viewvc?view=revisionamp;revision=1551112" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewvc?view=revisionamp;revision=1551112</a></p></comment>
<comment id="13849042" author="hudson" created="Mon, 16 Dec 2013 11:09:40 +0000"><p>SUCCESS: Integrated in ZooKeeper-trunk #2155 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2155/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2155/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1839" title="Deadlock in NettyServerCnxn" class="issue-link" data-issue-key="ZOOKEEPER-1839"><del>ZOOKEEPER-1839</del></a>. Deadlock in NettyServerCnxn (Rakesh R via michim) (michim: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1551111" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1551111</a>)</p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/NettyServerCnxn.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/NettyServerCnxnFactory.java</li> </ul> </comment>
<comment id="13933711" author="fpj" created="Thu, 13 Mar 2014 18:16:56 +0000"><p>Closing issues after releasing 3.4.6.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12522922">ZOOKEEPER-1179</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12618812" name="ZOOKEEPER-1839.patch" size="3451" author="rakeshr" created="Sun, 15 Dec 2013 10:29:25 +0000"/>
<attachment id="12618597" name="ZOOKEEPER-1839.patch" size="3477" author="rakeshr" created="Fri, 13 Dec 2013 14:30:34 +0000"/>
<attachment id="12618596" name="zk_threaddump-cnxn-closure.txt" size="25454" author="rakeshr" created="Fri, 13 Dec 2013 14:26:13 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>363540</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i1qnxj:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>363846</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-87] Follower does not shut itself down if its too far behind the leader.</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-87</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Currently, the follower if lagging behind keeps sending pings to the leader it will stay alive and will keep getting further and further behind the leader. The follower should shut itself down if it is not able to keep up to the leader within some limit so that gurantee of updates can be made to the clients connected to different servers.</p></description>
<environment/>
<key id="12400857">ZOOKEEPER-87</key>
<summary>Follower does not shut itself down if its too far behind the leader.</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="abranzyck">Germán Blanco</assignee>
<reporter username="mahadev">Mahadev Konar</reporter>
<labels>
<label>patch</label>
</labels>
<created>Wed, 23 Jul 2008 18:29:31 +0000</created>
<updated>Thu, 13 Mar 2014 18:16:56 +0000</updated>
<resolved>Thu, 26 Sep 2013 12:37:50 +0000</resolved>
<version>3.4.5</version>
<version>3.5.0</version>
<fixVersion>3.4.6</fixVersion>
<fixVersion>3.5.0</fixVersion>
<component>quorum</component>
<due/>
<votes>1</votes>
<watches>7</watches>
<comments>
<comment id="12616435" author="fpj" created="Thu, 24 Jul 2008 10:26:07 +0000"><p>Mahadev, I was thinking that we we could set a maximum capacity to queuedPackets on FollowerHandler, and check the remaining capacity on FollowerHandler.queuePacket() before accepting a new packet. We could then invoke FollowerHandler.shutdown() in the case we reach the capacity. What do you think? If you think this is a good idea, I can create a patch.</p> </comment>
<comment id="12616550" author="mahadev" created="Thu, 24 Jul 2008 17:51:28 +0000"><p>i was thinking abt the same lines but not on maximum capacity on follower handlers #8211; </p> <p>ben and I had a discussion regarding this and we decided on doing htis #8212; </p> <p>1) we send a Leader.PING from the leader to the follower #8212; we will include the ticktime at the leader and send it to the follower</p> <p>2) the follower just returns back the tick time with the ping response. </p> <p>3) we update the ticktime that we saw last from the follower and then kill the follower handler if its lagging behind.</p> <p>#8211; this approach is less error prone since we are getting response from the follower and know whats the last ticktime it processed. The problem with your suggestion is that you might be sending it out fast to the follower but the follower might be buffering all of it and not doing anything with it... </p> <p>though the above suggestion has a problem right now since the Leader.PING does not go through the pipeline at the follower. so a response to the ping does not necessarily mean that the follower is in line with processing the requests. We have to get an end to end response from the follower to see how much it is behind.. </p> </comment>
<comment id="12616556" author="fpj" created="Thu, 24 Jul 2008 18:03:44 +0000"><p>If you throttle at the follower, then the queue on the leader side will build up, and you won't have the problem you mention. The approach I describe seems to be safer as you don't have to wait for the next Leader.PING period to make a decision. It is true that the leader can send a ping at any time it wants, but if the leader is clueless as you say, then it will wait for the next ping period and it won't send any exceptional pings.</p></comment>
<comment id="12616566" author="mahadev" created="Thu, 24 Jul 2008 18:23:14 +0000"><p>throttling at the follower is a little tricky. do you mean the follower will stop reading requests ? </p> <p>since you do not know what is on the tcp stack #8212; </p> <p>when you do a send it might be buffered on either of the tcp stacks on the leader and the follower. so you do not know how many txn's are buffered up the tcp stack. So throttling is a tricky thing with the follower and leader. also the rsponse to leader.PING are critical with session management.</p> </comment>
<comment id="12921355" author="vishalmlst" created="Fri, 15 Oct 2010 13:36:45 +0000"><p>Hi Mahadev, Flavio,</p> <p>I am trying to understand how shutting down the follower will help in this case. </p> <p>Mahadev can you please explain what you man by : "The follower should shut itself down if it is not able to keep up to the leader within some limit so that guarantee of updates can be made to the clients connected to different servers." </p> <p>Under what conditions do you expect a shutdown of follower handler to eliminate the problem of follower lagging behind. Are you referring to clients connected to this server that will fail-over their session to another server?</p> <p>Thanks.<br/> -Vishal</p></comment>
<comment id="12925165" author="mahadev" created="Tue, 26 Oct 2010 21:55:54 +0000"><p>exactly vishal. The problem is to avoid clients being connected to a server which can lag behind the leader. </p></comment>
<comment id="13049631" author="mahadev" created="Wed, 15 Jun 2011 06:05:42 +0000"><p>not a blocker. Moving it out of 3.4 release.</p></comment>
<comment id="13639163" author="abranzyck" created="Tue, 23 Apr 2013 15:34:11 +0000"><p>Hello,<br/> I am rescueing this old isssue, since it seems to be still present.<br/> After a few tests, it seems to me that the issue of "lagging behind" affects transactions even more seriously. I haven't been able to find any timeout for proposals waiting for acknowledgement, is that really the case?<br/> I really think I must be wrong there. Otherwise, since ping handling seems to be done in a different thread, a follower could be locked at some point that has to do with the transaction but reply to pings and it would not be accepting any proposals. Besides, there is no warranty on the time that a transaction takes to be updated in all servers.<br/> Could anybody please tell me if I have read things wrongly?<br/> Thanks a lot,<br/> Germán.</p></comment>
<comment id="13645748" author="abranzyck" created="Tue, 30 Apr 2013 17:19:04 +0000"><p>I would like to propose this fix for the problem. I keeps a list of the proposals sent to each Learner and shuts it down if any of the proposals reaches the timeout.<br/> It also skips sending pings if there are any proposals waiting for acknowledgement.<br/> According to my understanding the new behaviour fits better with the current description of syncLimit.</p></comment>
<comment id="13647593" author="abranzyck" created="Thu, 2 May 2013 14:55:16 +0000"><p>This patch keeps track of all proposals sent to each Follower and shuts the handler down if one of them is not responded in syncLimit*tickTime.<br/> It also skips sending the ping if there is any proposal waiting for acknowledgement.</p></comment>
<comment id="13647628" author="hadoopqa" created="Thu, 2 May 2013 15:31:44 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12581196/ZOOKEEPER-87.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12581196/ZOOKEEPER-87.patch</a><br/> against trunk revision 1463329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 4 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1466//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1466//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1466//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1466//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1466//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1466//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13647773" author="abranzyck" created="Thu, 2 May 2013 18:17:27 +0000"><p>Removing the complain from FindBugs.</p></comment>
<comment id="13650255" author="hadoopqa" created="Mon, 6 May 2013 23:55:11 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12581563/ZOOKEEPER-87.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12581563/ZOOKEEPER-87.patch</a><br/> against trunk revision 1463329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 4 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1469//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1469//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1469//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1469//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1469//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1469//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13735080" author="abranzyck" created="Fri, 9 Aug 2013 18:04:23 +0000"><p>I have updated the patch to the current trunk version.<br/> Any comments on the proposal?</p></comment>
<comment id="13735134" author="hadoopqa" created="Fri, 9 Aug 2013 18:53:19 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12597127/ZOOKEEPER-87_trunk.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12597127/ZOOKEEPER-87_trunk.patch</a><br/> against trunk revision 1503101.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 4 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1531//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1531//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1531//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1531//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1531//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1531//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13735834" author="hadoopqa" created="Sat, 10 Aug 2013 10:39:16 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12597270/ZOOKEEPER-87_trunk.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12597270/ZOOKEEPER-87_trunk.patch</a><br/> against trunk revision 1503101.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 4 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1533//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1533//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1533//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1533//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1533//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1533//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13752401" author="abranzyck" created="Wed, 28 Aug 2013 13:48:57 +0000"><p>Could anyone please comment on the proposal in the patch?<br/> In my view it offers the following advantages against the previous proposals in the thread:</p> <ul class="alternate" type="square"> <li>There is no need to modify the network protocol (adding information to PING requests and responses).</li> <li>It solves the problem based on time difference, and not based on the number of proposals. A limit on the number of pending proposals could still allow for a follower to be behind in terms of time.</li> <li>It seems to map the behavior described already for syncLimit: "Amount of time, in ticks (see tickTime), to allow followers to sync with ZooKeeper. If followers fall too far behind a leader, they will be dropped."</li> </ul> </comment>
<comment id="13770592" author="abranzyck" created="Wed, 18 Sep 2013 09:12:41 +0000"><p>This is actually the same patch. The last test seemed to failed due to problems in the machine?</p></comment>
<comment id="13770598" author="abranzyck" created="Wed, 18 Sep 2013 09:26:06 +0000"><p>I changed the "Asignee" because it was the only way I found to submit the patch. I hope that it is not a problem, at least it seems very easy to revert <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>.</p></comment>
<comment id="13770621" author="hadoopqa" created="Wed, 18 Sep 2013 09:53:11 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12603795/ZOOKEEPER-87_trunk.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12603795/ZOOKEEPER-87_trunk.patch</a><br/> against trunk revision 1524275.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 4 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1585//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1585//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1585//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1585//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1585//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1585//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13770927" author="abranzyck" created="Wed, 18 Sep 2013 16:21:50 +0000"><p>Yet a different approach.<br/> This patch doesn't keep a list of all pending transactions for a Learner. It just keeps track of one transaction and makes sure that this transaction makes it on time. When the ACK for this transaction arrives, it picks anotherone. In the worst case there could be a delay of 2*syncLimit in one transaction, but it is a very cheap (in terms of processing time) way to ensure that the lagging doesn't get out of hand.</p></comment>
<comment id="13770964" author="hadoopqa" created="Wed, 18 Sep 2013 16:58:43 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12603855/ZOOKEEPER-87.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12603855/ZOOKEEPER-87.patch</a><br/> against trunk revision 1524398.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 4 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1588//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1588//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1588//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1588//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1588//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1588//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13771858" author="abranzyck" created="Thu, 19 Sep 2013 13:09:54 +0000"><p>This patch is cleaner. The test case applies better to the modification. And it leaves some margin in the syncLimit for the test case that failed in the last try with Jenkins.</p></comment>
<comment id="13771902" author="hadoopqa" created="Thu, 19 Sep 2013 13:48:10 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12604034/ZOOKEEPER-87.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12604034/ZOOKEEPER-87.patch</a><br/> against trunk revision 1524398.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 10 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1591//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1591//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1591//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1591//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1591//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1591//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13772624" author="hadoopqa" created="Fri, 20 Sep 2013 04:43:03 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12604193/ZOOKEEPER-87.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12604193/ZOOKEEPER-87.patch</a><br/> against trunk revision 1524398.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 10 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1592//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1592//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1592//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1592//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1592//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1592//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13772636" author="abranzyck" created="Fri, 20 Sep 2013 05:17:23 +0000"><p>Eighth try, and it finally passes all tests!<br/> The ZooKeeper regression is a great tool. Not only there are a lot of use cases covered, but some of the test cases are very sensitive to problems that are not related with the main purpose of the test case <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>.</p></comment>
<comment id="13772638" author="abranzyck" created="Fri, 20 Sep 2013 05:21:50 +0000"><p>By the way, before anybody complains, I did pass the regression locally before submitting the patch and it did work. But timing is an issue and my machine is way faster than the Jenkins run so ...</p></comment>
<comment id="13773253" author="fpj" created="Fri, 20 Sep 2013 18:06:20 +0000"><p>Thanks for picking this one up, German. Given how currentTime is updated, I was wondering if the leader will disconnect from followers if it is idle for some time. It looks like will force the LearnerHandler to shut down if there is a period of inactivity, but perhaps I'm not reading it right.</p> <p>Also, please don't delete the patch files you upload, even if you're uploading new ones.</p></comment>
<comment id="13773254" author="fpj" created="Fri, 20 Sep 2013 18:07:20 +0000"><p>I forgot to mention the following. This is not a blocker for 3.4.6, so if we can't converge on a patch for this one, I'd like to push it to 3.5.0. Is it ok?</p></comment>
<comment id="13774327" author="abranzyck" created="Mon, 23 Sep 2013 06:43:25 +0000"><p>Thanks to you for taking a look, Flavio!<br/> If it is idle, then it doesn't do anything. The implementation is a class that has 4 methods:</p> <ul class="alternate" type="square"> <li>start() : Invoked from LearnerHandler thread.</li> <li>updateProposal() : Invoked from the thread that sends packets. If process has started, and there is no proposal, it starts monitoring that proposal. If there is a proposal already, it updates the "next proposal" to monitor.</li> <li>updateAck() : Invoked from the thread that receives packets. If the ACK corresponds to the current proposal, then it removes the current proposal and if there is a "next proposal" it starts using that one.</li> <li>check() : Invoked from the Leader thread. It returns true if everything is ok, false if there is a timeout.</li> </ul> <p>It has the following states:</p> <ul class="alternate" type="square"> <li>NOT_STARTED: It doesn't do anything. Check will always return true. It can only transition to WAITING_FOR_PROPOSAL.</li> <li>WAITING_FOR_PROPOSAL: It expects a new proposal. Check will always return true. As soon as one proposal arrives it will start monitoring it and transition to MONITORING_PROPOSAL.</li> <li>MONITORING_PROPOSAL: It waits for the ACK of the proposal under monitoring. Check will return true unless there is a timeout for the current proposal. It continuously update the "next proposal" with incoming proposals. If the ACK for the current proposal arrives, it will either update the proposal with the "next proposal" or transition to WAITING_FOR_PROPOSAL if there is no "next proposal".</li> </ul> <p>The monitoring is started when the synchronization phase ends (and the timeout in the socket is updated to syncLimit*tickTime). The processing required in each of the calls to the four functions is minimal, so there should be no disturbance of performance at all. <br/> Since proposals are executed in order, with this checking the longest time between a proposal and its ACK will be if there is a proposal that comes immediately after the one that is being monitored, and its ACK arrives immediately before the ACK for the "next proposal" after that. That would mean (2 * syncLimit) * tickTime, and then since we check the timeout every 1/2 tickTime, that needs to be added so it is (2'5 * syncLimit) * tickTime. In usual operation, ACKs will take more or less the same for every proposal and the timeout will jump more or less as soon as any of the ACKs takes longer than (syncLimit * tickTime).</p> <p>Or at least that is how I intend it to work <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>.</p> <p>... and I don't mind to turn this upside down for anything else that covers the requirement, so I hope that we won't have a problem in converging on a patch ... we'll see.</p> <p>Sorry about deleting the patches. It made me unconfortable to leave there something that didn't work. But I will keep in mind that way of working from now on.</p></comment>
<comment id="13774386" author="abranzyck" created="Mon, 23 Sep 2013 08:47:19 +0000"><p>I made (at least) two mistakes above:</p> <ul class="alternate" type="square"> <li>If there are no proposals (idle ZooKeeper), then this thing is not idle ("doing nothing" as in NOT_STARTED) it is in WAITING_FOR_PROPOSAL, returning always true for check and ready to be updated with a new proposal.</li> <li>"since we check the timeout every 1/2 tickTime", means half a ticktime needs to be added, not half a "syncLimit * tickTime". So actually the "longest time between a proposal and its ACK " is (((2 * syncLimit) + 1/2) * tickTime)<br/> ... isn't there a way to edit comments after one posts them?</li> </ul> </comment>
<comment id="13777627" author="abranzyck" created="Wed, 25 Sep 2013 15:39:27 +0000"><p>Any more questions on this one?</p></comment>
<comment id="13777635" author="fpj" created="Wed, 25 Sep 2013 15:43:22 +0000"><p>I haven't had a chance to process this one yet, I'm sorry.</p></comment>
<comment id="13778179" author="fpj" created="Wed, 25 Sep 2013 22:28:53 +0000"><p>Here are a few comments, German:</p> <ol> <li>Please make the initialization of SyncLimitCheck fields explicit.</li> <li>Please add blank lines between method definitions (<a href="http://www.oracle.com/technetwork/java/javase/documentation/codeconventions-141388.html#487" class="external-link" target="_blank" rel="nofollow noopener">http://www.oracle.com/technetwork/java/javase/documentation/codeconventions-141388.html#487</a>)</li> <li>The test case does not fail for me when I only apply the test case changes. I haven't looked too closely into it to determine the reason, but I was wondering if it fails for you.</li> </ol> </comment>
<comment id="13778519" author="abranzyck" created="Thu, 26 Sep 2013 06:37:30 +0000"><p>Thanks again for your comments Flavio,<br/> it did fail, but I hadn't tried it enough. Sometimes it didn't fail.<br/> There was a problem in the test, it didn't reply to pings from the leader.<br/> So if the LearnerHandler decided that there was a ping timeout before it decided that the proposal had timeout, then the test case passed (it finishes before it had a chance to notice the other timeout). And the timeout period for both events is the same.<br/> I will upload the corrected patches with your comments updated in a moment.</p></comment>
<comment id="13778574" author="hadoopqa" created="Thu, 26 Sep 2013 08:32:56 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12605207/ZOOKEEPER-87.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12605207/ZOOKEEPER-87.patch</a><br/> against trunk revision 1526337.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 10 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1600//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1600//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1600//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1600//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1600//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1600//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13778638" author="fpj" created="Thu, 26 Sep 2013 10:29:18 +0000"><p>It looks good to me, but I have one remaining question if you don't mind. Why are you synchronizing the methods in SyncLimitCheck? There is one instance per LearnerHandler so I'm not sure it is necessary.</p></comment>
<comment id="13778674" author="abranzyck" created="Thu, 26 Sep 2013 11:29:13 +0000"><p>No problem at all <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/><br/> If I am not wrong, the methods are called from different threads. It seemed so also in the logs. </p> <ul class="alternate" type="square"> <li>"ping" is called from the "lead" method in Leader.java that runs within the QuorumPeer thread.</li> <li>"updateProposal" is called from "sendPackets" which has an independent thread created in "startSendingPackets".</li> <li>"start" and "updateAck" are called from "run" in the LearnerHandler thread.</li> </ul> </comment>
<comment id="13778718" author="fpj" created="Thu, 26 Sep 2013 12:37:33 +0000"><p>Thanks, German. +1.</p> <p>Trunk Committed revision 1526454.<br/> B3.4 Committed revision 1526461.</p></comment>
<comment id="13779826" author="hudson" created="Fri, 27 Sep 2013 11:10:03 +0000"><p>SUCCESS: Integrated in ZooKeeper-trunk #2069 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2069/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2069/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-87" title="Follower does not shut itself down if its too far behind the leader." class="issue-link" data-issue-key="ZOOKEEPER-87"><del>ZOOKEEPER-87</del></a>. Follower does not shut itself down if its too far behind the leader. (German Blanco via fpj) (fpj: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1526454" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1526454</a>)</p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumTest.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumUtil.java</li> </ul> </comment>
<comment id="13933710" author="fpj" created="Thu, 13 Mar 2014 18:16:56 +0000"><p>Closing issues after releasing 3.4.6.</p></comment>
</comments>
<attachments>
<attachment id="12605207" name="ZOOKEEPER-87.patch" size="10697" author="abranzyck" created="Thu, 26 Sep 2013 07:45:28 +0000"/>
<attachment id="12604193" name="ZOOKEEPER-87.patch" size="10420" author="abranzyck" created="Fri, 20 Sep 2013 04:03:40 +0000"/>
<attachment id="12605206" name="ZOOKEEPER-87_3.4.patch" size="11296" author="abranzyck" created="Thu, 26 Sep 2013 07:42:09 +0000"/>
<attachment id="12604191" name="ZOOKEEPER-87_3.4.patch" size="11017" author="abranzyck" created="Fri, 20 Sep 2013 03:58:37 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>71228</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i061w7:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33238</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>The value of syncLimit should be reviewed before this change is introduced in the cluster. Since it now detects followers that are lagging behind, clusters in which this was happening will now see followers being disconnected from time to time. This will normally be solved by increasing the syncLimit value.</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1109] Zookeeper service is down when SyncRequestProcessor meets any exception.</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1109</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p><b>Problem</b> Zookeeper is not shut down completely when dataDir disk space is full and ZK Cluster went into unserviceable state.</p> <p><b>Scenario</b><br/> If the leader zookeeper disk is made full, the zookeeper is trying to shutdown. But it is waiting indefinitely while shutting down the SyncRequestProcessor thread.</p> <p><b>Root Cause</b> <br/> this.join() is invoked in the same thread where System.exit(11) has been triggered.</p> <p>When disk space full happens, It got the exception as follows 'No space left on device' and invoked System.exit(11) from the SyncRequestProcessor thread(The following logs shows the same). Before exiting JVM, ZK will execute the ShutdownHook of QuorumPeerMain and the flow comes to SyncRequestProcessor.shutdown(). Here this.join() is invoked in the same thread where System.exit(11) has been invoked.</p></description>
<environment/>
<key id="12511435">ZOOKEEPER-1109</key>
<summary>Zookeeper service is down when SyncRequestProcessor meets any exception.</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="lakshman">Laxman</assignee>
<reporter username="lakshman">Laxman</reporter>
<labels> </labels>
<created>Fri, 24 Jun 2011 04:48:18 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:24 +0000</updated>
<resolved>Mon, 25 Jul 2011 21:01:11 +0000</resolved>
<version>3.3.0</version>
<version>3.3.1</version>
<version>3.3.2</version>
<version>3.3.3</version>
<fixVersion>3.4.0</fixVersion>
<component>quorum</component>
<due/>
<votes>0</votes>
<watches>4</watches>
<timeoriginalestimate seconds="259200">72h</timeoriginalestimate>
<timeestimate seconds="259200">72h</timeestimate>
<comments>
<comment id="13054238" author="lakshman" created="Fri, 24 Jun 2011 04:53:24 +0000"><p>System.exit and thread.join on same thread is causing this hang. This has introduced as part of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-121" title="SyncRequestProcessor is not closing log stream during shutdown" class="issue-link" data-issue-key="ZOOKEEPER-121"><del>ZOOKEEPER-121</del></a>.</p></comment>
<comment id="13054239" author="lakshman" created="Fri, 24 Jun 2011 04:57:50 +0000"><p>Reposting the comments and analysis</p> <p>I've also gone through Ted's earlier response on disk full scenario.<br/> <a href="http://www.google.co.in/url?sa=tamp;source=webamp;cd=3amp;ved=0CCAQFjACamp;url=http%3A%2F%2Fmail-archives.apache.org%2Fmod_mbox%2Fzookeeper-user%2F201106.mbox%2F%253CBANLkTimzQjXZvDKnP6xQLF9jHfsaz6JstA%40mail.gmail.com%253Eamp;ei=FBQETvPWIcLNrQfk75yaDAamp;usg=AFQjCNFTkguyxTligpz1TZBmkqe9Osz-uw" class="external-link" target="_blank" rel="nofollow noopener">http://www.google.co.in/url?sa=tamp;source=webamp;cd=3amp;ved=0CCAQFjACamp;url=http%3A%2F%2Fmail-archives.apache.org%2Fmod_mbox%2Fzookeeper-user%2F201106.mbox%2F%253CBANLkTimzQjXZvDKnP6xQLF9jHfsaz6JstA%40mail.gmail.com%253Eamp;ei=FBQETvPWIcLNrQfk75yaDAamp;usg=AFQjCNFTkguyxTligpz1TZBmkqe9Osz-uw</a></p> <p>We feel, even when one of the cluster member's disk is full, we should not interrupt the complete service from entire cluster.</p> <p><b>Thread dumps</b></p> <p>The following thread dump shows the QuorumPeerMain thread is infntely waiting inside SyncRequestProcessor. </p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>"Thread-2" prio=10 tid=0x0810a400 nid=0x1695 in Object.wait() [0xac783000] java.lang.Thread.State: WAITING (on object monitor) at java.lang.Object.wait(Native Method) - waiting on lt;0xb804f5e8gt; (a org.apache.zookeeper.server.SyncRequestProcessor) at java.lang.Thread.join(Thread.java:1143) - locked lt;0xb804f5e8gt; (a org.apache.zookeeper.server.SyncRequestProcessor) at java.lang.Thread.join(Thread.java:1196) at org.apache.zookeeper.server.SyncRequestProcessor.shutdown(SyncRequestProcessor.java:171) at org.apache.zookeeper.server.quorum.ProposalRequestProcessor.shutdown(ProposalRequestProcessor.java:79) at org.apache.zookeeper.server.PrepRequestProcessor.shutdown(PrepRequestProcessor.java:513) at org.apache.zookeeper.server.ZooKeeperServer.shutdown(ZooKeeperServer.java:413) at org.apache.zookeeper.server.quorum.Leader.shutdown(Leader.java:411) at org.apache.zookeeper.server.quorum.QuorumPeer.shutdown(QuorumPeer.java:694) at org.apache.zookeeper.server.quorum.QuorumPeerMain$1.run(QuorumPeerMain.java:126) "SyncThread:2" prio=10 tid=0xad7fd800 nid=0x4acb in Object.wait() [0xac9ba000] java.lang.Thread.State: WAITING (on object monitor) at java.lang.Object.wait(Native Method) - waiting on lt;0xb8030d00gt; (a org.apache.zookeeper.server.quorum.QuorumPeerMain$1) at java.lang.Thread.join(Thread.java:1143) - locked lt;0xb8030d00gt; (a org.apache.zookeeper.server.quorum.QuorumPeerMain$1) at java.lang.Thread.join(Thread.java:1196) at java.lang.ApplicationShutdownHooks.runHooks(ApplicationShutdownHooks.java:79) at java.lang.ApplicationShutdownHooks$1.run(ApplicationShutdownHooks.java:24) at java.lang.Shutdown.runHooks(Shutdown.java:79) at java.lang.Shutdown.sequence(Shutdown.java:123) at java.lang.Shutdown.exit(Shutdown.java:168) - locked lt;0xf01ff3b0gt; (a java.lang.Class for java.lang.Shutdown) at java.lang.Runtime.exit(Runtime.java:90) at java.lang.System.exit(System.java:904) at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:149) </pre> </div></div> <p><b>Logs</b></p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2011-06-21 10:09:59,730 - FATAL [SyncThread:2:SyncRequestProcessor@148] - Severe unrecoverable error, exiting java.io.IOException: No space left on device at java.io.FileOutputStream.writeBytes(Native Method) at java.io.FileOutputStream.write(FileOutputStream.java:260) at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:65) at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:123) at org.apache.zookeeper.server.persistence.FileTxnLog.commit(FileTxnLog.java:305) at org.apache.zookeeper.server.persistence.FileTxnSnapLog.commit(FileTxnSnapLog.java:324) at org.apache.zookeeper.server.ZKDatabase.commit(ZKDatabase.java:484) at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:158) at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:98) 2011-06-21 10:09:59,732 - INFO [Thread-2:QuorumPeer@691] - The Quorum server is going for shutdown 2011-06-21 10:09:59,732 - INFO [Thread-2:Leader@393] - Shutdown called java.lang.Exception: shutdown Leader! reason: quorum Peer shutdown at org.apache.zookeeper.server.quorum.Leader.shutdown(Leader.java:393) at org.apache.zookeeper.server.quorum.QuorumPeer.shutdown(QuorumPeer.java:694) at org.apache.zookeeper.server.quorum.QuorumPeerMain$1.run(QuorumPeerMain.java:126) 2011-06-21 10:09:59,733 - INFO [Thread-6:Leader$LearnerCnxAcceptor@243] - exception while shutting down acceptor: java.net.SocketException: Socket closed 2011-06-21 10:09:59,758 - INFO [ProcessThread:-1:PrepRequestProcessor@120] - PrepRequestProcessor exited loop! 2011-06-21 10:09:59,758 - INFO [CommitProcessor:2:CommitProcessor@150] - CommitProcessor exited loop! 2011-06-21 10:09:59,759 - INFO [Thread-2:FinalRequestProcessor@379] - shutdown of request processor complete 2011-06-21 10:10:00,000 - INFO [SessionTracker:SessionTrackerImpl@165] - SessionTrackerImpl exited loop! </pre> </div></div></comment>
<comment id="13057743" author="lakshman" created="Thu, 30 Jun 2011 10:42:39 +0000"><p>Tested the patch with debug points.<br/> Not able to add a testcase as this System.exit scenario.</p> <p><b>Patch</b><br/> If the shutdown has been triggered by this thread, we dont call this.join().</p></comment>
<comment id="13057755" author="hadoopqa" created="Thu, 30 Jun 2011 11:11:18 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12484757/ZOOKEEPER-1109.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12484757/ZOOKEEPER-1109.patch</a><br/> against trunk revision 1140017.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/360//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/360//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/360//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/360//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/360//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/360//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13058989" author="lakshman" created="Sat, 2 Jul 2011 06:12:13 +0000"><p>Test failure reported here doesn't seems to be introduced by this patch.<br/> All tests are verified locally and all are passing.</p></comment>
<comment id="13061783" author="mahadev" created="Fri, 8 Jul 2011 06:00:32 +0000"><p>Laxman,<br/> I think we should probably use volatile for boolean running? Other than that it looks good.</p></comment>
<comment id="13063576" author="mahadev" created="Mon, 11 Jul 2011 22:14:24 +0000"><p>Laxman, <br/> Any update? Are you planning to update the patch? If not please let me know.</p></comment>
<comment id="13065030" author="hadoopqa" created="Thu, 14 Jul 2011 03:34:16 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12486399/ZOOKEEPER-1109.1.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12486399/ZOOKEEPER-1109.1.patch</a><br/> against trunk revision 1146025.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/393//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/393//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/393//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/393//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/393//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/393//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13069507" author="lakshman" created="Fri, 22 Jul 2011 11:31:54 +0000"><p>Hi Mahadev, any suggestions on the reworked patch?</p></comment>
<comment id="13070729" author="mahadev" created="Mon, 25 Jul 2011 20:17:37 +0000"><p>+1, patch looks good. Ill go ahead and commit. Thanks Laxman! Sorry for my late response.</p></comment>
<comment id="13070753" author="mahadev" created="Mon, 25 Jul 2011 21:00:16 +0000"><p>I am removing the fix version for 3.3.4. The patch doesnt apply to 3.3 branch. Ill let 3.3.4 Release manager decide is they want to back port this. </p> </comment>
<comment id="13070754" author="mahadev" created="Mon, 25 Jul 2011 21:01:11 +0000"><p>Just committed this to trunk. Thanks Laxman!</p></comment>
<comment id="13071033" author="hudson" created="Tue, 26 Jul 2011 10:58:34 +0000"><p>Integrated in ZooKeeper-trunk #1255 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1255/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1255/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1109" title="Zookeeper service is down when SyncRequestProcessor meets any exception." class="issue-link" data-issue-key="ZOOKEEPER-1109"><del>ZOOKEEPER-1109</del></a>. Zookeeper service is down when SyncRequestProcessor meets any exception. (Laxman via mahadev)</p> <p>mahadev : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1150903" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1150903</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SyncRequestProcessor.java</li> </ul> </comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12402238">ZOOKEEPER-121</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12486399" name="ZOOKEEPER-1109.1.patch" size="1344" author="lakshman" created="Thu, 14 Jul 2011 02:50:28 +0000"/>
<attachment id="12484757" name="ZOOKEEPER-1109.patch" size="1335" author="lakshman" created="Thu, 30 Jun 2011 10:42:39 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>3995</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05yo7:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32716</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
<customfieldname>Tags</customfieldname>
<customfieldvalues>
<customfieldvalue>quorum, leader, disk full, shutdown</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-962] leader/follower coherence issue when follower is receiving a DIFF</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-962</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>From mailing list:<br/> It seems like we rely on the LearnerHandler thread startup to capture all of the missing committed<br/> transactions in the SNAP or DIFF, but I don't see anything (especially in the DIFF case) that<br/> is preventing us for committing more transactions before we actually start forwarding updates<br/> to the new follower.</p> <p>Let me explain using my example from <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-919" title="Ephemeral nodes remains in one of ensemble after deliberate SIGKILL" class="issue-link" data-issue-key="ZOOKEEPER-919"><del>ZOOKEEPER-919</del></a>. Assume we have quorum already, so the<br/> leader can be processing transactions while my follower is starting up.</p> <p>I'm a follower at zxid N-5, the leader is at N. I send my FOLLOWERINFO packet to the leader<br/> with that information. The leader gets the proposals from its committed log (time T1), then<br/> syncs on the proposal list (LearnerHandler line 267. Why? It's a copy of the underlying proposal<br/> list... this might be part of our problem). I check to see if the peerLastZxid is within my<br/> max and min committed log and it is, so I'm going to send a diff. I set the zxidToSend to<br/> be the maxCommittedLog at time T3 (we already know this is sketchy), and forward the proposals<br/> from my copied proposal list starting at the peerLastZxid+1 up to the last proposal transaction<br/> (as seen at time T1).</p> <p>After I have queued up all those diffs to send, I tell the leader to startFowarding updates<br/> to this follower (line 308). </p> <p>So, let's say that at time T2 I actually swap out the leader to the thread that is handling<br/> the various request processors, and see that I got enough votes to commit zxid N+1. I commit<br/> N+1 and so my maxCommittedLog at T3 is N+1, but this proposal is not in the list of proposals<br/> that I got back at time T1, so I don't forward this diff to the client. Additionally, I processed<br/> the commit and removed it from my leader's toBeApplied list. So when I call startForwarding<br/> for this new follower, I don't see this transaction as a transaction to be forwarded. </p> <p>There's one problem. Let's also imagine, however, that I commit N+1 at time T4. The maxCommittedLog<br/> value is consistent with the max of the diff packets I am going to send the follower. But,<br/> I still committed N+1 and removed it from the toBeApplied list before calling startFowarding<br/> with this follower. How does the follower get this transaction? Does it?</p> <p>To put it another way, here is the thread interaction, hopefully formatted so you can read<br/> it...</p> <p> LearnerHandlerThread RequestProcessorThread<br/> T1(LH): get list of proposals (COPY)<br/> T2(RPT): commit N+1, remove from toBeApplied<br/> T3(LH): get maxCommittedLog<br/> T4(LH): send diffs from view at T1<br/> T5(LH): startForwarding</p> <p>Or<br/> T1(LH): get list of proposals (COPY)<br/> T2(LH): get maxCommittedLog<br/> T3(RPT): commit N+1, remove from toBeApplied<br/> T4(LH): send diffs from view at T1<br/> T5(LH): startFowarding</p> <p>I'm trying to figure out what, if anything, keeps the requests from being committed, removed,<br/> and never seen by the follower before it fully starts up. </p> </description>
<environment/>
<key id="12493781">ZOOKEEPER-962</key>
<summary>leader/follower coherence issue when follower is receiving a DIFF</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="chl501">Chia-Hung Lin</assignee>
<reporter username="fournc">Camille Fournier</reporter>
<labels> </labels>
<created>Tue, 21 Dec 2010 18:42:59 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:24 +0000</updated>
<resolved>Sun, 23 Jan 2011 05:31:02 +0000</resolved>
<version>3.3.2</version>
<fixVersion>3.3.3</fixVersion>
<fixVersion>3.4.0</fixVersion>
<component>server</component>
<due/>
<votes>0</votes>
<watches>3</watches>
<comments>
<comment id="12973871" author="mahadev" created="Tue, 21 Dec 2010 20:44:18 +0000"><p>this should go into 3.3.</p></comment>
<comment id="12976713" author="vishalmlst" created="Mon, 3 Jan 2011 12:26:41 +0000"><p>Hi,</p> <p>May I please request an expected date for this fix? We are working on releasing our product in a month and I think this is a serious enough bug that might block our release. It will be very helpful to know when the fix is coming.</p> <p>Thanks for your help.</p></comment>
<comment id="12976850" author="fournc" created="Mon, 3 Jan 2011 18:08:36 +0000"><p>I think the fix for this will be twofold:<br/> First, I think the work that is currently done in LearnerHandler.run to set up packets to forward or not, should be done in leader.startForwarding. This method is synchronized with processAck, so we can feel confident that no new committed proposals should be written to the zk database while we are forwarding outstanding requests to the new follower<span class="error">#91;1#93;</span>. We also need to add a proper lock for the committed log, so that we can ensure proper behavior for the proposal list processing for DIFFs.</p> <p>In the follower UPTODATE handling, I'm going to try checking for fzk.commitProcessor.committedRequest.isEmpty(), and yield until it is true, before calling fzk.takeSnapshot(). </p> <p>I'm working on a patch for this now, let me know if you think this approach sounds fishy. </p> <p><span class="error">#91;1#93;</span> Still figuring out the sync issues when we have already received an ack and are in the commitProcessor/etc thread stack and simultaneously processing a startForwarding request.</p></comment>
<comment id="12977812" author="fournc" created="Wed, 5 Jan 2011 16:07:21 +0000"><p>I think in my fixing/testing of this I have hit pretty much every single possible tiny threading bug in the follower resync code, including <span class="error">#91;1#93;</span> above (ouch). I am almost done, pending patch approval for release, and I will hopefully have a patch by the end of today. </p></comment>
<comment id="12977874" author="breed" created="Wed, 5 Jan 2011 17:44:48 +0000"><p>that's great camille. i don't think the strategy of waiting for committedRequest to be empty will work because it may never be empty: you may have a steady stream of commits coming in.</p> <p>i was thinking perhaps we should process the proposals synchronously in the syncWithLeader method and only exit once we get the update. i think this will take care of 919 as well.</p> <p>the easiest idea would be to apply the transactions to memory, and then on the UPDATE message, take a snapshot to disk synchronously and ack all of the previous transactions received and then exit the method.</p> <p>have you been able to generate a testcase for the problem?</p></comment>
<comment id="12977879" author="fournc" created="Wed, 5 Jan 2011 17:53:47 +0000"><p>Waiting for committedRequests to be empty gives correct behavior (actually, you have to wait for all the queues in commit processor to be empty) , the thread that sends commits to the follower is the same as the thread that sends UPTODATE and the same thread processes commit requests as the UPTODATE. But as soon as I can give you this patch, you'll have to take a look and tell me what you think. </p> <p>I have testcases, yes. They are painful and due to the nature of the bug they don't always fail even if the bug exists, but I've run them enough locally to be relatively confident that they cover the error well enough that my fixes are at least correct, if not perfect. My actual fixes may not be ideal, but at least the tests should allow people to try other approaches and see how they work.</p></comment>
<comment id="12978009" author="fournc" created="Wed, 5 Jan 2011 22:40:15 +0000"><p>Patch to fix this</p></comment>
<comment id="12978025" author="hadoopqa" created="Wed, 5 Jan 2011 23:10:10 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12467594/ZOOKEEPER-962.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12467594/ZOOKEEPER-962.patch</a><br/> against trunk revision 1053497.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/81//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/81//testReport/</a><br/> Release audit warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/81//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/81//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/81//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/81//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/81//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/81//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12978031" author="fournc" created="Wed, 5 Jan 2011 23:15:31 +0000"><p>fix accidental deletion from quorumutil</p></comment>
<comment id="12978043" author="hadoopqa" created="Wed, 5 Jan 2011 23:43:52 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12467595/ZOOKEEPER-962.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12467595/ZOOKEEPER-962.patch</a><br/> against trunk revision 1053497.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 10 new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/82//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/82//testReport/</a><br/> Release audit warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/82//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/82//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/82//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/82//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/82//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/82//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12979267" author="breed" created="Sun, 9 Jan 2011 06:41:56 +0000"><p>i gave reviewboard a try: <a href="https://reviews.apache.org/r/264/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/264/</a> there are a couple of minor points there<br/> one thing i'm not quite clear on is how moving to a read/write lock helps.</p> <p>i think there is another problem that i think is more related to 919, but since both issues hit them same piece of code, it would probably be good to fix them together. in the case of SNAP, we send a snapshot and then we send diffs to that snapshot, but imagine the following: we start taking a snapshot, S, and while we take the snapshot Z1, Z2, Z3, and Z4 come in; let's say that the snapshot finishes right after Z4. the follower will get S, and then it will get Z1, which it will log. if the follower, fails and comes back up, it will believe that it has the state up to Z1, which it does not infact have.</p> <p>to avoid this problem, i think we should receive S into memory, save off Z1-Z4 into a log in memory, committing them to S if we get a commit, and then when we get an UPTODATE we write out the snapshot and Z1-Z4, and ack Z1-Z4. we can do all this in syncWithLeader and not only the issue i'm pointing out here will be fixed, but also the concurrency issue that you have identified here will go away.</p> <p>what do you think?</p></comment>
<comment id="12979623" author="fournc" created="Mon, 10 Jan 2011 16:22:52 +0000"><p>I made a reviewboard for this myself acutally, <a href="https://reviews.apache.org/r/253/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/253/</a>, I guess it didn't get emailed to the group properly? I'll cancle it and use yours since we've already got comments in there.</p> <p>Let me see if I understand what you're getting at:<br/> We see snap to Z0. We start to see the toBeApplied proposals being forwarded, and we write them to the log, but before we get the UPTODATE (and thus write the snap file to disk), we crash. So we have a log file with Z1, but no snap file with the older data.</p> <p>Yes, you're right, that's a nasty problem. </p> <p>Are you proposing for all packets to UPTODATE in all syncWithLeader scenarios, we process them inside SyncWithLeader, or just the ones for snap?</p> <p>I think I can twiddle my test to catch this error, let me look at it. I'm not sure how much time I will have to actually make the fix you are proposing, though, so if you have time to try to add it onto my patch please let me know.</p></comment>
<comment id="12979648" author="fournc" created="Mon, 10 Jan 2011 17:10:03 +0000"><p>I may have overestimated my ability to write even an occasionally-failing test on this one.</p> <p>Do you think instead of trying to process all those PROPOSE/COMMITs inside the syncWithLeader loop we should just have the follower take a snapshot immediately after receiving the snapshot in syncWithLeader? That would probably be much easier than trying to do an in-memory log in syncWithLeader and should still provide the same guarantee, at the cost of doing a second snapshot soon after the first.</p></comment>
<comment id="12979682" author="breed" created="Mon, 10 Jan 2011 18:51:21 +0000"><p>yes, you understand the scenario correctly. it is a tricky error case to test for. (i've been trying to write a test case <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>we don't really have to do an in-memory log in syncWithLeader, we can actually just apply the the transactions to the in-memory database, ack when we write out the database. hopefully i'll have time today to modify your patch.</p></comment>
<comment id="12980612" author="breed" created="Wed, 12 Jan 2011 08:03:22 +0000"><p>here is an updated patch. it does the initial processing in the startup thread before anything else is started up so that it avoids any race conditions.</p> <p>i had to revert the part that moves everything to startFollowing because it does a heavy weight operation (snapshot) in a synchronized block that will hang the server if the database is very big. we still need to reexamine the locking.</p></comment>
<comment id="12980621" author="hadoopqa" created="Wed, 12 Jan 2011 08:34:52 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12468113/ZOOKEEPER-962_2.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12468113/ZOOKEEPER-962_2.patch</a><br/> against trunk revision 1055924.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/86//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/86//testReport/</a><br/> Release audit warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/86//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/86//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/86//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/86//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/86//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/86//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12980710" author="fournc" created="Wed, 12 Jan 2011 13:40:53 +0000"><p>This patch breaks in my "concurrency test suite" which is just a suite that runs my FollowerResyncConcurrencyTest over and over again. I would expect it to break because if we don't sync the DIFF packet forwarding with the processing of acks we can remove acks from the toBeApplied list between when we forward DIFF packets and when we call startForwarding. I knew the synching was possibly excessive in the first version (looking back I'm not actually remembering why I decided to sync all of the calls together), but we need at least some additional synchronization.</p></comment>
<comment id="12980840" author="fournc" created="Wed, 12 Jan 2011 18:07:24 +0000"><p>One major bug in this patch: You don't send the actual dataTreeLastProcessedZxid when you send a SNAP packet, so the peer's snapshot file will have id 0 if no other commit packets come in after it rejoins (since it takes the zxid off the quorum packet SNAP). <br/> Changing LearnerHandler to set zxid in SNAP QP to dataTreeLastProcessedZxid and rerunning tests.</p></comment>
<comment id="12980860" author="fournc" created="Wed, 12 Jan 2011 19:01:50 +0000"><p>Also doesn't use my read lock on the proposal list. But I think I have a fix that will properly lock things in DIFF case, leave off the locking in SNAP case, and hopefully please all parties. Will send soon.</p></comment>
<comment id="12981304" author="breed" created="Thu, 13 Jan 2011 15:59:41 +0000"><p>yes, i was just addressing the client side of the problem in my patch. we still need to fix the server.</p> <p>one thing that throws me: why isn't FollowerResyncConcurrencyTest failing on hudson or my machine?</p></comment>
<comment id="12981311" author="fournc" created="Thu, 13 Jan 2011 16:13:57 +0000"><p>Ah cool. Still waiting for patch approval hopefully will give you a patch later today.</p> <p>That test is not the awesomest, due to the nature of the beast it will only fail transiently on errors. Also I just realized my tests are really not named well (right now the snap test in fact always creates diffs, and worthless diffs at that). I'm going to tweak it to try to make it more reliably failing.</p></comment>
<comment id="12981325" author="phunt" created="Thu, 13 Jan 2011 16:43:17 +0000"><p>Perhaps more documentation could be added to the test method(s) to detail; 1) the intent of the test, and 2) any quirks - such as the test not being deterministic? (this goes for all tests, not just this one. Something we should do a better job on in general). Keep up the great work!</p></comment>
<comment id="12981561" author="fournc" created="Thu, 13 Jan 2011 23:51:17 +0000"><p>Attempt #3. Description on the tests, fixes to server side, small fix to Learner on top of Ben's patch</p></comment>
<comment id="12981574" author="hadoopqa" created="Fri, 14 Jan 2011 00:24:49 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12468317/ZOOKEEPER-962_3.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12468317/ZOOKEEPER-962_3.patch</a><br/> against trunk revision 1055924.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/87//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/87//testReport/</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/87//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/87//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/87//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/87//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12981653" author="vishalmlst" created="Fri, 14 Jan 2011 07:20:29 +0000"><p>Hi Camille, Ben,</p> <p>I have one related question.</p> <p>There is a bug in the current implementation (without this patch) in code that sends SNAP to the follower <b>only if</b> the follower crashes while it is attempting to sync (as described by Ben earlier). Is my understanding correct?</p> <p>Thanks.</p></comment>
<comment id="12981780" author="fournc" created="Fri, 14 Jan 2011 14:51:39 +0000"><p>Yes, only if the follower crashes before writing out the snap file and after writing a log file.</p></comment>
<comment id="12983363" author="fournc" created="Tue, 18 Jan 2011 20:23:05 +0000"><p>Any thoughts on the latest patch?</p></comment>
<comment id="12983425" author="breed" created="Tue, 18 Jan 2011 23:08:26 +0000"><p>this looks great camille! i have very minor comments but it looks good to go. thanx for all your hard work! btw, the find bugs seems to be messed up. the bugs found don't seem to be related to the patch.</p> <p>my comments are in <a href="https://reviews.apache.org/r/333/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/333/</a></p> <p>i can fix the indentation if you want me to. i'd like you opinion on the first comment.</p></comment>
<comment id="12983508" author="breed" created="Wed, 19 Jan 2011 02:43:36 +0000"><p>i believe this addresses the problems in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-919" title="Ephemeral nodes remains in one of ensemble after deliberate SIGKILL" class="issue-link" data-issue-key="ZOOKEEPER-919"><del>ZOOKEEPER-919</del></a> as well. correct?</p></comment>
<comment id="12983718" author="fournc" created="Wed, 19 Jan 2011 14:12:04 +0000"><p>Yes this should fix 919.</p> <p>If you can fix the indentation that would be helpful thanks.</p></comment>
<comment id="12983869" author="breed" created="Wed, 19 Jan 2011 19:58:38 +0000"><p>fixing comment and indentation</p></comment>
<comment id="12983904" author="fournc" created="Wed, 19 Jan 2011 22:18:44 +0000"><p>I think patch 4 is missing a small fix I added to Learner.syncWithLeader. We can't call logRequest on the zk in UPTODATE because we haven't actually started up the zookeeper yet, and you'll get a NPE if there are proposals that need to be logged.</p></comment>
<comment id="12983939" author="breed" created="Wed, 19 Jan 2011 23:53:01 +0000"><p>is that fix in patch 3? that is also calling logRequest in UPTODATE. right?</p></comment>
<comment id="12983949" author="fournc" created="Thu, 20 Jan 2011 00:19:59 +0000"><p>Hmmmm.... what happened... somehow I sent a version of this patch with some changes but not others? Let me resend, I have no idea how that happened.</p></comment>
<comment id="12983969" author="fournc" created="Thu, 20 Jan 2011 01:06:17 +0000"><p>Apologies, this contains the indent and comment fix, as well as better comments on the tests and the fix in Learner</p></comment>
<comment id="12983974" author="fournc" created="Thu, 20 Jan 2011 01:12:13 +0000"><p>Once more without reformatting all of LearnerHandler</p></comment>
<comment id="12983992" author="hadoopqa" created="Thu, 20 Jan 2011 01:43:55 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12468808/ZOOKEEPER-962_5.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12468808/ZOOKEEPER-962_5.patch</a><br/> against trunk revision 1055924.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/101//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/101//testReport/</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/101//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/101//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/101//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/101//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12984468" author="breed" created="Thu, 20 Jan 2011 23:34:55 +0000"><p>sorry for dragging this out, but it really is important code.</p> <p>i think we need a lock around the code where we check for TRUNC and we start forwarding. right? we could run into problems if a commit happens between the calculation of TRUNC and the call to startForwarding.</p> <p>btw, one other favor, could you make your editor use spaces instead of tabs? <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="12984474" author="fournc" created="Thu, 20 Jan 2011 23:39:53 +0000"><p>re: tabs, sure, sorry about that.</p> <p>Will look at TRUNC. That's probably why I had all of this stuff in that sync'ed startForwarding in one of the earlier patches. I make no promises about my ability to write a test to repro it tho</p></comment>
<comment id="12984500" author="breed" created="Fri, 21 Jan 2011 00:11:14 +0000"><p>yeah TRUNC almost never happens, so it would be hard to recreate <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="12984560" author="breed" created="Fri, 21 Jan 2011 04:24:07 +0000"><p>moves the TRUNC calculation into the lock block, which ends up simplifying the code. what do you think camille?</p> <p>i've also fixed the tabs to spaces.</p></comment>
<comment id="12984565" author="hadoopqa" created="Fri, 21 Jan 2011 04:53:53 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12468946/ZOOKEEPER-962_6.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12468946/ZOOKEEPER-962_6.patch</a><br/> against trunk revision 1055924.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/102//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/102//testReport/</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/102//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/102//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/102//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/102//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12984760" author="fournc" created="Fri, 21 Jan 2011 15:00:58 +0000"><p>This looks good to me, thanks for fixing. Go team!</p></comment>
<comment id="12985019" author="breed" created="Sat, 22 Jan 2011 01:02:25 +0000"><p>+1 running final tests, and will then commit.</p></comment>
<comment id="12985185" author="breed" created="Sat, 22 Jan 2011 19:36:25 +0000"><p>works great for trunk the new FollowerResync test fails on 3.3 even though the patch applies almost perfectly.</p></comment>
<comment id="12985214" author="fournc" created="Sat, 22 Jan 2011 22:41:57 +0000"><p>Taking a look...</p></comment>
<comment id="12985222" author="fournc" created="Sat, 22 Jan 2011 23:20:05 +0000"><p>We need <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-882" title="Startup loads last transaction from snapshot" class="issue-link" data-issue-key="ZOOKEEPER-882"><del>ZOOKEEPER-882</del></a> for this patch to work. Applying that to the 3.3 branch causes the tests to pass. </p></comment>
<comment id="12985251" author="breed" created="Sun, 23 Jan 2011 05:28:01 +0000"><p>great find camille! that fixed it. committing to 3.3 now. thanx for sticking with this!</p></comment>
<comment id="12985253" author="breed" created="Sun, 23 Jan 2011 05:31:02 +0000"><p>trunk: Committed revision 1062244.<br/> branch-3.3: Committed revision 1062327.</p></comment>
<comment id="12985290" author="hudson" created="Sun, 23 Jan 2011 10:54:36 +0000"><p>Integrated in ZooKeeper-trunk #1074 (See <a href="https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1074/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1074/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-962" title="leader/follower coherence issue when follower is receiving a DIFF" class="issue-link" data-issue-key="ZOOKEEPER-962"><del>ZOOKEEPER-962</del></a>. leader/follower coherence issue when follower is receiving a DIFF</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12479098">ZOOKEEPER-919</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12467595" name="ZOOKEEPER-962.patch" size="29882" author="fournc" created="Wed, 5 Jan 2011 23:15:31 +0000"/>
<attachment id="12468113" name="ZOOKEEPER-962_2.patch" size="23278" author="breed" created="Wed, 12 Jan 2011 08:03:22 +0000"/>
<attachment id="12468317" name="ZOOKEEPER-962_3.patch" size="30881" author="fournc" created="Thu, 13 Jan 2011 23:51:17 +0000"/>
<attachment id="12468784" name="ZOOKEEPER-962_4.patch" size="39975" author="breed" created="Wed, 19 Jan 2011 19:58:38 +0000"/>
<attachment id="12468808" name="ZOOKEEPER-962_5.patch" size="35290" author="fournc" created="Thu, 20 Jan 2011 01:12:13 +0000"/>
<attachment id="12468946" name="ZOOKEEPER-962_6.patch" size="42805" author="breed" created="Fri, 21 Jan 2011 04:24:07 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47529</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05z6f:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32798</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1049] Session expire/close flooding renders heartbeats to delay significantly</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1049</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Let's say we have 100 clients (group A) already connected to three-node ZK ensemble with session timeout of 15 second. And we have 1000 clients (group B) already connected to the same ZK ensemble, all watching several nodes (with 15 second session timeout)</p> <p>Consider a case in which All clients in group B suddenly hung or deadlocked (JVM OOME) all at the same time. 15 seconds later, all sessions in group B gets expired, creating session closing stampede. Depending on the number of this clients in group B, all request/response ZK ensemble should process get delayed up to 8 seconds (1000 clients we have tested).</p> <p>This delay causes some clients in group A their sessions expired due to delay in getting heartbeat response. This causes normal servers to drop out of clusters. This is a serious problem in our installation, since some of our services running batch servers or CI servers creating the same scenario as above almost everyday.</p> <p>I am attaching a graph showing ping response time delay.</p> <p>I think ordering of creating/closing sessions and ping exchange isn't important (quorum state machine). at least ping request / response should be handle independently (different queue and different thread) to keep realtime-ness of ping.</p> <p>As a workaround, we are raising session timeout to 50 seconds.<br/> But this causes max. failover of cluster to significantly increased, thus initial QoS we promised cannot be met.</p> </description>
<environment><p>CentOS 5.3, three node ZK ensemble</p></environment>
<key id="12504432">ZOOKEEPER-1049</key>
<summary>Session expire/close flooding renders heartbeats to delay significantly</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="tru64ufs">Chang Song</assignee>
<reporter username="tru64ufs">Chang Song</reporter>
<labels> </labels>
<created>Sat, 16 Apr 2011 03:42:55 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:20 +0000</updated>
<resolved>Tue, 3 May 2011 21:30:42 +0000</resolved>
<version>3.3.2</version>
<fixVersion>3.3.4</fixVersion>
<fixVersion>3.4.0</fixVersion>
<component>server</component>
<due/>
<votes>0</votes>
<watches>6</watches>
<comments>
<comment id="13020549" author="tru64ufs" created="Sat, 16 Apr 2011 03:43:51 +0000"><p>Ping delay with respect to the number of clients closing session.</p></comment>
<comment id="13020550" author="tru64ufs" created="Sat, 16 Apr 2011 03:47:01 +0000"><p>We have monitored ZK ensemble server. There are no significant I/O activity, this workload is CPU bound. 0-3% io wait (this is normal system I/O wait due to system log flush, page cache flush daemon). User CPU goes up to 30-40% during this closing stampede.</p> <p>We'll attach ZK config file.</p></comment>
<comment id="13020551" author="tru64ufs" created="Sat, 16 Apr 2011 03:48:26 +0000"><p>Log4J log level is "error" during this test.</p></comment>
<comment id="13020552" author="tru64ufs" created="Sat, 16 Apr 2011 03:48:52 +0000"><p>ZK version is 3.3.3</p></comment>
<comment id="13020553" author="tru64ufs" created="Sat, 16 Apr 2011 04:00:29 +0000"><p>tickTime=2000<br/> initLimit=10<br/> syncLimit=5</p> <p>dataDir=/???/zookeeper/data<br/> dataLogDir=/???/zookeeper/log</p> <p>clientPort=17288</p> <p>maxClientCnxns=0</p> <p>#globalOutstandingLimit=1000, we tried both (no difference)<br/> globalOutstandingLimit=50000</p> <ol> <li>Arcus ZooKeeper Servers<br/> server.1=????<br/> server.2=????<br/> server.3=1????</li> </ol> </comment>
<comment id="13020555" author="tru64ufs" created="Sat, 16 Apr 2011 04:02:37 +0000"><p>log4j.rootLogger=ERROR, ROLLINGFILE</p> <p>log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender<br/> log4j.appender.CONSOLE.Threshold=INFO<br/> log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout<br/> log4j.appender.CONSOLE.layout.ConversionPattern=%d</p> {ISO8601} - %-5p <span class="error">#91;%t:%C{1}@%L#93;</span> - %m%n<br/> <br/> log4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender<br/> log4j.appender.ROLLINGFILE.Threshold=DEBUG<br/> log4j.appender.ROLLINGFILE.File=/???/zookeeper/log/zookeeper.log<br/> <br/> log4j.appender.ROLLINGFILE.MaxFileSize=50MB<br/> log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout<br/> log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} <p> - %-5p [%t:%C</p> {1}@%L] - %m%n<br/> <br/> log4j.appender.TRACEFILE=org.apache.log4j.FileAppender<br/> log4j.appender.TRACEFILE.Threshold=TRACE<br/> log4j.appender.TRACEFILE.File=/???/zookeeper/log/zookeeper_trace.log<br/> <br/> log4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout<br/> log4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1} <p>@%L]<span class="error">#91;%x#93;</span> - %m%n</p></comment>
<comment id="13020564" author="tru64ufs" created="Sat, 16 Apr 2011 06:28:54 +0000"><blockquote><p>1) are you running in a virtualized environment?</p></blockquote> <p>NO</p> <blockquote> <p>2) are you co-locating other services on the same host(s) that make up<br/> the ZK serving cluster?</p></blockquote> <p>NO. Dedicated ZK ensemble</p> <blockquote> <p>3) have you followed the admin guide's "things to avoid"?<br/> <a href="http://zookeeper.apache.org/doc/r3.3.3/zookeeperAdmin.html#sc_commonProblems" class="external-link" target="_blank" rel="nofollow noopener">http://zookeeper.apache.org/doc/r3.3.3/zookeeperAdmin.html#sc_commonProblems</a><br/> In particular ensuring that you are not swapping or going into gc<br/> pause (both on the server and the client)<br/> a) try turning on GC logging and ensure that you are not going into GC<br/> pause, see the troubleshooting guide, this is the most common cause of<br/> high latency for the clients</p></blockquote> <p>No full GC (jstat output)</p> <blockquote> <p>b) ensure that you are not swapping</p></blockquote> <p>No swapping. No significant IO (0-3% iowait utilization)</p> <blockquote> <p>c) ensure that other processes are not causing log writing<br/> (transactional logging) to be slow.</p></blockquote> <p>No other processes are running on these hosts.</p> </comment>
<comment id="13020565" author="tru64ufs" created="Sat, 16 Apr 2011 06:35:36 +0000"><blockquote> <p>1) what is the connectivity like btw the servers?<br/> What is the ping time btw them?</p></blockquote> <p>ping time is under 1ms (inter-IDC)</p> <blockquote> <p>Is the system perhaps loading down the network during this test,<br/> causing network latency to increase? Are all the nic cards (server and<br/> client) configured correctly? I've seen a number of cases where<br/> clients and/or server had incorrectly configured nics (ethtool<br/> reported 10 MB/sec half duplex for what should be 1gigeth)</p></blockquote> <p>They all are configured Full-Duplex 1Gbps NIC.<br/> Switches are all operational.</p> <blockquote> <p>2) regarding IO, if you run 'iostat -x 2' on the zk servers while your<br/> issue is happening, what's the %util of the disk? what's the iowait<br/> look like?</p></blockquote> <p>0-3% at the time of testing. It varies. There is no significant IO<br/> from Zookeeper process. Just normal page cache flush activity.</p></comment>
<comment id="13020567" author="tru64ufs" created="Sat, 16 Apr 2011 06:41:13 +0000"><p>How to reproduce</p> <p>1. 50 clients connect to ZK ensemble watching a node with 15 sec session timeout (calling group A)</p> <p>2. Let 1000 clients in other group (called group B) connect to the ZK ensemble, but hang the JVM (or intentionally create OOM case). Again with 15 sec session timeout</p> <p>3. Watch clients in group A drop out of the cluster due to ping delay (session expired)</p></comment>
<comment id="13020568" author="tru64ufs" created="Sat, 16 Apr 2011 06:45:38 +0000"><blockquote> <p>What about using multiple ZK clusters for this, then?</p></blockquote> <p>Sorry, we cannot do that due to service deployment policy</p> <blockquote> <p>Have you tested a cluster where the machines are set up correctly with separate snapshot and log disks?</p></blockquote> <p>We have two test/staging ZK ensemble setup, and one production. They reproduce the same result.<br/> Since IO wasn't an issue, there is no point of separating snapshot and log.</p> <blockquote> <p>Are your ZK machines doing any other tasks? </p></blockquote> <p>This is a dedicated ZK ensemble</p> </comment>
<comment id="13021169" author="fournc" created="Mon, 18 Apr 2011 18:38:54 +0000"><p>This might be related to this email chain from February:</p> <p><a href="http://mail-archives.apache.org/mod_mbox/zookeeper-user/201102.mbox/%3C6642FC1CAF133548AA8FDF497C547F0A23C0C5265B@NYWEXMBX2126.msad.ms.com%3E" class="external-link" target="_blank" rel="nofollow noopener">http://mail-archives.apache.org/mod_mbox/zookeeper-user/201102.mbox/%3C6642FC1CAF133548AA8FDF497C547F0A23C0C5265B@NYWEXMBX2126.msad.ms.com%3E</a></p> <p>I theorized at the time that the issue might be due to synchronization on the session table, but never got enough information to finish the investigation.</p></comment>
<comment id="13021438" author="tru64ufs" created="Tue, 19 Apr 2011 07:15:20 +0000"><p>We have uploaded a simple reproducer scripts.</p></comment>
<comment id="13021447" author="tru64ufs" created="Tue, 19 Apr 2011 07:31:49 +0000"><p>I have uploaded a python-based reproducer, and test results.</p> <p>This probably is the worst iowait CPU% (you can find them in Result directory.</p> <p>avg-cpu: %user %nice %system %iowait %steal %idle<br/> 6.15 0.00 2.05 2.56 0.00 89.23</p> <p>The resulting latency delay (with this reproducer)- You will find 2 second delay for some clients</p> <p>close session elapsed : 0ms<br/> close session elapsed : 0ms<br/> close session elapsed : 2001ms<br/> close session elapsed : 1ms<br/> close session elapsed : 0ms</p> <p>.....</p> <p>close session elapsed : 0ms<br/> close session elapsed : 0ms<br/> close session elapsed : 2001ms<br/> close session elapsed : 0ms<br/> close session elapsed : 0ms<br/> ....</p> <p>close session elapsed : 0ms<br/> close session elapsed : 2000ms<br/> close session elapsed : 2000ms<br/> close session elapsed : 0ms<br/> close session elapsed : 0ms</p> </comment>
<comment id="13021448" author="tru64ufs" created="Tue, 19 Apr 2011 07:36:56 +0000"><p>When this happens <br/> Below thread becomes BLOCKED</p> <p>"NIOServerCxn.Factory:0.0.0.0/0.0.0.0:17288" - Thread t@11<br/> java.lang.Thread.State: BLOCKED on org.apache.zookeeper.server.NIOServerCnxn$Factory@399831c3 owned by: CommitProcessor:3<br/> at org.apache.zookeeper.server.NIOServerCnxn$Factory.run(NIOServerCnxn.java:234)<br/> Locked ownable synchronizers:</p> <ul class="alternate" type="square"> <li>None</li> </ul> <p>If you look at CommitProcessor:3</p> <p>"CommitProcessor:3" - Thread t@27<br/> java.lang.Thread.State: RUNNABLE<br/> at sun.nio.ch.FileDispatcher.preClose0(Native Method)<br/> at sun.nio.ch.SocketDispatcher.preClose(SocketDispatcher.java:41)<br/> at sun.nio.ch.SocketChannelImpl.implCloseSelectableChannel(SocketChannelImpl.java:684)</p> <ul class="alternate" type="square"> <li>locked java.lang.Object@@3186c91<br/> at java.nio.channels.spi.AbstractSelectableChannel.implCloseChannel(AbstractSelectableChannel.java:201)<br/> at java.nio.channels.spi.AbstractInterruptibleChannel.close(AbstractInterruptibleChannel.java:97)</li> <li>locked java.lang.Object@@7fc600<br/> at sun.nio.ch.SocketAdaptor.close(SocketAdaptor.java:352)<br/> at org.apache.zookeeper.server.NIOServerCnxn.closeSock(NIOServerCnxn.java:1463)<br/> at org.apache.zookeeper.server.NIOServerCnxn.close(NIOServerCnxn.java:1412)</li> <li>locked java.util.HashSet@@4b94a39<br/> at org.apache.zookeeper.server.NIOServerCnxn$Factory.closeSessionWithoutWakeup(NIOServerCnxn.java:343)<br/> at org.apache.zookeeper.server.NIOServerCnxn$Factory.closeSession(NIOServerCnxn.java:330)</li> <li>locked org.apache.zookeeper.server.NIOServerCnxn$Factory@@399831c<br/> at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:133)<br/> at org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor.processRequest(Leader.java:540)<br/> at org.apache.zookeeper.server.quorum.CommitProcessor.run(CommitProcessor.java:73)<br/> Locked ownable synchronizers:</li> <li>None</li> </ul> <p>scxn.closeSession(request.sessionId)<br/> if (request.hdr != null amp;amp; request.hdr.getType() == OpCode.closeSession) {<br/> Factory scxn = zks.getServerCnxnFactory();<br/> // this might be possible since<br/> // we might just be playing diffs from the leader<br/> if (scxn != null amp;amp; request.cnxn == null) </p> { // calling this if we have the cnxn results in the client's // close session response being lost - we've already closed // the session/socket here before we can send the closeSession // in the switch block below scxn.closeSession(request.sessionId); return; } <p>}</p> <p>Below is a synchronized method</p> <p>NIOServerCnxn.Factory.closeSession()<br/> synchronized void closeSession(long sessionId) {<br/> selector.wakeup();<br/> closeSessionWithoutWakeup(sessionId);<br/> }</p> <p>@SuppressWarnings("unchecked")<br/> private void closeSessionWithoutWakeup(long sessionId) {<br/> HashSetlt;NIOServerCnxngt; cnxns;<br/> synchronized (this.cnxns) </p> { cnxns = (HashSetlt;NIOServerCnxngt;)this.cnxns.clone(); } <p> for (NIOServerCnxn cnxn : cnxns) {<br/> if (cnxn.sessionId == sessionId) {<br/> try </p> { cnxn.close(); } <p> catch (Exception e) </p> { LOG.warn("exception during session close", e); } <p> break;<br/> }<br/> }<br/> }</p> <p>We measured the time spent in scxn.closeSession(request.sessionId), and the result is in the previous post.</p> <p>if (request.hdr != null amp;amp; request.hdr.getType() == OpCode.closeSession) {<br/> Factory scxn = zks.getServerCnxnFactory();</p> <p> if (scxn != null amp;amp; request.cnxn == null) </p> { scxn.closeSession(request.sessionId); return; } <p>}</p> </comment>
<comment id="13021452" author="tru64ufs" created="Tue, 19 Apr 2011 07:48:05 +0000"><p>I think we found a culprit</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">public</span> NIOServerCnxn(ZooKeeperServer zk, SocketChannel sock, SelectionKey sk, Factory factory) <span class="code-keyword">throws</span> IOException { <span class="code-keyword">this</span>.zk = zk; <span class="code-keyword">this</span>.sock = sock; <span class="code-keyword">this</span>.sk = sk; <span class="code-keyword">this</span>.factory = factory; sock.socket().setTcpNoDelay(<span class="code-keyword">true</span>); sock.socket().setSoLinger(<span class="code-keyword">true</span>, 2); <span class="code-comment">// socket linger option of </span> InetAddress addr = ((InetSocketAddress) sock.socket() .getRemoteSocketAddress()).getAddress(); authInfo.add(<span class="code-keyword">new</span> Id(<span class="code-quote">"ip"</span>, addr.getHostAddress())); sk.interestOps(SelectionKey.OP_READ); } </pre> </div></div> <p>it is the socket linger option.<br/> since clients session already expired, do we need to wait 2 second to wait until clients to consume socket receive buffer?</p> <p>we have set to linger option to 0 to send TCP RESET, and the problem went away.</p> <p>We'll try to test original case, and report back.</p> </comment>
<comment id="13021524" author="tru64ufs" created="Tue, 19 Apr 2011 10:20:20 +0000"><p>We just verified that the original problem goes away when linger option is off (0)<br/> Mystery solved.</p> <p>We will patch our production server right away.</p></comment>
<comment id="13021601" author="mahadev" created="Tue, 19 Apr 2011 14:17:12 +0000"><p>Chang,<br/> I am quite confused. Not sure how setting the tcp linger time to 0 is helping you? What OS are you using? I find it surprising that setting the linger time to be 0 doesnt delay packets to other sockets. </p></comment>
<comment id="13021695" author="mahadev" created="Tue, 19 Apr 2011 18:14:02 +0000"><p>Ben and I looked at the man page of socket and here is what it says:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>SO_LINGER Sets or gets the SO_LINGER option. The argument is a linger structure. struct linger { int l_onoff; /* linger active */ int l_linger; /* how many seconds to linger for */ }; When enabled, a close(2) or shutdown(2) will not return until all queued messages for the socket have been successfully sent or the linger timeout has been reached. Otherwise, the call returns immediately and the closing is done in the background. When the socket is closed as part of exit(2), it always lingers in the background. </pre> </div></div> <p>So, since we have a single thread that calls close() and IO on sockets, it is possible that this can cause a huge delay in IO for other sockets. Anyone else hasmore information on this please feel free to update!</p> </comment>
<comment id="13021788" author="tdunning" created="Tue, 19 Apr 2011 20:46:27 +0000"><p>Is it possible that somebody on the server side has a lock while trying to close a socket to a failed machine?</p> <p>Or is it possible that there is a limited number of threads available for this closing activity?</p> </comment>
<comment id="13021827" author="tru64ufs" created="Tue, 19 Apr 2011 22:17:56 +0000"><p>OK.</p> <p>Linger option with 2 second timeout on Apache web server works because it is connection per process/thread model. Blocking in one process does not block other request processing.</p> <p>If you look at the code below, I don't see why it shouldn't block.<br/> One 2 sec delay causes some other closing activity to 4 or 6 or 8 seconds, and so forth.</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">NIOServerCnxn.Factory.closeSession() <span class="code-keyword">synchronized</span> void closeSession(<span class="code-object">long</span> sessionId) { selector.wakeup(); closeSessionWithoutWakeup(sessionId); } @SuppressWarnings(<span class="code-quote">"unchecked"</span>) <span class="code-keyword">private</span> void closeSessionWithoutWakeup(<span class="code-object">long</span> sessionId) { HashSetlt;NIOServerCnxngt; cnxns; <span class="code-keyword">synchronized</span> (<span class="code-keyword">this</span>.cnxns) { cnxns = (HashSetlt;NIOServerCnxngt;)<span class="code-keyword">this</span>.cnxns.clone(); } <span class="code-keyword">for</span> (NIOServerCnxn cnxn : cnxns) { <span class="code-keyword">if</span> (cnxn.sessionId == sessionId) { <span class="code-keyword">try</span> { cnxn.close(); } <span class="code-keyword">catch</span> (Exception e) { LOG.warn(<span class="code-quote">"exception during session close"</span>, e); } <span class="code-keyword">break</span>; } } } </pre> </div></div> <p>One thing I need to make correction, my team didn't set linger to 0.<br/> They disabled the linger option, close() returns immediately (lingering done by TCP stack)</p> <p>This is different than setting linger to 0, which simply flush all the buffers and send TCP RST.<br/> By disabling linger option, system will hold on to the socket in FIN_WAIT_1 state for dead clients.<br/> note that we have no timeout for FIN_WAIT_1 sockets.</p> <p>We'll have to experiment with setting linger option 0 to move socket from ESTABLISHED to CLOSED states immediately. </p> </comment>
<comment id="13022691" author="tru64ufs" created="Thu, 21 Apr 2011 09:10:33 +0000"><p>I don't see any problem with disabling linger option due to net.ipv4.tcp_orphan_retries being 200ms on Linux. socket without lingering option to dead server closed to FIN_WAIT_1 setting times out immediately (after 200ms) and immediately CLOSED.</p> <p>So our final fix is </p> <p>setSoLinger(false, -1)</p> <p>Please consider this fix for next release.<br/> Thank you.</p></comment>
<comment id="13023635" author="netspider" created="Sun, 24 Apr 2011 06:44:17 +0000"><p>This patch set NIOServerCnxn linger option to 'false, -1'.</p></comment>
<comment id="13026378" author="hadoopqa" created="Thu, 28 Apr 2011 17:13:32 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12477238/ZOOKEEPER-1049.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12477238/ZOOKEEPER-1049.patch</a><br/> against trunk revision 1091841.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/235//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/235//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/235//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/235//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/235//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/235//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13028441" author="mahadev" created="Tue, 3 May 2011 21:30:42 +0000"><p>I just committed this! Very nice catch! thanks chang!</p></comment>
<comment id="13028443" author="mahadev" created="Tue, 3 May 2011 21:32:50 +0000"><p>BTW, I added a tiny comment with the patch so that its clear for others.</p></comment>
<comment id="13028555" author="tru64ufs" created="Wed, 4 May 2011 01:55:33 +0000"><p>Kudos to "Chisu Ryu", who found the root cause and came up with the fix.<br/> Thank you.</p> </comment>
<comment id="13028703" author="hudson" created="Wed, 4 May 2011 10:55:05 +0000"><p>Integrated in ZooKeeper-trunk #1172 (See <a href="https://builds.apache.org/hudson/job/ZooKeeper-trunk/1172/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/ZooKeeper-trunk/1172/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1049" title="Session expire/close flooding renders heartbeats to delay significantly" class="issue-link" data-issue-key="ZOOKEEPER-1049"><del>ZOOKEEPER-1049</del></a>. Session expire/close flooding renders heartbeats to delay significantly. (chang song via mahadev)</p></comment>
<comment id="13125996" author="phunt" created="Wed, 12 Oct 2011 17:54:42 +0000"><p>Recently a couple of users have reported this - I'm including it in 3.3.4 as well.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12527976">ZOOKEEPER-1238</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12477238" name="ZOOKEEPER-1049.patch" size="695" author="netspider" created="Sun, 24 Apr 2011 06:44:17 +0000"/>
<attachment id="12476696" name="ZookeeperPingTest.zip" size="18970" author="tru64ufs" created="Tue, 19 Apr 2011 07:15:20 +0000"/>
<attachment id="12476516" name="zk_ping_latency.pdf" size="3626" author="tru64ufs" created="Sat, 16 Apr 2011 03:43:51 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47501</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05ywn:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32754</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-981] Hang in zookeeper_close() in the multi-threaded C client</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-981</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>I saw a hang once when my C++ application called the zookeeper_close() method of the multi-threaded Zookeeper client library. The stack trace of the hung thread was the following:</p> <blockquote> <p>Thread 8 (Thread 5644):<br/> #0 0x00007f5d7bb5bbe4 in __lll_lock_wait () from /lib/libpthread.so.0<br/> #1 0x00007f5d7bb59ad0 in pthread_cond_broadcast@@GLIBC_2.3.2 () from /lib/libpthread.so.0<br/> #2 0x00007f5d793628f6 in unlock_completion_list (l=0x32b4d68) at .../zookeeper/src/c/src/mt_adaptor.c:66<br/> #3 0x00007f5d79354d4b in free_completions (zh=0x32b4c80, callCompletion=1, reason=-116) at .../zookeeper/src/c/src/zookeeper.c:1069<br/> #4 0x00007f5d79355008 in cleanup_bufs (zh=0x32b4c80, callCompletion=1, rc=-116) at .../thirdparty/zookeeper/src/c/src/zookeeper.c:1125<br/> #5 0x00007f5d79353200 in destroy (zh=0x32b4c80) at .../thirdparty/zookeeper/src/c/src/zookeeper.c:366<br/> #6 0x00007f5d79358e0e in zookeeper_close (zh=0x32b4c80) at .../zookeeper/src/c/src/zookeeper.c:2326<br/> #7 0x00007f5d79356d18 in api_epilog (zh=0x32b4c80, rc=0) at .../zookeeper/src/c/src/zookeeper.c:1661<br/> #8 0x00007f5d79362f2f in adaptor_finish (zh=0x32b4c80) at .../zookeeper/src/c/src/mt_adaptor.c:205<br/> #9 0x00007f5d79358c8c in zookeeper_close (zh=0x32b4c80) at .../zookeeper/src/c/src/zookeeper.c:2297 <br/> ...</p></blockquote> <p>The omitted part of the stack trace is entirely within my application, and contains no other calls to/from the Zookeeper client. In particular, I am not calling zookeeper_close() from within a completion handler or any of the library's threads.</p> <p>I haven't been able to reproduce this, and when I encountered this I wasn't capturing logging from the client library, so unfortunately I don't have any more information at this time. But I will update this JIRA if I see it again.</p></description>
<environment><p>Debian Squeeze, Linux 2.6.32-5, x86_64</p></environment>
<key id="12497380">ZOOKEEPER-981</key>
<summary>Hang in zookeeper_close() in the multi-threaded C client</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="strib">Jeremy Stribling</assignee>
<reporter username="strib">Jeremy Stribling</reporter>
<labels> </labels>
<created>Tue, 1 Feb 2011 20:23:01 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:00 +0000</updated>
<resolved>Wed, 14 Sep 2011 04:10:37 +0000</resolved>
<version>3.3.2</version>
<fixVersion>3.4.0</fixVersion>
<component>c client</component>
<due/>
<votes>1</votes>
<watches>7</watches>
<comments>
<comment id="12989741" author="breed" created="Wed, 2 Feb 2011 18:48:51 +0000"><p>we have seen this happen when zookeeper functions, including zookeeper_close(), are called on handles that have already been closed. (aka double free.) is it possible that you had previously called zookeeper_close() on the handle?</p></comment>
<comment id="12989752" author="strib" created="Wed, 2 Feb 2011 19:07:25 +0000"><p>Not in any way that I can see. The only code in my app that calls zookeeper_close() looks like this:</p> <blockquote> <p> if (_zk_handle != NULL) </p> <div class="error"><span class="error">Unknown macro: { // assume for now that there is only a single zookeeper client instance assert(_closing_zh == NULL); _closing_zh = _zk_handle; ... zookeeper_close(_zk_handle); _zk_handle = NULL; ... }</span> </div></blockquote> <p>In order to call zookeeper_close() twice on the same handle, it would have to pass through that assert, which would have failed. (The app uses non-preemptive cooperative threading, so there shouldn't be any races there.)</p></comment>
<comment id="12989753" author="strib" created="Wed, 2 Feb 2011 19:09:44 +0000"><p>Oops, sorry. Here's the code again:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> <span class="code-keyword">if</span> (_zk_handle != NULL) { <span class="code-keyword">assert</span>(_closing_zh == NULL); _closing_zh = _zk_handle; ... zookeeper_close(_zk_handle); _zk_handle = NULL; ... } </pre> </div></div></comment>
<comment id="12989773" author="breed" created="Wed, 2 Feb 2011 20:09:15 +0000"><p>do you also set _closing_zh to null after the close? is it possible that this block is invoked concurrently by two different threads? or is it protected by a mutex? (i don't mean to pry, just a sanity check <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="12989776" author="strib" created="Wed, 2 Feb 2011 20:13:36 +0000"><p>Yes, sorry, _closing_zh is set to NULL after the if block.</p> <p>And I mentioned above that we use cooperative threading, so concurrency races shouldn't be an issue.</p></comment>
<comment id="12996260" author="tsulin" created="Fri, 18 Feb 2011 06:57:45 +0000"><p>I have the same problem.</p> <p>It may be reproduced by the following steps:<br/> 1 create two zk handle A and B<br/> 2 use A to create an ephemeral node under path P<br/> 3 use B to getchild of P and set a watcher<br/> 4 in the watcher function, getchild of P and set the watcher<br/> 5 close A<br/> 6 close B</p> <p>It will be reproduced in a probability of about 10%.</p> <p>I found zookeeper_close is called three times when closing B. destroy is called twice, one of which is called from do_completion.</p> <p>I think there is a race condition in zookeeper_close.</p> <p>int zookeeper_close(zhandle_t *zh)<br/> {<br/> int rc=ZOK;<br/> if (zh==0)<br/> return ZBADARGUMENTS;</p> <p> zh-gt;close_requested=1;<br/> if (inc_ref_counter(zh,0)!=0) </p> { /* Signal any syncronous completions before joining the threads */ enter_critical(zh); free_completions(zh,1,ZCLOSING); leave_critical(zh); adaptor_finish(zh); // If do_completion is finished before here, zookeeper_close will be called twice. Once in do_completion, another in adaptor_finish. return ZOK; } <p> if(zh-gt;state==ZOO_CONNECTED_STATE){</p> </comment>
<comment id="12996265" author="tsulin" created="Fri, 18 Feb 2011 07:12:07 +0000"><p>sorry, code again</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-none">int zookeeper_close(zhandle_t *zh) { int rc=ZOK; if (zh==0) return ZBADARGUMENTS; zh-gt;close_requested=1; if (inc_ref_counter(zh,0)!=0) { /* Signal any syncronous completions before joining the threads */ enter_critical(zh); free_completions(zh,1,ZCLOSING); leave_critical(zh); adaptor_finish(zh);// If do_completion is finished before here, zookeeper_close will be called twice. Once in do_completion, another in adaptor_finish. return ZOK; } if(zh-gt;state==ZOO_CONNECTED_STATE){ </pre> </div></div></comment>
<comment id="12996473" author="tsulin" created="Fri, 18 Feb 2011 15:54:28 +0000"><p>test codes to reproduce this bug</p></comment>
<comment id="12996497" author="tsulin" created="Fri, 18 Feb 2011 16:27:15 +0000"><p>sorry for upload many times. my network sucks.</p> <p>stack trace:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-none">#1 0x0000003e75a0b0c0 in pthread_cond_broadcast@@GLIBC_2.3.2 () from /lib64/libpthread.so.0 #2 0x00002ad3f8a504c1 in unlock_completion_list () from /usr/lib/libzookeeper_mt.so.2 #3 0x00002ad3f8a46f47 in free_completions () from /usr/lib/libzookeeper_mt.so.2 #4 0x00002ad3f8a47152 in cleanup_bufs () from /usr/lib/libzookeeper_mt.so.2 #5 0x00002ad3f8a471b5 in destroy () from /usr/lib/libzookeeper_mt.so.2 #6 0x00002ad3f8a4731c in zookeeper_close () from /usr/lib/libzookeeper_mt.so.2 #7 0x00002ad3f8a474e8 in api_epilog () from /usr/lib/libzookeeper_mt.so.2 #8 0x00002ad3f8a47370 in zookeeper_close () from /usr/lib/libzookeeper_mt.so.2 #9 0x0000000000401aed in zookeeper_client::~zookeeper_client() () #10 0x0000000000401744 in main () </pre> </div></div> <p>or</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-none">#1 0x0000003e75a0b0c0 in pthread_cond_broadcast@@GLIBC_2.3.2 () from /lib64/libpthread.so.0 #2 0x00002ad98e6a485a in adaptor_finish () from /usr/lib/libzookeeper_mt.so.2 #3 0x00002ad98e69b370 in zookeeper_close () from /usr/lib/libzookeeper_mt.so.2 #4 0x0000000000401ae5 in zookeeper_client::~zookeeper_client() () #5 0x000000000040173b in main () </pre> </div></div></comment>
<comment id="13002911" author="strib" created="Sat, 5 Mar 2011 02:48:02 +0000"><p>Attached is an interim patch for this bug that solves the problems exhibited by tsulin's test on my system.</p></comment>
<comment id="13002912" author="strib" created="Sat, 5 Mar 2011 02:52:07 +0000"><p>When I run tsulin's test under valgrind on my system with Zookeeper 3.3.3, after only 5 iterations I see double-free errors of the type</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>==10430== Invalid read of size 8 ==10430== at 0x405823: free_completions (zookeeper.c:1066) ==10430== by 0x405B4F: cleanup_bufs (zookeeper.c:1125) ==10430== by 0x403D47: destroy (zookeeper.c:366) ==10430== by 0x409961: zookeeper_close (zookeeper.c:2327) ==10430== by 0x40785F: api_epilog (zookeeper.c:1661) ==10430== by 0x413A82: adaptor_finish (mt_adaptor.c:205) ==10430== by 0x4097DF: zookeeper_close (zookeeper.c:2298) ==10430== by 0x4036AC: zookeeper_client::~zookeeper_client() (ZOOKEEPER-981.cpp:54) ==10430== by 0x403325: main (ZOOKEEPER-981.cpp:112) ==10430== Address 0x5b5c0e8 is 296 bytes inside a block of size 728 free'd ==10430== at 0x4C240FD: free (vg_replace_malloc.c:366) ==10430== by 0x409979: zookeeper_close (zookeeper.c:2329) ==10430== by 0x40785F: api_epilog (zookeeper.c:1661) ==10430== by 0x414083: do_completion (mt_adaptor.c:335) ==10430== by 0x4E2F8B9: start_thread (pthread_create.c:300) ==10430== by 0x58C002C: clone (clone.S:112) </pre> </div></div> <p>However, when I run with the above attached patch, I was able to run over 100 times without any valgrind errors.</p> <p>The patch itself probably isn't good enough as it is #8211; it's a mismatch of inc_ref_counter and api_epilog. But I thought I'd post it here until a more knowledgeable ZK developer can make a proper one.</p></comment>
<comment id="13049624" author="mahadev" created="Wed, 15 Jun 2011 05:58:25 +0000"><p>Looks like we should get this into 3.4. </p></comment>
<comment id="13066474" author="mahadev" created="Sat, 16 Jul 2011 17:43:51 +0000"><p>Reuploading to run the patch via hudson.</p></comment>
<comment id="13066475" author="mahadev" created="Sat, 16 Jul 2011 17:44:56 +0000"><p>Ben, <br/> Would you be able to review this patch? </p></comment>
<comment id="13066486" author="hadoopqa" created="Sat, 16 Jul 2011 18:15:46 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12486732/ZOOKEEPER-981-v1.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12486732/ZOOKEEPER-981-v1.patch</a><br/> against trunk revision 1146961.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/399//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13068003" author="strib" created="Tue, 19 Jul 2011 21:49:35 +0000"><p>Patrick, sorry if this is a dense question, but why is this issue assigned back to me? My understanding is that it's waiting for a review from Ben.</p> <p>Feel free to assign back to me if I'm misunderstanding the assignee protocol.</p></comment>
<comment id="13082902" author="hadoopqa" created="Thu, 11 Aug 2011 04:25:51 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12486732/ZOOKEEPER-981-v1.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12486732/ZOOKEEPER-981-v1.patch</a><br/> against trunk revision 1152141.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/442//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13082906" author="mahadev" created="Thu, 11 Aug 2011 04:32:46 +0000"><p>Jeremy,<br/> The jira is usually assigned to the person who uploads the patch and has done work on it. The patch assignment does not change if it needs reviews. Hope that helps.</p></comment>
<comment id="13082908" author="mahadev" created="Thu, 11 Aug 2011 04:33:33 +0000"><p>ben,<br/> Can you review this?</p></comment>
<comment id="13095525" author="breed" created="Thu, 1 Sep 2011 18:49:19 +0000"><p>do you think we could incorporate the test in the tar file into the patch? it should easily convert to a cppunit test.</p></comment>
<comment id="13095805" author="helei" created="Fri, 2 Sep 2011 06:54:09 +0000"><p>I saw the same problem. Maybe ref_counter should be increased before we free zh</p></comment>
<comment id="13096290" author="breed" created="Fri, 2 Sep 2011 20:50:15 +0000"><p>helei are you saying that you see the problem even with this patch applied?</p></comment>
<comment id="13104231" author="mahadev" created="Wed, 14 Sep 2011 04:10:37 +0000"><p>I just committed this to trunk. The change looks good to me. Ben we can probably add a testcase in a different jira.</p></comment>
<comment id="13105265" author="hudson" created="Thu, 15 Sep 2011 10:56:35 +0000"><p>Integrated in ZooKeeper-trunk #1304 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1304/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1304/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-981" title="Hang in zookeeper_close() in the multi-threaded C client" class="issue-link" data-issue-key="ZOOKEEPER-981"><del>ZOOKEEPER-981</del></a>. Hang in zookeeper_close() in the multi-threaded C client. (Jeremy Stribling via mahadev)</p> <p>mahadev : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1170430" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1170430</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/c/src/zookeeper.c</li> </ul> </comment>
<comment id="13152858" author="helei" created="Fri, 18 Nov 2011 13:31:46 +0000"><p>Sorry for not response in time. I saw another problem with this patch applied. Hang in zookeeper_close() again. here is the stack:<br/> (gdb) bt<br/> #0 0x000000302b80adfb in __lll_mutex_lock_wait () from /lib64/tls/libpthread.so.0<br/> #1 0x000000302b1307a8 in main_arena () from /lib64/tls/libc.so.6<br/> #2 0x000000302b910230 in stack_used () from /lib64/tls/libpthread.so.0<br/> #3 0x000000302b808dde in pthread_cond_broadcast@@GLIBC_2.3.2 () from /lib64/tls/libpthread.so.0<br/> #4 0x00000000006b4ce8 in adaptor_finish (zh=0x6902060) at src/mt_adaptor.c:217<br/> #5 0x00000000006b0fd0 in zookeeper_close (zh=0x6902060) at src/zookeeper.c:2297<br/> (gdb) p zh-gt;ref_counter <br/> $5 = 1<br/> (gdb) p zh-gt;close_requested <br/> $6 = 1<br/> (gdb) p *zh<br/> $7 = {fd = 110112576, hostname = 0x6903620 "", addrs = 0x0, addrs_count = 1, <br/> watcher = 0x62e5dc lt;doris::meta_register_mgr_t::register_mgr_watcher(_zhandle*, int, int, char const*, void*)gt;, last_recv = </p> {tv_sec = 1321510694, tv_usec = 552835} <p>, last_send = </p> {tv_sec = 1321510694, tv_usec = 552886} <p>, last_ping = </p> {tv_sec = 1321510685, tv_usec = 774869} <p>, next_deadline = </p> { tv_sec = 1321510704, tv_usec = 547831} <p>, recv_timeout = 30000, input_buffer = 0x0, to_process = {head = 0x0, last = 0x0, lock = {__m_reserved = 0, <br/> __m_count = 0, __m_owner = 0x0, __m_kind = 0, __m_lock = {__status = 0, __spinlock = 0}}}, to_send = {head = 0x0, last = 0x0, lock = {<br/> __m_reserved = 0, __m_count = 0, __m_owner = 0x0, __m_kind = 1, __m_lock = {__status = 0, __spinlock = 0}}}, sent_requests = {head = 0x0, last = 0x0, <br/> cond = {__c_lock = {_<em>status = 1, __spinlock = -1}, __c_waiting = 0x0, __padding = '\0' lt;repeats 15 timesgt;, __align = 0}, lock = {</em>_m_reserved = 0, <br/> __m_count = 0, __m_owner = 0x0, __m_kind = 0, __m_lock = {__status = 0, __spinlock = 0}}}, completions_to_process = {head = 0x2aefbff800, <br/> last = 0x2af0e05f40, cond = {__c_lock = {__status = 592705486850, __spinlock = -1}, __c_waiting = 0x45, <br/> _<em>padding = "E\000\000\000\000\000\000\000\220\006\000\000\000", __align = 296352743424}, lock = {</em>_m_reserved = 1, __m_count = 0, <br/> __m_owner = 0x1000026ca, __m_kind = 0, __m_lock = {__status = 0, __spinlock = 0}}}, connect_index = 0, client_id = </p> {client_id = 86551148676999146, passwd = "G懵擀\233\213\f闬202筴\002錪\034"} <p>, last_zxid = 82057372, outstanding_sync = 0, primer_buffer = </p> {buffer = 0x6902290 "", len = 40, curr_offset = 44, next = 0x0} <p>, primer_storage = </p> {len = 36, protocolVersion = 0, timeOut = 30000, sessionId = 86551148676999146, passwd_len = 16, passwd = "G懵擀\233\213\f闬202筴\002錪\034"} <p>, <br/> primer_storage_buffer = "\000\000\000$\000\000\000\000\000\000u0\0013}惜薵闬000\000\000\020G懵擀\233\213\f闬202筴\002錪\034", state = 0, context = 0x0, <br/> auth_h = {auth = 0x0, lock = {__m_reserved = 0, __m_count = 0, __m_owner = 0x0, __m_kind = 0, __m_lock = {__status = 0, __spinlock = 0}}}, <br/> ref_counter = 1, close_requested = 1, adaptor_priv = 0x0, socket_readable = </p> {tv_sec = 0, tv_usec = 0} <p>, active_node_watchers = 0x6901520, <br/> active_exist_watchers = 0x69015d0, active_child_watchers = 0x6902ef0, chroot = 0x0}<br/> I think the ref_counter is suposed to be 2 or 3 here. 1 seems not correct. thanks again</p></comment>
<comment id="13152962" author="phunt" created="Fri, 18 Nov 2011 16:55:53 +0000"><p>@helei please enter a new JIRA with this issue, reference this jira in your description. thanks!</p></comment>
</comments>
<attachments>
<attachment id="12486732" name="ZOOKEEPER-981-v1.patch" size="1167" author="mahadev" created="Sat, 16 Jul 2011 17:43:51 +0000"/>
<attachment id="12471413" name="ZOOKEEPER-981.tar.gz" size="1449" author="tsulin" created="Fri, 18 Feb 2011 16:08:39 +0000"/>
<attachment id="12472730" name="zookeeper-981.patch" size="1153" author="strib" created="Sat, 5 Mar 2011 02:48:02 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47522</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05z4n:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32790</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-333] helgrind thread issues identified in mt c client code</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-333</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>helgrind generated a number of issues, I pulled a bunch of them. Most are related to the test, some are really issues with the mt zk client code though:</p> <p>valgrind --tool=helgrind --log-file=helgrind_mt.out ./zktest-mt</p> <p>==31294== Thread #2: pthread_cond_</p> {timed}wait called with un-held mutex<br/> ==31294== at 0x4027F8F: pthread_cond_wait@* (hg_intercepts.c:560)<br/> ==31294== by 0x404D881: pthread_cond_wait@GLIBC_2.0 (in /lib/tls/i686/cmov/libpthread-2.8.90.so)<br/> ==31294== by 0x4028037: pthread_cond_wait@* (hg_intercepts.c:574)<br/> ==31294== by 0x809EBB7: pthread_cond_wait (PthreadMocks.cc:54)<br/> ==31294== by 0x80ABCF6: notify_thread_ready (mt_adaptor.c:136)<br/> ==31294== by 0x80ABE90: do_io (mt_adaptor.c:277)<br/> <br/> <br/> ==31294== Possible data race during write of size 4 at 0x42E9A58<br/> ==31294== at 0x8050D83: terminateZookeeperThreads(_zhandle*) (ZKMocks.cc:518)<br/> ==31294== by 0x805543B: DeliverWatchersWrapper::call(_zhandle*, int, int, char const*, watcher_object_list**) (ZKMocks.cc:261)<br/> ==31294== by 0x80520F7: __wrap_deliverWatchers (ZKMocks.cc:220)<br/> ==31294== by 0x80A287B: process_completions (zookeeper.c:1393)<br/> ==31294== by 0x80ABDAA: do_completion (mt_adaptor.c:332)<br/> <br/> ==31294== Possible data race during write of size 4 at 0xBEFF5F30<br/> ==31294== at 0x80589AF: Zookeeper_watchers::ConnectionWatcher::~ConnectionWatcher() (TestWatchers.cc:54)<br/> ==31294== by 0x805D062: Zookeeper_watchers::testDefaultSessionWatcher1() (TestWatchers.cc:438)<br/> ==31294== by 0x805608C: CppUnit::TestCallerlt;Zookeeper_watchersgt;::runTest() (TestCaller.h:166)<br/> <br/> <br/> ==31294== Possible data race during write of size 4 at 0x42EB104<br/> ==31294== at 0x80A03EE: queue_completion (zookeeper.c:1776)<br/> ==31294== by 0x80A3A44: zookeeper_process (zookeeper.c:1598)<br/> ==31294== by 0x80AC00B: do_io (mt_adaptor.c:309)<br/> <br/> <br/> ==31294== Thread #29: pthread_cond_{timed} <p>wait called with un-held mutex<br/> ==31294== at 0x4027F8F: pthread_cond_wait@* (hg_intercepts.c:560)<br/> ==31294== by 0x404D881: pthread_cond_wait@GLIBC_2.0 (in /lib/tls/i686/cmov/libpthread-2.8.90.so)<br/> ==31294== by 0x4028037: pthread_cond_wait@* (hg_intercepts.c:574)<br/> ==31294== by 0x809EBB7: pthread_cond_wait (PthreadMocks.cc:54)<br/> ==31294== by 0x80AB9B3: wait_sync_completion (mt_adaptor.c:82)<br/> ==31294== by 0x80A1E82: zoo_wget (zookeeper.c:2517)<br/> ==31294== by 0x80A1F13: zoo_get (zookeeper.c:2497)</p> </description>
<environment/>
<key id="12415825">ZOOKEEPER-333</key>
<summary>helgrind thread issues identified in mt c client code</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="mahadev">Mahadev Konar</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Fri, 27 Feb 2009 21:56:25 +0000</created>
<updated>Wed, 8 Jul 2009 20:24:00 +0000</updated>
<resolved>Thu, 12 Mar 2009 00:31:45 +0000</resolved>
<fixVersion>3.1.1</fixVersion>
<fixVersion>3.2.0</fixVersion>
<component>c client</component>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="12678385" author="mahadev" created="Tue, 3 Mar 2009 18:31:26 +0000"><p>i found some more while running helgrind... attacching the filtered output.</p></comment>
<comment id="12679629" author="cdarroch" created="Fri, 6 Mar 2009 16:16:26 +0000"><p>Some of these look to be innocuous on a first glance, such as "wait called with un-held mutex" in wait_sync_completion(). I suppose the issue here might be that wait_sync_completion() doesn't check the return value from pthread_mutex_lock() before proceeding, but in practice I believe one can reasonably assume it always succeeds.</p> <p>One thing that might help a bit would be to have a reference to the C code which produced this output because it refers to line numbers in the code. Was the run against 3.1.0 or against a snapshot from trunk? If the latter, do you know the SVN revision number?</p></comment>
<comment id="12679667" author="mahadev" created="Fri, 6 Mar 2009 17:49:54 +0000"><p>chris,<br/> the run was from the trunk. I dont have a revision number but i think their hasnt been any code change to the source files after I uploaded the traces. So the line numbers should match.</p></comment>
<comment id="12679676" author="phunt" created="Fri, 6 Mar 2009 18:13:08 +0000"><p>This latest gzip'd helgrind output file is from svn trunk:</p> <p>At revision 751008.</p> <p>Note: the tests hang at the following step:</p> <p>Zookeeper_operations::testOperationsAndDisconnectConcurrently1^CKilled</p> <p>I had to ctrl-c the test to stop. Perhaps this means helgrind is tickling a bad problem(s)? We should re run helgrind after resolving the basic issues currently in the log, and see if this hang still occurrs. Perhaps you guys could also look at the test in question to see if anything catches your eye? The test should not be failing.</p></comment>
<comment id="12679677" author="phunt" created="Fri, 6 Mar 2009 18:14:34 +0000"><p>ps. I'm on ubuntu intrepid ibex latest, single core cpu.</p></comment>
<comment id="12679682" author="mahadev" created="Fri, 6 Mar 2009 18:34:24 +0000"><p>Helgrind: Fatal internal error #8211; cannot continue.<br/> Helgrind: mk_SHVAL_ShR(tset=8192,lset=1): FAILED<br/> Helgrind: max allowed tset=8191, lset=131071<br/> Helgrind: program has too many thread sets or lock sets to track.</p> <p>this is the error generated by helgrind when it hangs with the tests and is not able to run all of the tests.</p></comment>
<comment id="12680645" author="mahadev" created="Tue, 10 Mar 2009 22:09:15 +0000"><p>most of the traces in the helgrind output seem harmless to me. This patch has some minor changes (declaring the head pointers of lists as volatile, which we keep checking in different threads without locking), which might cause some problems. the others I think is fine.</p></comment>
<comment id="12681115" author="phunt" created="Thu, 12 Mar 2009 00:31:45 +0000"><p>Looks good, +1.</p> <p>Committed revision 752711.<br/> Committed revision 752726.</p></comment>
<comment id="12681686" author="hudson" created="Fri, 13 Mar 2009 11:44:40 +0000"><p>Integrated in ZooKeeper-trunk #253 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/253/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/253/</a>)</p> </comment>
</comments>
<attachments>
<attachment id="12401871" name="ZOOKEEPER-333.patch" size="644" author="mahadev" created="Tue, 10 Mar 2009 22:09:15 +0000"/>
<attachment id="12401326" name="helgrind_mt.out" size="22896" author="mahadev" created="Tue, 3 Mar 2009 18:31:26 +0000"/>
<attachment id="12401637" name="helgrind_mt.out.gz" size="16446" author="phunt" created="Fri, 6 Mar 2009 18:13:08 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47896</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0617z:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33129</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-823] update ZooKeeper java client to optionally use Netty for connections</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-823</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>This jira will port the client side connection code to use netty rather than direct nio.</p></description>
<environment/>
<key id="12469662">ZOOKEEPER-823</key>
<summary>update ZooKeeper java client to optionally use Netty for connections</summary>
<type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21141avatarType=issuetype">New Feature</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="3">Duplicate</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Mon, 19 Jul 2010 21:57:03 +0000</created>
<updated>Thu, 3 Feb 2022 08:49:11 +0000</updated>
<resolved>Thu, 3 Feb 2022 08:49:06 +0000</resolved>
<component>java client</component>
<due/>
<votes>2</votes>
<watches>10</watches>
<comments>
<comment id="12890922" author="phunt" created="Wed, 21 Jul 2010 22:09:30 +0000"><p>This patch builds on the patch for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-733" title="use netty to handle client connections" class="issue-link" data-issue-key="ZOOKEEPER-733"><del>ZOOKEEPER-733</del></a></p> <p>Refactored ClientCnxn into common code, nettyclientcnxn and nioclientcnxn</p> <p>tests are included specifically for netty client, however you can also run the full test suite along with the zookeeper.clientCnxnFactory option in order to run all the tests using netty.</p></comment>
<comment id="12890942" author="phunt" created="Wed, 21 Jul 2010 22:49:08 +0000"><p>Hm... seems to be an intermittent issue with NIO now:</p> <p>a test got stuck in zookeeper client waiting for close to return - which it never did. The send thread is already gone. No logs available as junit timed out eventually and didn't write the logs as a result. </p> <p>Ben can you take a look at this?</p> <p>"main" prio=10 tid=0x0000000041397800 nid=0x48c2 in Object.wait() <span class="error">#91;0x00007f17f5afd000#93;</span><br/> java.lang.Thread.State: WAITING (on object monitor)<br/> at java.lang.Object.wait(Native Method)</p> <ul class="alternate" type="square"> <li>waiting on lt;0x00007f17d2125fd0gt; (a org.apache.zookeeper.ClientCnxn$Packet)<br/> at java.lang.Object.wait(Object.java:485)<br/> at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:1007)</li> <li>locked lt;0x00007f17d2125fd0gt; (a org.apache.zookeeper.ClientCnxn$Packet)<br/> at org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:985)<br/> at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:534)</li> <li>locked lt;0x00007f17d1ca5858gt; (a org.apache.zookeeper.test.DisconnectableZooKeeper)<br/> at org.apache.zookeeper.test.QuorumTest.testLeaderShutdown(QuorumTest.java:168)</li> </ul> </comment>
<comment id="12891007" author="phunt" created="Thu, 22 Jul 2010 05:33:18 +0000"><p>fixed a timing problem with nio introduced during the refactor<br/> fixed an issue with netty disconnect testing.</p> <p>added netty-netty tests (client-server both netty)</p></comment>
<comment id="12898157" author="thkoch" created="Fri, 13 Aug 2010 09:43:36 +0000"><p>Hi Patrick,</p> <p>please excuse me, but when it comes to clean code I'm a pain in the ass.</p> <p>ClientCnxnFactory.createConnection (in both variants) looks up the name of the factory from System.getProperty(ZOOKEEPER_CLIENT_CNXN_FACTORY). I think this is ugly. It should not be the concern of createConnection where the name comes from (System property, config file, ...). It should receive the name as a parameter. You can then still have a helper method to look up the name from the system property.</p> <p>Are the classes NIOClientCnxnFactory and NettyClientCnxnFactory really necessary? I'm not fluent enough in java, but this seems very verbose and unnecessarily confusing to me.</p> <p>The two methods ClientCnxnFactory.createConnection are mostly cutamp;paste code. One should call the other with null values for long sessionId, byte[] sessionPasswd.</p> <p>In NIOClientCnxn.cleanup() you check for LOG.isDebugEnabled(). This would be warranted only for log messages that are expensive to build and inside of code that's called often. Both conditions are not true in these cases.</p> <p>Now that you've put all the socket related code in the two XXXClientCnxn packages it becomes obvious, that ClientCnxn actually has at least two responsibilities that could be separated in different classes. ClientCnxn could be split up in one class working with Packets, handling sockets and another class preparing and handling finished Packets. The first may be called abstract ClientCnxnSocket and the second remains ClientCnxn.<br/> ClientCnxn could work with two types of ClientCnxnSocket: NioClientCnxnSocket and NettyClientCnxnSocket. The ClientCnxnSocket classes would probably not even be aware of that they are working for ZooKeeper. They just happily send and receive Packets and handle a Thread for that issue. I don't know, how much work it would mean for you to refactor your patch in this way, but I think it would clean up the code a lot. (And make all of us happy in the long run.)</p></comment>
<comment id="12904629" author="thkoch" created="Tue, 31 Aug 2010 13:47:09 +0000"><p>This is a refactoring of phunt's patch to separate the socket specific code into subclasses of ClientCnxnSocket and make ClientCnxn concrete again. IMHO this makes the code much more comprehendable.<br/> I'm sorry, that eclipse made the patch a little larger then necessary. I've turned the auto-reformatting off now, but I don't know any easy way to undo the formatting changes.</p></comment>
<comment id="12904633" author="thkoch" created="Tue, 31 Aug 2010 14:00:53 +0000"><p>I did run the tests, but had some failures. But as far as I could see, these failures were in the server code, unrelated to my changes.<br/> I did a basic test to create, delete and list nodes with this jar in the zk shell and this did work with NIO and Netty.</p></comment>
<comment id="12904959" author="phunt" created="Wed, 1 Sep 2010 07:31:32 +0000"><p>I only had time to apply the patch and run the tests #8211; the latest patch (Thomas's changes) is failing in both ACLTest and NettyNettySuiteTest. All tests were passing for me when I created the original patches, either the trunk is broken or the latest changes have introduced some problem. Both of these failed tests heavily exercise the client code (nio/netty) so I suspect it's a real issue with the latest refactoring. You'll need to look into these more deeply.</p></comment>
<comment id="12904961" author="phunt" created="Wed, 1 Sep 2010 07:37:12 +0000"><p>FYI: I tried acltest on the trunk w/o this patch and it passed.</p></comment>
<comment id="12905209" author="thkoch" created="Wed, 1 Sep 2010 20:37:26 +0000"><p>I changed the following things:</p> <ul class="alternate" type="square"> <li>call the correct cleanup() method. I f..ed up to refactor the call hierarchy</li> <li>combine doReads() and doWrites() again into doIO() in NIO as it was before</li> <li>all access to selector is synchronized on ClientCnxnSocket</li> </ul> <p>I'm having problems to run the testsuite and believe that I'm somehow bitten by <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-126" title="zookeeper client close operation may block indefinitely" class="issue-link" data-issue-key="ZOOKEEPER-126">ZOOKEEPER-126</a>. Some Tests just block and when I debug them, they always wait indefinitely on packet.wait().</p> <p>Something like the following helped, however with every different attempt to solve <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-126" title="zookeeper client close operation may block indefinitely" class="issue-link" data-issue-key="ZOOKEEPER-126">ZOOKEEPER-126</a> other tests failed respectively blocked.</p> <p>src/java/main/org/apache/zookeeper/ClientCnxn.java<br/> @@ -1088,6 +1088,10 @@ public class ClientCnxn {<br/> ReplyHeader r = new ReplyHeader();<br/> Packet packet = queuePacket(h, r, request, response, null, null, null,<br/> null, watchRegistration);<br/> + if(h.getType() == ZooDefs.OpCode.closeSession)</p> { + Thread.sleep((long) (sessionTimeout*1.1)); + return r; + } <p> synchronized (packet) {<br/> while (!packet.finished) {<br/> packet.wait();</p> <p>My tests still run now with the above code. Some take 10 minutes and more.</p> <p>I also had to reduce the number of hammerthreads in org.apache.zookeeper.test.AsyncHammerTest to 10 to make it work.</p> <p>I'm running openjdk <br/> java version "1.6.0_18"<br/> OpenJDK Runtime Environment (IcedTea6 1.8.1) (6b18-1.8.1-1)<br/> OpenJDK 64-Bit Server VM (build 16.0-b13, mixed mode)</p></comment>
<comment id="12905422" author="phunt" created="Thu, 2 Sep 2010 05:53:18 +0000"><p>Now this test is hanging for me (with most recent patch):</p> <p> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.server.InvalidSnapshotTest</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-126" title="zookeeper client close operation may block indefinitely" class="issue-link" data-issue-key="ZOOKEEPER-126">ZOOKEEPER-126</a> has never really been much of an issue - don't remember seeing it in tests. Could be that timing shifted, however I was not seeing any of this with my original patch.</p></comment>
<comment id="12905469" author="thkoch" created="Thu, 2 Sep 2010 09:56:40 +0000"><p>changes:</p> <ul class="alternate" type="square"> <li>call ClientCnxn.cleanup() from ClientCnxnSocketNIO.cleanup(), was lost during the refactoring</li> <li>cleaned the formatting changes to make the patch smaller</li> </ul> <p>Now there are only three failures left:<br/> NettyNettySuiteTest - ACLTest.testAcls<br/> KeeperErrorCode = ConnectionLoss for /0<br/> org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /0<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:90)<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)<br/> at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:640)<br/> at org.apache.zookeeper.test.ACLTest.testAcls(ACLTest.java:104)<br/> at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:51)</p> <p>When I run the whole suite in eclipse as JUnit test, it does not fail.</p> <p>NettyNettySuiteHammerTest - The log doesn't tell me anything, I assume it's just the same as in NettyNettySuiteTest</p> <p>NioNettySuiteTest - ClientTest.testClientCleanup<br/> open fds after test are not significantly higher than before<br/> junit.framework.AssertionFailedError: open fds after test are not significantly higher than before<br/> at org.apache.zookeeper.test.ClientTest.testClientCleanup(ClientTest.java:731)<br/> at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:51)</p> <p>When I run the whole suite in eclipse, the test still fails, however when I run only ClientTest.testClientCleanup alone, it does not fail anymore.</p> <p>I would really appreciate, if you could help me from now on. I double, partly triple checked the refactoring.</p></comment>
<comment id="12907176" author="ikelly" created="Wed, 8 Sep 2010 11:49:13 +0000"><p>A few comments on the current patch.</p> <p>src/java/main/org/apache/zookeeper/ClientCnxn.java:L709 <br/> There's a lot of instanceof used with exceptions. Really you should give each exception it's own catch, and then put the common code in a finally clause.</p> <p>src/java/main/org/apache/zookeeper/ClientCnxn.java:L920<br/> This method has a lot of magic numbers being used. These should be defined as consts somewhere and used as such.</p> <p>src/java/main/org/apache/zookeeper/ClientCnxn.java:L755<br/> Theres a TODO about making SendThread an implementation of Runnable. This change should be fairly simple, so why not do it before submitting? </p> <p>src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO:L110<br/> Are all these try/catches necessary? A single try catch around the whole lot would do. If you need to see where it happened, you can look at the stacktrace.</p> <p>One other thing to keep in mind is that this patch with conflict with 702, so whichever get submitted second will have to be careful not to break the other's functionality.</p></comment>
<comment id="12907270" author="thkoch" created="Wed, 8 Sep 2010 15:49:16 +0000"><p>Hi Ivan,</p> <p>thank you for looking over the patch. I agree with all your comments but the last one on src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO:L110. Yes, the separate try-catches seem necessary to me.<br/> I've added a link to issue <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-702" title="GSoC 2010: Failure Detector Model" class="issue-link" data-issue-key="ZOOKEEPER-702">ZOOKEEPER-702</a> about the incompatibility.<br/> In general, it's easier to review patches that do small incremental changes. So I'd propose that you open separate jira issues for your observations so that we can work on them after this patch has been committed.<br/> I already opened <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-835" title="Refactoring Zookeeper Client Code" class="issue-link" data-issue-key="ZOOKEEPER-835">ZOOKEEPER-835</a> as an umbrella issue for several clean ups in the ZK java client code. Your issues would fit in there.</p> </comment>
<comment id="12909636" author="hadoopqa" created="Wed, 15 Sep 2010 07:22:48 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12453672/ZOOKEEPER-823.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12453672/ZOOKEEPER-823.patch</a><br/> against trunk revision 997192.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 21 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/113/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/113/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12909651" author="thkoch" created="Wed, 15 Sep 2010 08:35:31 +0000"><p>updated patch to newest trunk state</p></comment>
<comment id="12913089" author="phunt" created="Tue, 21 Sep 2010 17:13:09 +0000"><p>I just ran this against latest trunk and it fails with:</p> <p>Testcase: testDisconnectedAddAuth took 2.167 sec<br/> Caused an ERROR<br/> KeeperErrorCode = ConnectionLoss for /<br/> org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:90)<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)<br/> at org.apache.zookeeper.ZooKeeper.setACL(ZooKeeper.java:1259)<br/> at org.apache.zookeeper.test.ACLTest.testDisconnectedAddAuth(ACLTest.java:67)<br/> at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:51)</p> <p>(log attached)</p></comment>
<comment id="12913092" author="phunt" created="Tue, 21 Sep 2010 17:13:52 +0000"><p>log of test failure, all other tests passed though (incl nionetty) so it seems this is related to the netty client.</p></comment>
<comment id="12913095" author="phunt" created="Tue, 21 Sep 2010 17:20:16 +0000"><p>Saw an additional test failure on another machine, it failed with:</p> <p> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.NettyNettySuiteTest<br/> <span class="error">#91;junit#93;</span> Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec<br/> <span class="error">#91;junit#93;</span> Test org.apache.zookeeper.test.NettyNettySuiteTest FAILED (timeout)</p> <p>That was the entire content of the log output for the test</p> <p>However the prior test failed with a ton of warnings, including this which seems suspicious, it needs to be tracked down why this could happen:</p> <p> <span class="error">#91;junit#93;</span> 2010-09-21 09:42:25,890 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;New I/O server worker #32-3:ZooKeeperServer@801#93;</span> - Client attempting to establish new session at /127.0.0.1:48780<br/> <span class="error">#91;junit#93;</span> 2010-09-21 09:42:25,891 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;SyncThread:0:ZooKeeperServer@577#93;</span> - Established session 0x12b352cbcb80001 with negotiated timeout 30000 for client /127.0.0.1:48780<br/> <span class="error">#91;junit#93;</span> 2010-09-21 09:42:25,900 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;New I/O client worker #41-1:ClientCnxn$SendThread@904#93;</span> - Session establishment complete on server localhost/127.0.0.1:11250, sessionid = 0x12b352cbcb80001, negotiated timeout = 30000<br/> <span class="error">#91;junit#93;</span> 2010-09-21 09:42:26,205 <span class="error">#91;myid:#93;</span> - WARN <span class="error">#91;New I/O client worker #41-1:ClientCnxnSocketNetty$ZKClientHandler@289#93;</span> - Exception caught <span class="error">#91;id: 0x66bb1ead, /127.0.0.1:48780 =gt; localhost/127.0.0.1:11250#93;</span> EXCEPTION: java.io.IOException: Nothing in the queue, but got 294<br/> <span class="error">#91;junit#93;</span> java.io.IOException: Nothing in the queue, but got 294<br/> <span class="error">#91;junit#93;</span> at org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:968)<br/> <span class="error">#91;junit#93;</span> at org.apache.zookeeper.ClientCnxnSocketNetty$ZKClientHandler.messageReceived(ClientCnxnSocketNetty.java:270)<br/> <span class="error">#91;junit#93;</span> at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:274)<br/> <span class="error">#91;junit#93;</span> at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:261)<br/> <span class="error">#91;junit#93;</span> at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:349)<br/> <span class="error">#91;junit#93;</span> at org.jboss.netty.channel.socket.nio.NioWorker.processSelectedKeys(NioWorker.java:281)<br/> <span class="error">#91;junit#93;</span> at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:201)<br/> <span class="error">#91;junit#93;</span> at org.jboss.netty.util.internal.IoWorkerRunnable.run(IoWorkerRunnable.java:46)<br/> <span class="error">#91;junit#93;</span> at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)<br/> <span class="error">#91;junit#93;</span> at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)<br/> <span class="error">#91;junit#93;</span> at java.lang.Thread.run(Thread.java:619)</p></comment>
<comment id="12913426" author="phunt" created="Wed, 22 Sep 2010 06:55:28 +0000"><p>Updated to patch against latest trunk.</p></comment>
<comment id="12913446" author="thkoch" created="Wed, 22 Sep 2010 07:48:48 +0000"><p>With the latest trunk merged in, works on my machine. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> BUILD SUCCESSFUL</p></comment>
<comment id="12913591" author="fpj" created="Wed, 22 Sep 2010 14:55:16 +0000"><p>NettyNettySuiteTest is failing intermittently for me. I'm attaching logs for a run that failed.</p></comment>
<comment id="12913660" author="phunt" created="Wed, 22 Sep 2010 16:48:13 +0000"><p>I was also seeing some intermittent nettynetty failures previously. However now I'm seeing this each time (3 out of 3) I run on one of my beefier server boxes (8core)</p> <p>junit.framework.AssertionFailedError: thread HammerThread-0 still alive after join<br/> at org.apache.zookeeper.test.ClientBase.verifyThreadTerminated(ClientBase.java:308)<br/> at org.apache.zookeeper.test.AsyncHammerTest.testObserversHammer(AsyncHammerTest.java:213)<br/> at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:51)</p> <p>this only showed up after merging in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-846" title="zookeeper client doesn#39;t shut down cleanly on the close call" class="issue-link" data-issue-key="ZOOKEEPER-846"><del>ZOOKEEPER-846</del></a>, so I suspect that something has changed in this patch such that more than just applying 846 is necessary.</p> <p>I'm pretty swamped, Thomas can you look at these issues? (incl the ones I/flavio cited earlier?)</p> </comment>
<comment id="12913954" author="thkoch" created="Thu, 23 Sep 2010 08:53:30 +0000"><p>I can not reproduce any test failure on my system. So the reported failures from phunt and Junqueira are:</p> <ul class="alternate" type="square"> <li>phunt: NettyNettySuiteTest - ACLTest.testDisconnectedAddAuth(ACLTest.java:67):<br/> org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:90)<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)<br/> at org.apache.zookeeper.ZooKeeper.setACL(ZooKeeper.java:1259)</li> </ul> <p>I don't understand, what exactly this test should test. A code comment would help. However I can imagine some race condition because the test does not wait for a client connection to be established before continuing.</p> <ul class="alternate" type="square"> <li>phunt: NettyNettySuiteTest - AsyncHammerTest.testObserversHammer(AsyncHammerTest.java:213)</li> </ul> <p>I can't confirm this neither. However the test has some non determinism because it waits only 60 seconds for a thread to join.</p> <ul class="alternate" type="square"> <li>Junqueira: NettyNettySuiteTest - ClientTest.testMutipleWatcherObjs(ClientTest.java:241)</li> </ul> <p>org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /foo-89</p> <p>I can't really help without access to machines where the tests fail. @Flavio What are the specs of your test machine?</p> <p>While investigating these failures I already felt the urge to continue my quest for clean code and refactor: <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-878" title="finishPacket and conLossPacket should be methods of Packet" class="issue-link" data-issue-key="ZOOKEEPER-878">ZOOKEEPER-878</a>, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-879" title="outgoingQueue should be a class" class="issue-link" data-issue-key="ZOOKEEPER-879">ZOOKEEPER-879</a> However these two issues would blow up the patch even more.</p> </comment>
<comment id="12914087" author="phunt" created="Thu, 23 Sep 2010 16:27:15 +0000"><p>Unfortunately this change is one that touches some code that's very complex. As a result it's going to take some time to work out all the issues. Also given that it's refactoring classes into new classes it's hard to refactor other stuff before we get this in. This is not typical of our changes, but it does happen. Hopefully the other refactorings you are suggesting (Thomas) will help with this going fwd.</p> <blockquote><p>phunt: NettyNettySuiteTest - ACLTest.testDisconnectedAddAuth(ACLTest.java:67):</p></blockquote> <p>You read that right. The conditions it tests are that the auth is handled properly when the connection is eventually established. There's another issue though, thats handling flow control on the session. Notice that during session establishment the NIO code disables recv after getting the session create request, then handles the auth request. This was a big problem (and might still be an issue with netty refactoring) with netty and may still have a bug or two. Notice that netty reads the entire tcp queue, not just a packet at a time as NIO does. as a result there is no way to do flow control (as we do with nio) at the socket level with netty. In the netty case notice that we have an additional layer on top where we queue the pending requests (ones that have been read from netty socket but not yet accepted by our clientcnxn code). I'd look at this for clues.</p> <blockquote><p>phunt: NettyNettySuiteTest - AsyncHammerTest.testObserversHammer(AsyncHammerTest.java:213)</p></blockquote> <p>this fails for me every time I run it. I suspect that the join will never complete. This is probably due to the closing=true change for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-846" title="zookeeper client doesn#39;t shut down cleanly on the close call" class="issue-link" data-issue-key="ZOOKEEPER-846"><del>ZOOKEEPER-846</del></a>. We must not be doing the right thing with that patch (846) naively merged into this patch. (I didn't see this error until I applied 846 to this patch)</p> <p>Here are my machine specs for a machine where I see failures:<br/> 2.6.18-164.15.1.el5 #1 SMP Wed Mar 17 11:30:06 EDT 2010 x86_64 x86_64 x86_64 GNU/Linux<br/> 16 cores: model name : Intel(R) Xeon(R) CPU E5530 @ 2.40GHz</p> <p>There's also this issue I reported:<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-823?focusedCommentId=12913095amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12913095" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-823?focusedCommentId=12913095amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12913095</a></p></comment>
<comment id="12914822" author="fpj" created="Sat, 25 Sep 2010 14:34:07 +0000"><p>Here is another instance:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>Testcase: testPathValidation took 1.865 sec Caused an ERROR KeeperErrorCode = ConnectionLoss for /chrootclienttest org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /chrootclienttest at org.apache.zookeeper.KeeperException.create(KeeperException.java:90) at org.apache.zookeeper.KeeperException.create(KeeperException.java:42) at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:640) at org.apache.zookeeper.test.ChrootClientTest.setUp(ChrootClientTest.java:42) </pre> </div></div> <p>I'm on Mac OS X 1.5.8, java build 1.6.0_20-b02-279-9M3165.</p></comment>
<comment id="12919040" author="thkoch" created="Thu, 7 Oct 2010 19:45:40 +0000"><p>I may have fixed another issue:</p> <p>I wrapped sendThread.readResponse(incomingBuffer) into a synchronization on the OutgoingQueue, because it might happen otherwise, that a package is send over netty and processed by the server, but not yet added to the pendingQueue. This fix solved all the Heisenbugs I saw.<br/> However there's still a bug with ASyncHammer and that the wait to join threads times out. I added more Debugging information. The Thread that times out hangs on ClientCnxnSocketNetty.wakeupCnxn where it waits for the synchronized(outgoingQueue).<br/> It seems that the outgoingQueue is already owned and blocked in the doWrites method, hanging on write.awaitUninterruptibly(). doWrites is called by doTransport where the synchronized(outgoingQueue) happens.</p></comment>
<comment id="12919054" author="thkoch" created="Thu, 7 Oct 2010 20:30:17 +0000"><p>I did another version of the patch with an example how I'd solve the deadlock mentioned in my last comment. I made the synchronized blocks in doTransport and doWrites smaller.</p></comment>
<comment id="12919293" author="thkoch" created="Fri, 8 Oct 2010 14:32:16 +0000"><p>How to continue with this?</p> <p>I know have a couple of Heisenbugs that do not appear with every test run. Most often</p> <ul> <li>org.apache.zookeeper.test.ACLTest.testAcls</li> <li>org.apache.zookeeper.test.AsyncHammerTest.testObserversHammer</li> <li>org.apache.zookeeper.test.AsyncHammerTest.testHammer</li> </ul> <p>I have the following believing:</p> <ul class="alternate" type="square"> <li>there are some issues with missing / misplaced synchronization blocks in the Netty java client code</li> <li>there may also be some bugs in the server netty code. Sometimes I get bugs like this, which could also be caused on the server side, but I have not yet learned the ZK server code:</li> </ul> <p>Exception caught <span class="error">#91;id: 0x19509443, /127.0.0.1:53300 =gt; localhost/127.0.0.1:11270#93;</span> EXCEPTION: java.io.IOException: Xid out of order. Got Xid 32 with err 0 expected Xid 33 for a packet with details:</p> <p>I'd rather like to commit the current state to trunk and to continue the bug hunting in trunk. This would allow me to do some cleanups that could help to understand the correct synchronizations. This cleanups should be <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-878" title="finishPacket and conLossPacket should be methods of Packet" class="issue-link" data-issue-key="ZOOKEEPER-878">ZOOKEEPER-878</a> and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-879" title="outgoingQueue should be a class" class="issue-link" data-issue-key="ZOOKEEPER-879">ZOOKEEPER-879</a></p> <p>This Exception by example could be better understood by solving the above mentioned issues:</p> <p>java.lang.NullPointerException<br/> at org.apache.zookeeper.ClientCnxn.conLossPacket(ClientCnxn.java:574)<br/> at org.apache.zookeeper.ClientCnxn.access$2300(ClientCnxn.java:76)<br/> at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:869)<br/> at org.apache.zookeeper.ClientCnxnSocketNetty.cleanup(ClientCnxnSocketNetty.java:147)<br/> at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:741)</p></comment>
<comment id="12920245" author="thkoch" created="Tue, 12 Oct 2010 16:14:39 +0000"><p>Corrected another synchronization issue. </p> <ul class="alternate" type="square"> <li>write.awaitUninterruptibly() may not be in any synchronization block because otherwise we get timeouts.</li> <li>Writing to the netty queue and adding the package to the pendingQueue must be in a sync(pendingQueue), otherwise we can receive the answer to the package, try to work with it in readResponse() but don't find the package in the pendingQueue.</li> </ul> </comment>
<comment id="12920247" author="thkoch" created="Tue, 12 Oct 2010 16:17:30 +0000"><p>I've built this patch 4 times now and had only ones a Failure in testDisconnectedAddAuth instead of multiple failures on every build. - Please commit to trunk and we'll also catch these last few issues.<br/> Anyway, all observed failures were only seen with Netty and we could mark them as Experimental as long as we don't fully trust this code.</p></comment>
<comment id="12920490" author="thkoch" created="Wed, 13 Oct 2010 09:49:58 +0000"><p>I did 10 builds now in total with the last patch. 8 builds were succesful, 2 failed with different test cases, see the *_FAILURE files. Both failures happened in the NettyNettySuiteTest.<br/> It's hard to debug this kind of Heisenbugs that happen only very seldom. It would make things easier, if I could start cleaning up the code to better identify spots where things could go wrong.</p></comment>
<comment id="12920686" author="phunt" created="Wed, 13 Oct 2010 17:48:49 +0000"><p>I ran the latest patch 4 times on my hudson setup and saw 3 failures (1 each):</p> <p>java.util.concurrent.TimeoutException: Did not connect<br/> at org.apache.zookeeper.test.ClientBase$CountdownWatcher.waitForConnected(ClientBase.java:124)<br/> at org.apache.zookeeper.test.WatcherTest.testWatchAutoResetWithPending(WatcherTest.java:199)<br/> at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:51)</p> <p>org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:90)<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)<br/> at org.apache.zookeeper.ZooKeeper.setACL(ZooKeeper.java:1259)<br/> at org.apache.zookeeper.test.ACLTest.testDisconnectedAddAuth(ACLTest.java:67)<br/> at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:51)</p> <p> <span class="error">#91;junit#93;</span> 2010-10-13 09:16:42,245 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:JUnit4ZKTestRunner$LoggedInvokeMethod@53#93;</span> - TEST METHOD FAILED testAcls<br/> <span class="error">#91;junit#93;</span> org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /0<br/> <span class="error">#91;junit#93;</span> at org.apache.zookeeper.KeeperException.create(KeeperException.java:90)<br/> <span class="error">#91;junit#93;</span> at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)<br/> <span class="error">#91;junit#93;</span> at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:640)<br/> <span class="error">#91;junit#93;</span> at org.apache.zookeeper.test.ACLTest.testAcls(ACLTest.java:104)</p> <p>If this was failing in the Netty code I'd be inclined to push the code to trunk and let things settle. However this is<br/> in the mainline NIO code and I'm reticent to break existing functionality.</p> <p>Perhaps a good idea would be to have Ben/Mahadev/Flavio review the patch and see if they notice any issues.</p> <p>I'd really like to get this in (esp as it's blocking other changes), so if we could review this and resolve the issues asap that would be great.</p> </comment>
<comment id="12920715" author="thkoch" created="Wed, 13 Oct 2010 18:59:24 +0000"><p>Hi Patrick,</p> <p>I saw the same exceptions as you saw. They are not <em>thrown</em> inside the netty code, but they occurred in my cases every time during the NettyNettySuiteTest. It isn't very obvious from the junit log, whether a test was run as part of the NettyNettySuiteTest or not. I do a forward search for "FAILED" and from this position a backwards search for "running" to find the name of the actual test suite.<br/> Are you perfecty sure, the failed tests were not run as part of the NettyNettySuiteTest?</p></comment>
<comment id="12920734" author="phunt" created="Wed, 13 Oct 2010 19:52:10 +0000"><p>Sorry man, but I checked that, a few things indicate that it's nio and not netty:</p> <p>1) The log would have something like this in it:<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.NettyNettySuiteHammerTest</p> <p>which I don't see prior to this failure (running ... <b>Netty</b></p> <p>2) I can see log messages from NIO and not from netty in the log (NIO class loggers I mean)</p> <p>3) I'm pretty sure (don't have one on hand) that if the *Netty*Test fails you see that in the stack trace.</p></comment>
<comment id="12920737" author="phunt" created="Wed, 13 Oct 2010 19:58:06 +0000"><p>Thomas (also Mahadev and other committers)</p> <p>Here's an idea. What if we setup a branch in SVN with these changes (netty). It would be a short lived branch. Then we can setup a new job on apache hudson, and just keep hammering on that thing until we get all the issues (intermittent bugs) resolved. </p> <p>How's that sound?</p> <p>An alternative would be to use Git but apache hudson doesn't allow that. I'd create/maintain the svn branch (you need to be a committer).</p></comment>
<comment id="12920750" author="thkoch" created="Wed, 13 Oct 2010 20:22:16 +0000"><p>The problem with the failing testWatchAutoResetWithPending might be the following. The test uses testableZooKeeper.pauseCnxn($milliSeconds) <br/> PauseCnxn tries to block the ClientCnxn by holding a lock on the ClientCnxn instance, interrupting the connection and not releasing the lock for $milliSeconds.<br/> Actually I wonder how this could have ever worked reliable in the first place. The only thing I see that also synchronizes on ClientCnxn is the getXid() method.<br/> The solution might be to find a better implementation for testableZooKeeper.pauseCnxn</p></comment>
<comment id="12921016" author="thkoch" created="Thu, 14 Oct 2010 16:51:22 +0000"><p>wrapped access to ClientCnxn.authInfo in synchonized(authInfo). Did 13 builds with 6 failed builds.<br/> Failed Tests:<br/> org.apache.zookeeper.test.ACLTest.testAcls<br/> org.apache.zookeeper.test.ChrootClientTest.testClientCleanup<br/> org.apache.zookeeper.test.WatcherTest.testWatchAutoResetWithPending<br/> org.apache.zookeeper.test.FLERestartTest.testLERestart<br/> org.apache.zookeeper.test.WatcherTest.testWatchAutoResetWithPending<br/> org.apache.zookeeper.test.QuorumTest.testFollowersStartAfterLeader<br/> org.apache.zookeeper.test.QuorumTest.testNoLogBeforeLeaderEstablishment<br/> org.apache.zookeeper.test.QuorumTest.testNull<br/> org.apache.zookeeper.test.QuorumZxidSyncTest.testLateLogs</p> <p>What puzzles me, is that also tests totally unrelated to the java client failed. My test machine is also a development server for the whole team, so its load varies heavily.</p></comment>
<comment id="12921053" author="mahadev" created="Thu, 14 Oct 2010 18:03:27 +0000"><p>I am +1 with creating a branch for this issue and keep working on it until we have all the issues figured out and then merge this back in.</p></comment>
<comment id="12930251" author="hadoopqa" created="Tue, 9 Nov 2010 19:36:36 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12457168/ZOOKEEPER-823.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12457168/ZOOKEEPER-823.patch</a><br/> against trunk revision 1033155.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 32 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/13//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/13//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12930411" author="phunt" created="Wed, 10 Nov 2010 01:41:13 +0000"><p>cancelling for now given Thomas is working on this via a new avenue.</p></comment>
<comment id="12970996" author="thkoch" created="Mon, 13 Dec 2010 19:49:45 +0000"><p>Just want to let hudson go around with this patch.</p></comment>
<comment id="12971030" author="hadoopqa" created="Mon, 13 Dec 2010 20:45:46 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12466163/ZOOKEEPER-823.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12466163/ZOOKEEPER-823.patch</a><br/> against trunk revision 1043627.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/66//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/66//testReport/</a><br/> Release audit warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/66//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/66//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/66//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/66//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/66//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/66//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12971219" author="thkoch" created="Tue, 14 Dec 2010 10:14:19 +0000"><p>Sorry for uploading so many patches, but I currently don't have the possibility to run the test suite elsewhere.</p></comment>
<comment id="12971228" author="hadoopqa" created="Tue, 14 Dec 2010 10:54:42 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12466205/ZOOKEEPER-823.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12466205/ZOOKEEPER-823.patch</a><br/> against trunk revision 1043627.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 18 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/67//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/67//testReport/</a><br/> Release audit warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/67//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/67//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/67//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/67//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/67//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/67//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12976994" author="mahadev" created="Mon, 3 Jan 2011 22:47:28 +0000"><p>thomas, looks like quite a few of the tests failed?</p></comment>
<comment id="12978950" author="hadoopqa" created="Fri, 7 Jan 2011 20:28:14 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12467755/ZOOKEEPER-823.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12467755/ZOOKEEPER-823.patch</a><br/> against trunk revision 1055924.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 15 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 14 new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/85//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/85//testReport/</a><br/> Release audit warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/85//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/85//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/85//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/85//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/85//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/85//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12982904" author="hadoopqa" created="Mon, 17 Jan 2011 22:31:36 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12467755/ZOOKEEPER-823.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12467755/ZOOKEEPER-823.patch</a><br/> against trunk revision 1055924.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 15 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 14 new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/95//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/95//testReport/</a><br/> Release audit warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/95//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/95//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/95//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/95//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/95//console" class="external-link" target="_blank" rel="nofollow noopener">https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/95//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12988967" author="phunt" created="Mon, 31 Jan 2011 23:56:14 +0000"><p>pulling this off PA given that Thomas is working on another approach to this in a separate set of jiras.</p></comment>
<comment id="13049658" author="mahadev" created="Wed, 15 Jun 2011 06:59:21 +0000"><p>not a blocker. Moving it out of 3.4 release.</p></comment>
<comment id="14118003" author="sslavic" created="Tue, 2 Sep 2014 07:51:30 +0000"><p>"optionally" part from issue summary is related to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1681" title="ZooKeeper 3.4.x can optionally use netty for nio but the pom does not declare the dep as optional" class="issue-link" data-issue-key="ZOOKEEPER-1681">ZOOKEEPER-1681</a></p></comment>
<comment id="17486294" author="eolivelli" created="Thu, 3 Feb 2022 08:49:06 +0000"><p>Netty support is available.</p> <p>we forgot to close this issue for more than 10 years</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10032">
<name>Blocker</name>
<inwardlinks description="is blocked by">
<issuelink>
<issuekey id="12477324">ZOOKEEPER-895</issuekey>
</issuelink>
<issuelink>
<issuekey id="12458994">ZOOKEEPER-702</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12471297">ZOOKEEPER-835</issuekey>
</issuelink>
<issuelink>
<issuekey id="12595357">GIRAPH-211</issuekey>
</issuelink>
<issuelink>
<issuekey id="12461144">ZOOKEEPER-733</issuekey>
</issuelink>
<issuelink>
<issuekey id="12640293">ZOOKEEPER-1681</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10001">
<name>dependent</name>
<inwardlinks description="is depended upon by">
<issuelink>
<issuekey id="12520610">ZOOKEEPER-1164</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12455272" name="NettyNettySuiteTest.rtf" size="736983" author="fpj" created="Wed, 22 Sep 2010 14:55:49 +0000"/>
<attachment id="12455162" name="TEST-org.apache.zookeeper.test.NettyNettySuiteTest.txt.gz" size="48062" author="phunt" created="Tue, 21 Sep 2010 17:13:52 +0000"/>
<attachment id="12467755" name="ZOOKEEPER-823.patch" size="132412" author="thkoch" created="Fri, 7 Jan 2011 19:30:01 +0000"/>
<attachment id="12466205" name="ZOOKEEPER-823.patch" size="20916" author="thkoch" created="Tue, 14 Dec 2010 10:14:19 +0000"/>
<attachment id="12466163" name="ZOOKEEPER-823.patch" size="20406" author="thkoch" created="Mon, 13 Dec 2010 19:50:50 +0000"/>
<attachment id="12457168" name="ZOOKEEPER-823.patch" size="99805" author="thkoch" created="Thu, 14 Oct 2010 16:51:22 +0000"/>
<attachment id="12456978" name="ZOOKEEPER-823.patch" size="98988" author="thkoch" created="Tue, 12 Oct 2010 16:14:39 +0000"/>
<attachment id="12456631" name="ZOOKEEPER-823.patch" size="99319" author="thkoch" created="Thu, 7 Oct 2010 20:31:56 +0000"/>
<attachment id="12456626" name="ZOOKEEPER-823.patch" size="99376" author="thkoch" created="Thu, 7 Oct 2010 19:45:40 +0000"/>
<attachment id="12455241" name="ZOOKEEPER-823.patch" size="93405" author="phunt" created="Wed, 22 Sep 2010 06:55:27 +0000"/>
<attachment id="12454637" name="ZOOKEEPER-823.patch" size="93265" author="thkoch" created="Wed, 15 Sep 2010 08:35:31 +0000"/>
<attachment id="12453672" name="ZOOKEEPER-823.patch" size="93548" author="thkoch" created="Thu, 2 Sep 2010 09:56:40 +0000"/>
<attachment id="12453619" name="ZOOKEEPER-823.patch" size="158493" author="thkoch" created="Wed, 1 Sep 2010 20:37:25 +0000"/>
<attachment id="12453516" name="ZOOKEEPER-823.patch" size="158584" author="thkoch" created="Tue, 31 Aug 2010 14:00:53 +0000"/>
<attachment id="12450129" name="ZOOKEEPER-823.patch" size="105741" author="phunt" created="Thu, 22 Jul 2010 05:33:18 +0000"/>
<attachment id="12450101" name="ZOOKEEPER-823.patch" size="100539" author="phunt" created="Wed, 21 Jul 2010 22:09:30 +0000"/>
<attachment id="12456980" name="testDisconnectedAddAuth_FAILURE" size="24903" author="thkoch" created="Tue, 12 Oct 2010 16:17:30 +0000"/>
<attachment id="12457057" name="testWatchAutoResetWithPending_FAILURE" size="28935" author="thkoch" created="Wed, 13 Oct 2010 09:49:58 +0000"/>
</attachments>
<subtasks>
<subtask id="12477986">ZOOKEEPER-909</subtask>
</subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>63346</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i07ksf:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>42135</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-318] remove locking in zk_hashtable.c or add locking in collect_keys()</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-318</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>From a review of zk_hashtable.c it appears to me that all functions which manipulate the hashtables are called from the IO thread, and therefore any need for locking is obviated.</p> <p>If I'm wrong about that, then I think at a minimum collect_keys() should acquire a lock in the same manner as collect_session_watchers(). Both iterate over hashtable contents (in the latter case using copy_table()).</p> <p>However, from what I can see, the only function (besides the init/destroy functions used when creating a zhandle_t) called from the completion thread is deliverWatchers(), which simply iterates over a "delivery" list created from the hashtables by collectWatchers(). The activateWatcher() function contains comments which describe it being called by the completion thread, but in fact it is called by the IO thread in zookeeper_process().</p> <p>I believe all calls to collectWatchers(), activateWatcher(), and collect_keys() are made by the IO thread in zookeeper_interest(), zookeeper_process(), check_events(), send_set_watches(), and handle_error(). Note that queue_session_event() is aliased as PROCESS_SESSION_EVENT, but appears only in handle_error() and check_events().</p> <p>Also note that handle_error() is called only in zookeeper_process() and handle_socket_error_msg(), which is used only by the IO thread, so far as I can see.</p></description>
<environment/>
<key id="12414990">ZOOKEEPER-318</key>
<summary>remove locking in zk_hashtable.c or add locking in collect_keys()</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="cdarroch">Chris Darroch</assignee>
<reporter username="cdarroch">Chris Darroch</reporter>
<labels>
<label>pull-request-available</label>
</labels>
<created>Tue, 17 Feb 2009 20:52:02 +0000</created>
<updated>Tue, 15 Jun 2021 00:53:13 +0000</updated>
<resolved>Fri, 6 Mar 2009 00:45:04 +0000</resolved>
<version>3.0.0</version>
<version>3.0.1</version>
<version>3.1.0</version>
<fixVersion>3.2.0</fixVersion>
<component>c client</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<timeestimate seconds="0">0h</timeestimate>
<timespent seconds="3000">50m</timespent>
<comments>
<comment id="12674354" author="cdarroch" created="Tue, 17 Feb 2009 20:54:44 +0000"><p>The attached patch file removes locking, and also marks a number of functions static as per <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-317" title="avoid exporting functions which may be static" class="issue-link" data-issue-key="ZOOKEEPER-317">ZOOKEEPER-317</a>. It further moves some private struct definitions into zk_hashtable.c and removes the unused count variable from collectWatchers() and the associated countList() function.</p> <p>These changes obviously remove from functions from the API and so should be considered in the light of the discussion in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-317" title="avoid exporting functions which may be static" class="issue-link" data-issue-key="ZOOKEEPER-317">ZOOKEEPER-317</a>.</p></comment>
<comment id="12675057" author="cdarroch" created="Thu, 19 Feb 2009 17:44:43 +0000"><p>Renamed patch file with issue key.</p></comment>
<comment id="12675468" author="cdarroch" created="Fri, 20 Feb 2009 20:41:57 +0000"><p>Note that this patch does not comprehensively deal with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-317" title="avoid exporting functions which may be static" class="issue-link" data-issue-key="ZOOKEEPER-317">ZOOKEEPER-317</a>; there remain others functions that might be marked static and excluded from the exported symbols besides the ones dealt with in this patch.</p></comment>
<comment id="12676782" author="mahadev" created="Wed, 25 Feb 2009 21:05:42 +0000"><p>i looked thorugh the code and what you suggest looks right to me. Thoguh, did you see any performance impact from using the lcoks? if not, I would proabably leave the locks their, since it prevents against future changes (say we have two threads accessing the methods in zk_hashtable.c).. what do you think?</p></comment>
<comment id="12677147" author="cdarroch" created="Thu, 26 Feb 2009 21:33:27 +0000"><p>Well, my own take on things like this and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-262" title="unnecesssarily complex reentrant zookeeper_close() logic" class="issue-link" data-issue-key="ZOOKEEPER-262">ZOOKEEPER-262</a> is that it's always good to keep things clean and simple #8211; a good day of programming in my book is one that removes more lines of code than are created and yet keeps the same or better functionality.</p> <p>Aside from any incremental performance gains, I think the big win with both of these patches is that they make the purpose of the code that much more apparent. A significant part of programming, I believe, is psychology. A programmer who comes across a package laced with pthread_mutex_lock() statements immediately makes two pretty reasonable assumptions: the code is used in a multi-threaded context, and it's MT-safe.</p> <p>In this case, both assumptions are incorrect; the code isn't used in an MT context and if it were to be, collect_keys() appears to be lacking the necessary locks and I suspect it would be MT-unsafe. There could always be other subtle MT-related bugs which haven't been shaken out too, should one start using it in MT code.</p> <p>Thus my own feeling is that it's better to simplify and remove these locks for a variety of reasons: it makes the code more self-documenting; easier to read, understand, and revise; and marginally faster.</p> <p>Should the hashtables need to be used in an MT context in the future, the existing code can always be recovered quickly from SVN. If there's an explanatory note in the SVN log that mentions the collect_keys() issue, all the better; then whoever might need to do this work will be prompted to think that aspect through as well.</p> <p>That's just my two cents, of course. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="12677592" author="mahadev" created="Fri, 27 Feb 2009 23:07:12 +0000"><p>your 2 cents are well received <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> .. <br/> ill just explain where I come from. From my perspective, a multithreaded c code is the most difficult to debug (after ofcourse assembly language <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> ) ... So, I get really uncomfortable removing locks from the c code (maybe i am a little paranoid). I would rather add locks and make it MT safe and be future problem resilient. But ofcourse thats my stand on it. I am not too biased on my opinion and would not like to reject any contributions on my own personal opinion. If you do want to contribute the patch as it is, Ill go ahead with that.</p></comment>
<comment id="12679440" author="mahadev" created="Fri, 6 Mar 2009 00:45:04 +0000"><p>I just committed this. Thnaks chris.</p></comment>
<comment id="12679633" author="cdarroch" created="Fri, 6 Mar 2009 16:20:11 +0000"><p>Cool, thanks. Much appreciated.</p></comment>
<comment id="12680848" author="hudson" created="Wed, 11 Mar 2009 11:56:20 +0000"><p>Integrated in ZooKeeper-trunk #251 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/251/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/251/</a>)</p> </comment>
</comments>
<attachments>
<attachment id="12400532" name="ZOOKEEPER-318.patch" size="7065" author="cdarroch" created="Thu, 19 Feb 2009 17:44:43 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47904</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0619j:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33136</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>Marks some hashtable-related functions static and removes them from the public C API.</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1112] Add support for C client for SASL authentication</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1112</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Hopefully this would leverage the SASL server-side support provided by <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-938" title="Support Kerberos authentication of clients." class="issue-link" data-issue-key="ZOOKEEPER-938"><del>ZOOKEEPER-938</del></a>. It would be similar to the Java SASL client support also provided in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-938" title="Support Kerberos authentication of clients." class="issue-link" data-issue-key="ZOOKEEPER-938"><del>ZOOKEEPER-938</del></a>.</p> <p>Java has built-in SASL support, but I'm not sure what C libraries are available for SASL and if so, are they compatible with the Apache license.</p></description>
<environment/>
<key id="12512386">ZOOKEEPER-1112</key>
<summary>Add support for C client for SASL authentication</summary>
<type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21141avatarType=issuetype">New Feature</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="ztzg">Damien Diederen</assignee>
<reporter username="ekoontz">Eugene Joseph Koontz</reporter>
<labels>
<label>pull-request-available</label>
</labels>
<created>Thu, 30 Jun 2011 22:13:29 +0000</created>
<updated>Sun, 28 Mar 2021 08:55:00 +0000</updated>
<resolved>Wed, 22 Jan 2020 11:55:08 +0000</resolved>
<fixVersion>3.7.0</fixVersion>
<due/>
<votes>2</votes>
<watches>12</watches>
<timeestimate seconds="0">0h</timeestimate>
<timespent seconds="22200">6h 10m</timespent>
<comments>
<comment id="13080468" author="eyang" created="Sat, 6 Aug 2011 21:59:32 +0000"><p>Apache Web Server has a module for authenticate sasl using Cyrus SASL library. I think the license should be compatible with written agreement from CMU.</p></comment>
<comment id="13116275" author="klonik_t" created="Wed, 28 Sep 2011 07:52:37 +0000"><p>I added SASL authentication to the c client lib that works with libkrb5 on Ubuntu Maverick (requires libkrb5-dev to compile).<br/> This my first c project, so its obviously far from perfect or complete.</p> <ul class="alternate" type="square"> <li>lacks multi-platform support</li> <li>only tested with MIT Kerberos</li> <li>servicename hardcoded to "zookeeper" in cli.c</li> <li>what about licensing implications?</li> </ul> <p>It works for me, so if you'd like to give it a try see <a href="https://github.com/kloni/zookeeper/commit/e2409bc441962a35fad1e277f95ded436431045b" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/kloni/zookeeper/commit/e2409bc441962a35fad1e277f95ded436431045b</a></p></comment>
<comment id="13116666" author="ekoontz" created="Wed, 28 Sep 2011 18:22:10 +0000"><p>Hi Tom,</p> <p>Thanks for announcing this! Your tag compiles for me and test-cppunit succeeds. I wonder if your next step might be to write a unit test or two to show this functionality, like SaslAuthTest and SaslAuthFailTest: </p> <p><a href="https://github.com/apache/zookeeper/blob/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthTest.java" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthTest.java</a><br/> <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthFailTest.java" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthFailTest.java</a></p> <p>but in C instead of Java ?</p> <p>Hopefully, as with the Java tests, you could use DIGEST-MD5 rather than GSSAPI for the mechanism to avoid the need for a Kerberos setup.</p> <p>-Eugene</p></comment>
<comment id="13121374" author="klonik_t" created="Wed, 5 Oct 2011 19:12:31 +0000"><p>I changed the code to actually use SASL instead of GSSAPI. It now supports DIGEST-MD5 und GSSAPI (and virtually any mech SASL supports). cli_mt works with GSSAPI, cli_st with DIGEST-MD5 and GSSAPI</p> <p>Example: cli_st -u super -h zk-sasl-md5 -m DIGEST-MD5 ubook:2181</p> <ul class="alternate" type="square"> <li>requires libsasl2 and modules</li> <li>introduces -I/usr/include - breaks portability</li> <li>no tests yet</li> <li>client options have changed - see usage</li> </ul> <p>Next will be adding tests and providing a patch. It'd be great if someone reviews this and takes care of the portability (compiler flag --with-sasl?).</p></comment>
<comment id="13121802" author="klonik_t" created="Thu, 6 Oct 2011 08:51:21 +0000"><p>Patch for trunk (unnecessary include flag removed)</p> <ul class="alternate" type="square"> <li>zookeeper <ul class="alternate" type="square"> <li>zoo_(a)sasl(*zh, *conn, *data, len, cptr)</li> </ul> </li> <li>zk_sasl <ul class="alternate" type="square"> <li>zoo_sasl_init(*callbacks)</li> <li>zoo_sasl_connect(*zh, *servicename, *host, **conn, **supportedmechs, *mechcount)</li> <li>zoo_(a)sasl_authenticate(*zh, *conn, *mech, *supportedmechs)</li> </ul> </li> </ul> <p>Can somebody help to create test cases for this (i.e. setting up a digest-md5 enabled zookeeper instance)?</p></comment>
<comment id="13122086" author="klonik_t" created="Thu, 6 Oct 2011 17:26:17 +0000"><p>Nearly there <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/><br/> This latest patch includes</p> <ul class="alternate" type="square"> <li>detection of libsasl2</li> <li>configure option --with-sasl (default: on)</li> <li>compiler flag SASL</li> <li>a simple test for DIGEST-MD5 authentication</li> </ul> </comment>
<comment id="13122094" author="ekoontz" created="Thu, 6 Oct 2011 17:39:13 +0000"><p>Hi Tom, <br/> It's great to see this going on! I would like to help with the tests. May I suggest you make a reviewboard entry for your patch? If you haven't used reviewboard before, you need to create a login and choose "zookeeper-git" for the repository.<br/> -Eugene</p></comment>
<comment id="13122175" author="jiraposter@reviews.apache.org" created="Thu, 6 Oct 2011 19:11:29 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/2252/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-10-06 19:10:21.800060)</p> <p>Review request for zookeeper, Eugene Koontz and Tom Klonikowski.</p> <p>Summary<br/> -------</p> <p>It now supports DIGEST-MD5 and GSSAPI (and virtually any mech SASL supports). cli_mt works with GSSAPI, cli_st with DIGEST-MD5 and GSSAPI</p> <p>Example: cli_st -u super -h zk-sasl-md5 -m DIGEST-MD5 localhost:2181<br/> cli_mt -M GSSAPI localhost:2181</p> <ul> <li>requires libsasl2 and plugins</li> </ul> <ul> <li>zookeeper<br/> o zoo_(a)sasl(*zh, *conn, *data, len, cptr)</li> <li>zk_sasl<br/> o zoo_sasl_init(*callbacks)<br/> o zoo_sasl_connect(*zh, *servicename, *host, **conn, **supportedmechs, *mechcount)<br/> o zoo_(a)sasl_authenticate(*zh, *conn, *mech, *supportedmechs)</li> </ul> <p>This latest patch includes</p> <ul> <li>detection of libsasl2</li> <li>configure option --with-sasl (default: on)</li> <li>compiler flag SASL</li> <li>a simple test for DIGEST-MD5 authentication</li> </ul> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" title="Add support for C client for SASL authentication" class="issue-link" data-issue-key="ZOOKEEPER-1112"><del>ZOOKEEPER-1112</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1112</a></p> <p>Diffs</p> <hr /> <p> src/c/src/zk_adaptor.h 6aed38f <br/> src/c/src/zk_sasl.h PRE-CREATION <br/> src/c/src/zk_sasl.c PRE-CREATION <br/> src/c/src/cli.c c9fe4dd <br/> src/c/Makefile.am dbf4080 <br/> src/c/configure.ac 4e1a8d5 <br/> src/c/include/proto.h bce408e <br/> src/c/include/zookeeper.h 7d1066a <br/> src/c/src/zookeeper.c 64d7a4d <br/> src/c/tests/TestClient.cc 2d45cec <br/> src/c/tests/jaas.digest.server.conf PRE-CREATION <br/> src/c/tests/zkServer.sh 0af80f8 <br/> src/java/main/org/apache/zookeeper/server/ZooKeeperSaslServer.java 0ca18dc </p> <p>Diff: <a href="https://reviews.apache.org/r/2252/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Tom</p> </comment>
<comment id="13122176" author="jiraposter@reviews.apache.org" created="Thu, 6 Oct 2011 19:11:30 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/2252/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-10-06 19:09:56.213145)</p> <p>Review request for zookeeper and Eugene Koontz.</p> <p>Summary<br/> -------</p> <p>It now supports DIGEST-MD5 and GSSAPI (and virtually any mech SASL supports). cli_mt works with GSSAPI, cli_st with DIGEST-MD5 and GSSAPI</p> <p>Example: cli_st -u super -h zk-sasl-md5 -m DIGEST-MD5 localhost:2181<br/> cli_mt -M GSSAPI localhost:2181</p> <ul> <li>requires libsasl2 and plugins</li> </ul> <ul> <li>zookeeper<br/> o zoo_(a)sasl(*zh, *conn, *data, len, cptr)</li> <li>zk_sasl<br/> o zoo_sasl_init(*callbacks)<br/> o zoo_sasl_connect(*zh, *servicename, *host, **conn, **supportedmechs, *mechcount)<br/> o zoo_(a)sasl_authenticate(*zh, *conn, *mech, *supportedmechs)</li> </ul> <p>This latest patch includes</p> <ul> <li>detection of libsasl2</li> <li>configure option --with-sasl (default: on)</li> <li>compiler flag SASL</li> <li>a simple test for DIGEST-MD5 authentication</li> </ul> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" title="Add support for C client for SASL authentication" class="issue-link" data-issue-key="ZOOKEEPER-1112"><del>ZOOKEEPER-1112</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1112</a></p> <p>Diffs</p> <hr /> <p> src/c/src/zk_adaptor.h 6aed38f <br/> src/c/src/zk_sasl.h PRE-CREATION <br/> src/c/src/zk_sasl.c PRE-CREATION <br/> src/c/src/cli.c c9fe4dd <br/> src/c/Makefile.am dbf4080 <br/> src/c/configure.ac 4e1a8d5 <br/> src/c/include/proto.h bce408e <br/> src/c/include/zookeeper.h 7d1066a <br/> src/c/src/zookeeper.c 64d7a4d <br/> src/c/tests/TestClient.cc 2d45cec <br/> src/c/tests/jaas.digest.server.conf PRE-CREATION <br/> src/c/tests/zkServer.sh 0af80f8 <br/> src/java/main/org/apache/zookeeper/server/ZooKeeperSaslServer.java 0ca18dc </p> <p>Diff: <a href="https://reviews.apache.org/r/2252/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Tom</p> </comment>
<comment id="13122235" author="klonik_t" created="Thu, 6 Oct 2011 20:17:04 +0000"><p>Hi Eugene,<br/> looking at the review i feel like it might be a good idea to split this patch into smaller parts to make it easier to review.</p> <ul class="alternate" type="square"> <li>zooapi extension (proto.h, zk_adaptor.h, zookeeper.c, zookeeper.h)</li> <li>build (Makefile.am, configure.ac)</li> <li>sasl addon (zk_sasl.c, zk_sasl.h)</li> <li>test (TestClient.cc, zkServer.sh, jaas.digest.server.conf)</li> <li>server (ZooKeeperSaslServer.java)</li> <li>cli (cli.c)</li> </ul> <p>Contents of this patch:</p> <ul class="alternate" type="square"> <li>ZOOAPI extension for sending sasl requests and receiving responses (zoo_sasl)</li> <li>SASL addon that plugs into this functions (zk_sasl)</li> <li>build with libsasl2 if availabe and requested</li> <li>sasl authentication hacked into cli</li> </ul> </comment>
<comment id="13122505" author="mahadev" created="Fri, 7 Oct 2011 03:09:10 +0000"><p>Very glad to see this! Will take a look at the patch sometime this week!</p></comment>
<comment id="13122968" author="klonik_t" created="Fri, 7 Oct 2011 17:14:30 +0000"><p>Further improvements and splitted patch into (consecutive) work items</p> <p>Patch 1:</p> <ul class="alternate" type="square"> <li>implements sasl operations</li> <li>extended tests/zkServer.sh to start a digest-md5 enabled server</li> <li>simple test that checks the initial digest-md5 response</li> </ul> <p>No external requirements yet, but you can already let your own sasl implementation/library communicate with a (sasl-enabled) zookeeper via zoo_(a)sasl function.</p> <p>Or you can additionally use<br/> Patch 2:</p> <ul class="alternate" type="square"> <li>provides a simple api for sasl authentication (zoo_sasl_init, zoo_sasl_connect, zoo_sasl_authenticate)</li> <li>requires libsasl2 (and plugins)</li> <li>autoconf/make configuration</li> <li>test for digest-md5 authentication</li> <li>extended configuration for digest-md5 sasl server required by sasl2</li> </ul> <p>Patch 3:</p> <ul class="alternate" type="square"> <li>includes a sasl-enabled cli as additional make artifacts</li> </ul> <p>When using the test configuration as in src/c/tests/jaas.digest.server.conf you can login via:<br/> cli_sasl_st -u super -h zk-sasl-md5 -m DIGEST-MD5 hostlist<br/> and password 'test'.<br/> If you set up Kerberos 5 on the server side and have a valid ticket its just:<br/> cli_sasl_st -m GSSAPI hostlist</p> <p>This patches deprecate the earlier single patch.</p></comment>
<comment id="13123068" author="jiraposter@reviews.apache.org" created="Fri, 7 Oct 2011 18:58:29 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/2252/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-10-07 18:58:28.724545)</p> <p>Review request for zookeeper, Eugene Koontz, Mahadev Konar, and Tom Klonikowski.</p> <p>Changes<br/> -------</p> <p>Replaced with the recent patch (#1 of 3)</p> <p>Summary (updated)<br/> -------</p> <p>This first patch implements the zookeeper sasl operations, extends the zkServer.sh test script with the ability to start a sasl enabled server and adds a test that checks the initial DIGEST-MD5 response.</p> <p>It introduces no external requirements but provides zoo_sasl/zoo_asasl functions that allow applications (or the addon from patch #2) to communicate with the sasl server backend.</p> <p>Patch #2 will add a simple api for sasl authentication, patch #3 includes a sasl enabled command line client.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" title="Add support for C client for SASL authentication" class="issue-link" data-issue-key="ZOOKEEPER-1112"><del>ZOOKEEPER-1112</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1112</a></p> <p>Diffs (updated)</p> <hr /> <p> src/c/include/proto.h bce408e <br/> src/c/include/zookeeper.h 7d1066a <br/> src/c/src/zk_adaptor.h 6aed38f <br/> src/c/src/zookeeper.c 64d7a4d <br/> src/c/tests/TestClient.cc 2d45cec <br/> src/c/tests/jaas.digest.server.conf e69de29 <br/> src/c/tests/zkServer.sh 0af80f8 </p> <p>Diff: <a href="https://reviews.apache.org/r/2252/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Tom</p> </comment>
<comment id="13123132" author="jiraposter@reviews.apache.org" created="Fri, 7 Oct 2011 20:02:29 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/2252/#review2438" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/#review2438</a><br/> -----------------------------------------------------------</p> <p>src/c/include/zookeeper.h<br/> lt;<a href="https://reviews.apache.org/r/2252/#comment5542" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/#comment5542</a>gt;</p> <p> I'm gonna replace the callback with two out parameters here.</p> <ul class="alternate" type="square"> <li>Tom</li> </ul> <p>On 2011-10-07 18:58:28, Tom Klonikowski wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/2252/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-10-07 18:58:28)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper, Eugene Koontz, Mahadev Konar, and Tom Klonikowski.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This first patch implements the zookeeper sasl operations, extends the zkServer.sh test script with the ability to start a sasl enabled server and adds a test that checks the initial DIGEST-MD5 response.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>It introduces no external requirements but provides zoo_sasl/zoo_asasl functions that allow applications (or the addon from patch #2) to communicate with the sasl server backend.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patch #2 will add a simple api for sasl authentication, patch #3 includes a sasl enabled command line client.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" title="Add support for C client for SASL authentication" class="issue-link" data-issue-key="ZOOKEEPER-1112"><del>ZOOKEEPER-1112</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1112</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>src/c/include/proto.h bce408e </p></blockquote> <blockquote><p>src/c/include/zookeeper.h 7d1066a </p></blockquote> <blockquote><p>src/c/src/zk_adaptor.h 6aed38f </p></blockquote> <blockquote><p>src/c/src/zookeeper.c 64d7a4d </p></blockquote> <blockquote><p>src/c/tests/TestClient.cc 2d45cec </p></blockquote> <blockquote><p>src/c/tests/jaas.digest.server.conf e69de29 </p></blockquote> <blockquote><p>src/c/tests/zkServer.sh 0af80f8 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/2252/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Tom</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13123720" author="klonik_t" created="Sun, 9 Oct 2011 16:26:09 +0000"><p>Updated patches with simpler synchronous sasl function and a little more testing.</p></comment>
<comment id="13123722" author="jiraposter@reviews.apache.org" created="Sun, 9 Oct 2011 16:31:29 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/2252/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-10-09 16:30:25.396109)</p> <p>Review request for zookeeper, Eugene Koontz, Mahadev Konar, and Tom Klonikowski.</p> <p>Changes<br/> -------</p> <p>Updated patches with simpler synchronous sasl function and a little more testing</p> <p>Summary<br/> -------</p> <p>This first patch implements the zookeeper sasl operations, extends the zkServer.sh test script with the ability to start a sasl enabled server and adds a test that checks the initial DIGEST-MD5 response.</p> <p>It introduces no external requirements but provides zoo_sasl/zoo_asasl functions that allow applications (or the addon from patch #2) to communicate with the sasl server backend.</p> <p>Patch #2 will add a simple api for sasl authentication, patch #3 includes a sasl enabled command line client.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" title="Add support for C client for SASL authentication" class="issue-link" data-issue-key="ZOOKEEPER-1112"><del>ZOOKEEPER-1112</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1112</a></p> <p>Diffs (updated)</p> <hr /> <p> src/c/include/proto.h bce408e <br/> src/c/include/zookeeper.h 7d1066a <br/> src/c/src/zk_adaptor.h 6aed38f <br/> src/c/src/zookeeper.c 64d7a4d <br/> src/c/tests/TestClient.cc 2d45cec <br/> src/c/tests/jaas.digest.server.conf e69de29 <br/> src/c/tests/zkServer.sh 0af80f8 </p> <p>Diff: <a href="https://reviews.apache.org/r/2252/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2252/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Tom</p> </comment>
<comment id="13123726" author="jiraposter@reviews.apache.org" created="Sun, 9 Oct 2011 16:39:29 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/2315/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2315/</a><br/> -----------------------------------------------------------</p> <p>Review request for zookeeper.</p> <p>Summary<br/> -------</p> <p>2nd patch</p> <ul> <li>provides a simple api for sasl authentication (zoo_sasl_init, zoo_sasl_connect, zoo_sasl_authenticate)</li> <li>requires libsasl2 (and plugins)</li> <li>autoconf/make configuration</li> <li>test for digest-md5 authentication</li> <li>extended configuration for digest-md5 sasl server required by sasl2</li> </ul> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" title="Add support for C client for SASL authentication" class="issue-link" data-issue-key="ZOOKEEPER-1112"><del>ZOOKEEPER-1112</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1112" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1112</a></p> <p>Diffs</p> <hr /> <p> src/c/Makefile.am dbf4080 <br/> src/c/configure.ac 4e1a8d5 <br/> src/c/include/zookeeper_sasl.h e69de29 <br/> src/c/src/zk_sasl.c e69de29 <br/> src/c/tests/TestClient.cc 2d45cec <br/> src/java/main/org/apache/zookeeper/server/ZooKeeperSaslServer.java 0ca18dc </p> <p>Diff: <a href="https://reviews.apache.org/r/2315/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/2315/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Tom</p> </comment>
<comment id="13126379" author="klonik_t" created="Thu, 13 Oct 2011 06:31:32 +0000"><p>Maybe part #2 (sasl auth implementation via cyrus sasl) and #3 (cli using #2) should be moved to the recipes section (recipes/sasl). What do you think?</p></comment>
<comment id="14027227" author="rgs" created="Tue, 10 Jun 2014 23:48:27 +0000"><p>do we want this for 3.5.0? any takers on rebasing it?</p></comment>
<comment id="15109889" author="beeflyme" created="Thu, 21 Jan 2016 01:52:11 +0000"><p>do we want this for 3.5.0? any takers on rebasing it?</p></comment>
<comment id="16905211" author="ztzg" created="Mon, 12 Aug 2019 13:46:05 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=klonik_t" class="user-hover" rel="klonik_t">Tom Klonikowski</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=beeflyme" class="user-hover" rel="beeflyme">caixiaofeng</a>: See <a href="https://github.com/apache/zookeeper/pull/1134" class="external-link" target="_blank" rel="nofollow noopener">PR 1134</a>, which refreshes the patches for current <tt>master</tt>.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10032">
<name>Blocker</name>
<inwardlinks description="is blocked by">
<issuelink>
<issuekey id="12480698">ZOOKEEPER-938</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12498034" name="ZOOKEEPER-1112.patch" size="42562" author="klonik_t" created="Thu, 6 Oct 2011 17:26:16 +0000"/>
<attachment id="12498357" name="ZOOKEEPER-1112_1.patch" size="14498" author="klonik_t" created="Sun, 9 Oct 2011 16:26:08 +0000"/>
<attachment id="12498190" name="ZOOKEEPER-1112_1.patch" size="13635" author="klonik_t" created="Fri, 7 Oct 2011 17:14:30 +0000"/>
<attachment id="12498358" name="ZOOKEEPER-1112_2.patch" size="21353" author="klonik_t" created="Sun, 9 Oct 2011 16:26:09 +0000"/>
<attachment id="12498191" name="ZOOKEEPER-1112_2.patch" size="21364" author="klonik_t" created="Fri, 7 Oct 2011 17:14:30 +0000"/>
<attachment id="12498192" name="ZOOKEEPER-1112_3.patch" size="25232" author="klonik_t" created="Fri, 7 Oct 2011 17:14:30 +0000"/>
<attachment id="12497963" name="zookeeper-c-client-sasl.patch" size="28292" author="klonik_t" created="Thu, 6 Oct 2011 08:51:21 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>2419</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i07kb3:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>42057</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1715] Upgrade netty version</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1715</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Upgrade netty version</p></description>
<environment><p>zookeeper 3.4.5 uses netty 3.2.2, which was released in August 2010. The latest version of netty is 3.6.6 released May 2013. Zookeeper should consider upgrading.</p></environment>
<key id="12651846">ZOOKEEPER-1715</key>
<summary>Upgrade netty version</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="sbridges">Sean Bridges</assignee>
<reporter username="sgbridges">Sean Bridges</reporter>
<labels> </labels>
<created>Sat, 8 Jun 2013 05:02:30 +0000</created>
<updated>Sat, 13 Feb 2021 06:36:08 +0000</updated>
<resolved>Sat, 14 Dec 2013 08:38:41 +0000</resolved>
<version>3.4.5</version>
<fixVersion>3.4.6</fixVersion>
<fixVersion>3.5.0</fixVersion>
<due/>
<votes>2</votes>
<watches>5</watches>
<comments>
<comment id="13678692" author="hadoopqa" created="Sat, 8 Jun 2013 06:06:59 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12586858/ZOOKEEPER-1715.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12586858/ZOOKEEPER-1715.patch</a><br/> against trunk revision 1490358.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1500//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1500//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1500//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1500//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1500//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1500//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13678715" author="fpj" created="Sat, 8 Jun 2013 09:28:15 +0000"><p>Hi Sean, It sounds like a good idea to upgrade. We need to determine why tests are not passing, though. In my machine, org.apache.zookeeper.test.NioNettySuiteHammerTest times out. It is possibly the same issue that jenkins is pointing out with the core tests failure.</p></comment>
<comment id="13678920" author="sgbridges" created="Sun, 9 Jun 2013 03:11:09 +0000"><p>Using git bisect, it looks like zookeeper works with netty lt;= 3.6.0.BETA1, but fails after 3.6.0.FINAL. This seems to be the offending commit,</p> <p><a href="https://github.com/netty/netty/commit/95684d92eb717b0e1ddd5914c84fe6331b4cfe77" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/netty/netty/commit/95684d92eb717b0e1ddd5914c84fe6331b4cfe77</a></p></comment>
<comment id="13679271" author="sgbridges" created="Mon, 10 Jun 2013 03:02:16 +0000"><p>Doing some more debugging, the main test thread is blocked in NettyServerCnxnFactory#shutdown at the call to,</p> <p>bootstrap.releaseExternalResources();</p> <p>That call is blocked trying to shut down an executor with 1 thread blocked trying to acquire the lock on a NettyServerCnxn, with a stack trace like,</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">Name: New I/O worker #4 State: BLOCKED on org.apache.zookeeper.server.NettyServerCnxn@6827a180 owned by: CommitProcWorkThread-1 Total blocked: 2 Total waited: 0 Stack trace: org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.messageReceived(NettyServerCnxnFactory.java:141) org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88) org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:558) org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:553) org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268) org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255) org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88) org.jboss.netty.channel.socket.nio.AbstractNioWorker.processSelectedKeys(AbstractNioWorker.java:441) org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:328) org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:36) org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108) org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42) java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) java.lang.<span class="code-object">Thread</span>.run(<span class="code-object">Thread</span>.java:722) </pre> </div></div> <p>The lock is owned by another thread which is blocked trying to disableRcv with a stack trace as shown,</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">Name: CommitProcWorkThread-1 State: WAITING on org.jboss.netty.channel.DefaultChannelFuture@405a6d04 Total blocked: 14 Total waited: 77 Stack trace: at java.lang.<span class="code-object">Object</span>.wait(Native Method) at java.lang.<span class="code-object">Object</span>.wait(<span class="code-object">Object</span>.java:503) org.jboss.netty.channel.DefaultChannelFuture.awaitUninterruptibly(DefaultChannelFuture.java:258) org.apache.zookeeper.server.NettyServerCnxn.disableRecv(NettyServerCnxn.java:810) org.apache.zookeeper.server.NettyServerCnxn.receiveMessage(NettyServerCnxn.java:742) org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.processMessage(NettyServerCnxnFactory.java:164) org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.messageReceived(NettyServerCnxnFactory.java:141) - locked org.apache.zookeeper.server.NettyServerCnxn@6827a180 org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88) org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:558) org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:553) org.apache.zookeeper.server.NettyServerCnxn.enableRecv(NettyServerCnxn.java:207) org.apache.zookeeper.server.NettyServerCnxn.sendResponse(NettyServerCnxn.java:190) org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:416) org.apache.zookeeper.server.quorum.CommitProcessor$CommitWorkRequest.doWork(CommitProcessor.java:271) org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run(WorkerService.java:152) java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) java.lang.<span class="code-object">Thread</span>.run(<span class="code-object">Thread</span>.java:722) </pre> </div></div> <p>The attached patch fixes the test by adding a non blocking version of disableRecv, but I am not sure that is a good approach.</p></comment>
<comment id="13679281" author="hadoopqa" created="Mon, 10 Jun 2013 03:42:12 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12587014/ZOOKEEPER-1715-2.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12587014/ZOOKEEPER-1715-2.patch</a><br/> against trunk revision 1490358.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1501//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1501//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1501//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1501//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1501//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1501//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13679974" author="fpj" created="Mon, 10 Jun 2013 22:10:09 +0000"><p>It is kind of odd that the thread trying to disableRcv remains blocked. Is there any exception or anything in the logs that indicate why it is blocked? I mentioned exceptions because I've seen a couple of pages indicating that an exception could lead to that behavior.</p></comment>
<comment id="13699506" author="fpj" created="Wed, 3 Jul 2013 22:05:42 +0000"><p>I came across this jira from the Avro project: <a href="https://issues.apache.org/jira/browse/AVRO-1292" title="NettyTransceiver: Client threads can block under certain connection failure scenarios" class="issue-link" data-issue-key="AVRO-1292"><del>AVRO-1292</del></a>. They suggest the following:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">- channelFuture.awaitUninterruptibly(connectTimeoutMillis); + <span class="code-keyword">try</span> { + channelFuture.await(connectTimeoutMillis); + } <span class="code-keyword">catch</span> (InterruptedException e) { + <span class="code-object">Thread</span>.currentThread().interrupt(); <span class="code-comment">// Reset interrupt flag </span>+ <span class="code-keyword">throw</span> <span class="code-keyword">new</span> IOException(<span class="code-quote">"Interrupted <span class="code-keyword">while</span> connecting to "</span> + + remoteAddr); + } </pre> </div></div> <p>Should we adopt the same approach?</p></comment>
<comment id="13699507" author="fpj" created="Wed, 3 Jul 2013 22:06:28 +0000"><p>Cancelling the patch until we converge on a fix.</p></comment>
<comment id="13700332" author="fpj" created="Thu, 4 Jul 2013 20:37:14 +0000"><p>Patch based on Sean's and the solution in the Avro jira. </p> <p>Different from the approach in the Avro patch, I'm not transforming the interrupted exception into an io exception. disableRecv does not throw an exception in the interface declaration, and I couldn't see a good reason for changing the interface, so I just log the exception and move on. </p></comment>
<comment id="13700344" author="hadoopqa" created="Thu, 4 Jul 2013 21:12:03 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12590934/zookeeper-1715.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12590934/zookeeper-1715.patch</a><br/> against trunk revision 1498732.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1508//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1508//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1508//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1508//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1508//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1508//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13700497" author="fpj" created="Fri, 5 Jul 2013 07:22:57 +0000"><p>The test that failed is testTransactionLogCorruption, which I believe is due to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1629" title="testTransactionLogCorruption occasionally fails" class="issue-link" data-issue-key="ZOOKEEPER-1629"><del>ZOOKEEPER-1629</del></a>, not this patch. I'm also considering that the NioNettySuiteHammerTest is already capturing the problem, so I was not considering adding a test.</p></comment>
<comment id="13788769" author="hadoopqa" created="Tue, 8 Oct 2013 00:34:16 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12590934/zookeeper-1715.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12590934/zookeeper-1715.patch</a><br/> against trunk revision 1530110.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1647//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1647//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1647//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1647//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1647//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1647//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13788943" author="phunt" created="Tue, 8 Oct 2013 06:00:40 +0000"><p>Looks like <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1763" title="Upgrade the netty version" class="issue-link" data-issue-key="ZOOKEEPER-1763"><del>ZOOKEEPER-1763</del></a> is a dup of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1715" title="Upgrade netty version" class="issue-link" data-issue-key="ZOOKEEPER-1715"><del>ZOOKEEPER-1715</del></a></p></comment>
<comment id="13788957" author="hadoopqa" created="Tue, 8 Oct 2013 06:21:13 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12590934/zookeeper-1715.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12590934/zookeeper-1715.patch</a><br/> against trunk revision 1530158.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1653//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1653//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1653//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1653//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1653//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1653//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13793082" author="phunt" created="Fri, 11 Oct 2013 22:04:57 +0000"><p>Updated to upgrade to 3.7.0.Final</p></comment>
<comment id="13793083" author="phunt" created="Fri, 11 Oct 2013 22:05:16 +0000"><p>Committed to trunk. Thanks Sean!</p></comment>
<comment id="13793334" author="hudson" created="Sat, 12 Oct 2013 11:09:30 +0000"><p>SUCCESS: Integrated in ZooKeeper-trunk #2087 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2087/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2087/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1715" title="Upgrade netty version" class="issue-link" data-issue-key="ZOOKEEPER-1715"><del>ZOOKEEPER-1715</del></a>. Upgrade netty version (Sean Bridges via phunt) (phunt: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1531444" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1531444</a>)</p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/ivy.xml</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/NettyServerCnxn.java</li> </ul> </comment>
<comment id="13847807" author="michim" created="Fri, 13 Dec 2013 19:23:29 +0000"><p>I'd like to backport this to 3.4.6.</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1838" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1838</a></p></comment>
<comment id="13848070" author="michim" created="Fri, 13 Dec 2013 23:45:09 +0000"><p>The timeout issue is fixed with this patch, but I got some failures:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>Testcase: testDisconnectedAddAuth took 121.339 sec FAILED waiting for server being up junit.framework.AssertionFailedError: waiting for server being up at org.apache.zookeeper.test.ACLTest.testDisconnectedAddAuth(ACLTest.java:63) at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52) Testcase: testSessionTimeout took 134.221 sec FAILED waiting for server up junit.framework.AssertionFailedError: waiting for server up at org.apache.zookeeper.test.SessionTest.setUp(SessionTest.java:80) at org.apache.zookeeper.test.SessionTest.testSessionTimeout(SessionTest.java:293) at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52) Testcase: testWatcherAutoResetWithLocal took 123.392 sec FAILED waiting for server up junit.framework.AssertionFailedError: waiting for server up at org.apache.zookeeper.test.ClientBase.createNewServerInstance(ClientBase.java:338) at org.apache.zookeeper.test.ClientBase.startServer(ClientBase.java:415) at org.apache.zookeeper.test.WatcherTest.testWatcherAutoReset(WatcherTest.java:341) at org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithLocal(WatcherTest.java:242) at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52) FAILED expected:lt;0gt; but was:lt;2gt; junit.framework.AssertionFailedError: expected:lt;0gt; but was:lt;2gt; at org.apache.zookeeper.test.JMXEnv.ensureOnly(JMXEnv.java:138) at org.apache.zookeeper.test.ClientBase.stopServer(ClientBase.java:425) at org.apache.zookeeper.test.ClientBase.tearDown(ClientBase.java:455) Testcase: testWatcherAutoResetDisabledWithGlobal took 3.16 sec FAILED expected:lt;0gt; but was:lt;2gt; junit.framework.AssertionFailedError: expected:lt;0gt; but was:lt;2gt; at org.apache.zookeeper.test.JMXEnv.ensureOnly(JMXEnv.java:138) at org.apache.zookeeper.test.ClientBase.stopServer(ClientBase.java:425) at org.apache.zookeeper.test.WatcherTest.testWatcherAutoReset(WatcherTest.java:278) at org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetWithGlobal(WatcherTest.java:233) at org.apache.zookeeper.test.WatcherTest.testWatcherAutoResetDisabledWithGlobal(WatcherTest.java:249) at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52) FAILED expected:lt;0gt; but was:lt;2gt; junit.framework.AssertionFailedError: expected:lt;0gt; but was:lt;2gt; at org.apache.zookeeper.test.JMXEnv.ensureOnly(JMXEnv.java:138) at org.apache.zookeeper.test.ClientBase.stopServer(ClientBase.java:425) at org.apache.zookeeper.test.ClientBase.tearDown(ClientBase.java:455) Testcase: testWatcherAutoResetDisabledWithLocal took 120.027 sec FAILED waiting for server up junit.framework.AssertionFailedError: waiting for server up at org.apache.zookeeper.test.ClientBase.createNewServerInstance(ClientBase.java:338) at org.apache.zookeeper.test.ClientBase.startServer(ClientBase.java:415) at org.apache.zookeeper.test.ClientBase.setUp(ClientBase.java:408) at org.apache.zookeeper.test.WatcherTest.setUp(WatcherTest.java:74) FAILED expected:lt;0gt; but was:lt;2gt; junit.framework.AssertionFailedError: expected:lt;0gt; but was:lt;2gt; at org.apache.zookeeper.test.JMXEnv.ensureOnly(JMXEnv.java:138) at org.apache.zookeeper.test.ClientBase.stopServer(ClientBase.java:425) at org.apache.zookeeper.test.ClientBase.tearDown(ClientBase.java:455) </pre> </div></div></comment>
<comment id="13848287" author="michim" created="Sat, 14 Dec 2013 08:38:41 +0000"><p>3.4: <a href="http://svn.apache.org/viewvc?view=revisionamp;revision=1550902" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewvc?view=revisionamp;revision=1550902</a></p> <p>We are keeping track of the test failures I mentioned in my previous comment in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1837" title="Fix JMXEnv checks (potential race conditions)" class="issue-link" data-issue-key="ZOOKEEPER-1837"><del>ZOOKEEPER-1837</del></a>.</p></comment>
<comment id="13933776" author="fpj" created="Thu, 13 Mar 2014 18:17:10 +0000"><p>Closing issues after releasing 3.4.6.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10020">
<name>Cloners</name>
<inwardlinks description="is cloned by">
<issuelink>
<issuekey id="13358448">ZOOKEEPER-4209</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="12310000">
<name>Duplicate</name>
<outwardlinks description="duplicates">
<issuelink>
<issuekey id="12670040">ZOOKEEPER-1763</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12684458">ZOOKEEPER-1838</issuekey>
</issuelink>
<issuelink>
<issuekey id="12640293">ZOOKEEPER-1681</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12587014" name="ZOOKEEPER-1715-2.patch" size="2475" author="sgbridges" created="Mon, 10 Jun 2013 03:02:38 +0000"/>
<attachment id="12608090" name="ZOOKEEPER-1715-v3.patch" size="2483" author="phunt" created="Fri, 11 Oct 2013 22:04:57 +0000"/>
<attachment id="12586858" name="ZOOKEEPER-1715.patch" size="587" author="sgbridges" created="Sat, 8 Jun 2013 05:03:57 +0000"/>
<attachment id="12590934" name="zookeeper-1715.patch" size="2452" author="fpj" created="Thu, 4 Jul 2013 20:37:14 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>332170</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i1laxj:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>332499</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-236] SSL Support for Atomic Broadcast protocol</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-236</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>We should have the ability to use SSL to authenticate and encrypt the traffic between ZooKeeper servers. For the most part this is a very easy change. We would probably only want to support this for TCP based leader elections.</p></description>
<environment/>
<key id="12409148">ZOOKEEPER-236</key>
<summary>SSL Support for Atomic Broadcast protocol</summary>
<type id="7" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21146avatarType=issuetype">Sub-task</type>
<parent id="13242531">ZOOKEEPER-3451</parent>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="andor">Andor Molnar</assignee>
<reporter username="breed">Benjamin Reed</reporter>
<labels>
<label>pull-request-available</label>
<label>ssl</label>
<label>ssl-tls</label>
</labels>
<created>Mon, 24 Nov 2008 21:17:39 +0000</created>
<updated>Fri, 4 Oct 2019 14:55:14 +0000</updated>
<resolved>Thu, 25 Oct 2018 14:27:26 +0000</resolved>
<fixVersion>3.6.0</fixVersion>
<fixVersion>3.5.5</fixVersion>
<component>quorum</component>
<component>security</component>
<component>server</component>
<due/>
<votes>4</votes>
<watches>13</watches>
<timeestimate seconds="0">0h</timeestimate>
<timespent seconds="100200">27h 50m</timespent>
<comments>
<comment id="15898359" author="githubbot" created="Mon, 6 Mar 2017 23:19:09 +0000"><p>GitHub user afine opened a pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184</a></p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-236" title="SSL Support for Atomic Broadcast protocol" class="issue-link" data-issue-key="ZOOKEEPER-236"><del>ZOOKEEPER-236</del></a>: SSL Support for Atomic Broadcast protocol <span class="error">#91;DO NOT MERGE#93;</span></p> <p> This is a work in progress, I wanted to get some feedback from the community while I worked on this. Please do not merge yet. Tests, documentation, and some cleanup still coming. </p> <p> This is a first pass at ssl support for the zookeeper quorum. It supports encrypting both leader election and normal operation.</p> <p> Rolling upgrades are supported via port unification (`portUnification=true`). This should only be used while performing a rolling upgrade.</p> <p> Some open questions:</p> <ul class="alternate" type="square"> <li>Anyone have any ideas for better names for the configuration options (`sslQuorum` and `portUnification` currently).</li> <li>I am using the same configuration that points to the truststore/keystore used for server lt;-gt; client ssl. Do they need to be separate?</li> <li>Is port unification the correct approach for rolling upgrades? Is the impact from the use of `BufferedSocket`s during the upgrade acceptable? See: <a href="http://stackoverflow.com/questions/25637039/detecting-ssl-connection-and-converting-socket-to-sslsocket" class="external-link" target="_blank" rel="nofollow noopener">http://stackoverflow.com/questions/25637039/detecting-ssl-connection-and-converting-socket-to-sslsocket</a> <a href="http://stackoverflow.com/questions/6559859/is-it-possible-to-change-plain-socket-to-sslsocket" class="external-link" target="_blank" rel="nofollow noopener">http://stackoverflow.com/questions/6559859/is-it-possible-to-change-plain-socket-to-sslsocket</a></li> <li>server lt;<del>gt; client ssl is implemented with netty. I did not feel that rewriting our server lt;</del>gt; server logic with netty was necessary given how easy ssl was to implement with standard java `SSLSocket`s. Any arguments to the contrary?</li> </ul> <p> Thanks,<br/> Abe</p> <p>You can merge this pull request into a Git repository by running:</p> <p> $ git pull <a href="https://github.com/afine/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/afine/zookeeper</a> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-236" title="SSL Support for Atomic Broadcast protocol" class="issue-link" data-issue-key="ZOOKEEPER-236"><del>ZOOKEEPER-236</del></a></p> <p>Alternatively you can review and apply these changes as the patch at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184.patch" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184.patch</a></p> <p>To close this pull request, make a commit to your master/trunk branch<br/> with (at least) the following in the commit message:</p> <p> This closes #184</p> <hr /> <p>commit db33552046dea7e8e850945da4f18d18644d8ee5<br/> Author: Abraham Fine lt;afine@apache.orggt;<br/> Date: 2017-03-06T23:12:59Z</p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-236" title="SSL Support for Atomic Broadcast protocol" class="issue-link" data-issue-key="ZOOKEEPER-236"><del>ZOOKEEPER-236</del></a>: SSL Support for Atomic Broadcast protocol</p> <hr /></comment>
<comment id="15898735" author="geek101" created="Tue, 7 Mar 2017 04:40:09 +0000"><p>Hi Abe,</p> <p>I have attempted to work on providing the same support last year for branch-3.5 and I have created the pull request for what I have so far for you to look at: <a href="https://github.com/apache/zookeeper/pull/185" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/185</a><br/> Readme: <a href="https://github.com/geek101/zookeeper/blob/branch-3.4/README_SSL.md" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.4/README_SSL.md</a> </p> <p>I definitely did not consider upgrading non SSL cluster to an SSL one for ZAB and FLE, glad that you brought that up. </p> <p>I am attempting to combine these changes and Netty changes I have for Trunk. You can find them here:<br/> <a href="https://github.com/geek101/zookeeper/pull/6" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/pull/6</a></p> <p>Let me know what you think.<br/> thanks<br/> Powell.</p> </comment>
<comment id="15898820" author="abrahamfine" created="Tue, 7 Mar 2017 06:32:02 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <p>Thanks for letting me know about the work that you have done. I apologize if I have missed it somewhere else in JIRA. Hopefully we can combine efforts here.</p> <p>I wanted to discuss about the way that certificates are being handled in your patch, which I think is a fundamental difference in our two approaches (which I think is based on different operational assumptions).</p> <p>Your patch, and please correct me if I am wrong, appears to use self signed certs on each node and a fingerprint (passed through the configuration system) as a mechanism of verification. This makes zookeeper self contained and easy to manage.</p> <p>My patch assumes certificates are likely not self signed and some public key (or possibly keys) are available in the trust store that would be able to authenticate all zk servers. I think this has the advantage of making it much more difficult for unauthorized servers to join a quorum as they would need to have access to the CA that was used to generate the keys in the truststore. In addition, I needed to make minimal changes to the config system.</p> <p>What do you think is the best path forward?</p> <p>Abe</p></comment>
<comment id="15899664" author="geek101" created="Tue, 7 Mar 2017 16:07:31 +0000"><p>Hi Abe,</p> <p>I am more then happy to combine efforts and collaborate. I think the significant amount of work is testing which is what I am attempting to get it right in the Trunk patch which also has Netty support when compared to work on branch-3.5 (this patch).</p> <p>This patch has support for configuration of for Truststore. Hence if the admin provides a cert chain that contains the CA(s) or for that matter if the Truststore contains all the self signed certs it should also work. I did not do extensive testing for this in this branch (I did this for branch-3.4, hence I think it should work).</p> <p>Let me point you to the code and let me know if this can work or is what you are expecting:</p> <p>createSSLContext() calls always chain Trustmanagers via X509ChainedTrustManager class with Truststore manager first i.e ZKX509TrustManager class and dynamic trust verification via ZKPeerX509TrustManager class.</p> <p>Client side SSL socket creation:<br/> <a href="https://github.com/apache/zookeeper/pull/185/files#diff-74d86ae5e83698ad62aada32dcbe615eR53" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/185/files#diff-74d86ae5e83698ad62aada32dcbe615eR53</a></p> <p>Quorum server side SSL socket creation:<br/> <a href="https://github.com/apache/zookeeper/pull/185/files#diff-eb0052bc7ed160b8dee226f2ed1bdad2R51" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/185/files#diff-eb0052bc7ed160b8dee226f2ed1bdad2R51</a></p> <p>I do think we need consensus here if there is need or want to support dynamic reconfiguration with SSL in a fault-tolerant way. By which I mean, if I understand correctly, both the operations of managing the certs (add/remove of certs) and reconfig() API to change members of a quorum have to be fault-tolerant. reconfig() is atomic hence no issue there. But then that leaves managing the certs for the Quorum which is a non trivial problem and there exists a solution I think that does need support in the guts of ZK. But I think we can simplify the orchestration of Zookeeper with SSL if it is SSL aware.</p> <p>CA seems like the best way and simple way to go till such a time arrises when the CA has to be changed. Also prevalent security considerations recommend revoking the cert of the Quorum member that is removed. Again how do we accomplish this in a fault-tolerant way. Hence there is some work still left to do in CA case.</p> <p>If we do not consider fault-tolerance for SSL config management or take a stance that ZK does not have to solve this for the admin then just providing a Truststore would suffice.</p> <p>Also regarding the path forward do you think we should aim for a Trunk patch or patch to 3.5?. Also should we split the effort two phases, first without Netty and then perhaps bring in Netty etc.</p> <p>Let me know if I got something wrong and what do you think about bringing in Netty support for Quorum communication.<br/> Cheers<br/> Powell.</p> </comment>
<comment id="15900423" author="abrahamfine" created="Wed, 8 Mar 2017 00:04:38 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <blockquote><p>if I understand correctly, both the operations of managing the certs (add/remove of certs) and reconfig() API to change members of a quorum have to be fault-tolerant. </p></blockquote> <p>Would you mind clarifying what you mean by "fault-tolerant" here? Can you give an example of how a fault would break my patch?</p> <blockquote><p>CA seems like the best way and simple way to go till such a time arrises when the CA has to be changed.</p></blockquote> <p>You are correct in that there is certainly additional complexity involved here. But these are "solved" problems that I don't feel we need to write a custom solution for.</p> <blockquote><p>Also prevalent security considerations recommend revoking the cert of the Quorum member that is removed. Again how do we accomplish this in a fault-tolerant way. Hence there is some work still left to do in CA case.</p></blockquote> <p>Good point. I forgot to include a note on this with my patch. I was thinking supporting OCSP (or even CRL's) would be a fine solution to that. What do you think?</p> <blockquote><p>Also regarding the path forward do you think we should aim for a Trunk patch or patch to 3.5?</p></blockquote> <p>I think we should aim for both.</p> <blockquote><p>Let me know if I got something wrong and what do you think about bringing in Netty support for Quorum communication.</p></blockquote> <p>What are your motivations for bringing in Netty?</p> <p>Thanks,<br/> Abe</p> </comment>
<comment id="15900447" author="hanm" created="Wed, 8 Mar 2017 00:25:25 +0000"><p>Thanks Abe for driving this. I have some comments for your questions in pull request.</p> <blockquote><p>I am using the same configuration that points to the truststore/keystore used for server lt;-gt; client ssl. Do they need to be separate?</p></blockquote> <p>Separate configuration option provides better flexibility and is also consistent with SASL / Kerberos configurations for client-server and server-server. For example we have separate server login context for server credential in client-server and server-server cases (<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1045" title="Support Quorum Peer mutual authentication via SASL" class="issue-link" data-issue-key="ZOOKEEPER-1045"><del>ZOOKEEPER-1045</del></a>), the keytab might be the same but the configuration options are separate.</p> <blockquote><p>Is port unification the correct approach for rolling upgrades? </p></blockquote> <p>I think it might be helpful to do some scoping and decide if we want to support rolling upgrade - or supporting rolling upgrade in first release of this patch. When it comes to security usually customers are OK to do a cold restart. Not saying that we should not support rolling upgrade someday but you might also want consider the amount of work involved to support it (implementation, how to properly testing, etc.) and it might be easier if we do this in phases - unless it is trivial to implement and test rolling upgrade (I haven't looked this in much details.) or folks feel it is absolutely required to get rolling upgrade capability before shipping this feature.</p> <blockquote><p>server logic with netty was necessary given how easy ssl was to implement with standard java `SSLSocket`s. Any arguments to the contrary?</p></blockquote> <p>Today we don't use Netty for server-server chat so it seems no immediate needs to rely on Netty for this work. Though, issues like <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-900" title="FLE implementation should be improved to use non-blocking sockets" class="issue-link" data-issue-key="ZOOKEEPER-900">ZOOKEEPER-900</a> and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-901" title="Redesign of QuorumCnxManager" class="issue-link" data-issue-key="ZOOKEEPER-901">ZOOKEEPER-901</a> might push towards the direction of using Netty so the FLE and server chats are none blocking, plus we have TLS on Netty for client-server secured communication, so for consistency we could choose to implement TLS on Netty for server-server as well. I am interesting to hear what others think about this.</p></comment>
<comment id="15900521" author="abrahamfine" created="Wed, 8 Mar 2017 01:18:18 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a>-</p> <blockquote><p>Separate configuration option provides better flexibility and is also consistent with SASL / Kerberos configurations for client-server and server-server.</p></blockquote> <p>That makes sense to me. I'll update the patch. I'm also taking suggestions for what such an option should be named. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <blockquote><p>unless it is trivial to implement and test rolling upgrade</p></blockquote> <p>It was pretty trivial to implement and I imagine testing should not be too difficult either. </p> <blockquote><p>Today we don't use Netty for server-server chat so it seems no immediate needs to rely on Netty for this work.</p></blockquote> <p>This is how I feel as well. I'm sure we can pretty quickly come up with a list of deficiencies in the current design but I don't think there is anything severe enough at this moment to give us cause to rewrite right now. </p></comment>
<comment id="15900748" author="geek101" created="Wed, 8 Mar 2017 05:40:20 +0000"><p>Hi Abe,</p> <blockquote> <blockquote><p>if I understand correctly, both the operations of managing the certs (add/remove of certs) and reconfig() API to change members of quorum have to be fault-tolerant.</p></blockquote> <p>Would you mind clarifying what you mean by "fault-tolerant" here? Can you give an example of how a fault would break my patch?</p></blockquote> <p>Either it be CA(s) with CRL's or self signed list of certs what I am pointing to is that the way an admin manages this information should also support fault-tolerance. Not only it should be fault-tolerant but also should work nicely/easily with most probable next thing an admin would do i.e issue a reconfig() command, it could be an add/removing/modify quorum peer(s) configuration.</p> <p>It will be nice to provide a way to manage reconfiguration of quorum peers when SSL is enabled with the same weak assumptions that are necessary for reconfig() to work when SSL is not enabled.</p> <p>Providing a Truststore and asking admins to manage them on their own for the entire quorum will mean that this operation is not fault-tolerant i.e we are expecting them to first set all members of the quorum to a consistent SSL config state and then issue reconfig() command. </p> <p>It would seem that a set of quorum IP addresses dictate what the current configuration of connectivity is allowed and this has to be managed properly to ensure safety and extending this idea the set of SSL certs(be self signed or CA signed) also dictate the current configuration of connectivity. Hence if one considers the Pairlt;IP set, SSL setgt; as config and provide that to reconfig() API it should work. That is what is done for self signed certs in my patch and we should/could provide similar functionality for CA cert case.</p> <p>Hence there is no new problem to solve here, we piggy back on reconfig() API and provide a single API to manage this, we get fault-tolerance for this configuration and safety that reconfig() provides for free.</p> <p>Please consider the above comments and let me know what you think, I was not saying that your patch is breaking fault-tolerance instead what my comments pointed to is that we should provide fault-tolerance and safety for reconfiguration of SSL configuration be it self signed or CA based. There are use cases where CA cert based cluster deployment might not be possible hence it would be nice to see Zookeeper provide both possibilities but also maintain the ease of use and provide same guarantees that reconfig() does.</p> <blockquote> <p>This is how I feel as well. I'm sure we can pretty quickly come up with a list of deficiencies in the current design but I don't think there is anything severe enough at this moment to give us cause to rewrite right now.</p></blockquote> <p>There are bugs like <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2164" title="fast leader election keeps failing" class="issue-link" data-issue-key="ZOOKEEPER-2164"><del>ZOOKEEPER-2164</del></a>, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1678" title="Server fails to join quorum when a peer is unreachable (5 ZK server setup)" class="issue-link" data-issue-key="ZOOKEEPER-1678">ZOOKEEPER-1678</a> to consider along with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-901" title="Redesign of QuorumCnxManager" class="issue-link" data-issue-key="ZOOKEEPER-901">ZOOKEEPER-901</a>. Netty or NIO will work but considering SSL will mean Netty will make it easier to implement.</p> <p>Doing this in phases is better, getting SSL socket to work with reconfig() support is great first step. The Netty patch I have also gets this support only for FLE and not ZAB. I found it not so easier to abstract away the calls to socket(s) from ZAB code.</p> <p>Cheers<br/> Powell.</p></comment>
<comment id="15901467" author="phunt" created="Wed, 8 Mar 2017 15:57:22 +0000"><p>In general I don't think we want to tie/require security through reconfig. Seems like a potentially useful feature, but most folks are pretty familiar with typically java/ssl configuration. Additionally what was originally proposed here is very consistent across the Hadoop 'ecosystem'. That said perhaps a separate jira for the reconfig feature, for those interested in that approach (although I don't know if we need two)</p> <p>Keep in mind also that some folks might want security w/o enabling reconfig - reconfig is off by default iirc in 3.5. Those that are not using reconfig might not want to enable it just to enable security.</p></comment>
<comment id="15902431" author="abrahamfine" created="Thu, 9 Mar 2017 03:45:38 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <blockquote><p>but also should work nicely/easily with most probable next thing an admin would do i.e issue a reconfig() command</p></blockquote> <p>I agree that doing it through reconfig() does provide a more integrated user experience. But I am not sure that it is what an "admin" would expect as the rest of the hadoop ecosystem handles it the other way.</p> <blockquote><p>Providing a Truststore and asking admins to manage them on their own for the entire quorum will mean that this operation is not fault-tolerant i.e we are expecting them to first set all members of the quorum to a consistent SSL config state and then issue reconfig() command.</p></blockquote> <p>I'm not sure that requiring proper ssl configuration for nodes before they join a cluster is unreasonable to expect of an admin. I think this is a decision better left to the community. </p> <blockquote><p>There are bugs like <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2164" title="fast leader election keeps failing" class="issue-link" data-issue-key="ZOOKEEPER-2164"><del>ZOOKEEPER-2164</del></a>, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1678" title="Server fails to join quorum when a peer is unreachable (5 ZK server setup)" class="issue-link" data-issue-key="ZOOKEEPER-1678">ZOOKEEPER-1678</a> to consider along with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-901" title="Redesign of QuorumCnxManager" class="issue-link" data-issue-key="ZOOKEEPER-901">ZOOKEEPER-901</a>. Netty or NIO will work but considering SSL will mean Netty will make it easier to implement.</p></blockquote> <p>I agree that there are some reasons to discuss using netty for serverlt;-gt;server but I think it is outside the scope of this JIRA.</p> <blockquote><p>Doing this in phases is better,</p></blockquote> <p>I agree. What do you think about <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a>'s recommendation? Implement SSL in this JIRA in the old fashioned way (we could even backport to 3.4) here and open another JIRA for reconfig() support.</p> </comment>
<comment id="15904591" author="githubbot" created="Fri, 10 Mar 2017 07:04:38 +0000"><p>GitHub user geek101 opened a pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/188" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/188</a></p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-236" title="SSL Support for Atomic Broadcast protocol" class="issue-link" data-issue-key="ZOOKEEPER-236"><del>ZOOKEEPER-236</del></a>: SSL support for ZAB and FLE <span class="error">#91;DO NOT MERGE#93;</span></p> <ol> <li>Zookeeper FLE amp; ZAB SSL</li> </ol> <p> Provides SSL for Leader Election and ZAB i.e ports 3888 and 2888.</p> <p> Goal of this patch is to build on top of SSL changes for <span class="error">#91;branch-3.4#93;</span>(<a href="https://github.com/geek101/zookeeper/blob/branch-3.4/README_SSL.md" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.4/README_SSL.md</a>)</p> <ol> <li> <ol> <li> <ol> <li>Some details</li> </ol> </li> </ol> </li> </ol> <ul> <li><span class="error">#91;X509Util#93;</span>(<a href="https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/common/X509Util.java" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/common/X509Util.java</a>)<br/> becomes first class citizen and <span class="error">#91;QuorumX509Util#93;</span>(<a href="https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/quorum/util/QuorumX509Util.java" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/quorum/util/QuorumX509Util.java</a>) and <span class="error">#91;ServerX509Util#93;</span>(<a href="https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/util/ServerX509Util.java" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/util/ServerX509Util.java</a>)<br/> extend it.</li> <li><span class="error">#91;ZKConfig#93;</span>(<a href="https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/common/ZKConfig.java" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/common/ZKConfig.java</a>)<br/> becomes an abstract class and <span class="error">#91;QuorumSslConfig#93;</span>(<a href="https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java</a>) and <br/> <span class="error">#91;ZookeeperServerConfig#93;</span>(<a href="https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/ZookeeperServerConfig.java" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/ZookeeperServerConfig.java</a>) implement it.</li> <li>Support for a Quorum peer to also be authenticated as a <span class="error">#91;ZK client#93;</span>(<a href="https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/util/ServerX509Util.java#L62" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.5-ssl-review5/src/java/main/org/apache/zookeeper/server/util/ServerX509Util.java#L62</a>) (this<br/> will be removed if it breaks security and or is not needed)</li> </ul> <ol> <li> <ol> <li> <ol> <li> <ol> <li> <ol> <li>Building</li> </ol> </li> </ol> </li> </ol> </li> </ol> </li> </ol> <p> ```<br/> git checkout branch-3.5-ssl-review5<br/> ant jar<br/> ```</p> <p> Args to enable SSL:<br/> ```<br/> -Dquorum.ssl.enabled="true"<br/> -Dquorum.ssl.keyStore.location="lt;Private key and signed cert, key store filegt;"<br/> -Dquorum.ssl.keyStore.password="lt;Password for the abovegt;"<br/> -Dquorum.ssl.trustStore.location="lt;Root CA cert, key store filegt;"<br/> -Dquorum.ssl.trustStore.password="lt;Password for the abovegt;"<br/> ```</p> <p> Example run command:<br/> ```<br/> java -Dquorum.ssl.enabled="true" -Dquorum.ssl.keyStore.location="node1.ks" <br/> -Dquorum.ssl.keyStore.password="CertPassword1" -Dquorum.ssl.trustStore.location="truststore.ks" -Dquorum.ssl.trustStore.password="StorePass" -cp zookeeper.jar:lib/* org.apache.zookeeper.server.quorum.QuorumPeerMain zoo1.cfg<br/> ```</p> <p>You can merge this pull request into a Git repository by running:</p> <p> $ git pull <a href="https://github.com/geek101/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper</a> branch-3.5-ssl-review6</p> <p>Alternatively you can review and apply these changes as the patch at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/188.patch" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/188.patch</a></p> <p>To close this pull request, make a commit to your master/trunk branch<br/> with (at least) the following in the commit message:</p> <p> This closes #188</p> <hr /> <p>commit 2fe3e971839dfa9d3a5040990e50b5cb657502e3<br/> Author: Powell Molleti lt;powellm79@yahoo.comgt;<br/> Date: 2016-08-14T02:27:03Z</p> <p> SSL support for ZAB and FLE.</p> <p> Pass ZKConfig() around to make things work.<br/> Seperate SSL config for client and quorum<br/> Quorum servers will have different properties for<br/> SSL config, example:<br/> -Dquorum.ssl.enabled=true<br/> -Dquorum.ssl.keyStore.location=/root/zookeeper/ssl/testKeyStore.jks<br/> -Dquorum.ssl.keyStore.password=testpass<br/> -Dquorum.ssl.trustStore.location=/root/zookeeper/ssl/testTrustStore.jks<br/> -Dquorum.ssl.trustStore.password=testpass</p> <p> Enable each zookeeper node will be able to also allowed to be authenticated<br/> as a client using dynamic reconfig.</p> <p> Basic algorithm for various SSL connections.</p> <p> Client:<br/> 1. Use the given truststore if available</p> <p> Server:<br/> 1. Use the given truststore if available</p> <p> Quorum:<br/> 1. Use the given truststore if available</p> <p> Add README to help explain what this code tries to accomplish.</p> <hr /></comment>
<comment id="15904596" author="geek101" created="Fri, 10 Mar 2017 07:10:56 +0000"><p>Sounds good, I have created another pull request that does not have the changes for dynamic propagation of certificate fingerprints of the new quorum / new peer etc.</p> <p><a href="https://github.com/apache/zookeeper/pull/188" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/188</a></p> <p>Porting this backward to branch-3.4 can be more work due to ZKConfig work done in branch-3.4. I have worked on branch-3.4 first for SSL patch and branch-3.5 work is based on this. Will try to rebase that and see how that goes.<br/> <a href="https://github.com/geek101/zookeeper/blob/branch-3.4/README_SSL.md" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/geek101/zookeeper/blob/branch-3.4/README_SSL.md</a></p> <p>thanks<br/> Powell.</p></comment>
<comment id="15905592" author="abrahamfine" created="Fri, 10 Mar 2017 19:30:11 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <p>I have been looking at your latest patch and it looks great. Just in case I am missing something, are there any major functionality differences between my original patch and pull request 188 (besides the documentation)?</p> <p>I'm also a little concerned with the use of the `ServerCfg` class. I understand how it wraps the hostString and InetSocketAddress but it creates a lot of plumbing changes that I do not think are necessary for the funcitonality we are trying to implement and complicate the diff.</p> <p>Do you think it would be easier to move forward with the patch I uploaded originally and put your reconfig changes on top of that (as I think the configuration refactoring you did is more appropriate there anyway)?</p> <p>Thanks,<br/> Abe</p> </comment>
<comment id="15905808" author="hadoopqa" created="Fri, 10 Mar 2017 22:37:34 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 2 new Findbugs (version 3.0.1) warnings.</p> <p> -1 release audit. The applied patch generated 2 release audit warnings (more than the trunk's current 0 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/399//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/399//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/399//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/399//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/399//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/399//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15906038" author="hadoopqa" created="Sat, 11 Mar 2017 03:23:07 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> -1 @author. The patch appears to contain 2 @author tags which the Zookeeper community has agreed to not allow in code contributions.</p> <p> +1 tests included. The patch appears to include 27 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> -1 release audit. The applied patch generated 2 release audit warnings (more than the trunk's current 0 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/401//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/401//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/401//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/401//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/401//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/401//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/401//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/401//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15906045" author="hadoopqa" created="Sat, 11 Mar 2017 03:32:07 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> -1 @author. The patch appears to contain 2 @author tags which the Zookeeper community has agreed to not allow in code contributions.</p> <p> +1 tests included. The patch appears to include 27 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> -1 release audit. The applied patch generated 2 release audit warnings (more than the trunk's current 0 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/402//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/402//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/402//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/402//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/402//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/402//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/402//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/402//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15906092" author="hadoopqa" created="Sat, 11 Mar 2017 05:23:15 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 30 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> -1 release audit. The applied patch generated 2 release audit warnings (more than the trunk's current 0 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/403//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/403//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/403//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/403//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/403//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/403//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/403//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/403//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15906270" author="hadoopqa" created="Sat, 11 Mar 2017 18:18:05 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 49 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> -1 release audit. The applied patch generated 2 release audit warnings (more than the trunk's current 0 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/404//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/404//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/404//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/404//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/404//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/404//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/404//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/404//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15906291" author="geek101" created="Sat, 11 Mar 2017 18:57:20 +0000"><p>Hi Abe,</p> <p>Thanks for looking at the patch and feedback.</p> <blockquote> <p>I'm also a little concerned with the use of the `ServerCfg` class. I understand how it wraps the hostString and InetSocketAddress but it creates a lot of plumbing changes that I do not think are necessary for the functionality we are trying to implement and complicate the diff.</p></blockquote> <p>Noted, I was using that class to band together hostString, InetSocketAddress and Certificate fingerprint. I have removed it and eliminated the impact of it files. See my comments later in the message on the need for hostString. </p> <blockquote> <p>Do you think it would be easier to move forward with the patch I uploaded originally and put your reconfig changes on top of that (as I think the configuration refactoring you did is more appropriate there anyway)?</p></blockquote> <p>I have no issues if you want to commit your changes. Here are few of the things I think are needed.</p> <ul> <li>Need for separate SSL config for client to server and quorum peer to quorum peer. Changes to X509Util and ZKConfig are for this.</li> <li>Need for Hostname verification and CRL lists at-least for quorum peer to quorum peer SSL would mean that we will need <a href="https://docs.oracle.com/javase/7/docs/api/javax/net/ssl/X509ExtendedTrustManager.html" class="external-link" target="_blank" rel="nofollow noopener">X509ExtendedTrustManager</a> hence the reason for ZKX509TrustManager class and its helpers.</li> <li>Hostname verification will need hostname to be supplied at SSLEngine creation time if reverse DNS lookup is not desired. I do not have this either.</li> </ul> <p>Some more risks from my patch:</p> <ul> <li>Modifying the code paths for client to server ssl. I have ensured that these tests work. More testing might be needed.</li> <li>Risk of using X509ExtendedTrustManager, did we miss any checks that are done by the default Trustmanager that was used before.</li> <li>Lack of upgrade path, I like the idea of new nodes optionally supporting sockets that support both plain and ssl connections.</li> </ul> <p>To make my patch more complete I need to continue to write more unit tests specially testing quorum bootstrap with and without SSL and tests for ZKX509TrustManager, have already build tools for that.I have ported some from Netty Trunk work and I could port more to get those going.</p> <p>thanks<br/> Powell.</p></comment>
<comment id="15906877" author="hadoopqa" created="Mon, 13 Mar 2017 05:02:58 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 54 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> -1 release audit. The applied patch generated 2 release audit warnings (more than the trunk's current 0 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/406//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/406//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/406//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/406//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/406//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/406//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/406//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/406//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15923591" author="abrahamfine" created="Tue, 14 Mar 2017 05:12:56 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <blockquote><p>Need for separate SSL config for client to server and quorum peer to quorum peer. Changes to X509Util and ZKConfig are for this.</p></blockquote> <p>Totally agree.</p> <blockquote><p>Need for Hostname verification and CRL lists at-least for quorum peer to quorum peer SSL would mean that we will need X509ExtendedTrustManager hence the reason for ZKX509TrustManager class and its helpers.</p></blockquote> <p>I'm not sure I agree with this one. I uploaded a new commit on my pr showing that hostname verification can be implemented outside of the trust manager (since hostname verification is not part of ssl). I think that is easier this way because we often do not know which zookeeper sid is connecting until some information is transferred. In addition, I thought CRL is implemented completely outside of application logic (see: <a href="http://stackoverflow.com/questions/8506661/check-x509-certificate-revocation-status-in-spring-security-before-authenticatin/8507905#8507905" class="external-link" target="_blank" rel="nofollow noopener">http://stackoverflow.com/questions/8506661/check-x509-certificate-revocation-status-in-spring-security-before-authenticatin/8507905#8507905</a>), I could be very wrong though. Still need to test this.</p> <blockquote><p>Hostname verification will need hostname to be supplied at SSLEngine creation time if reverse DNS lookup is not desired. I do not have this either.</p></blockquote> <p>For client lt;-gt; server I think this is true. We could move this into another patch as this is outside that would be outside the scope of the JIRA.</p> <p>Please take a look at my latest changes and let me know what you think. I still have not implemented separating the client and server configurations. That should be coming soon.</p> <p>Thanks,<br/> Abe</p></comment>
<comment id="15923656" author="hadoopqa" created="Tue, 14 Mar 2017 06:27:04 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 54 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> -1 release audit. The applied patch generated 2 release audit warnings (more than the trunk's current 0 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/411//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/411//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/411//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/411//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/411//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/411//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/411//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/411//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15925185" author="abrahamfine" created="Tue, 14 Mar 2017 22:39:12 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a> my latest commit includes certificate revocation support. let me know if it behaves the way you would like it to.</p> <p>Abe</p></comment>
<comment id="15926499" author="geek101" created="Wed, 15 Mar 2017 16:27:08 +0000"><p>Hi Abe,</p> <p>Few comments about the changes:</p> <p>One way to go is to minimize changes to Leader.java, Follower.java, Learner.java etc. This will help anyone who wants to abstract away sockets from that code. Let me know what you think.</p> <p>Regarding host verification one other way to go is to follow this:<br/> <a href="http://docs.oracle.com/javase/7/docs/technotes/guides/security/jsse/JSSERefGuide.html#X509ExtendedTrustManager" class="external-link" target="_blank" rel="nofollow noopener">X509ExtendedTrustManager</a> mentions about where to plugin host verification , it specifically quotes:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> Besides TLS 1.2 support, the X509ExtendedTrustManager class also support algorithm constraints and SSL layer hostname verification. For JSSE providers and trust manager implementations, the X509ExtendedTrustManager class is highly recommended rather than the legacy X509TrustManager interface. </pre> </div></div> <p>It is possible to argue that thought TLS does not perform host verification I do not think it mentions this should be not be done at cert verification time nor should we allow exchange of application bits when the certificate is not what we expected it to be. </p> <p>It is possible to minimize risk by extending X509ExtendedTrustManager and calling default TrustManager's API first and then performing extra checks. Something like a composite X509TrustManager. This will also help others add to the list of checks in one place and all of this could be conditional based on options passed.</p> <p>I am fine with either OSCP or CRL verification as long as the admin is aware of how this affects the latency of session setup and reliability of the Quorum since they are all perhaps talking to one entity(hopefully not) for this to work.</p> <p>Also I noticed the <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2184" title="Zookeeper Client should re-resolve hosts when connection attempts fail" class="issue-link" data-issue-key="ZOOKEEPER-2184"><del>ZOOKEEPER-2184</del></a> could be addressed by some of my plumbing changes that pass the configured hostname around along with the resolved ip address. Hence avoiding reverse DNS lookups when hostname is provided at config time etc. </p> <p>It is best to combine the PRs into one so we can collaborate and increase the velocity. We should agree on few things, I would like to suggest that we use X509ExtendedTrustManager and also minimize the amount of changes and maintain compatibility for client - server, I would like to keep the BC helper code in unit tests and the unit tests. I lean towards just changing Socket() calls to something else but not adding any more code to Leader.java, Follower.java, Learner.java etc.</p> <p>Let me know what you prefer.<br/> thanks<br/> Powell.</p></comment>
<comment id="15926674" author="abrahamfine" created="Wed, 15 Mar 2017 18:08:25 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <blockquote><p>One way to go is to minimize changes to Leader.java, Follower.java, Learner.java etc</p></blockquote> <p>I agree. That will make understanding those classes much easier</p> <blockquote><p>I do not think it mentions this should be not be done at cert verification time nor should we allow exchange of application bits when the certificate is not what we expected it to be.</p></blockquote> <p>So the issue is more zookeeper specific I think. Imagine the case where, and I know this is very contrived but I think the principal is valid, we have 3 zk servers all running on the same host with different ports. We have 3 dns records pointing to this machine with different names, say zk1, zk2, and zk3. Each zkX has a certificate with the zkX common name. Our zookeeper configuration identifies these servers by the correct name server.1=zk1... When one of these servers connects to the server socket on the other I do not think it is possible for the "server" to tell which zkX connected until the sid is read from the socket unless we want to start doing reverse dns lookups. I would rather just use the hostname we already know about. That is why I think we cannot do hostname verification in the trust manager. Or you could argue that we only need hostname verification for the "client", but I would rather have it both ways. Please let me know if I am missing something.</p> <blockquote><p>I am fine with either OSCP or CRL verification as long as the admin is aware of how this affects the latency of session setup and reliability of the Quorum since they are all perhaps talking to one entity(hopefully not) for this to work.</p></blockquote> <p>I agree. We need to document this drawbacks clearly.</p> <blockquote><p>Also I noticed the <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2184" title="Zookeeper Client should re-resolve hosts when connection attempts fail" class="issue-link" data-issue-key="ZOOKEEPER-2184"><del>ZOOKEEPER-2184</del></a> could be addressed by some of my plumbing changes that pass the configured hostname around along with the resolved ip address. </p></blockquote> <p>There is an active PR for this so I don't think we need to address it in this patch.</p> <blockquote><p>It is best to combine the PRs into one so we can collaborate and increase the velocity.</p></blockquote> <p>I agree.</p> <blockquote><p>I would like to suggest that we use X509ExtendedTrustManager</p></blockquote> <p>If the concerns I listed above with hostname verification can be addressed I would be open to this.</p> <blockquote><p>I would like to keep the BC helper code</p></blockquote> <p>What do you mean by bc helper code?</p> <blockquote><p>I lean towards just changing Socket() calls to something else but not adding any more code to Leader.java, Follower.java, Learner.java etc.</p></blockquote> <p>Sounds like a good idea. Once we get the implementation details flushed out there will be plenty of refactoring to clean this stuff up.</p> <p>Thanks,<br/> Abe</p> </comment>
<comment id="15927528" author="geek101" created="Thu, 16 Mar 2017 05:37:43 +0000"><p>Hi Abe,</p> <blockquote> <blockquote><p>I do not think it mentions this should be not be done at cert verification time nor should we allow exchange of application bits when the certificate is not what we expected it to be.</p></blockquote> <p>So the issue is more zookeeper specific I think. Imagine the case where, and I know this is very contrived but I think the principal is valid, we have 3 zk servers all running on the same host with different ports. We have 3 dns records pointing to this machine with different names, say zk1, zk2, and zk3. Each zkX has a certificate with the zkX common name. Our zookeeper configuration identifies these servers by the correct name server.1=zk1... When one of these servers connects to the server socket on the other I do not think it is possible for the "server" to tell which zkX connected until the sid is read from the socket unless we want to start doing reverse dns lookups. I would rather just use the hostname we already know about. That is why I think we cannot do hostname verification in the trust manager. Or you could argue that we only need hostname verification for the "client", but I would rather have it both ways. Please let me know if I am missing something.</p></blockquote> <p>If multiple servers have certs with the same subjectAltName entry of type dNSName and that is indeed is how the CA signed them then it should be ok from TLS perspective, since we trust the CA, we trust any server signed by the CA and we match the hostname(i.e we trust DNS lookup or we trust the config provided). We do not have to verify the specific host since it is sufficient to verify that it is one of the valid hosts, this is secure.</p> <p>Take a case where if someone can subvert the CA get signed by it for the same domain and subvert DNS then they might as well try few sids starting from zero before ZK lets the server connect.</p> <p>Hostname verification does not apply to self-signed certs. I am quite skeptical about the need for hostname verification in private CA (enterprise setting) too. We should probably have it off by default and let the admin turn it on.</p> <blockquote> <blockquote><p>I would like to keep the BC helper code</p></blockquote> <p>What do you mean by bc helper code?</p></blockquote> <p>BC is bouncy castle.</p> <p>Also wanted to ask you if we could make the all sockets BufferedSocket by default rather then making that conditional on port unification configuration.</p> <p>I need to restore backward compatibility to X509Util, I removed the public statics that were marked deprecated, probably cannot do that just yet?.</p> <p>thanks<br/> Powell.</p></comment>
<comment id="15929080" author="abrahamfine" created="Thu, 16 Mar 2017 22:52:11 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <blockquote><p>If multiple servers have certs with the same subjectAltName entry of type dNSName and that is indeed is how the CA signed them then it should be ok from TLS perspective</p></blockquote> <p>I agree that at least one of the alt_names needs to match the host from configuration (not all of them). </p> <blockquote><p>Take a case where if someone can subvert the CA get signed by it for the same domain and subvert DNS then they might as well try few sids starting from zero before ZK lets the server connect.</p></blockquote> <p>If the CA is subverted (certificates are being issued for servers for domains not under their control) and the name service is subverted, hostname verification of any kind can't work. Either the CA or the NS (dns or the zk config) needs to have integrity. But I think you raise an interesting issue where a client can just try multiple id's when connecting to another server until it matches the one on its (lets assume stolen) certificate. I did not consider that. Let me dig into this a little deeper and see if I can get a better idea of what is going on.</p> <blockquote><p>We should probably have it off by default and let the admin turn it on.</p></blockquote> <p>The latest patch has this behavior.</p> <blockquote><p>Also wanted to ask you if we could make the all sockets BufferedSocket by default rather then making that conditional on port unification configuration.</p></blockquote> <p>Why would we want to do this? I think there is a small performance hit involved. </p></comment>
<comment id="15930825" author="abrahamfine" created="Fri, 17 Mar 2017 22:19:06 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <blockquote><p>Regarding host verification one other way to go is to follow this: X509ExtendedTrustManager mentions about where to plugin host verification , it specifically quotes:</p></blockquote> <p>Let me know if this is what you had in mind. We do not need to subclass `X509ExtendedTrustManager` ourselves to get this to work, since the `X509TrustManagerImpl` object generated by the PKIX trustmanager factory (and x509 as well I think) extends `X509ExtendedTrustManager` already. If endpoint verification is set on the sslParameters of the sslSocket we get endpoint verification for free in `X509ExtendedTrustManager`. The issue is that we are limited to the built in implementations of endpoint verification but I think the "https" algorithm is sufficient for our use case.</p> <p>I implemented this here: <a href="https://github.com/apache/zookeeper/pull/184/commits/bebe09660f652f243e746905460ecbdffe2d155e" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184/commits/bebe09660f652f243e746905460ecbdffe2d155e</a></p></comment>
<comment id="15931073" author="geek101" created="Sat, 18 Mar 2017 05:35:50 +0000"><p>Hi Abe,</p> <p>Not sure that will work, I think SSL engine will need the the hostname set for this to work. Since server cannot know which client will connect it cannot use this mechanism I believe. This was meant for client side only. </p> <p>thanks<br/> Powell.</p></comment>
<comment id="15933762" author="abrahamfine" created="Mon, 20 Mar 2017 22:54:26 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <p>You are correct. Apparently java doesn't do a reverse dns lookup by default. I had the IP address to be included as a subjectAltName of the client's certificate, so I didn't notice this failure. So I pushed an update with a subclass to <tt>X509ExtendedTrustManager</tt>:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> <span class="code-keyword">for</span> (<span class="code-keyword">final</span> TrustManager tm : tmf.getTrustManagers()) { <span class="code-keyword">if</span> (tm <span class="code-keyword">instanceof</span> X509TrustManager) { <span class="code-keyword">return</span> <span class="code-keyword">new</span> X509ExtendedTrustManager() { HostnameChecker hostnameChecker = HostnameChecker.getInstance(HostnameChecker.TYPE_TLS); @Override <span class="code-keyword">public</span> X509Certificate[] getAcceptedIssuers() { <span class="code-keyword">return</span> ((X509ExtendedTrustManager) tm).getAcceptedIssuers(); } @Override <span class="code-keyword">public</span> void checkClientTrusted(X509Certificate[] x509Certificates, <span class="code-object">String</span> s, Socket socket) <span class="code-keyword">throws</span> CertificateException { hostnameChecker.match(socket.getInetAddress().getHostName(), x509Certificates[0]); ((X509ExtendedTrustManager) tm).checkClientTrusted(x509Certificates, s, socket); } @Override <span class="code-keyword">public</span> void checkServerTrusted(X509Certificate[] x509Certificates, <span class="code-object">String</span> s, Socket socket) <span class="code-keyword">throws</span> CertificateException { hostnameChecker.match(((SSLSocket) socket).getHandshakeSession().getPeerHost(), x509Certificates[0]); ((X509ExtendedTrustManager) tm).checkServerTrusted(x509Certificates, s, socket); } </pre> </div></div> <p>We do a reverse dns lookup when a client is connecting to the server. This works. The primary issue I see is that import sun.security.util.HostnameChecker is proprietary and throws a compile warning.</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> [javac] /Users/abefine/cloudera_code/zookeeper/src/java/main/org/apache/zookeeper/common/X509Util.java:26: warning: HostnameChecker is internal proprietary API and may be removed in a <span class="code-keyword">future</span> release [javac] <span class="code-keyword">import</span> sun.security.util.HostnameChecker; </pre> </div></div> <p>I'm not sure if it is the preference of the community to copy the code contained in HostnameChecker, add a dependency with similar functionality, or leave it as is. The issue is described clearly here <a href="https://kevinlocke.name/bits/2012/10/03/ssl-certificate-verification-in-dispatch-and-asynchttpclient/:" class="external-link" target="_blank" rel="nofollow noopener">https://kevinlocke.name/bits/2012/10/03/ssl-certificate-verification-in-dispatch-and-asynchttpclient/:</a></p> <blockquote> <p>To make matters worse, the check is not trivial (consider SAN and wildcard matching) and is implemented in sun.security.util.HostnameChecker (a Sun internal proprietary API). This leaves the developer in the position of either depending on an internal API or finding/copying/creating another implementation of this functionality. For the examples in this article, I have opted for the first option.</p></blockquote> <p>Thanks,<br/> Abe</p></comment>
<comment id="15941170" author="abrahamfine" created="Fri, 24 Mar 2017 21:28:34 +0000"><p>I found that org.apache.httpcomponents.httpclient has org.apache.http.conn.ssl.DefaultHostnameVerifier which should serve our purposes well.</p></comment>
<comment id="15948366" author="githubbot" created="Thu, 30 Mar 2017 03:43:20 +0000"><p>Github user geek101 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r108835534" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r108835534</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -214,45 +237,56 @@ public static X509TrustManager createTrustManager(String trustStoreLocation, Str<br/> tmf.init(new CertPathTrustManagerParameters(pbParams));</p> <p> for (final TrustManager tm : tmf.getTrustManagers()) {</p> <ul class="alternate" type="square"> <li>if (tm instanceof X509TrustManager) {<br/> + if (tm instanceof X509ExtendedTrustManager) {<br/> return new X509ExtendedTrustManager() {</li> <li>HostnameChecker hostnameChecker = HostnameChecker.getInstance(HostnameChecker.TYPE_TLS);<br/> + X509ExtendedTrustManager x509ExtendedTrustManager = (X509ExtendedTrustManager) tm;<br/> + HostnameVerifier hostnameVerifier = new DefaultHostnameVerifier();</li> </ul> <p> @Override<br/> public X509Certificate[] getAcceptedIssuers() </p> { - return ((X509ExtendedTrustManager) tm).getAcceptedIssuers(); + return x509ExtendedTrustManager.getAcceptedIssuers(); } <p> @Override</p> <ul class="alternate" type="square"> <li>public void checkClientTrusted(X509Certificate[] x509Certificates, String s, Socket socket) throws CertificateException {</li> <li>hostnameChecker.match(socket.getInetAddress().getHostName(), x509Certificates<span class="error">#91;0#93;</span>);</li> <li>((X509ExtendedTrustManager) tm).checkClientTrusted(x509Certificates, s, socket);<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) {<br/> + hostnameVerifier.verify(socket.getInetAddress().getHostName(), ((SSLSocket) socket).getSession()); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Will the hostname be available on the server side to verify?. How will the server know who this client is, one way is to implement a special HostnameVerifier that can be provide a set of peer hostnames or refer back to QuorumPeer to verify using the QuorumVerifier?.</p></comment>
<comment id="15948367" author="githubbot" created="Thu, 30 Mar 2017 03:43:26 +0000"><p>Github user geek101 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r108835547" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r108835547</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -214,45 +237,56 @@ public static X509TrustManager createTrustManager(String trustStoreLocation, Str<br/> tmf.init(new CertPathTrustManagerParameters(pbParams));</p> <p> for (final TrustManager tm : tmf.getTrustManagers()) {</p> <ul class="alternate" type="square"> <li>if (tm instanceof X509TrustManager) {<br/> + if (tm instanceof X509ExtendedTrustManager) {<br/> return new X509ExtendedTrustManager() {</li> <li>HostnameChecker hostnameChecker = HostnameChecker.getInstance(HostnameChecker.TYPE_TLS);<br/> + X509ExtendedTrustManager x509ExtendedTrustManager = (X509ExtendedTrustManager) tm; <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Do you think extending X509ExtendedTrustManager outside will help us test it better?.</p></comment>
<comment id="15948383" author="geek101" created="Thu, 30 Mar 2017 04:05:01 +0000"><p>Hi Abe, <br/> I have added my comments on PR directly. We could table the hostname verification for next iteration of SSL support to move forward if required. For server to server SSL I think this is useful but will need help from QuorumPeer. Also for server to client SSL this is most likely not used. Performing a reverse DNS lookup to verify will mean that there is implicit trust for this, if customers provide just hostnames(or IPs) then that is the basis for trust and DNS reverse lookup might not be. </p> <p>Let me know what you think.</p> <p>Cheers.<br/> Powell.</p></comment>
<comment id="15951741" author="abrahamfine" created="Fri, 31 Mar 2017 22:47:53 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=geek101" class="user-hover" rel="geek101">Powell Molleti</a>-</p> <p>So I think it would be tough to table Hostname Verification as without it I think we are left with something relatively insecure.</p> <p>So if customers provide IPs alternative names can be specified as IPs so hostname verification should still work. DNS requires a reverse lookup, but I think that is fine if users are choosing to rely on DNS.</p> <p>I uploaded a new revision with some integration style tests. I know I still need to add tests for OCSP. The tests still require plenty of refactoring and the timeout is way to long, but they are working. Let me know what additional tests we should add.</p> <p>Abe</p></comment>
<comment id="15951745" author="githubbot" created="Fri, 31 Mar 2017 22:50:34 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r109263498" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r109263498</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -214,45 +237,56 @@ public static X509TrustManager createTrustManager(String trustStoreLocation, Str<br/> tmf.init(new CertPathTrustManagerParameters(pbParams));</p> <p> for (final TrustManager tm : tmf.getTrustManagers()) {</p> <ul class="alternate" type="square"> <li>if (tm instanceof X509TrustManager) {<br/> + if (tm instanceof X509ExtendedTrustManager) {<br/> return new X509ExtendedTrustManager() {</li> <li>HostnameChecker hostnameChecker = HostnameChecker.getInstance(HostnameChecker.TYPE_TLS);<br/> + X509ExtendedTrustManager x509ExtendedTrustManager = (X509ExtendedTrustManager) tm;<br/> + HostnameVerifier hostnameVerifier = new DefaultHostnameVerifier();</li> </ul> <p> @Override<br/> public X509Certificate[] getAcceptedIssuers() </p> { - return ((X509ExtendedTrustManager) tm).getAcceptedIssuers(); + return x509ExtendedTrustManager.getAcceptedIssuers(); } <p> @Override</p> <ul class="alternate" type="square"> <li>public void checkClientTrusted(X509Certificate[] x509Certificates, String s, Socket socket) throws CertificateException {</li> <li>hostnameChecker.match(socket.getInetAddress().getHostName(), x509Certificates<span class="error">#91;0#93;</span>);</li> <li>((X509ExtendedTrustManager) tm).checkClientTrusted(x509Certificates, s, socket);<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) {<br/> + hostnameVerifier.verify(socket.getInetAddress().getHostName(), ((SSLSocket) socket).getSession()); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Yes, the reverse dns lookup is done on the performHostnameVerification... line</p></comment>
<comment id="15951754" author="githubbot" created="Fri, 31 Mar 2017 22:53:50 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r109263833" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r109263833</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -214,45 +237,56 @@ public static X509TrustManager createTrustManager(String trustStoreLocation, Str<br/> tmf.init(new CertPathTrustManagerParameters(pbParams));</p> <p> for (final TrustManager tm : tmf.getTrustManagers()) {</p> <ul class="alternate" type="square"> <li>if (tm instanceof X509TrustManager) {<br/> + if (tm instanceof X509ExtendedTrustManager) {<br/> return new X509ExtendedTrustManager() {</li> <li>HostnameChecker hostnameChecker = HostnameChecker.getInstance(HostnameChecker.TYPE_TLS);<br/> + X509ExtendedTrustManager x509ExtendedTrustManager = (X509ExtendedTrustManager) tm; <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Not sure yet. The createTrustManager method might give us all the exposure to this implementation that we need. I think this will become more obvious as we begin expanding the tests.</p></comment>
<comment id="15951776" author="hadoopqa" created="Fri, 31 Mar 2017 23:10:31 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 37 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 3 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/493//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/493//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/493//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/493//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/493//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/493//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15954507" author="hadoopqa" created="Tue, 4 Apr 2017 03:15:50 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 37 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 3 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/500//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/500//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/500//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/500//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/500//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/500//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15954522" author="hadoopqa" created="Tue, 4 Apr 2017 03:41:57 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 37 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 4 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/501//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/501//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/501//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/501//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/501//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/501//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15958099" author="githubbot" created="Thu, 6 Apr 2017 00:32:16 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110057806" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110057806</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509UtilTest.java #8212;<br/> @@ -0,0 +1,231 @@<br/> +/**<br/> #8212; End diff #8211;</p> <p> This is supposed to be a test file, right? If so, test file should be under src/test folder. Does this even build?</p></comment>
<comment id="15958104" author="githubbot" created="Thu, 6 Apr 2017 00:33:58 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110057980" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110057980</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509UtilTest.java #8212;<br/> @@ -0,0 +1,231 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + *<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + *<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.common;<br/> +<br/> +import org.apache.zookeeper.ZKTestCase;<br/> +import org.apache.zookeeper.client.ZKClientConfig;<br/> +import org.apache.zookeeper.server.ServerCnxnFactory;<br/> +import org.bouncycastle.asn1.x500.X500NameBuilder;<br/> +import org.bouncycastle.asn1.x500.style.BCStyle;<br/> +import org.bouncycastle.asn1.x509.BasicConstraints;<br/> +import org.bouncycastle.asn1.x509.Extension;<br/> +import org.bouncycastle.asn1.x509.KeyUsage;<br/> +import org.bouncycastle.cert.X509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateConverter;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder;<br/> +import org.bouncycastle.jce.provider.BouncyCastleProvider;<br/> +import org.bouncycastle.operator.ContentSigner;<br/> +import org.bouncycastle.operator.jcajce.JcaContentSignerBuilder;<br/> +import org.junit.After;<br/> +import org.junit.AfterClass;<br/> +import org.junit.Assert;<br/> +import org.junit.Before;<br/> +import org.junit.BeforeClass;<br/> +import org.junit.Test;<br/> +<br/> +import javax.net.ssl.SSLContext;<br/> +import javax.net.ssl.SSLSocket;<br/> +import java.io.FileOutputStream;<br/> +import java.math.BigInteger;<br/> +import java.security.KeyPair;<br/> +import java.security.KeyPairGenerator;<br/> +import java.security.KeyStore;<br/> +import java.security.Security;<br/> +import java.security.cert.Certificate;<br/> +import java.security.cert.X509Certificate;<br/> +import java.util.Calendar;<br/> +import java.util.Date;<br/> +import java.util.Random;<br/> +<br/> +import static org.apache.zookeeper.test.ClientBase.createTmpDir;<br/> +<br/> +public class X509UtilTest extends ZKTestCase {<br/> +<br/> + private static final char[] PASSWORD = "password".toCharArray();<br/> + private X509Certificate rootCertificate;<br/> +<br/> + private String truststorePath;<br/> + private String keystorePath;<br/> + private static KeyPair rootKeyPair;<br/> +<br/> + private X509Util x509Util;<br/> +<br/> + @BeforeClass<br/> + public static void createKeyPair() throws Exception </p> { + Security.addProvider(new BouncyCastleProvider()); + KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA", BouncyCastleProvider.PROVIDER_NAME); + keyPairGenerator.initialize(4096); + rootKeyPair = keyPairGenerator.genKeyPair(); + } <p> +<br/> + @AfterClass<br/> + public static void removeBouncyCastleProvider() throws Exception </p> { + Security.removeProvider("BC"); + } <p> +<br/> + @Before<br/> + public void setUp() throws Exception </p> { + rootCertificate = createSelfSignedCertifcate(rootKeyPair); + + String tmpDir = createTmpDir().getAbsolutePath(); + truststorePath = tmpDir + "/truststore.jks"; + keystorePath = tmpDir + "/keystore.jks"; + + x509Util = new ClientX509Util(); + + writeKeystore(rootCertificate, rootKeyPair, keystorePath); + + System.setProperty(ServerCnxnFactory.ZOOKEEPER_SERVER_CNXN_FACTORY, "org.apache.zookeeper.server.NettyServerCnxnFactory"); + System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, "org.apache.zookeeper.ClientCnxnSocketNetty"); + System.setProperty(x509Util.getSslKeystoreLocationProperty(), keystorePath); + System.setProperty(x509Util.getSslKeystorePasswdProperty(), new String(PASSWORD)); + System.setProperty(x509Util.getSslTruststoreLocationProperty(), truststorePath); + System.setProperty(x509Util.getSslTruststorePasswdProperty(), new String(PASSWORD)); + System.setProperty(x509Util.getSslHostnameVerificationEnabledProperty(), "false"); + + writeTrustStore(PASSWORD); + } <p> +<br/> + private void writeKeystore(X509Certificate certificate, KeyPair keyPair, String path) throws Exception {<br/> + KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());<br/> + keyStore.load(null, PASSWORD);<br/> + keyStore.setKeyEntry("alias", keyPair.getPrivate(), PASSWORD, new Certificate[] </p> { certificate } <p>);<br/> + FileOutputStream outputStream = new FileOutputStream(path);<br/> + keyStore.store(outputStream, PASSWORD);<br/> + outputStream.flush();<br/> + outputStream.close();<br/> + }<br/> +<br/> + private void writeTrustStore(char[] password) throws Exception {<br/> + KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());<br/> + trustStore.load(null, password);<br/> + trustStore.setCertificateEntry(rootCertificate.getSubjectDN().toString(), rootCertificate);<br/> + FileOutputStream outputStream = new FileOutputStream(truststorePath);<br/> + if (password == null) </p> { + trustStore.store(outputStream, new char[0]); + } <p> else </p> { + trustStore.store(outputStream, password); + } <p> + outputStream.flush();<br/> + outputStream.close();<br/> + }<br/> +<br/> + private X509Certificate createSelfSignedCertifcate(KeyPair keyPair) throws Exception </p> { + X500NameBuilder nameBuilder = new X500NameBuilder(BCStyle.INSTANCE); + nameBuilder.addRDN(BCStyle.CN, "localhost"); + Date notBefore = new Date(); // time from which certificate is valid + Calendar cal = Calendar.getInstance(); + cal.setTime(notBefore); + cal.add(Calendar.YEAR, 1); + Date notAfter = cal.getTime(); + BigInteger serialNumber = new BigInteger(128, new Random()); + + X509v3CertificateBuilder certificateBuilder = + new JcaX509v3CertificateBuilder(nameBuilder.build(), serialNumber, notBefore, notAfter, nameBuilder.build(), keyPair.getPublic()) + .addExtension(Extension.basicConstraints, true, new BasicConstraints(0)) + .addExtension(Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyCertSign | KeyUsage.cRLSign)); + + ContentSigner contentSigner = new JcaContentSignerBuilder("SHA256WithRSAEncryption").build(keyPair.getPrivate()); + + return new JcaX509CertificateConverter().getCertificate(certificateBuilder.build(contentSigner)); + } <p> +<br/> + @After<br/> + public void cleanUp() throws Exception </p> { + System.clearProperty(x509Util.getSslKeystoreLocationProperty()); + System.clearProperty(x509Util.getSslKeystorePasswdProperty()); + System.clearProperty(x509Util.getSslTruststoreLocationProperty()); + System.clearProperty(x509Util.getSslTruststorePasswdProperty()); + System.clearProperty(x509Util.getSslHostnameVerificationEnabledProperty()); + System.clearProperty(x509Util.getSslOcspEnabledProperty()); + System.clearProperty(x509Util.getSslCrlEnabledProperty()); + System.clearProperty("com.sun.net.ssl.checkRevocation"); + System.clearProperty("com.sun.security.enableCRLDP"); + Security.setProperty("com.sun.security.enableCRLDP", "false"); + } <p> +<br/> + @Test<br/> #8212; End diff #8211;</p> <p> Just in case if any of these test method run for a long time (which I doubt) then it'll be good to specify a timeout value annotation.</p></comment>
<comment id="15958127" author="githubbot" created="Thu, 6 Apr 2017 01:03:13 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110060745" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110060745</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Observer.java #8212;<br/> @@ -63,10 +63,10 @@ void observeLeader() throws Exception {<br/> zk.registerJMX(new ObserverBean(this, zk), self.jmxLocalPeerBean);</p> <p> try {</p> <ul class="alternate" type="square"> <li>InetSocketAddress addr = findLeader(); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> I am not sure what this change of addr from type InetSocketAddress to QuorumServer is for. I may miss something though.</p></comment>
<comment id="15958128" author="githubbot" created="Thu, 6 Apr 2017 01:06:00 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110060990" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110060990</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java #8212;<br/> @@ -193,21 +198,18 @@ void request(Request request) throws IOException {<br/> /**</p> <ul> <li>Returns the address of the node we think is the leader.<br/> */</li> </ul> <ul class="alternate" type="square"> <li>protected InetSocketAddress findLeader() {<br/> + protected QuorumServer findLeader() { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Not sure why findLeader is returning a QuorumServer instead of InetSocketAddress? </p></comment>
<comment id="15958130" author="githubbot" created="Thu, 6 Apr 2017 01:07:03 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110061068" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110061068</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java #8212;<br/> @@ -253,7 +255,10 @@ protected void connectToLeader(InetSocketAddress addr)<br/> throw new IOException("initLimit exceeded on retries.");<br/> }</p> <ul class="alternate" type="square"> <li>sockConnect(sock, addr, Math.min(self.tickTime * self.syncLimit, remainingInitLimitTime));<br/> + sockConnect(sock, leader.addr, Math.min(self.tickTime * self.syncLimit, remainingInitLimitTime)); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> leader could be null in leader.addr right? Still wondering why change the leader type from an address to a QuorumServer.</p></comment>
<comment id="15958133" author="githubbot" created="Thu, 6 Apr 2017 01:09:14 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110061229" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110061229</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java #8212;<br/> @@ -230,15 +232,15 @@ protected void sockConnect(Socket sock, InetSocketAddress addr, int timeout)<br/> /**</p> <ul> <li>Establish a connection with the Leader found by findLeader. Retries</li> <li>until either initLimit time has elapsed or 5 tries have happened.</li> </ul> <ul class="alternate" type="square"> <li>* @param addr - the address of the Leader to connect to.<br/> + * @param leader - the QuorumServer elected leader</li> </ul> <ul> <li>@throws IOException - if the socket connection fails on the 5th attempt</li> <li>@throws ConnectException</li> <li>@throws InterruptedException<br/> */</li> </ul> <ul class="alternate" type="square"> <li>protected void connectToLeader(InetSocketAddress addr)</li> <li>throws IOException, ConnectException, InterruptedException {</li> <li>sock = new Socket();</li> <li>sock.setSoTimeout(self.tickTime * self.initLimit);<br/> + protected void connectToLeader(QuorumServer leader)<br/> + throws IOException, InterruptedException, X509Exception {<br/> + QuorumX509Util quorumX509Util = new QuorumX509Util(); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> We now create QuorumX509Util whenever connectToLeader is called, even if ssl is not enabled. Could this be improved so the SSL related code path is only involved when ssl is enabled?</p></comment>
<comment id="15958183" author="githubbot" created="Thu, 6 Apr 2017 02:27:34 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110068698" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110068698</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509UtilTest.java #8212;<br/> @@ -0,0 +1,231 @@<br/> +/**<br/> #8212; End diff #8211;</p> <p> Whoops... Fixed.</p></comment>
<comment id="15958186" author="githubbot" created="Thu, 6 Apr 2017 02:28:25 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110068782" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110068782</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509UtilTest.java #8212;<br/> @@ -0,0 +1,231 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + *<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + *<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.common;<br/> +<br/> +import org.apache.zookeeper.ZKTestCase;<br/> +import org.apache.zookeeper.client.ZKClientConfig;<br/> +import org.apache.zookeeper.server.ServerCnxnFactory;<br/> +import org.bouncycastle.asn1.x500.X500NameBuilder;<br/> +import org.bouncycastle.asn1.x500.style.BCStyle;<br/> +import org.bouncycastle.asn1.x509.BasicConstraints;<br/> +import org.bouncycastle.asn1.x509.Extension;<br/> +import org.bouncycastle.asn1.x509.KeyUsage;<br/> +import org.bouncycastle.cert.X509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateConverter;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder;<br/> +import org.bouncycastle.jce.provider.BouncyCastleProvider;<br/> +import org.bouncycastle.operator.ContentSigner;<br/> +import org.bouncycastle.operator.jcajce.JcaContentSignerBuilder;<br/> +import org.junit.After;<br/> +import org.junit.AfterClass;<br/> +import org.junit.Assert;<br/> +import org.junit.Before;<br/> +import org.junit.BeforeClass;<br/> +import org.junit.Test;<br/> +<br/> +import javax.net.ssl.SSLContext;<br/> +import javax.net.ssl.SSLSocket;<br/> +import java.io.FileOutputStream;<br/> +import java.math.BigInteger;<br/> +import java.security.KeyPair;<br/> +import java.security.KeyPairGenerator;<br/> +import java.security.KeyStore;<br/> +import java.security.Security;<br/> +import java.security.cert.Certificate;<br/> +import java.security.cert.X509Certificate;<br/> +import java.util.Calendar;<br/> +import java.util.Date;<br/> +import java.util.Random;<br/> +<br/> +import static org.apache.zookeeper.test.ClientBase.createTmpDir;<br/> +<br/> +public class X509UtilTest extends ZKTestCase {<br/> +<br/> + private static final char[] PASSWORD = "password".toCharArray();<br/> + private X509Certificate rootCertificate;<br/> +<br/> + private String truststorePath;<br/> + private String keystorePath;<br/> + private static KeyPair rootKeyPair;<br/> +<br/> + private X509Util x509Util;<br/> +<br/> + @BeforeClass<br/> + public static void createKeyPair() throws Exception </p> { + Security.addProvider(new BouncyCastleProvider()); + KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA", BouncyCastleProvider.PROVIDER_NAME); + keyPairGenerator.initialize(4096); + rootKeyPair = keyPairGenerator.genKeyPair(); + } <p> +<br/> + @AfterClass<br/> + public static void removeBouncyCastleProvider() throws Exception </p> { + Security.removeProvider("BC"); + } <p> +<br/> + @Before<br/> + public void setUp() throws Exception </p> { + rootCertificate = createSelfSignedCertifcate(rootKeyPair); + + String tmpDir = createTmpDir().getAbsolutePath(); + truststorePath = tmpDir + "/truststore.jks"; + keystorePath = tmpDir + "/keystore.jks"; + + x509Util = new ClientX509Util(); + + writeKeystore(rootCertificate, rootKeyPair, keystorePath); + + System.setProperty(ServerCnxnFactory.ZOOKEEPER_SERVER_CNXN_FACTORY, "org.apache.zookeeper.server.NettyServerCnxnFactory"); + System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, "org.apache.zookeeper.ClientCnxnSocketNetty"); + System.setProperty(x509Util.getSslKeystoreLocationProperty(), keystorePath); + System.setProperty(x509Util.getSslKeystorePasswdProperty(), new String(PASSWORD)); + System.setProperty(x509Util.getSslTruststoreLocationProperty(), truststorePath); + System.setProperty(x509Util.getSslTruststorePasswdProperty(), new String(PASSWORD)); + System.setProperty(x509Util.getSslHostnameVerificationEnabledProperty(), "false"); + + writeTrustStore(PASSWORD); + } <p> +<br/> + private void writeKeystore(X509Certificate certificate, KeyPair keyPair, String path) throws Exception {<br/> + KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());<br/> + keyStore.load(null, PASSWORD);<br/> + keyStore.setKeyEntry("alias", keyPair.getPrivate(), PASSWORD, new Certificate[] </p> { certificate } <p>);<br/> + FileOutputStream outputStream = new FileOutputStream(path);<br/> + keyStore.store(outputStream, PASSWORD);<br/> + outputStream.flush();<br/> + outputStream.close();<br/> + }<br/> +<br/> + private void writeTrustStore(char[] password) throws Exception {<br/> + KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());<br/> + trustStore.load(null, password);<br/> + trustStore.setCertificateEntry(rootCertificate.getSubjectDN().toString(), rootCertificate);<br/> + FileOutputStream outputStream = new FileOutputStream(truststorePath);<br/> + if (password == null) </p> { + trustStore.store(outputStream, new char[0]); + } <p> else </p> { + trustStore.store(outputStream, password); + } <p> + outputStream.flush();<br/> + outputStream.close();<br/> + }<br/> +<br/> + private X509Certificate createSelfSignedCertifcate(KeyPair keyPair) throws Exception </p> { + X500NameBuilder nameBuilder = new X500NameBuilder(BCStyle.INSTANCE); + nameBuilder.addRDN(BCStyle.CN, "localhost"); + Date notBefore = new Date(); // time from which certificate is valid + Calendar cal = Calendar.getInstance(); + cal.setTime(notBefore); + cal.add(Calendar.YEAR, 1); + Date notAfter = cal.getTime(); + BigInteger serialNumber = new BigInteger(128, new Random()); + + X509v3CertificateBuilder certificateBuilder = + new JcaX509v3CertificateBuilder(nameBuilder.build(), serialNumber, notBefore, notAfter, nameBuilder.build(), keyPair.getPublic()) + .addExtension(Extension.basicConstraints, true, new BasicConstraints(0)) + .addExtension(Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyCertSign | KeyUsage.cRLSign)); + + ContentSigner contentSigner = new JcaContentSignerBuilder("SHA256WithRSAEncryption").build(keyPair.getPrivate()); + + return new JcaX509CertificateConverter().getCertificate(certificateBuilder.build(contentSigner)); + } <p> +<br/> + @After<br/> + public void cleanUp() throws Exception </p> { + System.clearProperty(x509Util.getSslKeystoreLocationProperty()); + System.clearProperty(x509Util.getSslKeystorePasswdProperty()); + System.clearProperty(x509Util.getSslTruststoreLocationProperty()); + System.clearProperty(x509Util.getSslTruststorePasswdProperty()); + System.clearProperty(x509Util.getSslHostnameVerificationEnabledProperty()); + System.clearProperty(x509Util.getSslOcspEnabledProperty()); + System.clearProperty(x509Util.getSslCrlEnabledProperty()); + System.clearProperty("com.sun.net.ssl.checkRevocation"); + System.clearProperty("com.sun.security.enableCRLDP"); + Security.setProperty("com.sun.security.enableCRLDP", "false"); + } <p> +<br/> + @Test<br/> #8212; End diff #8211;</p> <p> Agreed. </p> <p> The QuorumSSLTest needs them too.</p></comment>
<comment id="15958188" author="githubbot" created="Thu, 6 Apr 2017 02:28:56 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110068829" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110068829</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java #8212;<br/> @@ -193,21 +198,18 @@ void request(Request request) throws IOException {<br/> /**</p> <ul> <li>Returns the address of the node we think is the leader.<br/> */</li> </ul> <ul class="alternate" type="square"> <li>protected InetSocketAddress findLeader() {<br/> + protected QuorumServer findLeader() { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Egah, this is a change from an earlier iteration that I forgot to remove. Fixed now.</p></comment>
<comment id="15958190" author="githubbot" created="Thu, 6 Apr 2017 02:29:28 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110068870" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110068870</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java #8212;<br/> @@ -253,7 +255,10 @@ protected void connectToLeader(InetSocketAddress addr)<br/> throw new IOException("initLimit exceeded on retries.");<br/> }</p> <ul class="alternate" type="square"> <li>sockConnect(sock, addr, Math.min(self.tickTime * self.syncLimit, remainingInitLimitTime));<br/> + sockConnect(sock, leader.addr, Math.min(self.tickTime * self.syncLimit, remainingInitLimitTime)); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> This should be fixed.</p></comment>
<comment id="15958202" author="hadoopqa" created="Thu, 6 Apr 2017 02:41:14 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 41 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 4 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/504//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/504//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/504//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/504//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/504//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/504//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15958213" author="githubbot" created="Thu, 6 Apr 2017 02:54:20 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110070800" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110070800</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java #8212;<br/> @@ -230,15 +232,15 @@ protected void sockConnect(Socket sock, InetSocketAddress addr, int timeout)<br/> /**</p> <ul> <li>Establish a connection with the Leader found by findLeader. Retries</li> <li>until either initLimit time has elapsed or 5 tries have happened.</li> </ul> <ul class="alternate" type="square"> <li>* @param addr - the address of the Leader to connect to.<br/> + * @param leader - the QuorumServer elected leader</li> </ul> <ul> <li>@throws IOException - if the socket connection fails on the 5th attempt</li> <li>@throws ConnectException</li> <li>@throws InterruptedException<br/> */</li> </ul> <ul class="alternate" type="square"> <li>protected void connectToLeader(InetSocketAddress addr)</li> <li>throws IOException, ConnectException, InterruptedException {</li> <li>sock = new Socket();</li> <li>sock.setSoTimeout(self.tickTime * self.initLimit);<br/> + protected void connectToLeader(QuorumServer leader)<br/> + throws IOException, InterruptedException, X509Exception {<br/> + QuorumX509Util quorumX509Util = new QuorumX509Util(); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Agreed. Fixed</p></comment>
<comment id="15958217" author="hadoopqa" created="Thu, 6 Apr 2017 03:07:43 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 41 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 4 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/505//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/505//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/505//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/505//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/505//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/505//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15958422" author="githubbot" created="Thu, 6 Apr 2017 07:01:40 +0000"><p>Github user geek101 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110088588" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110088588</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java #8212;<br/> @@ -216,18 +218,35 @@ public boolean isQuorumSynced(QuorumVerifier qv) {</p> <p> private final ServerSocket ss;</p> <ul class="alternate" type="square"> <li>Leader(QuorumPeer self,LeaderZooKeeperServer zk) throws IOException {<br/> + Leader(QuorumPeer self,LeaderZooKeeperServer zk) throws IOException, X509Exception {<br/> this.self = self;<br/> try {</li> <li>if (self.getQuorumListenOnAllIPs()) {</li> <li>ss = new ServerSocket(self.getQuorumAddress().getPort());<br/> + if (self.shouldUsePortUnification()) { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Is it possible to move all this code away from here to a different class like SSLSocketFactory which can help keep Leader code have similar number of branches if not more.</p></comment>
<comment id="15958423" author="githubbot" created="Thu, 6 Apr 2017 07:01:40 +0000"><p>Github user geek101 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110089020" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110089020</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -171,21 +226,100 @@ public static X509KeyManager createKeyManager(String keyStoreLocation, String ke<br/> }<br/> }</p> <ul class="alternate" type="square"> <li>public static X509TrustManager createTrustManager(String trustStoreLocation, String trustStorePassword)<br/> + public static X509TrustManager createTrustManager(String trustStoreLocation, String trustStorePassword,<br/> + boolean crlEnabled, boolean ocspEnabled,<br/> + final boolean hostnameVerificationEnabled,<br/> + final boolean shouldVerifyClientHostname)<br/> throws TrustManagerException {<br/> FileInputStream inputStream = null;<br/> try {</li> <li>char[] trustStorePasswordChars = trustStorePassword.toCharArray();<br/> File trustStoreFile = new File(trustStoreLocation);<br/> KeyStore ts = KeyStore.getInstance("JKS");<br/> inputStream = new FileInputStream(trustStoreFile);</li> <li>ts.load(inputStream, trustStorePasswordChars);</li> <li>TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");</li> <li>tmf.init(ts);<br/> + if (trustStorePassword != null) { + char[] trustStorePasswordChars = trustStorePassword.toCharArray(); + ts.load(inputStream, trustStorePasswordChars); + } <p> else </p> { + ts.load(inputStream, null); + }</li> </ul> <ul class="alternate" type="square"> <li>for (TrustManager tm : tmf.getTrustManagers()) {</li> <li>if (tm instanceof X509TrustManager) {</li> <li>return (X509TrustManager) tm;<br/> + PKIXBuilderParameters pbParams = new PKIXBuilderParameters(ts, new X509CertSelector());<br/> + if (crlEnabled || ocspEnabled) <div class="error"><span class="error">Unknown macro: { + pbParams.setRevocationEnabled(true); + System.setProperty(quot;com.sun.net.ssl.checkRevocationquot;, quot;truequot;); + System.setProperty(quot;com.sun.security.enableCRLDPquot;, quot;truequot;); + if (ocspEnabled) { + Security.setProperty("ocsp.enable", "true"); + } + + }</span> </div> <p> else </p> { + pbParams.setRevocationEnabled(false); + } <p> +<br/> + TrustManagerFactory tmf = TrustManagerFactory.getInstance("PKIX");<br/> + tmf.init(new CertPathTrustManagerParameters(pbParams));<br/> +<br/> + for (final TrustManager tm : tmf.getTrustManagers()) {<br/> + if (tm instanceof X509ExtendedTrustManager) {<br/> + return new X509ExtendedTrustManager() {<br/> + X509ExtendedTrustManager x509ExtendedTrustManager = (X509ExtendedTrustManager) tm;<br/> + DefaultHostnameVerifier hostnameVerifier = new DefaultHostnameVerifier();<br/> +<br/> + @Override<br/> + public X509Certificate[] getAcceptedIssuers() </p> { + return x509ExtendedTrustManager.getAcceptedIssuers(); + } <p> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) {<br/> + performHostnameVerification(socket.getInetAddress().getHostName(), chain<span class="error">#91;0#93;</span>);</p> <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> For Quorum server connection I am not entirely sure if getInetAddres().getHostName() is a good idea when on server side this will force a reverse DNS lookup. When customer has only provided a ip address as config perhaps using hostname is not correct. And if customer has provided a hostname performing reverse dns lookup is not necessary and can be argued as not safe. Since the trust anchor is the user provided config and not the DNS service. Let me know what you think.</p></comment>
<comment id="15958424" author="githubbot" created="Thu, 6 Apr 2017 07:01:40 +0000"><p>Github user geek101 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110086744" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110086744</a></p> <p> #8212; Diff: ivy.xml #8212;<br/> @@ -63,6 +67,9 @@<br/> lt;dependency org="commons-collections" name="commons-collections" <br/> rev="3.2.2" conf="test-gt;default"/gt;</p> <p> + lt;dependency org="org.bouncycastle" name="bcprov-jdk15on" rev="1.56" conf="test-gt;default"/gt;<br/> + lt;dependency org="org.bouncycastle" name="bcpkix-jdk15on" rev="1.56" conf="test-gt;default"/gt;<br/> #8212; End diff #8211;</p> <p> is this specified twice?</p></comment>
<comment id="15958425" author="githubbot" created="Thu, 6 Apr 2017 07:01:41 +0000"><p>Github user geek101 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110090086" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110090086</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -18,63 +18,116 @@<br/> package org.apache.zookeeper.common;</p> <p> +import org.apache.http.conn.ssl.DefaultHostnameVerifier;<br/> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +import javax.net.ssl.CertPathTrustManagerParameters;<br/> import javax.net.ssl.KeyManager;<br/> import javax.net.ssl.KeyManagerFactory;<br/> import javax.net.ssl.SSLContext;<br/> +import javax.net.ssl.SSLEngine;<br/> +import javax.net.ssl.SSLException;<br/> +import javax.net.ssl.SSLParameters;<br/> +import javax.net.ssl.SSLServerSocket;<br/> +import javax.net.ssl.SSLSocket;<br/> import javax.net.ssl.TrustManager;<br/> import javax.net.ssl.TrustManagerFactory;<br/> +import javax.net.ssl.X509ExtendedTrustManager;<br/> import javax.net.ssl.X509KeyManager;<br/> import javax.net.ssl.X509TrustManager;<br/> import java.io.File;<br/> import java.io.FileInputStream;<br/> import java.io.IOException;<br/> +import java.net.Socket;<br/> +import java.security.KeyManagementException;<br/> import java.security.KeyStore;<br/> +import java.security.NoSuchAlgorithmException;<br/> +import java.security.Security;<br/> +import java.security.cert.CertificateException;<br/> +import java.security.cert.PKIXBuilderParameters;<br/> +import java.security.cert.X509CertSelector;<br/> +import java.security.cert.X509Certificate;</p> <p> -import org.slf4j.Logger;<br/> -import org.slf4j.LoggerFactory;<br/> -<br/> -import static org.apache.zookeeper.common.X509Exception.KeyManagerException;<br/> -import static org.apache.zookeeper.common.X509Exception.SSLContextException;<br/> -import static org.apache.zookeeper.common.X509Exception.TrustManagerException;<br/> +import static org.apache.zookeeper.common.X509Exception.*;</p> <p> /**</p> <ul> <li>Utility code for X509 handling<br/> */<br/> -public class X509Util {<br/> +public abstract class X509Util {<br/> private static final Logger LOG = LoggerFactory.getLogger(X509Util.class);</li> </ul> <ul class="alternate" type="square"> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_KEYSTORE_LOCATION}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_KEYSTORE_LOCATION = "zookeeper.ssl.keyStore.location";</li> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_KEYSTORE_PASSWD}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_KEYSTORE_PASSWD = "zookeeper.ssl.keyStore.password";</li> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_TRUSTSTORE_LOCATION}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_TRUSTSTORE_LOCATION = "zookeeper.ssl.trustStore.location";</li> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_TRUSTSTORE_PASSWD}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_TRUSTSTORE_PASSWD = "zookeeper.ssl.trustStore.password";</li> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_AUTHPROVIDER}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_AUTHPROVIDER = "zookeeper.ssl.authProvider";<br/> -</li> <li>public static SSLContext createSSLContext() throws SSLContextException {<br/> + public static final String DEFAULT_PROTOCOL = "TLSv1";<br/> +<br/> + private String sslProtocolProperty = getConfigPrefix() + "protocol";<br/> + private String cipherSuitesProperty = getConfigPrefix() + "ciphersuites"; <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> nice.</p></comment>
<comment id="15958426" author="githubbot" created="Thu, 6 Apr 2017 07:01:41 +0000"><p>Github user geek101 commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110089934" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110089934</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/test/QuorumSSLTest.java #8212;<br/> @@ -0,0 +1,603 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + * lt;p/gt;<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + * lt;p/gt;<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.test;<br/> +<br/> +import com.sun.net.httpserver.Headers;<br/> +import com.sun.net.httpserver.HttpHandler;<br/> +import com.sun.net.httpserver.HttpServer;<br/> +import org.apache.zookeeper.PortAssignment;<br/> +import org.apache.zookeeper.client.ZKClientConfig;<br/> +import org.apache.zookeeper.common.QuorumX509Util;<br/> +import org.apache.zookeeper.server.ServerCnxnFactory;<br/> +import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;<br/> +import org.bouncycastle.asn1.ocsp.OCSPResponse;<br/> +import org.bouncycastle.asn1.ocsp.OCSPResponseStatus;<br/> +import org.bouncycastle.asn1.x500.X500Name;<br/> +import org.bouncycastle.asn1.x500.X500NameBuilder;<br/> +import org.bouncycastle.asn1.x500.style.BCStyle;<br/> +import org.bouncycastle.asn1.x509.AuthorityInformationAccess;<br/> +import org.bouncycastle.asn1.x509.BasicConstraints;<br/> +import org.bouncycastle.asn1.x509.CRLDistPoint;<br/> +import org.bouncycastle.asn1.x509.CRLNumber;<br/> +import org.bouncycastle.asn1.x509.CRLReason;<br/> +import org.bouncycastle.asn1.x509.DistributionPoint;<br/> +import org.bouncycastle.asn1.x509.DistributionPointName;<br/> +import org.bouncycastle.asn1.x509.Extension;<br/> +import org.bouncycastle.asn1.x509.GeneralName;<br/> +import org.bouncycastle.asn1.x509.GeneralNames;<br/> +import org.bouncycastle.asn1.x509.KeyUsage;<br/> +import org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;<br/> +import org.bouncycastle.asn1.x509.X509ObjectIdentifiers;<br/> +import org.bouncycastle.cert.X509CRLHolder;<br/> +import org.bouncycastle.cert.X509CertificateHolder;<br/> +import org.bouncycastle.cert.X509ExtensionUtils;<br/> +import org.bouncycastle.cert.X509v2CRLBuilder;<br/> +import org.bouncycastle.cert.X509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.bc.BcX509ExtensionUtils;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateConverter;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateHolder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v2CRLBuilder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.ocsp.BasicOCSPResp;<br/> +import org.bouncycastle.cert.ocsp.BasicOCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.CertificateID;<br/> +import org.bouncycastle.cert.ocsp.CertificateStatus;<br/> +import org.bouncycastle.cert.ocsp.OCSPException;<br/> +import org.bouncycastle.cert.ocsp.OCSPReq;<br/> +import org.bouncycastle.cert.ocsp.OCSPResp;<br/> +import org.bouncycastle.cert.ocsp.OCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.Req;<br/> +import org.bouncycastle.cert.ocsp.UnknownStatus;<br/> +import org.bouncycastle.cert.ocsp.jcajce.JcaBasicOCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.jcajce.JcaCertificateID;<br/> +import org.bouncycastle.crypto.util.PublicKeyFactory;<br/> +import org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory;<br/> +import org.bouncycastle.jce.provider.BouncyCastleProvider;<br/> +import org.bouncycastle.openssl.MiscPEMGenerator;<br/> +import org.bouncycastle.operator.ContentSigner;<br/> +import org.bouncycastle.operator.DigestCalculator;<br/> +import org.bouncycastle.operator.OperatorException;<br/> +import org.bouncycastle.operator.jcajce.JcaContentSignerBuilder;<br/> +import org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder;<br/> +import org.bouncycastle.util.io.pem.PemWriter;<br/> +import org.junit.After;<br/> +import org.junit.Assert;<br/> +import org.junit.Before;<br/> +import org.junit.Test;<br/> +<br/> +import java.io.FileOutputStream;<br/> +import java.io.FileWriter;<br/> +import java.io.IOException;<br/> +import java.io.InputStream;<br/> +import java.io.OutputStream;<br/> +import java.math.BigInteger;<br/> +import java.net.InetSocketAddress;<br/> +import java.security.KeyPair;<br/> +import java.security.KeyPairGenerator;<br/> +import java.security.KeyStore;<br/> +import java.security.NoSuchAlgorithmException;<br/> +import java.security.NoSuchProviderException;<br/> +import java.security.PrivateKey;<br/> +import java.security.Security;<br/> +import java.security.cert.Certificate;<br/> +import java.security.cert.CertificateEncodingException;<br/> +import java.security.cert.X509Certificate;<br/> +import java.util.Calendar;<br/> +import java.util.Date;<br/> +import java.util.HashMap;<br/> +import java.util.Map;<br/> +import java.util.Random;<br/> +<br/> +import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;<br/> +import static org.apache.zookeeper.test.ClientBase.createTmpDir;<br/> +<br/> +public class QuorumSSLTest extends QuorumPeerTestBase {<br/> #8212; End diff #8211;</p> <p> This is very nice great stuff <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="15959416" author="githubbot" created="Thu, 6 Apr 2017 17:45:38 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110224561" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110224561</a></p> <p> #8212; Diff: ivy.xml #8212;<br/> @@ -63,6 +67,9 @@<br/> lt;dependency org="commons-collections" name="commons-collections" <br/> rev="3.2.2" conf="test-gt;default"/gt;</p> <p> + lt;dependency org="org.bouncycastle" name="bcprov-jdk15on" rev="1.56" conf="test-gt;default"/gt;<br/> + lt;dependency org="org.bouncycastle" name="bcpkix-jdk15on" rev="1.56" conf="test-gt;default"/gt;<br/> #8212; End diff #8211;</p> <p> One is bcprov-jdk15on and the other is bcpkix-jdk15on.</p></comment>
<comment id="15959419" author="githubbot" created="Thu, 6 Apr 2017 17:46:16 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110224694" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110224694</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -18,63 +18,116 @@<br/> package org.apache.zookeeper.common;</p> <p> +import org.apache.http.conn.ssl.DefaultHostnameVerifier;<br/> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +import javax.net.ssl.CertPathTrustManagerParameters;<br/> import javax.net.ssl.KeyManager;<br/> import javax.net.ssl.KeyManagerFactory;<br/> import javax.net.ssl.SSLContext;<br/> +import javax.net.ssl.SSLEngine;<br/> +import javax.net.ssl.SSLException;<br/> +import javax.net.ssl.SSLParameters;<br/> +import javax.net.ssl.SSLServerSocket;<br/> +import javax.net.ssl.SSLSocket;<br/> import javax.net.ssl.TrustManager;<br/> import javax.net.ssl.TrustManagerFactory;<br/> +import javax.net.ssl.X509ExtendedTrustManager;<br/> import javax.net.ssl.X509KeyManager;<br/> import javax.net.ssl.X509TrustManager;<br/> import java.io.File;<br/> import java.io.FileInputStream;<br/> import java.io.IOException;<br/> +import java.net.Socket;<br/> +import java.security.KeyManagementException;<br/> import java.security.KeyStore;<br/> +import java.security.NoSuchAlgorithmException;<br/> +import java.security.Security;<br/> +import java.security.cert.CertificateException;<br/> +import java.security.cert.PKIXBuilderParameters;<br/> +import java.security.cert.X509CertSelector;<br/> +import java.security.cert.X509Certificate;</p> <p> -import org.slf4j.Logger;<br/> -import org.slf4j.LoggerFactory;<br/> -<br/> -import static org.apache.zookeeper.common.X509Exception.KeyManagerException;<br/> -import static org.apache.zookeeper.common.X509Exception.SSLContextException;<br/> -import static org.apache.zookeeper.common.X509Exception.TrustManagerException;<br/> +import static org.apache.zookeeper.common.X509Exception.*;</p> <p> /**</p> <ul> <li>Utility code for X509 handling<br/> */<br/> -public class X509Util {<br/> +public abstract class X509Util {<br/> private static final Logger LOG = LoggerFactory.getLogger(X509Util.class);</li> </ul> <ul class="alternate" type="square"> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_KEYSTORE_LOCATION}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_KEYSTORE_LOCATION = "zookeeper.ssl.keyStore.location";</li> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_KEYSTORE_PASSWD}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_KEYSTORE_PASSWD = "zookeeper.ssl.keyStore.password";</li> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_TRUSTSTORE_LOCATION}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_TRUSTSTORE_LOCATION = "zookeeper.ssl.trustStore.location";</li> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_TRUSTSTORE_PASSWD}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_TRUSTSTORE_PASSWD = "zookeeper.ssl.trustStore.password";</li> <li>/**</li> <li>* @deprecated Use {@link ZKConfig#SSL_AUTHPROVIDER}</li> <li>* instead.</li> <li>*/</li> <li>@Deprecated</li> <li>public static final String SSL_AUTHPROVIDER = "zookeeper.ssl.authProvider";<br/> -</li> <li>public static SSLContext createSSLContext() throws SSLContextException {<br/> + public static final String DEFAULT_PROTOCOL = "TLSv1";<br/> +<br/> + private String sslProtocolProperty = getConfigPrefix() + "protocol";<br/> + private String cipherSuitesProperty = getConfigPrefix() + "ciphersuites"; <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Thanks!</p></comment>
<comment id="15959420" author="githubbot" created="Thu, 6 Apr 2017 17:46:22 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110224715" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110224715</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/test/QuorumSSLTest.java #8212;<br/> @@ -0,0 +1,603 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + * lt;p/gt;<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + * lt;p/gt;<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.test;<br/> +<br/> +import com.sun.net.httpserver.Headers;<br/> +import com.sun.net.httpserver.HttpHandler;<br/> +import com.sun.net.httpserver.HttpServer;<br/> +import org.apache.zookeeper.PortAssignment;<br/> +import org.apache.zookeeper.client.ZKClientConfig;<br/> +import org.apache.zookeeper.common.QuorumX509Util;<br/> +import org.apache.zookeeper.server.ServerCnxnFactory;<br/> +import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;<br/> +import org.bouncycastle.asn1.ocsp.OCSPResponse;<br/> +import org.bouncycastle.asn1.ocsp.OCSPResponseStatus;<br/> +import org.bouncycastle.asn1.x500.X500Name;<br/> +import org.bouncycastle.asn1.x500.X500NameBuilder;<br/> +import org.bouncycastle.asn1.x500.style.BCStyle;<br/> +import org.bouncycastle.asn1.x509.AuthorityInformationAccess;<br/> +import org.bouncycastle.asn1.x509.BasicConstraints;<br/> +import org.bouncycastle.asn1.x509.CRLDistPoint;<br/> +import org.bouncycastle.asn1.x509.CRLNumber;<br/> +import org.bouncycastle.asn1.x509.CRLReason;<br/> +import org.bouncycastle.asn1.x509.DistributionPoint;<br/> +import org.bouncycastle.asn1.x509.DistributionPointName;<br/> +import org.bouncycastle.asn1.x509.Extension;<br/> +import org.bouncycastle.asn1.x509.GeneralName;<br/> +import org.bouncycastle.asn1.x509.GeneralNames;<br/> +import org.bouncycastle.asn1.x509.KeyUsage;<br/> +import org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;<br/> +import org.bouncycastle.asn1.x509.X509ObjectIdentifiers;<br/> +import org.bouncycastle.cert.X509CRLHolder;<br/> +import org.bouncycastle.cert.X509CertificateHolder;<br/> +import org.bouncycastle.cert.X509ExtensionUtils;<br/> +import org.bouncycastle.cert.X509v2CRLBuilder;<br/> +import org.bouncycastle.cert.X509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.bc.BcX509ExtensionUtils;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateConverter;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateHolder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v2CRLBuilder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.ocsp.BasicOCSPResp;<br/> +import org.bouncycastle.cert.ocsp.BasicOCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.CertificateID;<br/> +import org.bouncycastle.cert.ocsp.CertificateStatus;<br/> +import org.bouncycastle.cert.ocsp.OCSPException;<br/> +import org.bouncycastle.cert.ocsp.OCSPReq;<br/> +import org.bouncycastle.cert.ocsp.OCSPResp;<br/> +import org.bouncycastle.cert.ocsp.OCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.Req;<br/> +import org.bouncycastle.cert.ocsp.UnknownStatus;<br/> +import org.bouncycastle.cert.ocsp.jcajce.JcaBasicOCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.jcajce.JcaCertificateID;<br/> +import org.bouncycastle.crypto.util.PublicKeyFactory;<br/> +import org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory;<br/> +import org.bouncycastle.jce.provider.BouncyCastleProvider;<br/> +import org.bouncycastle.openssl.MiscPEMGenerator;<br/> +import org.bouncycastle.operator.ContentSigner;<br/> +import org.bouncycastle.operator.DigestCalculator;<br/> +import org.bouncycastle.operator.OperatorException;<br/> +import org.bouncycastle.operator.jcajce.JcaContentSignerBuilder;<br/> +import org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder;<br/> +import org.bouncycastle.util.io.pem.PemWriter;<br/> +import org.junit.After;<br/> +import org.junit.Assert;<br/> +import org.junit.Before;<br/> +import org.junit.Test;<br/> +<br/> +import java.io.FileOutputStream;<br/> +import java.io.FileWriter;<br/> +import java.io.IOException;<br/> +import java.io.InputStream;<br/> +import java.io.OutputStream;<br/> +import java.math.BigInteger;<br/> +import java.net.InetSocketAddress;<br/> +import java.security.KeyPair;<br/> +import java.security.KeyPairGenerator;<br/> +import java.security.KeyStore;<br/> +import java.security.NoSuchAlgorithmException;<br/> +import java.security.NoSuchProviderException;<br/> +import java.security.PrivateKey;<br/> +import java.security.Security;<br/> +import java.security.cert.Certificate;<br/> +import java.security.cert.CertificateEncodingException;<br/> +import java.security.cert.X509Certificate;<br/> +import java.util.Calendar;<br/> +import java.util.Date;<br/> +import java.util.HashMap;<br/> +import java.util.Map;<br/> +import java.util.Random;<br/> +<br/> +import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;<br/> +import static org.apache.zookeeper.test.ClientBase.createTmpDir;<br/> +<br/> +public class QuorumSSLTest extends QuorumPeerTestBase {<br/> #8212; End diff #8211;</p> <p> Thanks!</p></comment>
<comment id="15959455" author="githubbot" created="Thu, 6 Apr 2017 18:00:36 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110227948" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110227948</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java #8212;<br/> @@ -216,18 +218,35 @@ public boolean isQuorumSynced(QuorumVerifier qv) {</p> <p> private final ServerSocket ss;</p> <ul class="alternate" type="square"> <li>Leader(QuorumPeer self,LeaderZooKeeperServer zk) throws IOException {<br/> + Leader(QuorumPeer self,LeaderZooKeeperServer zk) throws IOException, X509Exception {<br/> this.self = self;<br/> try {</li> <li>if (self.getQuorumListenOnAllIPs()) {</li> <li>ss = new ServerSocket(self.getQuorumAddress().getPort());<br/> + if (self.shouldUsePortUnification()) { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> This is a tough call IMO. I think you are correct that moving this out of the Leader would make the leader code simpler but on the other hand this is logic that I think "belongs" to the leader and is not really relevant anywhere else.</p> <p> What do you think about the compromise of moving this to a static method in Leader where it can be tested and prevents cluttering up the constructor logic?</p></comment>
<comment id="15959720" author="githubbot" created="Thu, 6 Apr 2017 20:46:08 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r110263282" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r110263282</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -171,21 +226,100 @@ public static X509KeyManager createKeyManager(String keyStoreLocation, String ke<br/> }<br/> }</p> <ul class="alternate" type="square"> <li>public static X509TrustManager createTrustManager(String trustStoreLocation, String trustStorePassword)<br/> + public static X509TrustManager createTrustManager(String trustStoreLocation, String trustStorePassword,<br/> + boolean crlEnabled, boolean ocspEnabled,<br/> + final boolean hostnameVerificationEnabled,<br/> + final boolean shouldVerifyClientHostname)<br/> throws TrustManagerException {<br/> FileInputStream inputStream = null;<br/> try {</li> <li>char[] trustStorePasswordChars = trustStorePassword.toCharArray();<br/> File trustStoreFile = new File(trustStoreLocation);<br/> KeyStore ts = KeyStore.getInstance("JKS");<br/> inputStream = new FileInputStream(trustStoreFile);</li> <li>ts.load(inputStream, trustStorePasswordChars);</li> <li>TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");</li> <li>tmf.init(ts);<br/> + if (trustStorePassword != null) { + char[] trustStorePasswordChars = trustStorePassword.toCharArray(); + ts.load(inputStream, trustStorePasswordChars); + } <p> else </p> { + ts.load(inputStream, null); + }</li> </ul> <ul class="alternate" type="square"> <li>for (TrustManager tm : tmf.getTrustManagers()) {</li> <li>if (tm instanceof X509TrustManager) {</li> <li>return (X509TrustManager) tm;<br/> + PKIXBuilderParameters pbParams = new PKIXBuilderParameters(ts, new X509CertSelector());<br/> + if (crlEnabled || ocspEnabled) <div class="error"><span class="error">Unknown macro: { + pbParams.setRevocationEnabled(true); + System.setProperty(quot;com.sun.net.ssl.checkRevocationquot;, quot;truequot;); + System.setProperty(quot;com.sun.security.enableCRLDPquot;, quot;truequot;); + if (ocspEnabled) { + Security.setProperty("ocsp.enable", "true"); + } + + }</span> </div> <p> else </p> { + pbParams.setRevocationEnabled(false); + } <p> +<br/> + TrustManagerFactory tmf = TrustManagerFactory.getInstance("PKIX");<br/> + tmf.init(new CertPathTrustManagerParameters(pbParams));<br/> +<br/> + for (final TrustManager tm : tmf.getTrustManagers()) {<br/> + if (tm instanceof X509ExtendedTrustManager) {<br/> + return new X509ExtendedTrustManager() {<br/> + X509ExtendedTrustManager x509ExtendedTrustManager = (X509ExtendedTrustManager) tm;<br/> + DefaultHostnameVerifier hostnameVerifier = new DefaultHostnameVerifier();<br/> +<br/> + @Override<br/> + public X509Certificate[] getAcceptedIssuers() </p> { + return x509ExtendedTrustManager.getAcceptedIssuers(); + } <p> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) {<br/> + performHostnameVerification(socket.getInetAddress().getHostName(), chain<span class="error">#91;0#93;</span>);</p> <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> I agree that we should not do reverse DNS lookups when we do not need to.</p> <p> I changed the host verification logic to only perform a reverse dns lookup when host verification fails using the ip address. I think it is still fair to try the reverse dns lookup at that point as the value given in the altname of the certificate is not necessarily tied to the zookeeper configuration.</p> <p> Let me know if you think this is reasonable.</p></comment>
<comment id="15959743" author="hadoopqa" created="Thu, 6 Apr 2017 21:02:00 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 41 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 4 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/506//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/506//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/506//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/506//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/506//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/506//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15959849" author="hadoopqa" created="Thu, 6 Apr 2017 22:02:25 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 41 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 4 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/508//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/508//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/508//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/508//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/508//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/508//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15959854" author="hadoopqa" created="Thu, 6 Apr 2017 22:04:59 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 41 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 4 new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/509//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/509//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/509//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/509//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/509//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/509//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15961374" author="hadoopqa" created="Fri, 7 Apr 2017 20:08:31 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 41 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/519//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/519//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/519//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/519//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/519//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/519//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15961377" author="hadoopqa" created="Fri, 7 Apr 2017 20:10:39 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 41 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/520//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/520//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/520//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/520//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/520//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/520//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15961516" author="hadoopqa" created="Fri, 7 Apr 2017 22:25:51 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/521//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/521//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/521//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/521//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/521//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/521//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15968181" author="githubbot" created="Thu, 13 Apr 2017 20:47:28 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111483370" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111483370</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java #8212;<br/> @@ -21,6 +21,7 @@<br/> import org.apache.zookeeper.ClientCnxn.EndOfStreamException;<br/> import org.apache.zookeeper.ClientCnxn.Packet;<br/> import org.apache.zookeeper.client.ZKClientConfig;<br/> +import org.apache.zookeeper.common.ClientX509Util;<br/> import org.apache.zookeeper.common.X509Util;<br/> #8212; End diff #8211;</p> <p> Unused import.</p></comment>
<comment id="15968182" author="githubbot" created="Thu, 13 Apr 2017 20:47:54 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111483464" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111483464</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java #8212;<br/> @@ -31,6 +31,7 @@<br/> import javax.net.ssl.SSLSocket;<br/> import javax.net.ssl.SSLSocketFactory;</p> <p> +import org.apache.zookeeper.common.ClientX509Util;<br/> import org.apache.zookeeper.common.X509Exception.SSLContextException;<br/> import org.apache.zookeeper.common.X509Util;<br/> #8212; End diff #8211;</p> <p> Unused import.</p></comment>
<comment id="15968183" author="githubbot" created="Thu, 13 Apr 2017 20:49:38 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111483819" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111483819</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -18,63 +18,110 @@<br/> package org.apache.zookeeper.common;</p> <p> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +import javax.net.ssl.CertPathTrustManagerParameters;<br/> import javax.net.ssl.KeyManager;<br/> import javax.net.ssl.KeyManagerFactory;<br/> import javax.net.ssl.SSLContext;<br/> +import javax.net.ssl.SSLParameters;<br/> +import javax.net.ssl.SSLServerSocket;<br/> +import javax.net.ssl.SSLSocket;<br/> import javax.net.ssl.TrustManager;<br/> import javax.net.ssl.TrustManagerFactory;<br/> +import javax.net.ssl.X509ExtendedTrustManager;<br/> import javax.net.ssl.X509KeyManager;<br/> import javax.net.ssl.X509TrustManager;<br/> import java.io.File;<br/> import java.io.FileInputStream;<br/> import java.io.IOException;<br/> +import java.security.KeyManagementException;<br/> import java.security.KeyStore;<br/> +import java.security.NoSuchAlgorithmException;<br/> +import java.security.Security;<br/> +import java.security.cert.PKIXBuilderParameters;<br/> +import java.security.cert.X509CertSelector;</p> <p> -import org.slf4j.Logger;<br/> -import org.slf4j.LoggerFactory;<br/> -<br/> -import static org.apache.zookeeper.common.X509Exception.KeyManagerException;<br/> -import static org.apache.zookeeper.common.X509Exception.SSLContextException;<br/> -import static org.apache.zookeeper.common.X509Exception.TrustManagerException;<br/> +import static org.apache.zookeeper.common.X509Exception.*;<br/> #8212; End diff #8211;</p> <p> Use explicit imports instead of wildcards imports - I guess here IDE tried to be clever..</p></comment>
<comment id="15968190" author="githubbot" created="Thu, 13 Apr 2017 20:53:48 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111484712" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111484712</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -150,7 +196,7 @@ public static X509KeyManager createKeyManager(String keyStoreLocation, String ke<br/> KeyStore ks = KeyStore.getInstance("JKS");<br/> inputStream = new FileInputStream(keyStoreFile);<br/> ks.load(inputStream, keyStorePasswordChars);</p> <ul class="alternate" type="square"> <li>KeyManagerFactory kmf = KeyManagerFactory.getInstance("SunX509");<br/> + KeyManagerFactory kmf = KeyManagerFactory.getInstance("PKIX"); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Any comments on what this change is for?</p></comment>
<comment id="15968194" author="githubbot" created="Thu, 13 Apr 2017 20:59:11 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111485824" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111485824</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/ZKTrustManager.java #8212;<br/> @@ -0,0 +1,137 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + *<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + *<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.common;<br/> +<br/> +import org.apache.http.conn.ssl.DefaultHostnameVerifier;<br/> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +import javax.net.ssl.SSLEngine;<br/> +import javax.net.ssl.SSLException;<br/> +import javax.net.ssl.X509ExtendedTrustManager;<br/> +import java.net.InetAddress;<br/> +import java.net.Socket;<br/> +import java.net.UnknownHostException;<br/> +import java.security.cert.CertificateException;<br/> +import java.security.cert.X509Certificate;<br/> +<br/> +/**<br/> + * A custom TrustManager that supports hostname verification via org.apache.http.conn.ssl.DefaultHostnameVerifier.<br/> + *<br/> + * We attempt to perform verification using just the IP address first and if that fails will attempt to perform a<br/> + * reverse DNS lookup and verify using the hostname.<br/> + */<br/> +public class ZKTrustManager extends X509ExtendedTrustManager {<br/> +<br/> + private static final Logger LOG = LoggerFactory.getLogger(ZKTrustManager.class);<br/> +<br/> + private X509ExtendedTrustManager x509ExtendedTrustManager;<br/> + private boolean hostnameVerificationEnabled;<br/> + private boolean shouldVerifyClientHostname;<br/> +<br/> + private DefaultHostnameVerifier hostnameVerifier;<br/> +<br/> + /**<br/> + * Instantiate a new ZKTrustManager.<br/> + *<br/> + * @param x509ExtendedTrustManager The trustmanager to use for checkClientTrusted/checkServerTrusted logic<br/> + * @param hostnameVerificationEnabled If true, this TrustManager should verify hostnames.<br/> + * @param shouldVerifyClientHostname If true, and hostnameVerificationEnabled is true, the hostname of a client<br/> + * connecting to this machine will be verified in addition to the servers that this<br/> + * instance connects to. If false, and hostnameVerificationEnabled is true, only<br/> + * the hostnames of servers that this instance connects to will be verified. If<br/> + * hostnameVerificationEnabled is false, this argument is ignored.<br/> + */<br/> + public ZKTrustManager(X509ExtendedTrustManager x509ExtendedTrustManager, boolean hostnameVerificationEnabled, boolean shouldVerifyClientHostname) </p> { + this.x509ExtendedTrustManager = x509ExtendedTrustManager; + this.hostnameVerificationEnabled = hostnameVerificationEnabled; + this.shouldVerifyClientHostname = shouldVerifyClientHostname; + + hostnameVerifier = new DefaultHostnameVerifier(); + } <p> +<br/> + @Override<br/> + public X509Certificate[] getAcceptedIssuers() </p> { + return x509ExtendedTrustManager.getAcceptedIssuers(); + } <p> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) </p> { + performHostVerification(socket.getInetAddress(), chain[0]); + }<br/> + x509ExtendedTrustManager.checkClientTrusted(chain, authType, socket);<br/> + }<br/> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled) { + performHostVerification(socket.getInetAddress(), chain[0]); + } <p> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, socket);<br/> + }<br/> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) {<br/> + try </p> { + performHostVerification(InetAddress.getByName(engine.getPeerHost()), chain[0]); + } catch (UnknownHostException e) { + throw new CertificateException("failed to verify host", e); + }<br/> + }<br/> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);<br/> + }<br/> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException {<br/> + if (hostnameVerificationEnabled) {<br/> + try { + performHostVerification(InetAddress.getByName(engine.getPeerHost()), chain[0]); + } <p> catch (UnknownHostException e) </p> { + throw new CertificateException("failed to verify host", e); + } <p> + }<br/> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);<br/> + }<br/> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException </p> { + x509ExtendedTrustManager.checkClientTrusted(chain, authType); + } <p> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException </p> { + x509ExtendedTrustManager.checkServerTrusted(chain, authType); + } <p> +<br/> + private void performHostVerification(InetAddress inetAddress, X509Certificate certificate) throws CertificateException {<br/> + try {<br/> + hostnameVerifier.verify(inetAddress.getHostAddress(), certificate);<br/> #8212; End diff #8211;</p> <p> IIUC, this only verifies that the host name matches what's stored in the certificates, right? If so, how do we verify that same subject is a valid peer we intended to connect to, rather than any random server which happens to have a valid cert? Or is this already taken care of by other parts of code?</p> <p> For reference, in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1045" title="Support Quorum Peer mutual authentication via SASL" class="issue-link" data-issue-key="ZOOKEEPER-1045"><del>ZOOKEEPER-1045</del></a> what we did for similar verification is by comparing the name of the server with the name retrieved from Kerberos principal. The name of the server is retrieved from the zoo.cfg and because of this we require if users want this verification they need encode the server as FQDN in zoo.cfg rather than using IP address. Maybe we can do something similar here.</p></comment>
<comment id="15968196" author="githubbot" created="Thu, 13 Apr 2017 21:00:04 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111486010" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111486010</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Follower.java #8212;<br/> @@ -71,7 +71,7 @@ void followLeader() throws InterruptedException {<br/> self.end_fle = 0;<br/> fzk.registerJMX(new FollowerBean(this, zk), self.jmxLocalPeerBean);<br/> try {</p> <ul class="alternate" type="square"> <li>InetSocketAddress addr = findLeader();<br/> + InetSocketAddress addr = findLeader(); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Unnecessary change here - this file can be removed from the change list.</p></comment>
<comment id="15968197" author="githubbot" created="Thu, 13 Apr 2017 21:01:31 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111486323" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111486323</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java #8212;<br/> @@ -51,6 +53,8 @@<br/> import org.slf4j.Logger;<br/> import org.slf4j.LoggerFactory;</p> <p> +import javax.net.ssl.SSLSocket;<br/> +<br/> #8212; End diff #8211;</p> <p> Looks like these imports are not used. Another look is this file can also be removed from change list because nothing changed.</p></comment>
<comment id="15968201" author="githubbot" created="Thu, 13 Apr 2017 21:03:00 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111486591" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111486591</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java #8212;<br/> @@ -383,6 +387,7 @@ public void run() </p> { + leader.self.getView().get(this.sid).toString()); } <p> else {<br/> LOG.info("Follower sid: " + this.sid + " not in the current config " + Long.toHexString(leader.self.getQuorumVerifier().getVersion()));<br/> + //TODO: Hostname verification possible<br/> #8212; End diff #8211;</p> <p> Suggest to remove this TODO as it appertains to no code.</p></comment>
<comment id="15968204" author="githubbot" created="Thu, 13 Apr 2017 21:06:06 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111487159" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111487159</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/test/QuorumSSLTest.java #8212;<br/> @@ -0,0 +1,668 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + * lt;p/gt;<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + * lt;p/gt;<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.test;<br/> +<br/> +import com.sun.net.httpserver.Headers;<br/> +import com.sun.net.httpserver.HttpHandler;<br/> +import com.sun.net.httpserver.HttpServer;<br/> +import org.apache.zookeeper.PortAssignment;<br/> +import org.apache.zookeeper.client.ZKClientConfig;<br/> +import org.apache.zookeeper.common.QuorumX509Util;<br/> +import org.apache.zookeeper.server.ServerCnxnFactory;<br/> +import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;<br/> +import org.bouncycastle.asn1.ocsp.OCSPResponse;<br/> +import org.bouncycastle.asn1.ocsp.OCSPResponseStatus;<br/> +import org.bouncycastle.asn1.x500.X500Name;<br/> +import org.bouncycastle.asn1.x500.X500NameBuilder;<br/> +import org.bouncycastle.asn1.x500.style.BCStyle;<br/> +import org.bouncycastle.asn1.x509.AuthorityInformationAccess;<br/> +import org.bouncycastle.asn1.x509.BasicConstraints;<br/> +import org.bouncycastle.asn1.x509.CRLDistPoint;<br/> +import org.bouncycastle.asn1.x509.CRLNumber;<br/> +import org.bouncycastle.asn1.x509.CRLReason;<br/> +import org.bouncycastle.asn1.x509.DistributionPoint;<br/> +import org.bouncycastle.asn1.x509.DistributionPointName;<br/> +import org.bouncycastle.asn1.x509.Extension;<br/> +import org.bouncycastle.asn1.x509.GeneralName;<br/> +import org.bouncycastle.asn1.x509.GeneralNames;<br/> +import org.bouncycastle.asn1.x509.KeyUsage;<br/> +import org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;<br/> +import org.bouncycastle.asn1.x509.X509ObjectIdentifiers;<br/> +import org.bouncycastle.cert.X509CRLHolder;<br/> +import org.bouncycastle.cert.X509CertificateHolder;<br/> +import org.bouncycastle.cert.X509ExtensionUtils;<br/> +import org.bouncycastle.cert.X509v2CRLBuilder;<br/> +import org.bouncycastle.cert.X509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.bc.BcX509ExtensionUtils;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateConverter;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateHolder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v2CRLBuilder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.ocsp.BasicOCSPResp;<br/> +import org.bouncycastle.cert.ocsp.BasicOCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.CertificateID;<br/> +import org.bouncycastle.cert.ocsp.CertificateStatus;<br/> +import org.bouncycastle.cert.ocsp.OCSPException;<br/> +import org.bouncycastle.cert.ocsp.OCSPReq;<br/> +import org.bouncycastle.cert.ocsp.OCSPResp;<br/> +import org.bouncycastle.cert.ocsp.OCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.Req;<br/> +import org.bouncycastle.cert.ocsp.UnknownStatus;<br/> +import org.bouncycastle.cert.ocsp.jcajce.JcaBasicOCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.jcajce.JcaCertificateID;<br/> +import org.bouncycastle.crypto.util.PublicKeyFactory;<br/> +import org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory;<br/> +import org.bouncycastle.jce.provider.BouncyCastleProvider;<br/> +import org.bouncycastle.openssl.MiscPEMGenerator;<br/> +import org.bouncycastle.operator.ContentSigner;<br/> +import org.bouncycastle.operator.DigestCalculator;<br/> +import org.bouncycastle.operator.OperatorException;<br/> +import org.bouncycastle.operator.jcajce.JcaContentSignerBuilder;<br/> +import org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder;<br/> +import org.bouncycastle.util.io.pem.PemWriter;<br/> +import org.junit.After;<br/> +import org.junit.Assert;<br/> +import org.junit.Before;<br/> +import org.junit.Test;<br/> +<br/> +import java.io.FileOutputStream;<br/> +import java.io.FileWriter;<br/> +import java.io.IOException;<br/> +import java.io.InputStream;<br/> +import java.io.OutputStream;<br/> +import java.math.BigInteger;<br/> +import java.net.InetSocketAddress;<br/> +import java.security.KeyPair;<br/> +import java.security.KeyPairGenerator;<br/> +import java.security.KeyStore;<br/> +import java.security.NoSuchAlgorithmException;<br/> +import java.security.NoSuchProviderException;<br/> +import java.security.PrivateKey;<br/> +import java.security.Security;<br/> +import java.security.cert.Certificate;<br/> +import java.security.cert.CertificateEncodingException;<br/> +import java.security.cert.X509Certificate;<br/> +import java.util.ArrayList;<br/> +import java.util.Calendar;<br/> +import java.util.Date;<br/> +import java.util.HashMap;<br/> +import java.util.List;<br/> +import java.util.Map;<br/> +import java.util.Random;<br/> +<br/> +import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;<br/> +import static org.apache.zookeeper.test.ClientBase.createTmpDir;<br/> +<br/> +public class QuorumSSLTest extends QuorumPeerTestBase {<br/> +<br/> + private static final String SSL_QUORUM_ENABLED = "sslQuorum=true\n";<br/> + private static final String PORT_UNIFICATION_ENABLED = "portUnification=true\n";<br/> + private static final String PORT_UNIFICATION_DISABLED = "portUnification=false\n";<br/> +<br/> + private static final char[] PASSWORD = "testpass".toCharArray();<br/> + private static final String HOSTNAME = "localhost";<br/> +<br/> + private QuorumX509Util quorumX509Util = new QuorumX509Util();<br/> +<br/> + private MainThread q1;<br/> + private MainThread q2;<br/> + private MainThread q3;<br/> +<br/> + private int clientPortQp1;<br/> + private int clientPortQp2;<br/> + private int clientPortQp3;<br/> +<br/> + private String tmpDir;<br/> +<br/> + private String quorumConfiguration;<br/> + private String validKeystorePath;<br/> + private String truststorePath;<br/> +<br/> + private KeyPair rootKeyPair;<br/> + private X509Certificate rootCertificate;<br/> +<br/> + private KeyPair defaultKeyPair;<br/> +<br/> + private ContentSigner contentSigner;<br/> +<br/> + @Before<br/> + public void setup() throws Exception </p> { + ClientBase.setupTestEnv(); + + tmpDir = createTmpDir().getAbsolutePath(); + + clientPortQp1 = PortAssignment.unique(); + clientPortQp2 = PortAssignment.unique(); + clientPortQp3 = PortAssignment.unique(); + + validKeystorePath = tmpDir + "/valid.jks"; + truststorePath = tmpDir + "/truststore.jks"; + + quorumConfiguration = generateQuorumConfiguration(); + + Security.addProvider(new BouncyCastleProvider()); + + rootKeyPair = createKeyPair(); + contentSigner = new JcaContentSignerBuilder("SHA256WithRSAEncryption").build(rootKeyPair.getPrivate()); + rootCertificate = createSelfSignedCertifcate(rootKeyPair); + + // Write the truststore + KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType()); + trustStore.load(null, PASSWORD); + trustStore.setCertificateEntry(rootCertificate.getSubjectDN().toString(), rootCertificate); + FileOutputStream outputStream = new FileOutputStream(truststorePath); + trustStore.store(outputStream, PASSWORD); + outputStream.flush(); + outputStream.close(); + + defaultKeyPair = createKeyPair(); + X509Certificate validCertificate = buildEndEntityCert(defaultKeyPair, rootCertificate, rootKeyPair.getPrivate(), + HOSTNAME, null, null, null); + writeKeystore(validCertificate, defaultKeyPair, validKeystorePath); + + setSSLSystemProperties(); + } <p> +<br/> + private void writeKeystore(X509Certificate certificate, KeyPair entityKeyPair, String path) throws Exception {<br/> + KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());<br/> + keyStore.load(null, PASSWORD);<br/> + keyStore.setKeyEntry("alias", entityKeyPair.getPrivate(), PASSWORD, new Certificate[] </p> { certificate } <p>);<br/> + FileOutputStream outputStream = new FileOutputStream(path);<br/> + keyStore.store(outputStream, PASSWORD);<br/> + outputStream.flush();<br/> + outputStream.close();<br/> + }<br/> +<br/> +<br/> + private class OCSPHandler implements HttpHandler {<br/> +<br/> + private X509Certificate revokedCert;<br/> +<br/> + // Builds an OCSPHandler that responds with a good status for all certificates<br/> + // except revokedCert.<br/> + public OCSPHandler(X509Certificate revokedCert) </p> { + this.revokedCert = revokedCert; + } <p> +<br/> + @Override<br/> + public void handle(com.sun.net.httpserver.HttpExchange httpExchange) throws IOException {<br/> + byte[] responseBytes;<br/> + try {<br/> + InputStream request = httpExchange.getRequestBody();<br/> + byte[] requestBytes = new byte<span class="error">#91;10000#93;</span>;<br/> + request.read(requestBytes);<br/> +<br/> + OCSPReq ocspRequest = new OCSPReq(requestBytes);<br/> + Req[] requestList = ocspRequest.getRequestList();<br/> +<br/> + DigestCalculator digestCalculator = new JcaDigestCalculatorProviderBuilder().build().get(CertificateID.HASH_SHA1);<br/> +<br/> + BasicOCSPRespBuilder responseBuilder = new JcaBasicOCSPRespBuilder(rootKeyPair.getPublic(), digestCalculator);<br/> + for ( Req req : requestList ) {<br/> + CertificateID certId = req.getCertID();<br/> + CertificateID revokedCertId = new JcaCertificateID(digestCalculator, rootCertificate, revokedCert.getSerialNumber());<br/> + CertificateStatus certificateStatus;<br/> + if (revokedCertId.equals(certId)) </p> { + certificateStatus = new UnknownStatus(); + } <p> else </p> { + certificateStatus = CertificateStatus.GOOD; + } <p> +<br/> + responseBuilder.addResponse(certId, certificateStatus,null);<br/> + }<br/> +<br/> + X509CertificateHolder[] chain = new X509CertificateHolder[] </p> { new JcaX509CertificateHolder(rootCertificate) } <p>;<br/> + ContentSigner signer = new JcaContentSignerBuilder("SHA1withRSA").setProvider("BC").build(rootKeyPair.getPrivate());<br/> + BasicOCSPResp ocspResponse = responseBuilder.build(signer, chain, Calendar.getInstance().getTime() );<br/> +<br/> + responseBytes = new OCSPRespBuilder().build(OCSPRespBuilder.SUCCESSFUL, ocspResponse).getEncoded();<br/> + } catch (OperatorException | CertificateEncodingException | OCSPException exception) </p> { + responseBytes = new OCSPResp(new OCSPResponse(new OCSPResponseStatus(OCSPRespBuilder.INTERNAL_ERROR), null)).getEncoded(); + } <p> +<br/> + Headers rh = httpExchange.getResponseHeaders();<br/> + rh.set("Content-Type", "application/ocsp-response");<br/> + httpExchange.sendResponseHeaders(200, responseBytes.length);<br/> +<br/> + OutputStream os = httpExchange.getResponseBody();<br/> + os.write(responseBytes);<br/> + os.close();<br/> + }<br/> + }<br/> +<br/> + private X509Certificate createSelfSignedCertifcate(KeyPair keyPair) throws Exception </p> { + X500NameBuilder nameBuilder = new X500NameBuilder(BCStyle.INSTANCE); + nameBuilder.addRDN(BCStyle.CN, HOSTNAME); + Date notBefore = new Date(); // time from which certificate is valid + Calendar cal = Calendar.getInstance(); + cal.setTime(notBefore); + cal.add(Calendar.YEAR, 1); + Date notAfter = cal.getTime(); + BigInteger serialNumber = new BigInteger(128, new Random()); + + X509v3CertificateBuilder certificateBuilder = + new JcaX509v3CertificateBuilder(nameBuilder.build(), serialNumber, notBefore, notAfter, nameBuilder.build(), keyPair.getPublic()) + .addExtension(Extension.basicConstraints, true, new BasicConstraints(0)) + .addExtension(Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyCertSign | KeyUsage.cRLSign)); + + return new JcaX509CertificateConverter().getCertificate(certificateBuilder.build(contentSigner)); + } <p> +<br/> + private void buildCRL(X509Certificate x509Certificate, String crlPath) throws Exception </p> { + X509v2CRLBuilder builder = new JcaX509v2CRLBuilder(x509Certificate.getIssuerX500Principal(), new Date()); + Date notBefore = new Date(); + Calendar cal = Calendar.getInstance(); + cal.setTime(notBefore); + cal.add(Calendar.YEAR, 1); + Date notAfter = cal.getTime(); + builder.setNextUpdate(notAfter); + builder.addCRLEntry(x509Certificate.getSerialNumber(), new Date(), CRLReason.cACompromise); + builder.addExtension(Extension.authorityKeyIdentifier, false, new JcaX509ExtensionUtils().createAuthorityKeyIdentifier(rootCertificate)); + builder.addExtension(Extension.cRLNumber, false, new CRLNumber(new BigInteger("1000"))); + + X509CRLHolder cRLHolder = builder.build(contentSigner); + + PemWriter pemWriter = new PemWriter(new FileWriter(crlPath)); + pemWriter.writeObject(new MiscPEMGenerator(cRLHolder)); + pemWriter.flush(); + pemWriter.close(); + } <p> +<br/> + public X509Certificate buildEndEntityCert(KeyPair keyPair, X509Certificate caCert, PrivateKey caPrivateKey,<br/> + String hostname, String ipAddress, String crlPath, Integer ocspPort) throws Exception {<br/> + X509CertificateHolder holder = new JcaX509CertificateHolder(caCert);<br/> + ContentSigner signer =new JcaContentSignerBuilder("SHA256WithRSAEncryption").build(caPrivateKey);<br/> +<br/> + Listlt;GeneralNamegt; generalNames = new ArrayListlt;gt;();<br/> + if (hostname != null) </p> { + generalNames.add(new GeneralName(GeneralName.dNSName, hostname)); + } <p> +<br/> + if (ipAddress != null) </p> { + generalNames.add(new GeneralName(GeneralName.iPAddress, ipAddress)); + } <p> +<br/> + SubjectPublicKeyInfo entityKeyInfo =<br/> + SubjectPublicKeyInfoFactory.createSubjectPublicKeyInfo(PublicKeyFactory.createKey(keyPair.getPublic().getEncoded()));<br/> + X509ExtensionUtils extensionUtils = new BcX509ExtensionUtils();<br/> + X509v3CertificateBuilder certificateBuilder = new JcaX509v3CertificateBuilder(holder.getSubject(), new BigInteger(128, new Random()),<br/> + new Date(System.currentTimeMillis()), new Date(System.currentTimeMillis() + 100000),<br/> + new X500Name("CN=Test End Entity Certificate"), keyPair.getPublic())<br/> + .addExtension(Extension.authorityKeyIdentifier, false, extensionUtils.createAuthorityKeyIdentifier(holder))<br/> + .addExtension(Extension.subjectKeyIdentifier, false, extensionUtils.createSubjectKeyIdentifier(entityKeyInfo))<br/> + .addExtension(Extension.basicConstraints, true, new BasicConstraints(false))<br/> + .addExtension(Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyEncipherment));<br/> +<br/> + if (!generalNames.isEmpty()) {<br/> + certificateBuilder.addExtension(Extension.subjectAlternativeName, true, new GeneralNames(generalNames.toArray(new GeneralName[] {})));<br/> + }<br/> +<br/> + if (crlPath != null) {<br/> + DistributionPointName distPointOne = new DistributionPointName(new GeneralNames(<br/> + new GeneralName(GeneralName.uniformResourceIdentifier,"file://" + crlPath)));<br/> +<br/> + certificateBuilder.addExtension(Extension.cRLDistributionPoints, false,<br/> + new CRLDistPoint(new DistributionPoint[] </p> { new DistributionPoint(distPointOne, null, null) } <p>));<br/> + }<br/> +<br/> + if (ocspPort != null) </p> { + certificateBuilder.addExtension(Extension.authorityInfoAccess, false, new AuthorityInformationAccess(X509ObjectIdentifiers.ocspAccessMethod, + new GeneralName(GeneralName.uniformResourceIdentifier, "http://" + hostname + ":" + ocspPort))); + } <p> +<br/> + return new JcaX509CertificateConverter().getCertificate(certificateBuilder.build(signer));<br/> + }<br/> +<br/> +<br/> + private KeyPair createKeyPair() throws NoSuchProviderException, NoSuchAlgorithmException </p> { + KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA", BouncyCastleProvider.PROVIDER_NAME); + keyPairGenerator.initialize(4096); + KeyPair keyPair = keyPairGenerator.genKeyPair(); + return keyPair; + } <p> +<br/> + private String generateQuorumConfiguration() </p> { + int portQp1 = PortAssignment.unique(); + int portQp2 = PortAssignment.unique(); + int portQp3 = PortAssignment.unique(); + + int portLe1 = PortAssignment.unique(); + int portLe2 = PortAssignment.unique(); + int portLe3 = PortAssignment.unique(); + + + + return "server.1=127.0.0.1:" + (portQp1) + ":" + (portLe1) + ";" + clientPortQp1 + "\n" + + "server.2=127.0.0.1:" + (portQp2) + ":" + (portLe2) + ";" + clientPortQp2 + "\n" + + "server.3=127.0.0.1:" + (portQp3) + ":" + (portLe3) + ";" + clientPortQp3; + } <p> +<br/> +<br/> + public void setSSLSystemProperties() </p> { + System.setProperty(ServerCnxnFactory.ZOOKEEPER_SERVER_CNXN_FACTORY, "org.apache.zookeeper.server.NettyServerCnxnFactory"); + System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, "org.apache.zookeeper.ClientCnxnSocketNetty"); + System.setProperty(quorumX509Util.getSslKeystoreLocationProperty(), validKeystorePath); + System.setProperty(quorumX509Util.getSslKeystorePasswdProperty(), "testpass"); + System.setProperty(quorumX509Util.getSslTruststoreLocationProperty(), truststorePath); + System.setProperty(quorumX509Util.getSslTruststorePasswdProperty(), "testpass"); + System.setProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty(), "false"); + } <p> +<br/> + @After<br/> + public void cleanUp() throws Exception </p> { + clearSSLSystemProperties(); + q1.shutdown(); + q2.shutdown(); + q3.shutdown(); + + Security.removeProvider("BC"); + } <p> +<br/> + private void clearSSLSystemProperties() </p> { + System.clearProperty(quorumX509Util.getSslKeystoreLocationProperty()); + System.clearProperty(quorumX509Util.getSslKeystorePasswdProperty()); + System.clearProperty(quorumX509Util.getSslTruststoreLocationProperty()); + System.clearProperty(quorumX509Util.getSslTruststorePasswdProperty()); + System.clearProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty()); + System.clearProperty(quorumX509Util.getSslOcspEnabledProperty()); + System.clearProperty(quorumX509Util.getSslCrlEnabledProperty()); + } <p> +<br/> + @Test(timeout = 300000)<br/> + public void testQuorumSSL() throws Exception </p> { + q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED); + q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED); + + + q1.start(); + q2.start(); + + Assert.assertTrue(ClientBase.waitForServerUp("127.0.0.1:" + clientPortQp1, CONNECTION_TIMEOUT)); + Assert.assertTrue(ClientBase.waitForServerUp("127.0.0.1:" + clientPortQp2, CONNECTION_TIMEOUT)); + + clearSSLSystemProperties(); + + // This server should fail to join the quorum as it is not using ssl. + q3 = new MainThread(3, clientPortQp3, quorumConfiguration); + q3.start(); + + Assert.assertFalse(ClientBase.waitForServerUp("127.0.0.1:" + clientPortQp3, CONNECTION_TIMEOUT)); + } <p> +<br/> + @Test(timeout = 300000)<br/> + public void testRollingUpgrade() throws Exception {<br/> #8212; End diff #8211;</p> <p> This test is pretty flaky - please check internal Jenkins to diagnose. </p></comment>
<comment id="15968348" author="hadoopqa" created="Thu, 13 Apr 2017 22:47:11 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/543//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/543//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/543//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/543//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/543//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/543//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15969267" author="githubbot" created="Fri, 14 Apr 2017 17:11:11 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111603427" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111603427</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -150,7 +196,7 @@ public static X509KeyManager createKeyManager(String keyStoreLocation, String ke<br/> KeyStore ks = KeyStore.getInstance("JKS");<br/> inputStream = new FileInputStream(keyStoreFile);<br/> ks.load(inputStream, keyStorePasswordChars);</p> <ul class="alternate" type="square"> <li>KeyManagerFactory kmf = KeyManagerFactory.getInstance("SunX509");<br/> + KeyManagerFactory kmf = KeyManagerFactory.getInstance("PKIX"); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> A comment has been added where pkix is used for the trustmanager factory. We don't actually need this change for the keymanager, but i preferred to be consistent.</p></comment>
<comment id="15969278" author="githubbot" created="Fri, 14 Apr 2017 17:19:55 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111604664" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111604664</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java #8212;<br/> @@ -21,6 +21,7 @@<br/> import org.apache.zookeeper.ClientCnxn.EndOfStreamException;<br/> import org.apache.zookeeper.ClientCnxn.Packet;<br/> import org.apache.zookeeper.client.ZKClientConfig;<br/> +import org.apache.zookeeper.common.ClientX509Util;<br/> import org.apache.zookeeper.common.X509Util;<br/> #8212; End diff #8211;</p> <p> fixed</p></comment>
<comment id="15969279" author="githubbot" created="Fri, 14 Apr 2017 17:20:02 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111604682" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111604682</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java #8212;<br/> @@ -31,6 +31,7 @@<br/> import javax.net.ssl.SSLSocket;<br/> import javax.net.ssl.SSLSocketFactory;</p> <p> +import org.apache.zookeeper.common.ClientX509Util;<br/> import org.apache.zookeeper.common.X509Exception.SSLContextException;<br/> import org.apache.zookeeper.common.X509Util;<br/> #8212; End diff #8211;</p> <p> fixed</p></comment>
<comment id="15969286" author="githubbot" created="Fri, 14 Apr 2017 17:24:20 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111605341" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111605341</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java #8212;<br/> @@ -383,6 +387,7 @@ public void run() </p> { + leader.self.getView().get(this.sid).toString()); } <p> else {<br/> LOG.info("Follower sid: " + this.sid + " not in the current config " + Long.toHexString(leader.self.getQuorumVerifier().getVersion()));<br/> + //TODO: Hostname verification possible<br/> #8212; End diff #8211;</p> <p> fixed</p></comment>
<comment id="15969288" author="githubbot" created="Fri, 14 Apr 2017 17:24:49 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111605399" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111605399</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java #8212;<br/> @@ -51,6 +53,8 @@<br/> import org.slf4j.Logger;<br/> import org.slf4j.LoggerFactory;</p> <p> +import javax.net.ssl.SSLSocket;<br/> +<br/> #8212; End diff #8211;</p> <p> fixed</p></comment>
<comment id="15969289" author="githubbot" created="Fri, 14 Apr 2017 17:24:54 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111605424" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111605424</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Follower.java #8212;<br/> @@ -71,7 +71,7 @@ void followLeader() throws InterruptedException {<br/> self.end_fle = 0;<br/> fzk.registerJMX(new FollowerBean(this, zk), self.jmxLocalPeerBean);<br/> try {</p> <ul class="alternate" type="square"> <li>InetSocketAddress addr = findLeader();<br/> + InetSocketAddress addr = findLeader(); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> fixed</p></comment>
<comment id="15969290" author="githubbot" created="Fri, 14 Apr 2017 17:25:14 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111605464" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111605464</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -18,63 +18,110 @@<br/> package org.apache.zookeeper.common;</p> <p> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +import javax.net.ssl.CertPathTrustManagerParameters;<br/> import javax.net.ssl.KeyManager;<br/> import javax.net.ssl.KeyManagerFactory;<br/> import javax.net.ssl.SSLContext;<br/> +import javax.net.ssl.SSLParameters;<br/> +import javax.net.ssl.SSLServerSocket;<br/> +import javax.net.ssl.SSLSocket;<br/> import javax.net.ssl.TrustManager;<br/> import javax.net.ssl.TrustManagerFactory;<br/> +import javax.net.ssl.X509ExtendedTrustManager;<br/> import javax.net.ssl.X509KeyManager;<br/> import javax.net.ssl.X509TrustManager;<br/> import java.io.File;<br/> import java.io.FileInputStream;<br/> import java.io.IOException;<br/> +import java.security.KeyManagementException;<br/> import java.security.KeyStore;<br/> +import java.security.NoSuchAlgorithmException;<br/> +import java.security.Security;<br/> +import java.security.cert.PKIXBuilderParameters;<br/> +import java.security.cert.X509CertSelector;</p> <p> -import org.slf4j.Logger;<br/> -import org.slf4j.LoggerFactory;<br/> -<br/> -import static org.apache.zookeeper.common.X509Exception.KeyManagerException;<br/> -import static org.apache.zookeeper.common.X509Exception.SSLContextException;<br/> -import static org.apache.zookeeper.common.X509Exception.TrustManagerException;<br/> +import static org.apache.zookeeper.common.X509Exception.*;<br/> #8212; End diff #8211;</p> <p> fixed</p></comment>
<comment id="15969316" author="hadoopqa" created="Fri, 14 Apr 2017 17:42:33 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/544//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/544//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/544//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/544//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/544//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/544//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15969347" author="githubbot" created="Fri, 14 Apr 2017 18:06:58 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111612166" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111612166</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/ZKTrustManager.java #8212;<br/> @@ -0,0 +1,137 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + *<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + *<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.common;<br/> +<br/> +import org.apache.http.conn.ssl.DefaultHostnameVerifier;<br/> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +import javax.net.ssl.SSLEngine;<br/> +import javax.net.ssl.SSLException;<br/> +import javax.net.ssl.X509ExtendedTrustManager;<br/> +import java.net.InetAddress;<br/> +import java.net.Socket;<br/> +import java.net.UnknownHostException;<br/> +import java.security.cert.CertificateException;<br/> +import java.security.cert.X509Certificate;<br/> +<br/> +/**<br/> + * A custom TrustManager that supports hostname verification via org.apache.http.conn.ssl.DefaultHostnameVerifier.<br/> + *<br/> + * We attempt to perform verification using just the IP address first and if that fails will attempt to perform a<br/> + * reverse DNS lookup and verify using the hostname.<br/> + */<br/> +public class ZKTrustManager extends X509ExtendedTrustManager {<br/> +<br/> + private static final Logger LOG = LoggerFactory.getLogger(ZKTrustManager.class);<br/> +<br/> + private X509ExtendedTrustManager x509ExtendedTrustManager;<br/> + private boolean hostnameVerificationEnabled;<br/> + private boolean shouldVerifyClientHostname;<br/> +<br/> + private DefaultHostnameVerifier hostnameVerifier;<br/> +<br/> + /**<br/> + * Instantiate a new ZKTrustManager.<br/> + *<br/> + * @param x509ExtendedTrustManager The trustmanager to use for checkClientTrusted/checkServerTrusted logic<br/> + * @param hostnameVerificationEnabled If true, this TrustManager should verify hostnames.<br/> + * @param shouldVerifyClientHostname If true, and hostnameVerificationEnabled is true, the hostname of a client<br/> + * connecting to this machine will be verified in addition to the servers that this<br/> + * instance connects to. If false, and hostnameVerificationEnabled is true, only<br/> + * the hostnames of servers that this instance connects to will be verified. If<br/> + * hostnameVerificationEnabled is false, this argument is ignored.<br/> + */<br/> + public ZKTrustManager(X509ExtendedTrustManager x509ExtendedTrustManager, boolean hostnameVerificationEnabled, boolean shouldVerifyClientHostname) </p> { + this.x509ExtendedTrustManager = x509ExtendedTrustManager; + this.hostnameVerificationEnabled = hostnameVerificationEnabled; + this.shouldVerifyClientHostname = shouldVerifyClientHostname; + + hostnameVerifier = new DefaultHostnameVerifier(); + } <p> +<br/> + @Override<br/> + public X509Certificate[] getAcceptedIssuers() </p> { + return x509ExtendedTrustManager.getAcceptedIssuers(); + } <p> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) </p> { + performHostVerification(socket.getInetAddress(), chain[0]); + }<br/> + x509ExtendedTrustManager.checkClientTrusted(chain, authType, socket);<br/> + }<br/> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled) { + performHostVerification(socket.getInetAddress(), chain[0]); + } <p> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, socket);<br/> + }<br/> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) {<br/> + try </p> { + performHostVerification(InetAddress.getByName(engine.getPeerHost()), chain[0]); + } catch (UnknownHostException e) { + throw new CertificateException("failed to verify host", e); + }<br/> + }<br/> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);<br/> + }<br/> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException {<br/> + if (hostnameVerificationEnabled) {<br/> + try { + performHostVerification(InetAddress.getByName(engine.getPeerHost()), chain[0]); + } <p> catch (UnknownHostException e) </p> { + throw new CertificateException("failed to verify host", e); + } <p> + }<br/> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);<br/> + }<br/> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException </p> { + x509ExtendedTrustManager.checkClientTrusted(chain, authType); + } <p> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException </p> { + x509ExtendedTrustManager.checkServerTrusted(chain, authType); + } <p> +<br/> + private void performHostVerification(InetAddress inetAddress, X509Certificate certificate) throws CertificateException {<br/> + try {<br/> + hostnameVerifier.verify(inetAddress.getHostAddress(), certificate);<br/> #8212; End diff #8211;</p> <p> So we have a few hostname checks that we could consider. Please let me know if I am missing any.</p> <p> 1. Check that the address/hostname of the machine matches what is listed on the certificate<br/> 2. Check that the address/hostname of the machine matches what is expected from zoo.cfg (this may also require reading the sid from the packet sent when a connection is established). <br/> 3. Check that the address/hostname listed on the certificate matches what is expected from zoo.cfg</p> <p> This patch only performs check 1. I think that check 3 is something @geek101 mentioned earlier and we agreed this can be moved to another patch as it is more complicated. </p> <p> I think it is also possible to implement check 2. This can exist entirely outside of tls/ssl support and is something we should consider based on its own merits. </p> <p> I think having checks 1 and 2 would be plenty secure and we would not need check 3.</p> <p> Let me know what you think @hanm. </p> </comment>
<comment id="15969355" author="githubbot" created="Fri, 14 Apr 2017 18:17:10 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111613841" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111613841</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/ZKTrustManager.java #8212;<br/> @@ -0,0 +1,137 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + *<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + *<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.common;<br/> +<br/> +import org.apache.http.conn.ssl.DefaultHostnameVerifier;<br/> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +import javax.net.ssl.SSLEngine;<br/> +import javax.net.ssl.SSLException;<br/> +import javax.net.ssl.X509ExtendedTrustManager;<br/> +import java.net.InetAddress;<br/> +import java.net.Socket;<br/> +import java.net.UnknownHostException;<br/> +import java.security.cert.CertificateException;<br/> +import java.security.cert.X509Certificate;<br/> +<br/> +/**<br/> + * A custom TrustManager that supports hostname verification via org.apache.http.conn.ssl.DefaultHostnameVerifier.<br/> + *<br/> + * We attempt to perform verification using just the IP address first and if that fails will attempt to perform a<br/> + * reverse DNS lookup and verify using the hostname.<br/> + */<br/> +public class ZKTrustManager extends X509ExtendedTrustManager {<br/> +<br/> + private static final Logger LOG = LoggerFactory.getLogger(ZKTrustManager.class);<br/> +<br/> + private X509ExtendedTrustManager x509ExtendedTrustManager;<br/> + private boolean hostnameVerificationEnabled;<br/> + private boolean shouldVerifyClientHostname;<br/> +<br/> + private DefaultHostnameVerifier hostnameVerifier;<br/> +<br/> + /**<br/> + * Instantiate a new ZKTrustManager.<br/> + *<br/> + * @param x509ExtendedTrustManager The trustmanager to use for checkClientTrusted/checkServerTrusted logic<br/> + * @param hostnameVerificationEnabled If true, this TrustManager should verify hostnames.<br/> + * @param shouldVerifyClientHostname If true, and hostnameVerificationEnabled is true, the hostname of a client<br/> + * connecting to this machine will be verified in addition to the servers that this<br/> + * instance connects to. If false, and hostnameVerificationEnabled is true, only<br/> + * the hostnames of servers that this instance connects to will be verified. If<br/> + * hostnameVerificationEnabled is false, this argument is ignored.<br/> + */<br/> + public ZKTrustManager(X509ExtendedTrustManager x509ExtendedTrustManager, boolean hostnameVerificationEnabled, boolean shouldVerifyClientHostname) </p> { + this.x509ExtendedTrustManager = x509ExtendedTrustManager; + this.hostnameVerificationEnabled = hostnameVerificationEnabled; + this.shouldVerifyClientHostname = shouldVerifyClientHostname; + + hostnameVerifier = new DefaultHostnameVerifier(); + } <p> +<br/> + @Override<br/> + public X509Certificate[] getAcceptedIssuers() </p> { + return x509ExtendedTrustManager.getAcceptedIssuers(); + } <p> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) </p> { + performHostVerification(socket.getInetAddress(), chain[0]); + }<br/> + x509ExtendedTrustManager.checkClientTrusted(chain, authType, socket);<br/> + }<br/> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled) { + performHostVerification(socket.getInetAddress(), chain[0]); + } <p> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, socket);<br/> + }<br/> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) {<br/> + try </p> { + performHostVerification(InetAddress.getByName(engine.getPeerHost()), chain[0]); + } catch (UnknownHostException e) { + throw new CertificateException("failed to verify host", e); + }<br/> + }<br/> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);<br/> + }<br/> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException {<br/> + if (hostnameVerificationEnabled) {<br/> + try { + performHostVerification(InetAddress.getByName(engine.getPeerHost()), chain[0]); + } <p> catch (UnknownHostException e) </p> { + throw new CertificateException("failed to verify host", e); + } <p> + }<br/> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);<br/> + }<br/> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException </p> { + x509ExtendedTrustManager.checkClientTrusted(chain, authType); + } <p> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException </p> { + x509ExtendedTrustManager.checkServerTrusted(chain, authType); + } <p> +<br/> + private void performHostVerification(InetAddress inetAddress, X509Certificate certificate) throws CertificateException {<br/> + try {<br/> + hostnameVerifier.verify(inetAddress.getHostAddress(), certificate);<br/> #8212; End diff #8211;</p> <p> check 1 and check 2 together do what check 3 does, no? So I think 1+2 is enough. The point is to make sure that:</p> <ul> <li>The peer is what it claims to be (check 1 - authentication).</li> <li>The peer is authorized to join quorum (check 2 - authorization).</li> </ul> </comment>
<comment id="15969652" author="hadoopqa" created="Fri, 14 Apr 2017 22:56:45 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/547//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/547//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/547//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/547//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/547//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/547//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15969789" author="githubbot" created="Sat, 15 Apr 2017 02:44:58 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r111656663" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r111656663</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/test/QuorumSSLTest.java #8212;<br/> @@ -0,0 +1,668 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + * lt;p/gt;<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + * lt;p/gt;<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.test;<br/> +<br/> +import com.sun.net.httpserver.Headers;<br/> +import com.sun.net.httpserver.HttpHandler;<br/> +import com.sun.net.httpserver.HttpServer;<br/> +import org.apache.zookeeper.PortAssignment;<br/> +import org.apache.zookeeper.client.ZKClientConfig;<br/> +import org.apache.zookeeper.common.QuorumX509Util;<br/> +import org.apache.zookeeper.server.ServerCnxnFactory;<br/> +import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;<br/> +import org.bouncycastle.asn1.ocsp.OCSPResponse;<br/> +import org.bouncycastle.asn1.ocsp.OCSPResponseStatus;<br/> +import org.bouncycastle.asn1.x500.X500Name;<br/> +import org.bouncycastle.asn1.x500.X500NameBuilder;<br/> +import org.bouncycastle.asn1.x500.style.BCStyle;<br/> +import org.bouncycastle.asn1.x509.AuthorityInformationAccess;<br/> +import org.bouncycastle.asn1.x509.BasicConstraints;<br/> +import org.bouncycastle.asn1.x509.CRLDistPoint;<br/> +import org.bouncycastle.asn1.x509.CRLNumber;<br/> +import org.bouncycastle.asn1.x509.CRLReason;<br/> +import org.bouncycastle.asn1.x509.DistributionPoint;<br/> +import org.bouncycastle.asn1.x509.DistributionPointName;<br/> +import org.bouncycastle.asn1.x509.Extension;<br/> +import org.bouncycastle.asn1.x509.GeneralName;<br/> +import org.bouncycastle.asn1.x509.GeneralNames;<br/> +import org.bouncycastle.asn1.x509.KeyUsage;<br/> +import org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;<br/> +import org.bouncycastle.asn1.x509.X509ObjectIdentifiers;<br/> +import org.bouncycastle.cert.X509CRLHolder;<br/> +import org.bouncycastle.cert.X509CertificateHolder;<br/> +import org.bouncycastle.cert.X509ExtensionUtils;<br/> +import org.bouncycastle.cert.X509v2CRLBuilder;<br/> +import org.bouncycastle.cert.X509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.bc.BcX509ExtensionUtils;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateConverter;<br/> +import org.bouncycastle.cert.jcajce.JcaX509CertificateHolder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v2CRLBuilder;<br/> +import org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder;<br/> +import org.bouncycastle.cert.ocsp.BasicOCSPResp;<br/> +import org.bouncycastle.cert.ocsp.BasicOCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.CertificateID;<br/> +import org.bouncycastle.cert.ocsp.CertificateStatus;<br/> +import org.bouncycastle.cert.ocsp.OCSPException;<br/> +import org.bouncycastle.cert.ocsp.OCSPReq;<br/> +import org.bouncycastle.cert.ocsp.OCSPResp;<br/> +import org.bouncycastle.cert.ocsp.OCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.Req;<br/> +import org.bouncycastle.cert.ocsp.UnknownStatus;<br/> +import org.bouncycastle.cert.ocsp.jcajce.JcaBasicOCSPRespBuilder;<br/> +import org.bouncycastle.cert.ocsp.jcajce.JcaCertificateID;<br/> +import org.bouncycastle.crypto.util.PublicKeyFactory;<br/> +import org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory;<br/> +import org.bouncycastle.jce.provider.BouncyCastleProvider;<br/> +import org.bouncycastle.openssl.MiscPEMGenerator;<br/> +import org.bouncycastle.operator.ContentSigner;<br/> +import org.bouncycastle.operator.DigestCalculator;<br/> +import org.bouncycastle.operator.OperatorException;<br/> +import org.bouncycastle.operator.jcajce.JcaContentSignerBuilder;<br/> +import org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder;<br/> +import org.bouncycastle.util.io.pem.PemWriter;<br/> +import org.junit.After;<br/> +import org.junit.Assert;<br/> +import org.junit.Before;<br/> +import org.junit.Test;<br/> +<br/> +import java.io.FileOutputStream;<br/> +import java.io.FileWriter;<br/> +import java.io.IOException;<br/> +import java.io.InputStream;<br/> +import java.io.OutputStream;<br/> +import java.math.BigInteger;<br/> +import java.net.InetSocketAddress;<br/> +import java.security.KeyPair;<br/> +import java.security.KeyPairGenerator;<br/> +import java.security.KeyStore;<br/> +import java.security.NoSuchAlgorithmException;<br/> +import java.security.NoSuchProviderException;<br/> +import java.security.PrivateKey;<br/> +import java.security.Security;<br/> +import java.security.cert.Certificate;<br/> +import java.security.cert.CertificateEncodingException;<br/> +import java.security.cert.X509Certificate;<br/> +import java.util.ArrayList;<br/> +import java.util.Calendar;<br/> +import java.util.Date;<br/> +import java.util.HashMap;<br/> +import java.util.List;<br/> +import java.util.Map;<br/> +import java.util.Random;<br/> +<br/> +import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;<br/> +import static org.apache.zookeeper.test.ClientBase.createTmpDir;<br/> +<br/> +public class QuorumSSLTest extends QuorumPeerTestBase {<br/> +<br/> + private static final String SSL_QUORUM_ENABLED = "sslQuorum=true\n";<br/> + private static final String PORT_UNIFICATION_ENABLED = "portUnification=true\n";<br/> + private static final String PORT_UNIFICATION_DISABLED = "portUnification=false\n";<br/> +<br/> + private static final char[] PASSWORD = "testpass".toCharArray();<br/> + private static final String HOSTNAME = "localhost";<br/> +<br/> + private QuorumX509Util quorumX509Util = new QuorumX509Util();<br/> +<br/> + private MainThread q1;<br/> + private MainThread q2;<br/> + private MainThread q3;<br/> +<br/> + private int clientPortQp1;<br/> + private int clientPortQp2;<br/> + private int clientPortQp3;<br/> +<br/> + private String tmpDir;<br/> +<br/> + private String quorumConfiguration;<br/> + private String validKeystorePath;<br/> + private String truststorePath;<br/> +<br/> + private KeyPair rootKeyPair;<br/> + private X509Certificate rootCertificate;<br/> +<br/> + private KeyPair defaultKeyPair;<br/> +<br/> + private ContentSigner contentSigner;<br/> +<br/> + @Before<br/> + public void setup() throws Exception </p> { + ClientBase.setupTestEnv(); + + tmpDir = createTmpDir().getAbsolutePath(); + + clientPortQp1 = PortAssignment.unique(); + clientPortQp2 = PortAssignment.unique(); + clientPortQp3 = PortAssignment.unique(); + + validKeystorePath = tmpDir + "/valid.jks"; + truststorePath = tmpDir + "/truststore.jks"; + + quorumConfiguration = generateQuorumConfiguration(); + + Security.addProvider(new BouncyCastleProvider()); + + rootKeyPair = createKeyPair(); + contentSigner = new JcaContentSignerBuilder("SHA256WithRSAEncryption").build(rootKeyPair.getPrivate()); + rootCertificate = createSelfSignedCertifcate(rootKeyPair); + + // Write the truststore + KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType()); + trustStore.load(null, PASSWORD); + trustStore.setCertificateEntry(rootCertificate.getSubjectDN().toString(), rootCertificate); + FileOutputStream outputStream = new FileOutputStream(truststorePath); + trustStore.store(outputStream, PASSWORD); + outputStream.flush(); + outputStream.close(); + + defaultKeyPair = createKeyPair(); + X509Certificate validCertificate = buildEndEntityCert(defaultKeyPair, rootCertificate, rootKeyPair.getPrivate(), + HOSTNAME, null, null, null); + writeKeystore(validCertificate, defaultKeyPair, validKeystorePath); + + setSSLSystemProperties(); + } <p> +<br/> + private void writeKeystore(X509Certificate certificate, KeyPair entityKeyPair, String path) throws Exception {<br/> + KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());<br/> + keyStore.load(null, PASSWORD);<br/> + keyStore.setKeyEntry("alias", entityKeyPair.getPrivate(), PASSWORD, new Certificate[] </p> { certificate } <p>);<br/> + FileOutputStream outputStream = new FileOutputStream(path);<br/> + keyStore.store(outputStream, PASSWORD);<br/> + outputStream.flush();<br/> + outputStream.close();<br/> + }<br/> +<br/> +<br/> + private class OCSPHandler implements HttpHandler {<br/> +<br/> + private X509Certificate revokedCert;<br/> +<br/> + // Builds an OCSPHandler that responds with a good status for all certificates<br/> + // except revokedCert.<br/> + public OCSPHandler(X509Certificate revokedCert) </p> { + this.revokedCert = revokedCert; + } <p> +<br/> + @Override<br/> + public void handle(com.sun.net.httpserver.HttpExchange httpExchange) throws IOException {<br/> + byte[] responseBytes;<br/> + try {<br/> + InputStream request = httpExchange.getRequestBody();<br/> + byte[] requestBytes = new byte<span class="error">#91;10000#93;</span>;<br/> + request.read(requestBytes);<br/> +<br/> + OCSPReq ocspRequest = new OCSPReq(requestBytes);<br/> + Req[] requestList = ocspRequest.getRequestList();<br/> +<br/> + DigestCalculator digestCalculator = new JcaDigestCalculatorProviderBuilder().build().get(CertificateID.HASH_SHA1);<br/> +<br/> + BasicOCSPRespBuilder responseBuilder = new JcaBasicOCSPRespBuilder(rootKeyPair.getPublic(), digestCalculator);<br/> + for ( Req req : requestList ) {<br/> + CertificateID certId = req.getCertID();<br/> + CertificateID revokedCertId = new JcaCertificateID(digestCalculator, rootCertificate, revokedCert.getSerialNumber());<br/> + CertificateStatus certificateStatus;<br/> + if (revokedCertId.equals(certId)) </p> { + certificateStatus = new UnknownStatus(); + } <p> else </p> { + certificateStatus = CertificateStatus.GOOD; + } <p> +<br/> + responseBuilder.addResponse(certId, certificateStatus,null);<br/> + }<br/> +<br/> + X509CertificateHolder[] chain = new X509CertificateHolder[] </p> { new JcaX509CertificateHolder(rootCertificate) } <p>;<br/> + ContentSigner signer = new JcaContentSignerBuilder("SHA1withRSA").setProvider("BC").build(rootKeyPair.getPrivate());<br/> + BasicOCSPResp ocspResponse = responseBuilder.build(signer, chain, Calendar.getInstance().getTime() );<br/> +<br/> + responseBytes = new OCSPRespBuilder().build(OCSPRespBuilder.SUCCESSFUL, ocspResponse).getEncoded();<br/> + } catch (OperatorException | CertificateEncodingException | OCSPException exception) </p> { + responseBytes = new OCSPResp(new OCSPResponse(new OCSPResponseStatus(OCSPRespBuilder.INTERNAL_ERROR), null)).getEncoded(); + } <p> +<br/> + Headers rh = httpExchange.getResponseHeaders();<br/> + rh.set("Content-Type", "application/ocsp-response");<br/> + httpExchange.sendResponseHeaders(200, responseBytes.length);<br/> +<br/> + OutputStream os = httpExchange.getResponseBody();<br/> + os.write(responseBytes);<br/> + os.close();<br/> + }<br/> + }<br/> +<br/> + private X509Certificate createSelfSignedCertifcate(KeyPair keyPair) throws Exception </p> { + X500NameBuilder nameBuilder = new X500NameBuilder(BCStyle.INSTANCE); + nameBuilder.addRDN(BCStyle.CN, HOSTNAME); + Date notBefore = new Date(); // time from which certificate is valid + Calendar cal = Calendar.getInstance(); + cal.setTime(notBefore); + cal.add(Calendar.YEAR, 1); + Date notAfter = cal.getTime(); + BigInteger serialNumber = new BigInteger(128, new Random()); + + X509v3CertificateBuilder certificateBuilder = + new JcaX509v3CertificateBuilder(nameBuilder.build(), serialNumber, notBefore, notAfter, nameBuilder.build(), keyPair.getPublic()) + .addExtension(Extension.basicConstraints, true, new BasicConstraints(0)) + .addExtension(Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyCertSign | KeyUsage.cRLSign)); + + return new JcaX509CertificateConverter().getCertificate(certificateBuilder.build(contentSigner)); + } <p> +<br/> + private void buildCRL(X509Certificate x509Certificate, String crlPath) throws Exception </p> { + X509v2CRLBuilder builder = new JcaX509v2CRLBuilder(x509Certificate.getIssuerX500Principal(), new Date()); + Date notBefore = new Date(); + Calendar cal = Calendar.getInstance(); + cal.setTime(notBefore); + cal.add(Calendar.YEAR, 1); + Date notAfter = cal.getTime(); + builder.setNextUpdate(notAfter); + builder.addCRLEntry(x509Certificate.getSerialNumber(), new Date(), CRLReason.cACompromise); + builder.addExtension(Extension.authorityKeyIdentifier, false, new JcaX509ExtensionUtils().createAuthorityKeyIdentifier(rootCertificate)); + builder.addExtension(Extension.cRLNumber, false, new CRLNumber(new BigInteger("1000"))); + + X509CRLHolder cRLHolder = builder.build(contentSigner); + + PemWriter pemWriter = new PemWriter(new FileWriter(crlPath)); + pemWriter.writeObject(new MiscPEMGenerator(cRLHolder)); + pemWriter.flush(); + pemWriter.close(); + } <p> +<br/> + public X509Certificate buildEndEntityCert(KeyPair keyPair, X509Certificate caCert, PrivateKey caPrivateKey,<br/> + String hostname, String ipAddress, String crlPath, Integer ocspPort) throws Exception {<br/> + X509CertificateHolder holder = new JcaX509CertificateHolder(caCert);<br/> + ContentSigner signer =new JcaContentSignerBuilder("SHA256WithRSAEncryption").build(caPrivateKey);<br/> +<br/> + Listlt;GeneralNamegt; generalNames = new ArrayListlt;gt;();<br/> + if (hostname != null) </p> { + generalNames.add(new GeneralName(GeneralName.dNSName, hostname)); + } <p> +<br/> + if (ipAddress != null) </p> { + generalNames.add(new GeneralName(GeneralName.iPAddress, ipAddress)); + } <p> +<br/> + SubjectPublicKeyInfo entityKeyInfo =<br/> + SubjectPublicKeyInfoFactory.createSubjectPublicKeyInfo(PublicKeyFactory.createKey(keyPair.getPublic().getEncoded()));<br/> + X509ExtensionUtils extensionUtils = new BcX509ExtensionUtils();<br/> + X509v3CertificateBuilder certificateBuilder = new JcaX509v3CertificateBuilder(holder.getSubject(), new BigInteger(128, new Random()),<br/> + new Date(System.currentTimeMillis()), new Date(System.currentTimeMillis() + 100000),<br/> + new X500Name("CN=Test End Entity Certificate"), keyPair.getPublic())<br/> + .addExtension(Extension.authorityKeyIdentifier, false, extensionUtils.createAuthorityKeyIdentifier(holder))<br/> + .addExtension(Extension.subjectKeyIdentifier, false, extensionUtils.createSubjectKeyIdentifier(entityKeyInfo))<br/> + .addExtension(Extension.basicConstraints, true, new BasicConstraints(false))<br/> + .addExtension(Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyEncipherment));<br/> +<br/> + if (!generalNames.isEmpty()) {<br/> + certificateBuilder.addExtension(Extension.subjectAlternativeName, true, new GeneralNames(generalNames.toArray(new GeneralName[] {})));<br/> + }<br/> +<br/> + if (crlPath != null) {<br/> + DistributionPointName distPointOne = new DistributionPointName(new GeneralNames(<br/> + new GeneralName(GeneralName.uniformResourceIdentifier,"file://" + crlPath)));<br/> +<br/> + certificateBuilder.addExtension(Extension.cRLDistributionPoints, false,<br/> + new CRLDistPoint(new DistributionPoint[] </p> { new DistributionPoint(distPointOne, null, null) } <p>));<br/> + }<br/> +<br/> + if (ocspPort != null) </p> { + certificateBuilder.addExtension(Extension.authorityInfoAccess, false, new AuthorityInformationAccess(X509ObjectIdentifiers.ocspAccessMethod, + new GeneralName(GeneralName.uniformResourceIdentifier, "http://" + hostname + ":" + ocspPort))); + } <p> +<br/> + return new JcaX509CertificateConverter().getCertificate(certificateBuilder.build(signer));<br/> + }<br/> +<br/> +<br/> + private KeyPair createKeyPair() throws NoSuchProviderException, NoSuchAlgorithmException </p> { + KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA", BouncyCastleProvider.PROVIDER_NAME); + keyPairGenerator.initialize(4096); + KeyPair keyPair = keyPairGenerator.genKeyPair(); + return keyPair; + } <p> +<br/> + private String generateQuorumConfiguration() </p> { + int portQp1 = PortAssignment.unique(); + int portQp2 = PortAssignment.unique(); + int portQp3 = PortAssignment.unique(); + + int portLe1 = PortAssignment.unique(); + int portLe2 = PortAssignment.unique(); + int portLe3 = PortAssignment.unique(); + + + + return "server.1=127.0.0.1:" + (portQp1) + ":" + (portLe1) + ";" + clientPortQp1 + "\n" + + "server.2=127.0.0.1:" + (portQp2) + ":" + (portLe2) + ";" + clientPortQp2 + "\n" + + "server.3=127.0.0.1:" + (portQp3) + ":" + (portLe3) + ";" + clientPortQp3; + } <p> +<br/> +<br/> + public void setSSLSystemProperties() </p> { + System.setProperty(ServerCnxnFactory.ZOOKEEPER_SERVER_CNXN_FACTORY, "org.apache.zookeeper.server.NettyServerCnxnFactory"); + System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, "org.apache.zookeeper.ClientCnxnSocketNetty"); + System.setProperty(quorumX509Util.getSslKeystoreLocationProperty(), validKeystorePath); + System.setProperty(quorumX509Util.getSslKeystorePasswdProperty(), "testpass"); + System.setProperty(quorumX509Util.getSslTruststoreLocationProperty(), truststorePath); + System.setProperty(quorumX509Util.getSslTruststorePasswdProperty(), "testpass"); + System.setProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty(), "false"); + } <p> +<br/> + @After<br/> + public void cleanUp() throws Exception </p> { + clearSSLSystemProperties(); + q1.shutdown(); + q2.shutdown(); + q3.shutdown(); + + Security.removeProvider("BC"); + } <p> +<br/> + private void clearSSLSystemProperties() </p> { + System.clearProperty(quorumX509Util.getSslKeystoreLocationProperty()); + System.clearProperty(quorumX509Util.getSslKeystorePasswdProperty()); + System.clearProperty(quorumX509Util.getSslTruststoreLocationProperty()); + System.clearProperty(quorumX509Util.getSslTruststorePasswdProperty()); + System.clearProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty()); + System.clearProperty(quorumX509Util.getSslOcspEnabledProperty()); + System.clearProperty(quorumX509Util.getSslCrlEnabledProperty()); + } <p> +<br/> + @Test(timeout = 300000)<br/> + public void testQuorumSSL() throws Exception </p> { + q1 = new MainThread(1, clientPortQp1, quorumConfiguration, SSL_QUORUM_ENABLED); + q2 = new MainThread(2, clientPortQp2, quorumConfiguration, SSL_QUORUM_ENABLED); + + + q1.start(); + q2.start(); + + Assert.assertTrue(ClientBase.waitForServerUp("127.0.0.1:" + clientPortQp1, CONNECTION_TIMEOUT)); + Assert.assertTrue(ClientBase.waitForServerUp("127.0.0.1:" + clientPortQp2, CONNECTION_TIMEOUT)); + + clearSSLSystemProperties(); + + // This server should fail to join the quorum as it is not using ssl. + q3 = new MainThread(3, clientPortQp3, quorumConfiguration); + q3.start(); + + Assert.assertFalse(ClientBase.waitForServerUp("127.0.0.1:" + clientPortQp3, CONNECTION_TIMEOUT)); + } <p> +<br/> + @Test(timeout = 300000)<br/> + public void testRollingUpgrade() throws Exception {<br/> #8212; End diff #8211;</p> <p> Fixed</p></comment>
<comment id="15975537" author="hadoopqa" created="Wed, 19 Apr 2017 21:17:02 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/565//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/565//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/565//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/565//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/565//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/565//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15977339" author="hadoopqa" created="Thu, 20 Apr 2017 19:42:13 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/566//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/566//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/566//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/566//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/566//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/566//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15977481" author="hadoopqa" created="Thu, 20 Apr 2017 20:48:12 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/567//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/567//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/567//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/567//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/567//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/567//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15977501" author="githubbot" created="Thu, 20 Apr 2017 20:58:32 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r112559332" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r112559332</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/ZKTrustManager.java #8212;<br/> @@ -0,0 +1,137 @@<br/> +/**<br/> + * Licensed to the Apache Software Foundation (ASF) under one<br/> + * or more contributor license agreements. See the NOTICE file<br/> + * distributed with this work for additional information<br/> + * regarding copyright ownership. The ASF licenses this file<br/> + * to you under the Apache License, Version 2.0 (the<br/> + * "License"); you may not use this file except in compliance<br/> + * with the License. You may obtain a copy of the License at<br/> + *<br/> + * <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" target="_blank" rel="nofollow noopener">http://www.apache.org/licenses/LICENSE-2.0</a><br/> + *<br/> + * Unless required by applicable law or agreed to in writing, software<br/> + * distributed under the License is distributed on an "AS IS" BASIS,<br/> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/> + * See the License for the specific language governing permissions and<br/> + * limitations under the License.<br/> + */<br/> +package org.apache.zookeeper.common;<br/> +<br/> +import org.apache.http.conn.ssl.DefaultHostnameVerifier;<br/> +import org.slf4j.Logger;<br/> +import org.slf4j.LoggerFactory;<br/> +<br/> +import javax.net.ssl.SSLEngine;<br/> +import javax.net.ssl.SSLException;<br/> +import javax.net.ssl.X509ExtendedTrustManager;<br/> +import java.net.InetAddress;<br/> +import java.net.Socket;<br/> +import java.net.UnknownHostException;<br/> +import java.security.cert.CertificateException;<br/> +import java.security.cert.X509Certificate;<br/> +<br/> +/**<br/> + * A custom TrustManager that supports hostname verification via org.apache.http.conn.ssl.DefaultHostnameVerifier.<br/> + *<br/> + * We attempt to perform verification using just the IP address first and if that fails will attempt to perform a<br/> + * reverse DNS lookup and verify using the hostname.<br/> + */<br/> +public class ZKTrustManager extends X509ExtendedTrustManager {<br/> +<br/> + private static final Logger LOG = LoggerFactory.getLogger(ZKTrustManager.class);<br/> +<br/> + private X509ExtendedTrustManager x509ExtendedTrustManager;<br/> + private boolean hostnameVerificationEnabled;<br/> + private boolean shouldVerifyClientHostname;<br/> +<br/> + private DefaultHostnameVerifier hostnameVerifier;<br/> +<br/> + /**<br/> + * Instantiate a new ZKTrustManager.<br/> + *<br/> + * @param x509ExtendedTrustManager The trustmanager to use for checkClientTrusted/checkServerTrusted logic<br/> + * @param hostnameVerificationEnabled If true, this TrustManager should verify hostnames.<br/> + * @param shouldVerifyClientHostname If true, and hostnameVerificationEnabled is true, the hostname of a client<br/> + * connecting to this machine will be verified in addition to the servers that this<br/> + * instance connects to. If false, and hostnameVerificationEnabled is true, only<br/> + * the hostnames of servers that this instance connects to will be verified. If<br/> + * hostnameVerificationEnabled is false, this argument is ignored.<br/> + */<br/> + public ZKTrustManager(X509ExtendedTrustManager x509ExtendedTrustManager, boolean hostnameVerificationEnabled, boolean shouldVerifyClientHostname) </p> { + this.x509ExtendedTrustManager = x509ExtendedTrustManager; + this.hostnameVerificationEnabled = hostnameVerificationEnabled; + this.shouldVerifyClientHostname = shouldVerifyClientHostname; + + hostnameVerifier = new DefaultHostnameVerifier(); + } <p> +<br/> + @Override<br/> + public X509Certificate[] getAcceptedIssuers() </p> { + return x509ExtendedTrustManager.getAcceptedIssuers(); + } <p> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) </p> { + performHostVerification(socket.getInetAddress(), chain[0]); + }<br/> + x509ExtendedTrustManager.checkClientTrusted(chain, authType, socket);<br/> + }<br/> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket) throws CertificateException {<br/> + if (hostnameVerificationEnabled) { + performHostVerification(socket.getInetAddress(), chain[0]); + } <p> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, socket);<br/> + }<br/> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException {<br/> + if (hostnameVerificationEnabled amp;amp; shouldVerifyClientHostname) {<br/> + try </p> { + performHostVerification(InetAddress.getByName(engine.getPeerHost()), chain[0]); + } catch (UnknownHostException e) { + throw new CertificateException("failed to verify host", e); + }<br/> + }<br/> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);<br/> + }<br/> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException {<br/> + if (hostnameVerificationEnabled) {<br/> + try { + performHostVerification(InetAddress.getByName(engine.getPeerHost()), chain[0]); + } <p> catch (UnknownHostException e) </p> { + throw new CertificateException("failed to verify host", e); + } <p> + }<br/> + x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);<br/> + }<br/> +<br/> + @Override<br/> + public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException </p> { + x509ExtendedTrustManager.checkClientTrusted(chain, authType); + } <p> +<br/> + @Override<br/> + public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException </p> { + x509ExtendedTrustManager.checkServerTrusted(chain, authType); + } <p> +<br/> + private void performHostVerification(InetAddress inetAddress, X509Certificate certificate) throws CertificateException {<br/> + try {<br/> + hostnameVerifier.verify(inetAddress.getHostAddress(), certificate);<br/> #8212; End diff #8211;</p> <p> I agree. It could also be argued that authorization is handled by this patch in its current state as well, by only accepting peers that have trusted certificates. In other words, the CA limits which machines get certificates, which limits which machines get to join the quorum. So check 2 is not "needed" if the CA is trusted. </p> <p> I also think that check 2 has value for deployments that want to reuse the same truststore for multiple services and for deployments that are not using SSL/TLS at all. So I think it is a check worth doing and it is deserving of its own patch. Would be interested in knowing what other members of the community think.</p></comment>
<comment id="15977772" author="hadoopqa" created="Thu, 20 Apr 2017 23:19:14 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 49 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/570//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/570//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/570//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/570//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/570//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/570//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15977789" author="hadoopqa" created="Thu, 20 Apr 2017 23:31:07 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/568//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/568//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/568//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/568//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/568//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/568//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15977796" author="hadoopqa" created="Thu, 20 Apr 2017 23:35:34 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/569//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/569//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/569//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/569//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/569//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/569//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15979223" author="hadoopqa" created="Fri, 21 Apr 2017 18:59:44 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/573//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/573//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/573//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/573//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/573//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/573//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15983418" author="githubbot" created="Tue, 25 Apr 2017 18:36:30 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r113276213" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r113276213</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerTestBase.java #8212;<br/> @@ -63,6 +66,10 @@ public void shutdown() {<br/> }</p> <p> public static class MainThread implements Runnable {<br/> + public File getConfFile() {<br/> #8212; End diff #8211;</p> <p> Can't find a call to this getConfFile. Is this needed?</p></comment>
<comment id="15983425" author="githubbot" created="Tue, 25 Apr 2017 18:45:42 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r113278361" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r113278361</a></p> <p> #8212; Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerTestBase.java #8212;<br/> @@ -63,6 +66,10 @@ public void shutdown() {<br/> }</p> <p> public static class MainThread implements Runnable {<br/> + public File getConfFile() {<br/> #8212; End diff #8211;</p> <p> <a href="https://github.com/apache/zookeeper/pull/184/files#diff-41ff8b5e930c780549068c1e027290a4R449" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184/files#diff-41ff8b5e930c780549068c1e027290a4R449</a></p></comment>
<comment id="15990495" author="githubbot" created="Sun, 30 Apr 2017 23:03:49 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114086628" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114086628</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java #8212;<br/> @@ -64,6 +66,8 @@</p> <p> protected InetSocketAddress clientPortAddress;<br/> protected InetSocketAddress secureClientPortAddress;<br/> + protected boolean sslQuorum = false;<br/> + protected boolean shouldUsePortUnification = false;<br/> #8212; End diff #8211;</p> <p> This variables and special handling code can be removed, for a configuration property that both available as system properties and available as part of zoo.cfg. In such case the processing code will fall back as <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java#L296" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java#L296</a> and is consistent with the existing code style for configuration processing.</p></comment>
<comment id="15990496" author="githubbot" created="Sun, 30 Apr 2017 23:04:06 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114086635" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114086635</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java #8212;<br/> @@ -290,6 +294,10 @@ public void parseProperties(Properties zkProp)<br/> } else </p> { throw new ConfigException("Invalid option " + value + " for reconfigEnabled flag. Choose 'true' or 'false.'"); } <p> + } else if (key.equals("sslQuorum")){<br/> #8212; End diff #8211;</p> <p> Similarly these special handling code can be removed.</p></comment>
<comment id="15990497" author="githubbot" created="Sun, 30 Apr 2017 23:04:27 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114086663" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114086663</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java #8212;<br/> @@ -178,6 +178,8 @@ public void runFromConfig(QuorumPeerConfig config)<br/> quorumPeer.initConfigInZKDatabase();<br/> quorumPeer.setCnxnFactory(cnxnFactory);<br/> quorumPeer.setSecureCnxnFactory(secureCnxnFactory);<br/> + quorumPeer.setSslQuorum(config.isSslQuorum());<br/> #8212; End diff #8211;</p> <p> This can be removed too.</p></comment>
<comment id="15990499" author="githubbot" created="Sun, 30 Apr 2017 23:07:51 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114086721" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114086721</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/ZKConfig.java #8212;<br/> @@ -107,14 +99,33 @@ private void init() {</p> <ul> <li>this configuration.<br/> */<br/> protected void handleBackwardCompatibility() {</li> </ul> <ul class="alternate" type="square"> <li>properties.put(SSL_KEYSTORE_LOCATION, System.getProperty(SSL_KEYSTORE_LOCATION));</li> <li>properties.put(SSL_KEYSTORE_PASSWD, System.getProperty(SSL_KEYSTORE_PASSWD));</li> <li>properties.put(SSL_TRUSTSTORE_LOCATION, System.getProperty(SSL_TRUSTSTORE_LOCATION));</li> <li>properties.put(SSL_TRUSTSTORE_PASSWD, System.getProperty(SSL_TRUSTSTORE_PASSWD));</li> <li>properties.put(SSL_AUTHPROVIDER, System.getProperty(SSL_AUTHPROVIDER));<br/> properties.put(JUTE_MAXBUFFER, System.getProperty(JUTE_MAXBUFFER));<br/> properties.put(KINIT_COMMAND, System.getProperty(KINIT_COMMAND));<br/> properties.put(JGSS_NATIVE, System.getProperty(JGSS_NATIVE));<br/> +<br/> + ClientX509Util clientX509Util = new ClientX509Util();<br/> + putSSLProperties(clientX509Util);<br/> + properties.put(clientX509Util.getSslAuthProviderProperty(),<br/> + System.getProperty(clientX509Util.getSslAuthProviderProperty()));<br/> +<br/> + putSSLProperties(new QuorumX509Util()); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Do we need this call here? This function handles backward compatibility between old way of extracting configs from system properties and the introduce of ZKConfig class (which was done after client-server SSL was added). Quorum ssl does not exist before, so there is no need to handle backward compatibility for it.</p> <p> If the purpose is to populate various system properties of quorum ssl then maybe find another place to make the initialization call?</p></comment>
<comment id="15990501" author="githubbot" created="Sun, 30 Apr 2017 23:08:40 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114086738" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114086738</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java #8212;<br/> @@ -216,18 +218,35 @@ public boolean isQuorumSynced(QuorumVerifier qv) {</p> <p> private final ServerSocket ss;</p> <ul class="alternate" type="square"> <li>Leader(QuorumPeer self,LeaderZooKeeperServer zk) throws IOException {<br/> + Leader(QuorumPeer self,LeaderZooKeeperServer zk) throws IOException, X509Exception {<br/> this.self = self;<br/> try {</li> <li>if (self.getQuorumListenOnAllIPs()) {</li> <li>ss = new ServerSocket(self.getQuorumAddress().getPort());<br/> + if (self.shouldUsePortUnification()) { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> I think some level of refactoring that makes the constructor less clogged would be valuable here..</p></comment>
<comment id="15991194" author="githubbot" created="Mon, 1 May 2017 17:59:51 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114166007" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114166007</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java #8212;<br/> @@ -254,6 +260,9 @@ protected void connectToLeader(InetSocketAddress addr)<br/> }</p> <p> sockConnect(sock, addr, Math.min(self.tickTime * self.syncLimit, remainingInitLimitTime));<br/> + if (self.isSslQuorum()) </p> { + ((SSLSocket) sock).startHandshake(); + } <p> sock.setTcpNoDelay(nodelay);<br/> break;<br/> } catch (IOException e) {<br/> #8212; End diff #8211;</p> <p> Is it possible to get a more typed exception here (like SSLException) when hand shake failed? This serves several purposes: if we know the SSL cert is invalid there is no point retrying; from supportability point of view when hand shake failed, it's possible that what finally gets logged does not reflect the cause of the failure due to how these exceptions are handled (for example we may see in log that initLimit was exceeded while the real culprit is invalid cert). </p></comment>
<comment id="15991198" author="githubbot" created="Mon, 1 May 2017 18:02:24 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114166502" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114166502</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -160,43 +213,120 @@ public static X509KeyManager createKeyManager(String keyStoreLocation, String ke<br/> }<br/> throw new KeyManagerException("Couldn't find X509KeyManager");</p> <ul class="alternate" type="square"> <li>} catch (Exception e) { - throw new KeyManagerException(e); + } <p> catch (IOException|CertificateException|UnrecoverableKeyException|NoSuchAlgorithmException|KeyStoreException<br/> + keyManagerCreationException) </p> { + throw new KeyManagerException(keyManagerCreationException); } <p> finally {<br/> if (inputStream != null) {<br/> try </p> { inputStream.close(); - } catch (IOException e) {}<br/> + } catch (IOException ioException) { + LOG.info("Failed to close key store input stream", ioException); + }<br/> }<br/> }<br/> }<br/> <br/> - public static X509TrustManager createTrustManager(String trustStoreLocation, String trustStorePassword)<br/> + public static X509TrustManager createTrustManager(String trustStoreLocation, String trustStorePassword,<br/> + boolean crlEnabled, boolean ocspEnabled,<br/> + final boolean hostnameVerificationEnabled,<br/> + final boolean shouldVerifyClientHostname)<br/> throws TrustManagerException {<br/> FileInputStream inputStream = null;<br/> try {<br/> - char[] trustStorePasswordChars = trustStorePassword.toCharArray();<br/> File trustStoreFile = new File(trustStoreLocation);<br/> KeyStore ts = KeyStore.getInstance("JKS");<br/> inputStream = new FileInputStream(trustStoreFile);<br/> - ts.load(inputStream, trustStorePasswordChars);<br/> - TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");<br/> - tmf.init(ts);<br/> + if (trustStorePassword != null) { + char[] trustStorePasswordChars = trustStorePassword.toCharArray(); + ts.load(inputStream, trustStorePasswordChars); + } else { + ts.load(inputStream, null); + }<br/> <br/> - for (TrustManager tm : tmf.getTrustManagers()) {<br/> - if (tm instanceof X509TrustManager) {<br/> - return (X509TrustManager) tm;<br/> + PKIXBuilderParameters pbParams = new PKIXBuilderParameters(ts, new X509CertSelector());<br/> + if (crlEnabled || ocspEnabled) {<br/> + pbParams.setRevocationEnabled(true);<br/> + System.setProperty("com.sun.net.ssl.checkRevocation", "true");<br/> + System.setProperty("com.sun.security.enableCRLDP", "true");<br/> + if (ocspEnabled) { + Security.setProperty("ocsp.enable", "true"); + }<br/> +<br/> + } else { + pbParams.setRevocationEnabled(false); + }<br/> +<br/> + // Revocation checking is only supported with the PKIX algorithm<br/> + TrustManagerFactory tmf = TrustManagerFactory.getInstance("PKIX");<br/> + tmf.init(new CertPathTrustManagerParameters(pbParams));<br/> +<br/> + for (final TrustManager tm : tmf.getTrustManagers()) {<br/> + if (tm instanceof X509ExtendedTrustManager) { + return new ZKTrustManager((X509ExtendedTrustManager) tm, hostnameVerificationEnabled, shouldVerifyClientHostname); }<br/> }<br/> throw new TrustManagerException("Couldn't find X509TrustManager");<br/> - } catch (Exception e) { - throw new TrustManagerException(e); + } catch (IOException|CertificateException|NoSuchAlgorithmException|InvalidAlgorithmParameterException|KeyStoreException<br/> + trustManagerCreationException) { + throw new TrustManagerException(trustManagerCreationException); } finally {<br/> if (inputStream != null) {<br/> try { inputStream.close(); - } <p> catch (IOException e) {}<br/> + } catch (IOException ioException) </p> { + LOG.info("failed to close TrustStore input stream", ioException); + } <p> }<br/> }<br/> }<br/> -}<br/> \ No newline at end of file<br/> +<br/> + public SSLSocket createSSLSocket() throws X509Exception, IOException </p> { + SSLSocket sslSocket = (SSLSocket) getDefaultSSLContext().getSocketFactory().createSocket(); + configureSSLSocket(sslSocket); + + return sslSocket; + } <p> +<br/> + public SSLSocket createSSLSocket(Socket socket) throws X509Exception, IOException </p> { + SSLSocket sslSocket = (SSLSocket) getDefaultSSLContext().getSocketFactory().createSocket(socket, null, socket.getPort(), true); + configureSSLSocket(sslSocket); + + return sslSocket; + } <p> +<br/> + private void configureSSLSocket(SSLSocket sslSocket) {<br/> + SSLParameters sslParameters = sslSocket.getSSLParameters();<br/> + sslParameters.setNeedClientAuth(true);</p> <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Just curious, does setNeedClientAuth apply to client socket (as opposed to server socket)?</p></comment>
<comment id="15991205" author="githubbot" created="Mon, 1 May 2017 18:08:04 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114167558" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114167558</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java #8212;<br/> @@ -438,9 +447,18 @@ synchronized private boolean connectOne(long sid, InetSocketAddress electionAddr<br/> Socket sock = null;<br/> try {<br/> LOG.debug("Opening channel to server " + sid);</p> <ul class="alternate" type="square"> <li>sock = new Socket();</li> <li>setSockOpts(sock);</li> <li>sock.connect(electionAddr, cnxTO);<br/> + if (self.isSslQuorum()) {<br/> + SSLSocket sslSock = x509Util.createSSLSocket();<br/> + setSockOpts(sslSock);<br/> + sslSock.connect(electionAddr, cnxTO);<br/> + sslSock.startHandshake(); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> This is a synchronous call and will block connectOne until the hand shake finishes. Current cnx manager does blocking IO when handling connections so while hand shake is going on other peers will not be able to connect to this server. This might not be a big problem with carefully tuned initLimit / syncLimit, but I thought we might want mention this somewhere in doc or wiki.</p> <p> An alternative would be making hand shake async so cnx manager does not block, but I am currently leaning towards not do this and instead use <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-900" title="FLE implementation should be improved to use non-blocking sockets" class="issue-link" data-issue-key="ZOOKEEPER-900">ZOOKEEPER-900</a>/901 to fix the root cause.</p></comment>
<comment id="15991210" author="githubbot" created="Mon, 1 May 2017 18:09:03 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114167751" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114167751</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/X509Util.java #8212;<br/> @@ -160,43 +213,120 @@ public static X509KeyManager createKeyManager(String keyStoreLocation, String ke<br/> }<br/> throw new KeyManagerException("Couldn't find X509KeyManager");</p> <ul class="alternate" type="square"> <li>} catch (Exception e) { - throw new KeyManagerException(e); + } <p> catch (IOException|CertificateException|UnrecoverableKeyException|NoSuchAlgorithmException|KeyStoreException<br/> + keyManagerCreationException) </p> { + throw new KeyManagerException(keyManagerCreationException); } <p> finally {<br/> if (inputStream != null) {<br/> try </p> { inputStream.close(); - } catch (IOException e) {}<br/> + } catch (IOException ioException) { + LOG.info("Failed to close key store input stream", ioException); + }<br/> }<br/> }<br/> }<br/> <br/> - public static X509TrustManager createTrustManager(String trustStoreLocation, String trustStorePassword)<br/> + public static X509TrustManager createTrustManager(String trustStoreLocation, String trustStorePassword,<br/> + boolean crlEnabled, boolean ocspEnabled,<br/> + final boolean hostnameVerificationEnabled,<br/> + final boolean shouldVerifyClientHostname)<br/> throws TrustManagerException {<br/> FileInputStream inputStream = null;<br/> try {<br/> - char[] trustStorePasswordChars = trustStorePassword.toCharArray();<br/> File trustStoreFile = new File(trustStoreLocation);<br/> KeyStore ts = KeyStore.getInstance("JKS");<br/> inputStream = new FileInputStream(trustStoreFile);<br/> - ts.load(inputStream, trustStorePasswordChars);<br/> - TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");<br/> - tmf.init(ts);<br/> + if (trustStorePassword != null) { + char[] trustStorePasswordChars = trustStorePassword.toCharArray(); + ts.load(inputStream, trustStorePasswordChars); + } else { + ts.load(inputStream, null); + }<br/> <br/> - for (TrustManager tm : tmf.getTrustManagers()) {<br/> - if (tm instanceof X509TrustManager) {<br/> - return (X509TrustManager) tm;<br/> + PKIXBuilderParameters pbParams = new PKIXBuilderParameters(ts, new X509CertSelector());<br/> + if (crlEnabled || ocspEnabled) {<br/> + pbParams.setRevocationEnabled(true);<br/> + System.setProperty("com.sun.net.ssl.checkRevocation", "true");<br/> + System.setProperty("com.sun.security.enableCRLDP", "true");<br/> + if (ocspEnabled) { + Security.setProperty("ocsp.enable", "true"); + }<br/> +<br/> + } else { + pbParams.setRevocationEnabled(false); + }<br/> +<br/> + // Revocation checking is only supported with the PKIX algorithm<br/> + TrustManagerFactory tmf = TrustManagerFactory.getInstance("PKIX");<br/> + tmf.init(new CertPathTrustManagerParameters(pbParams));<br/> +<br/> + for (final TrustManager tm : tmf.getTrustManagers()) {<br/> + if (tm instanceof X509ExtendedTrustManager) { + return new ZKTrustManager((X509ExtendedTrustManager) tm, hostnameVerificationEnabled, shouldVerifyClientHostname); }<br/> }<br/> throw new TrustManagerException("Couldn't find X509TrustManager");<br/> - } catch (Exception e) { - throw new TrustManagerException(e); + } catch (IOException|CertificateException|NoSuchAlgorithmException|InvalidAlgorithmParameterException|KeyStoreException<br/> + trustManagerCreationException) { + throw new TrustManagerException(trustManagerCreationException); } finally {<br/> if (inputStream != null) {<br/> try { inputStream.close(); - } <p> catch (IOException e) {}<br/> + } catch (IOException ioException) </p> { + LOG.info("failed to close TrustStore input stream", ioException); + } <p> }<br/> }<br/> }<br/> -}<br/> \ No newline at end of file<br/> +<br/> + public SSLSocket createSSLSocket() throws X509Exception, IOException </p> { + SSLSocket sslSocket = (SSLSocket) getDefaultSSLContext().getSocketFactory().createSocket(); + configureSSLSocket(sslSocket); + + return sslSocket; + } <p> +<br/> + public SSLSocket createSSLSocket(Socket socket) throws X509Exception, IOException </p> { + SSLSocket sslSocket = (SSLSocket) getDefaultSSLContext().getSocketFactory().createSocket(socket, null, socket.getPort(), true); + configureSSLSocket(sslSocket); + + return sslSocket; + } <p> +<br/> + private void configureSSLSocket(SSLSocket sslSocket) {<br/> + SSLParameters sslParameters = sslSocket.getSSLParameters();<br/> + sslParameters.setNeedClientAuth(true);</p> <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Good catch, this can be removed. <a href="https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#setNeedClientAuth-boolean-" class="external-link" target="_blank" rel="nofollow noopener">https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSocket.html#setNeedClientAuth-boolean-</a></p> <p> `Configures the socket to require client authentication. This option is only useful for sockets in the server mode.`</p> </comment>
<comment id="15991218" author="githubbot" created="Mon, 1 May 2017 18:13:58 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114168758" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114168758</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java #8212;<br/> @@ -64,6 +66,8 @@</p> <p> protected InetSocketAddress clientPortAddress;<br/> protected InetSocketAddress secureClientPortAddress;<br/> + protected boolean sslQuorum = false;<br/> + protected boolean shouldUsePortUnification = false;<br/> #8212; End diff #8211;</p> <p> these options are not available as system properties and can only be set in the config file.</p></comment>
<comment id="15991220" author="githubbot" created="Mon, 1 May 2017 18:14:26 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114168844" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114168844</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java #8212;<br/> @@ -290,6 +294,10 @@ public void parseProperties(Properties zkProp)<br/> } else </p> { throw new ConfigException("Invalid option " + value + " for reconfigEnabled flag. Choose 'true' or 'false.'"); } <p> + } else if (key.equals("sslQuorum")){<br/> #8212; End diff #8211;</p> <p> See <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114168758" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114168758</a></p></comment>
<comment id="15991221" author="githubbot" created="Mon, 1 May 2017 18:14:36 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114168897" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114168897</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java #8212;<br/> @@ -178,6 +178,8 @@ public void runFromConfig(QuorumPeerConfig config)<br/> quorumPeer.initConfigInZKDatabase();<br/> quorumPeer.setCnxnFactory(cnxnFactory);<br/> quorumPeer.setSecureCnxnFactory(secureCnxnFactory);<br/> + quorumPeer.setSslQuorum(config.isSslQuorum());<br/> #8212; End diff #8211;</p> <p> See <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114168758" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114168758</a></p></comment>
<comment id="15991258" author="githubbot" created="Mon, 1 May 2017 18:30:39 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114172228" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114172228</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/common/ZKConfig.java #8212;<br/> @@ -107,14 +99,33 @@ private void init() {</p> <ul> <li>this configuration.<br/> */<br/> protected void handleBackwardCompatibility() {</li> </ul> <ul class="alternate" type="square"> <li>properties.put(SSL_KEYSTORE_LOCATION, System.getProperty(SSL_KEYSTORE_LOCATION));</li> <li>properties.put(SSL_KEYSTORE_PASSWD, System.getProperty(SSL_KEYSTORE_PASSWD));</li> <li>properties.put(SSL_TRUSTSTORE_LOCATION, System.getProperty(SSL_TRUSTSTORE_LOCATION));</li> <li>properties.put(SSL_TRUSTSTORE_PASSWD, System.getProperty(SSL_TRUSTSTORE_PASSWD));</li> <li>properties.put(SSL_AUTHPROVIDER, System.getProperty(SSL_AUTHPROVIDER));<br/> properties.put(JUTE_MAXBUFFER, System.getProperty(JUTE_MAXBUFFER));<br/> properties.put(KINIT_COMMAND, System.getProperty(KINIT_COMMAND));<br/> properties.put(JGSS_NATIVE, System.getProperty(JGSS_NATIVE));<br/> +<br/> + ClientX509Util clientX509Util = new ClientX509Util();<br/> + putSSLProperties(clientX509Util);<br/> + properties.put(clientX509Util.getSslAuthProviderProperty(),<br/> + System.getProperty(clientX509Util.getSslAuthProviderProperty()));<br/> +<br/> + putSSLProperties(new QuorumX509Util()); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Good point. I wanted to handle the configuration for clientlt;<del>gt;server and serverlt;</del>gt;server ssl as similarly as possible. We share a good amount of code between the two and configuration is often read by the same code, so I thought it would be easier to just keep them together.</p> <p> See <a href="https://github.com/apache/zookeeper/pull/184/files#diff-17cf39d4a9007c59b76832475b08b667R145" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184/files#diff-17cf39d4a9007c59b76832475b08b667R145</a> for an example. If you feel strongly about this we can work on changing. it.</p></comment>
<comment id="15991285" author="githubbot" created="Mon, 1 May 2017 18:45:40 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114175213" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114175213</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java #8212;<br/> @@ -438,9 +447,18 @@ synchronized private boolean connectOne(long sid, InetSocketAddress electionAddr<br/> Socket sock = null;<br/> try {<br/> LOG.debug("Opening channel to server " + sid);</p> <ul class="alternate" type="square"> <li>sock = new Socket();</li> <li>setSockOpts(sock);</li> <li>sock.connect(electionAddr, cnxTO);<br/> + if (self.isSslQuorum()) {<br/> + SSLSocket sslSock = x509Util.createSSLSocket();<br/> + setSockOpts(sslSock);<br/> + sslSock.connect(electionAddr, cnxTO);<br/> + sslSock.startHandshake(); <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> So I believe in 3.4 we have a workaround for this for SASL <a href="https://github.com/apache/zookeeper/blob/branch-3.4/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L583" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/branch-3.4/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L583</a></p> <p> I agree that this is something we should document and we should fix the root cause elsewhere.</p></comment>
<comment id="15991346" author="githubbot" created="Mon, 1 May 2017 19:19:55 +0000"><p>Github user afine commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184#discussion_r114181665" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184#discussion_r114181665</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/Learner.java #8212;<br/> @@ -254,6 +260,9 @@ protected void connectToLeader(InetSocketAddress addr)<br/> }</p> <p> sockConnect(sock, addr, Math.min(self.tickTime * self.syncLimit, remainingInitLimitTime));<br/> + if (self.isSslQuorum()) </p> { + ((SSLSocket) sock).startHandshake(); + } <p> sock.setTcpNoDelay(nodelay);<br/> break;<br/> } catch (IOException e) {<br/> #8212; End diff #8211;</p> <p> gt; if we know the SSL cert is invalid there is no point retrying</p> <p> Not sure I agree. I can imagine cases where the certificate revocation system is down and comes up at a later point in time.</p> <p> gt;it's possible that what finally gets logged does not reflect the cause of the failure due to how these exceptions are handled </p> <p> We seem to be logging pretty reasonably here: <a href="https://github.com/apache/zookeeper/blob/branch-3.5/src/java/main/org/apache/zookeeper/server/quorum/Follower.java#L95" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/branch-3.5/src/java/main/org/apache/zookeeper/server/quorum/Follower.java#L95</a></p> <p> In addition, there is some JVM system properties for ssl logging that we can document to make sure certificate issues are as clear as possible.</p> </comment>
<comment id="15991446" author="hadoopqa" created="Mon, 1 May 2017 20:10:38 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/663//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/663//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/663//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/663//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/663//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/663//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15991487" author="hadoopqa" created="Mon, 1 May 2017 20:36:32 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/664//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/664//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/664//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/664//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/664//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/664//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16001788" author="hadoopqa" created="Mon, 8 May 2017 23:31:09 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/669//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/669//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/669//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/669//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/669//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/669//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16035216" author="hadoopqa" created="Fri, 2 Jun 2017 18:41:38 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/764//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/764//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/764//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/764//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/764//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/764//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16039458" author="hadoopqa" created="Tue, 6 Jun 2017 18:57:06 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 43 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/772//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/772//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/772//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/772//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/772//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/772//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16137128" author="githubbot" created="Tue, 22 Aug 2017 18:09:35 +0000"><p>Github user afine commented on the issue:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184</a></p> <p> Rebased on latest branch-3.5</p></comment>
<comment id="16137156" author="hadoopqa" created="Tue, 22 Aug 2017 18:27:41 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 40 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/953//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/953//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/953//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/953//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/953//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/953//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16137291" author="hadoopqa" created="Tue, 22 Aug 2017 19:59:00 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 40 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/956//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/956//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/956//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/956//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/956//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/956//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16213464" author="hadoopqa" created="Fri, 20 Oct 2017 23:13:16 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 40 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1114//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1114//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1114//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1114//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1114//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1114//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16269284" author="hadoopqa" created="Tue, 28 Nov 2017 19:03:35 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 40 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1317//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1317//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1317//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1317//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1317//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1317//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16269292" author="hadoopqa" created="Tue, 28 Nov 2017 19:09:20 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 40 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1316//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1316//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1316//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1316//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1316//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1316//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16269361" author="githubbot" created="Tue, 28 Nov 2017 19:53:56 +0000"><p>GitHub user afine opened a pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/424" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/424</a></p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-236" title="SSL Support for Atomic Broadcast protocol" class="issue-link" data-issue-key="ZOOKEEPER-236"><del>ZOOKEEPER-236</del></a>: SSL Support for Atomic Broadcast protocol</p> <p> This is the same thing as <a href="https://github.com/apache/zookeeper/pull/184" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184</a> just targeting master</p> <p>You can merge this pull request into a Git repository by running:</p> <p> $ git pull <a href="https://github.com/afine/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/afine/zookeeper</a> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-236" title="SSL Support for Atomic Broadcast protocol" class="issue-link" data-issue-key="ZOOKEEPER-236"><del>ZOOKEEPER-236</del></a>_master</p> <p>Alternatively you can review and apply these changes as the patch at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/424.patch" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/424.patch</a></p> <p>To close this pull request, make a commit to your master/trunk branch<br/> with (at least) the following in the commit message:</p> <p> This closes #424</p> <hr /> <p>commit f4032913dd90628ec852cb531c7d50ee80e4bcb0<br/> Author: Abraham Fine lt;afine@apache.orggt;<br/> Date: 2017-03-06T23:12:59Z</p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-236" title="SSL Support for Atomic Broadcast protocol" class="issue-link" data-issue-key="ZOOKEEPER-236"><del>ZOOKEEPER-236</del></a>: SSL Support for Atomic Broadcast protocol</p> <hr /></comment>
<comment id="16269397" author="hadoopqa" created="Tue, 28 Nov 2017 20:17:35 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 40 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1319//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1319//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1319//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1319//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1319//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1319//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16425132" author="githubbot" created="Wed, 4 Apr 2018 07:42:35 +0000"><p>Github user anmolnar commented on the issue:</p> <p> <a href="https://github.com/apache/zookeeper/pull/184" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/184</a></p> <p> Rebased on latest branch-3.5</p></comment>
<comment id="16479854" author="hadoopqa" created="Thu, 17 May 2018 23:05:08 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1706//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1706//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1706//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1706//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1706//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1706//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16479942" author="hadoopqa" created="Fri, 18 May 2018 00:22:52 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1708//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1708//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1708//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1708//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1708//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1708//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16480018" author="hadoopqa" created="Fri, 18 May 2018 02:12:25 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1709//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1709//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1709//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1709//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1709//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1709//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16480937" author="hadoopqa" created="Fri, 18 May 2018 17:13:48 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1710//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1710//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1710//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1710//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1710//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1710//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16480994" author="hadoopqa" created="Fri, 18 May 2018 18:06:57 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1711//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1711//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1711//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1711//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1711//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1711//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16481013" author="hadoopqa" created="Fri, 18 May 2018 18:30:15 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1712//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1712//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1712//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1712//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1712//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1712//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16481075" author="hadoopqa" created="Fri, 18 May 2018 19:13:39 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1713//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1713//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1713//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1713//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1713//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1713//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16482126" author="hadoopqa" created="Mon, 21 May 2018 02:28:49 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1719//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1719//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1719//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1719//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1719//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1719//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16508213" author="hadoopqa" created="Mon, 11 Jun 2018 15:26:20 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1822//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1822//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1822//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1822//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1822//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1822//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16508287" author="hadoopqa" created="Mon, 11 Jun 2018 16:19:25 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1824//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1824//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1824//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1824//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1824//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1824//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16508293" author="hadoopqa" created="Mon, 11 Jun 2018 16:22:15 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1825//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1825//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1825//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1825//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1825//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1825//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16512693" author="hadoopqa" created="Thu, 14 Jun 2018 16:16:06 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1830//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1830//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1830//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1830//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1830//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1830//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16513747" author="hadoopqa" created="Fri, 15 Jun 2018 12:23:42 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1833//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1833//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1833//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1833//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1833//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1833//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16513807" author="hadoopqa" created="Fri, 15 Jun 2018 13:24:07 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1834//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1834//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1834//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1834//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1834//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1834//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16513880" author="hadoopqa" created="Fri, 15 Jun 2018 14:26:43 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 46 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1835//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1835//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1835//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1835//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1835//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1835//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16520457" author="hadoopqa" created="Fri, 22 Jun 2018 14:59:59 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 48 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1855//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1855//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1855//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1855//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1855//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1855//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16520501" author="hadoopqa" created="Fri, 22 Jun 2018 15:32:26 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 48 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1856//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1856//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1856//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1856//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1856//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1856//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16532814" author="hadoopqa" created="Wed, 4 Jul 2018 14:20:23 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 48 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1894//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1894//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1894//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1894//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1894//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1894//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16573271" author="hadoopqa" created="Wed, 8 Aug 2018 14:10:33 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 48 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2038//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2038//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2038//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2038//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2038//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2038//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16579518" author="hadoopqa" created="Tue, 14 Aug 2018 09:27:41 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 48 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2047//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2047//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2047//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2047//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2047//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2047//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16579573" author="hadoopqa" created="Tue, 14 Aug 2018 09:53:24 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 48 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2048//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2048//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2048//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2048//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2048//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2048//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16615520" author="hadoopqa" created="Fri, 14 Sep 2018 23:51:50 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 55 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 2 new Findbugs (version 3.0.1) warnings.</p> <p> -1 release audit. The applied patch generated 6 release audit warnings (more than the trunk's current 0 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2182//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2182//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2182//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2182//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2182//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2182//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2182//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2182//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="16652015" author="hudson" created="Tue, 16 Oct 2018 16:12:16 +0000"><p>SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #6 (See <a href="https://builds.apache.org/job/Zookeeper-trunk-single-thread/6/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/Zookeeper-trunk-single-thread/6/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-236" title="SSL Support for Atomic Broadcast protocol" class="issue-link" data-issue-key="ZOOKEEPER-236"><del>ZOOKEEPER-236</del></a>: SSL Support for Atomic Broadcast protocol (master) (andor: rev 7b679bc9dd98f06ee10bbb0978cfee5dab7b74dc)</p> <ul> <li>(add) zookeeper-common/src/main/java/org/apache/zookeeper/ZKTrustManager.java</li> <li>(add) zookeeper-common/src/main/java/org/apache/zookeeper/ZKHostnameVerifier.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumBean.java</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerConfigTest.java</li> <li>(delete) zookeeper-common/src/test/java/org/apache/zookeeper/test/SSLTest.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java</li> <li>(edit) zookeeper-common/src/main/java/org/apache/zookeeper/common/X509Util.java</li> <li>(add) zookeeper-common/src/test/java/org/apache/zookeeper/common/ZKTrustManagerTest.java</li> <li>(edit) zookeeper-common/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java</li> <li>(edit) build.xml</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java</li> <li>(add) zookeeper-common/src/test/java/org/apache/zookeeper/test/SSLTest.java.orig</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LeaderBeanTest.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumMXBean.java</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java</li> <li>(edit) ivy.xml</li> <li>(add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java</li> <li>(edit) zookeeper-client/zookeeper-client-java/src/main/java/org/apache/zookeeper/client/FourLetterWordMain.java</li> <li>(add) zookeeper-common/src/test/java/org/apache/zookeeper/common/X509UtilTest.java</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ZabUtils.java</li> <li>(edit) zookeeper-common/src/test/java/org/apache/zookeeper/test/SSLAuthTest.java</li> <li>(add) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/PrependableSocket.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/X509AuthenticationProvider.java</li> <li>(add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/UnifiedServerSocketTest.java</li> <li>(edit) zookeeper-common/src/main/java/org/apache/zookeeper/common/ZKConfig.java</li> <li>(add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumBeanTest.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/RaceConditionTest.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java</li> <li>(add) zookeeper-common/src/test/java/org/apache/zookeeper/test/ClientSSLTest.java</li> <li>(add) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java</li> <li>(add) zookeeper-common/src/main/java/org/apache/zookeeper/common/QuorumX509Util.java</li> <li>(add) zookeeper-common/src/main/java/org/apache/zookeeper/common/ClientX509Util.java</li> </ul> </comment>
<comment id="16652570" author="hudson" created="Tue, 16 Oct 2018 22:41:19 +0000"><p>SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #235 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/235/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/235/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-236" title="SSL Support for Atomic Broadcast protocol" class="issue-link" data-issue-key="ZOOKEEPER-236"><del>ZOOKEEPER-236</del></a>: SSL Support for Atomic Broadcast protocol (master) (andor: rev 7b679bc9dd98f06ee10bbb0978cfee5dab7b74dc)</p> <ul> <li>(add) zookeeper-common/src/main/java/org/apache/zookeeper/common/ClientX509Util.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java</li> <li>(edit) zookeeper-common/src/main/java/org/apache/zookeeper/common/ZKConfig.java</li> <li>(edit) zookeeper-common/src/test/java/org/apache/zookeeper/test/SSLAuthTest.java</li> <li>(edit) build.xml</li> <li>(add) zookeeper-common/src/test/java/org/apache/zookeeper/test/ClientSSLTest.java</li> <li>(add) zookeeper-common/src/test/java/org/apache/zookeeper/common/X509UtilTest.java</li> <li>(edit) zookeeper-common/src/main/java/org/apache/zookeeper/common/X509Util.java</li> <li>(edit) zookeeper-common/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumMXBean.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/X509AuthenticationProvider.java</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java</li> <li>(add) zookeeper-common/src/main/java/org/apache/zookeeper/common/QuorumX509Util.java</li> <li>(delete) zookeeper-common/src/test/java/org/apache/zookeeper/test/SSLTest.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerConfigTest.java</li> <li>(add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/UnifiedServerSocketTest.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumBean.java</li> <li>(add) zookeeper-common/src/main/java/org/apache/zookeeper/ZKTrustManager.java</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ZabUtils.java</li> <li>(add) zookeeper-common/src/main/java/org/apache/zookeeper/ZKHostnameVerifier.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java</li> <li>(edit) zookeeper-client/zookeeper-client-java/src/main/java/org/apache/zookeeper/client/FourLetterWordMain.java</li> <li>(add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumBeanTest.java</li> <li>(add) zookeeper-common/src/test/java/org/apache/zookeeper/common/ZKTrustManagerTest.java</li> <li>(add) zookeeper-common/src/test/java/org/apache/zookeeper/test/SSLTest.java.orig</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LeaderBeanTest.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java</li> <li>(edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java</li> <li>(add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java</li> <li>(edit) ivy.xml</li> <li>(add) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java</li> <li>(add) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/PrependableSocket.java</li> <li>(edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/RaceConditionTest.java</li> </ul> </comment>
<comment id="16668331" author="rakeshr" created="Tue, 30 Oct 2018 08:27:10 +0000"><p>Awesome! Great work everyone!</p> <p> <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=andor" class="user-hover" rel="andor">Andor Molnar</a>, appreciate if you could point me to the user docs. It would be good to capture feature details in <a href="https://cwiki.apache.org/confluence/display/ZOOKEEPER/ZooKeeper+SSL+User+Guide#ZooKeeperSSLUserGuide-Quorum" class="external-link" target="_blank" rel="nofollow noopener">zk cwiki</a> or zk docs.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="12310000">
<name>Duplicate</name>
<inwardlinks description="is duplicated by">
<issuelink>
<issuekey id="13043745">ZOOKEEPER-2698</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="13062542">ZOOKEEPER-2750</issuekey>
</issuelink>
<issuelink>
<issuekey id="13191751">ZOOKEEPER-3173</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10001">
<name>dependent</name>
<inwardlinks description="is depended upon by">
<issuelink>
<issuekey id="12499290">ZOOKEEPER-1000</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments> </attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>214080</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0c3ef:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>68495</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-2080] Fix deadlock in dynamic reconfiguration</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-2080</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>I got the following test failure on MacBook with trunk code:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">Testcase: testCurrentObserverIsParticipantInNewConfig took 93.628 sec FAILED waiting <span class="code-keyword">for</span> server 2 being up junit.framework.AssertionFailedError: waiting <span class="code-keyword">for</span> server 2 being up at org.apache.zookeeper.server.quorum.ReconfigRecoveryTest.testCurrentObserverIsParticipantInNewConfig(ReconfigRecoveryTest.java:529) at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52) </pre> </div></div></description>
<environment/>
<key id="12754914">ZOOKEEPER-2080</key>
<summary>Fix deadlock in dynamic reconfiguration</summary>
<type id="7" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21146avatarType=issuetype">Sub-task</type>
<parent id="12780346">ZOOKEEPER-2135</parent>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="hanm">Michael Han</assignee>
<reporter username="yuzhihong@gmail.com">Ted Yu</reporter>
<labels> </labels>
<created>Wed, 12 Nov 2014 23:54:10 +0000</created>
<updated>Thu, 18 May 2017 03:43:56 +0000</updated>
<resolved>Thu, 9 Feb 2017 05:10:41 +0000</resolved>
<version>3.5.2</version>
<fixVersion>3.5.3</fixVersion>
<fixVersion>3.6.0</fixVersion>
<component>server</component>
<due/>
<votes>0</votes>
<watches>11</watches>
<comments>
<comment id="14209836" author="fpj" created="Thu, 13 Nov 2014 14:33:18 +0000"><p>I think this is the same that <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a> observed in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1807" title="Observers spam each other creating connections to the election addr" class="issue-link" data-issue-key="ZOOKEEPER-1807"><del>ZOOKEEPER-1807</del></a>. I have reopened that one. </p></comment>
<comment id="14369593" author="yuzhihong@gmail.com" created="Thu, 19 Mar 2015 15:54:01 +0000"><p>Looks like the test doesn't fail recently.</p></comment>
<comment id="14526239" author="rgs" created="Mon, 4 May 2015 04:52:03 +0000"><p>This just failed for me:</p> <p><a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2671/testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2671/testReport/</a></p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>: maybe you have some ideas?</p></comment>
<comment id="14526245" author="rgs" created="Mon, 4 May 2015 05:05:03 +0000"><p>It passes pretty consistently for me locally:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>~/src/zookeeper-svn (ZOOKEEPER-2171) ✔ ant -Dtestcase=ReconfigRecoveryTest test-core-java^ .... BUILD SUCCESSFUL Total time: 3 minutes 28 seconds </pre> </div></div> <p>So I am tempted to propose a patch that raises the wait timeout for 'waiting for server 2 being up' and call it a day, unless someone has an proposal to refactor this test and make it more robust all together. Thoughts?</p></comment>
<comment id="14526264" author="shralex" created="Mon, 4 May 2015 05:20:44 +0000"><p>I also couldn't reproduce, and we don't have access to the build machine. <br/> Increasing timeout sounds reasonable. </p> <p>Do you know why there are so many "Processing stat command from" messages in the log ? is this normal ?</p></comment>
<comment id="14526266" author="rgs" created="Mon, 4 May 2015 05:25:37 +0000"><p>Hmmm, interesting. Maybe there is a straggler thread generating those. I'll compare with a successful build. </p></comment>
<comment id="14526269" author="rgs" created="Mon, 4 May 2015 05:29:59 +0000"><p>Actually, it's expected since we call waitForServerUp on almost all tests, and that calls the 'stat' 4-letter cmd:</p> <p><a href="https://github.com/apache/zookeeper/blob/trunk/src/java/test/org/apache/zookeeper/test/ClientBase.java#L242" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/trunk/src/java/test/org/apache/zookeeper/test/ClientBase.java#L242</a></p> </comment>
<comment id="14526272" author="shralex" created="Mon, 4 May 2015 05:32:25 +0000"><p>I see. thanks for looking into this.</p></comment>
<comment id="14575180" author="cnauroth" created="Fri, 5 Jun 2015 20:38:20 +0000"><p>We've also seen some intermittent failures from the similar CppUnit tests: TestReconfig.cc and TestReconfigServer.cc.</p></comment>
<comment id="14696437" author="suda" created="Fri, 14 Aug 2015 04:09:14 +0000"><p>The bug can be almost always reproduced by injecting 80 msecs delay to every FLE packets with my tool:<br/> <a href="https://github.com/osrg/earthquake/tree/9078c5b039762f6c201ee036ac3453caf6168055/example/zk-repro-2080.nfqhook" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/osrg/earthquake/tree/9078c5b039762f6c201ee036ac3453caf6168055/example/zk-repro-2080.nfqhook</a></p> <p>When I comment out <a href="https://github.com/apache/zookeeper/blob/5b1b668d33ccf7d93c31db2a53728177393fea90/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L566" class="external-link" target="_blank" rel="nofollow noopener"><tt>Socket#setTcpNoDelay(true)</tt></a> in <tt>QCnxM#setSockOpts()</tt>, the bug gets hard to be reproduced.</p> <p>So I guess the bug is caused by a race condition in <tt>QCnxM</tt> (or in <tt>FLE</tt>).</p> <p>Anyone can give us some advice about suspicious point in <tt>QCnxM</tt>?</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2246" title="quorum connection manager takes a long time to shut down" class="issue-link" data-issue-key="ZOOKEEPER-2246">ZOOKEEPER-2246</a> might be related to 2080, but just applying <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2246?focusedCommentId=14694804amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14694804" class="external-link" rel="nofollow">this fix</a> proposed in 2246 does not resolve 2080.</p></comment>
<comment id="14696525" author="shralex" created="Fri, 14 Aug 2015 06:01:15 +0000"><p>Thanks for continuing to work on this!</p> <p>Could you please post the server logs from an execution where it fails ?</p></comment>
<comment id="14698002" author="shralex" created="Sat, 15 Aug 2015 00:44:58 +0000"><p>I looked at the logs from two recent failures of this test on hudson. Here's what I see in both:</p> <p>2015-08-13 12:11:05,321 <span class="error">#91;myid:3#93;</span> - INFO [QuorumPeer<span class="error">#91;myid=3#93;</span>(plain=/127.0.0.1:24740)(secure=disabled):QuorumPeer@986] - LOOKING<br/> 2015-08-13 12:11:05,321 <span class="error">#91;myid:3#93;</span> - INFO [QuorumPeer<span class="error">#91;myid=3#93;</span>(plain=/127.0.0.1:24740)(secure=disabled):FastLeaderElection@894] - New election. My id = 3, proposed zxid=0x0<br/> 2015-08-13 12:11:05,324 <span class="error">#91;myid:3#93;</span> - INFO <span class="error">#91;QuorumPeerListener:QuorumCnxManager$Listener@631#93;</span> - My election bind port: localhost/127.0.0.1:24739<br/> 2015-08-13 12:11:05,331 <span class="error">#91;myid:3#93;</span> - INFO <span class="error">#91;localhost/127.0.0.1:24739:QuorumCnxManager$Listener@637#93;</span> - Received connection request /127.0.0.1:50282<br/> 2015-08-13 12:11:05,331 <span class="error">#91;myid:3#93;</span> - INFO [WorkerReceiver<span class="error">#91;myid=3#93;</span>:FastLeaderElection$Messenger$WorkerReceiver@294] - 3 Received version: 100000000 my version: 0<br/> 2015-08-13 12:11:05,337 <span class="error">#91;myid:3#93;</span> - INFO [WorkerReceiver<span class="error">#91;myid=3#93;</span>:FastLeaderElection$Messenger$WorkerReceiver@301] - restarting leader election<br/> 2015-08-13 12:11:05,540 <span class="error">#91;myid:3#93;</span> - WARN <span class="error">#91;RecvWorker:0:QuorumCnxManager$RecvWorker@920#93;</span> - Interrupting SendWorker<br/> 2015-08-13 12:11:05,542 <span class="error">#91;myid:3#93;</span> - WARN <span class="error">#91;SendWorker:0:QuorumCnxManager$SendWorker@834#93;</span> - Interrupted while waiting for message on queue<br/> 2015-08-13 12:11:05,544 <span class="error">#91;myid:3#93;</span> - WARN <span class="error">#91;SendWorker:0:QuorumCnxManager$SendWorker@843#93;</span> - Send worker leaving thread id 0 my id = 3<br/> 2015-08-13 12:11:06,411 <span class="error">#91;myid:3#93;</span> - INFO <span class="error">#91;NIOServerCxnFactory.AcceptThread:localhost/127.0.0.1:24740:NIOServerCnxnFactory$AcceptThread@296#93;</span> - Accepted socket connection from /127.0.0.1:42161<br/> 2015-08-13 12:11:06,412 <span class="error">#91;myid:3#93;</span> - WARN <span class="error">#91;NIOWorkerThread-1:NIOServerCnxn@369#93;</span> - Exception causing close of session 0x0: ZooKeeperServer not running<br/> 2015-08-13 12:11:06,412 <span class="error">#91;myid:3#93;</span> - INFO <span class="error">#91;NIOWorkerThread-1:NIOServerCnxn@606#93;</span> - Closed socket connection for client /127.0.0.1:42161 (no se</p> <p>and then the last 3 messages are basically repeated until the end of the test. </p> <p>So - after restart attempt in fast leader election, ZooKeeperServer is not running</p></comment>
<comment id="14698003" author="shralex" created="Sat, 15 Aug 2015 00:45:31 +0000"><p><a href="https://builds.apache.org/job/ZooKeeper-trunk/2783/testReport/org.apache.zookeeper.server.quorum/ReconfigRecoveryTest/testCurrentObserverIsParticipantInNewConfig/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2783/testReport/org.apache.zookeeper.server.quorum/ReconfigRecoveryTest/testCurrentObserverIsParticipantInNewConfig/</a></p></comment>
<comment id="14698618" author="suda" created="Sun, 16 Aug 2015 10:20:23 +0000"><p>Yes, the ensemble gets weird after restarting FLE. (around 17:50:30 in `repro-20150816.log`)</p> <p>Sockets are unexpectedly closed?</p> <p> <span class="error">#91;junit#93;</span> 2015-08-16 17:57:42,291 <span class="error">#91;myid:2#93;</span> - DEBUG <span class="error">#91;RecvWorker:3:QuorumCnxManager$RecvWorker@933#93;</span> - RW(Socket[a<br/> ddr=/127.0.0.1,port=37793,localport=11229],3): received buffer 00000000000000000000000300000001000000060000000000<br/> 000001000000000000000300000002000000877365727665722E323D6C6F63616C686F73743A31313232383A31313232393A7061727469636<br/> 970616E743B6C6F63616C686F73743A31313233300A7365727665722E333D6C6F63616C686F73743A31313233313A31313233323A70617274<br/> 69636970616E743B6C6F63616C686F73743A31313233330A76657273696F6E3D323030303030303030<br/> <span class="error">#91;junit#93;</span> 2015-08-16 17:57:42,291 <span class="error">#91;myid:2#93;</span> - WARN <span class="error">#91;RecvWorker:3:QuorumCnxManager$RecvWorker@938#93;</span> - Connection <br/> broken for id 3, my id = 2, error = <br/> <span class="error">#91;junit#93;</span> java.io.EOFException<br/> <span class="error">#91;junit#93;</span> at java.io.DataInputStream.readInt(DataInputStream.java:392)<br/> <span class="error">#91;junit#93;</span> at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:922)</p></comment>
<comment id="14734554" author="suda" created="Tue, 8 Sep 2015 10:04:44 +0000"><p>jacoco-<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2080" title="Fix deadlock in dynamic reconfiguration" class="issue-link" data-issue-key="ZOOKEEPER-2080"><del>ZOOKEEPER-2080</del></a>.unzip-grows-to-70MB.7z: JaCoCo (<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2266" title="Integrate JaCoCo Coverage Library" class="issue-link" data-issue-key="ZOOKEEPER-2266">ZOOKEEPER-2266</a>) coverage data.</p> <p>I'm still not sure how to solve this, but some observations:</p> <ul class="alternate" type="square"> <li><a href="https://github.com/apache/zookeeper/blob/df7d56d25d38f872b5793af365ef732c4478eb1d/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L919" class="external-link" target="_blank" rel="nofollow noopener">QCM.connectAll()</a> is called only on failed experiments</li> <li><a href="https://github.com/apache/zookeeper/blob/df7d56d25d38f872b5793af365ef732c4478eb1d/src/java/main/org/apache/zookeeper/server/quorum/Leader.java#L492-L514" class="external-link" target="_blank" rel="nofollow noopener">Leader tends to catch InterruptedException</a> on failed experiments, but not always</li> </ul> </comment>
<comment id="14740513" author="suda" created="Fri, 11 Sep 2015 10:06:03 +0000"><p>Looking at JaCoCo reports, I also noticed that <a href="https://github.com/apache/zookeeper/blob/df7d56d25d38f872b5793af365ef732c4478eb1d/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L352-L360" class="external-link" target="_blank" rel="nofollow noopener"><tt>QCM.SendWorker#finish()</tt></a> (and hence <tt>QCM.RecvWorker#finish()</tt>) in <tt>QCM#receiveConnection()</tt> (<tt>sid lt; self.getId()</tt>) is called only on failed experiments.</p> <p>When I comment out this, the bug got hard to be reproduced.</p> <p>So I belive that the bug is caused by <b>a race condition between TCP packet arrivals and <tt>SendWorker</tt>/<tt>RecvWorker</tt> lifecycles</b>.</p> <p>Especially, the socket handling in <a href="https://github.com/apache/zookeeper/blob/df7d56d25d38f872b5793af365ef732c4478eb1d/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L893-L926" class="external-link" target="_blank" rel="nofollow noopener"><tt>QCM.RecvWorker#run</tt></a> is <b>very suspicious</b>, as it cannot be interrupted nor timed out.<br/> (Should use <tt>java.nio.channels.SocketChannel</tt> rather than plain old <tt>java.net.Socket</tt>.)</p> <p>Note that the bug also got hard to be reproduced when I comment out <a href="https://github.com/apache/zookeeper/blob/df7d56d25d38f872b5793af365ef732c4478eb1d/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L566" class="external-link" target="_blank" rel="nofollow noopener"><tt>Socket#setTcpNoDelay(true)</tt></a> in <tt>QCM#setSockOpts()</tt> (as I reported on Aug 14), or use <tt>BufferedOutputStream</tt> instead of <tt>DataOutputStream</tt> in <a href="https://github.com/apache/zookeeper/blob/df7d56d25d38f872b5793af365ef732c4478eb1d/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L719" class="external-link" target="_blank" rel="nofollow noopener"><tt>QCM.SendWorker()</tt></a>.</p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, can I have your opinion on this?</p> </comment>
<comment id="14747006" author="suda" created="Wed, 16 Sep 2015 06:55:37 +0000"><p>We don't need to use <tt>java.nio.channels.SocketChannel</tt> (dicussed in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2246?focusedCommentId=14746992amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14746992" class="external-link" rel="nofollow">ZOOKEEPER-2246</a>), but seem to need redesign of QCM (<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-901" title="Redesign of QuorumCnxManager" class="issue-link" data-issue-key="ZOOKEEPER-901">ZOOKEEPER-901</a>).</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2164" title="fast leader election keeps failing" class="issue-link" data-issue-key="ZOOKEEPER-2164"><del>ZOOKEEPER-2164</del></a> seems also related.</p> <p>So I link <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-901" title="Redesign of QuorumCnxManager" class="issue-link" data-issue-key="ZOOKEEPER-901">ZOOKEEPER-901</a> and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2164" title="fast leader election keeps failing" class="issue-link" data-issue-key="ZOOKEEPER-2164"><del>ZOOKEEPER-2164</del></a> , and promote priority from Minor to Major.<br/> If this is inappropriate, please feel free to revert this change.</p></comment>
<comment id="15321770" author="hanm" created="Thu, 9 Jun 2016 01:52:43 +0000"><p>I'd like to take a stab here and assign this issue to myself. Ok with you <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a>?</p></comment>
<comment id="15321959" author="rgs" created="Thu, 9 Jun 2016 06:00:58 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a>: sure — go for it. Thanks!</p></comment>
<comment id="15334720" author="hanm" created="Thu, 16 Jun 2016 21:27:18 +0000"><p>I've been trying reproduce the failure cases and analyzing failed logs in last couple of days. After mining enough data, I am fairly confident to say that the culprit responsible for the sporadic failure of this test case is FastLeaderElection.shutdown, which never returns in the failed cases. What happened looks like:</p> <ul> <li>Server 3 joins ensemble and starts looking for a leader.</li> <li>Connections between server 3 and 2/1/0 were broken for some reasons (unclear to me, but it happen on both failed and succeeded cases.).</li> <li>Server 3 restarts leader election (happens on both failed and succeed cases.).</li> <li>The first thing when restart leader election is to shutdown the old FLE, where server 3 halts (when joining listener thread.) in failed cases. From this point, server 3 is left in a bad state and would never recover (increase timeout would not help).</li> </ul> <p>This also aligns with some of observations previously pointed out by Alex and Akihiro. Fix <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2246" title="quorum connection manager takes a long time to shut down" class="issue-link" data-issue-key="ZOOKEEPER-2246">ZOOKEEPER-2246</a> might fix this as well, so I assigned that issue to myself. Working on a patch now (which, not might require get <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-900" title="FLE implementation should be improved to use non-blocking sockets" class="issue-link" data-issue-key="ZOOKEEPER-900">ZOOKEEPER-900</a> done first, we will see.).</p></comment>
<comment id="15345456" author="hanm" created="Thu, 23 Jun 2016 00:09:02 +0000"><p>The root cause of FLE shutdown never returns is a deadlock introduced as part of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a>. The deadlock happens between WorkerReceiver thread of the Messenger in FastLeaderElection, and the Listener thread in QuorumCnxManager when FastLeaderElection requests restart a new leader election as part of dynamic reconfiguration change. An example:</p> <ol> <li>FastLeaderElection requests <a href="https://github.com/apache/zookeeper/blob/ec056d3c3a18b862d0cd83296b7d4319652b0b1c/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L303" class="external-link" target="_blank" rel="nofollow noopener">restart leader election</a>. Note this block is synchronized on the QuorumPeer object self.</li> <li>Restart leader election requires shut down existing QuorumCnxManager first, which requires <a href="https://github.com/apache/zookeeper/blob/3c37184e83a3e68b73544cebccf9388eea26f523/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L539" class="external-link" target="_blank" rel="nofollow noopener">waiting for listener thread to finish execution</a>.</li> <li>At the same time, listener threads could be in a state where it is <a href="https://github.com/apache/zookeeper/blob/3c37184e83a3e68b73544cebccf9388eea26f523/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L355" class="external-link" target="_blank" rel="nofollow noopener">initiating new connections out</a>.</li> <li>While at the previous state, listener thread could run into invocation of connectOne, which is <a href="https://github.com/apache/zookeeper/blob/3c37184e83a3e68b73544cebccf9388eea26f523/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L475" class="external-link" target="_blank" rel="nofollow noopener">synchronized on the same QuorumPeer object</a> that FLE shutdown acquired earlier.</li> <li>As a result, FastLeaderElection is waiting for Listener thread to finish while listener thread is waiting for FLE to release the intrinsic lock on QuorumPeer, thus deadlock.</li> </ol> <p>The code path that triggers the deadlock is introduced in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a>, so this issue only impacts 3.5 and not 3.4. I am attaching a patch that fixes the issue by specifying a timeout value when join listener thread. I am not super satisfied with this fix as relying on timeout is fragile, but it does fix the problem (validated all tests passed with my endurance test suites), and the side effect of bailing out seems trivial as the listener threads is going to die anyway and bail out does not cause leaking any resources.</p> <p>I am going to dig deeper into reconfig logic see if there is way to fix the deadlock which is better than bail out on listener's side. Meanwhile this harmless patch is ready to go in if we need a quick / dirty way of fixing the problem. </p> <p>Also attach a thread dump that indicates the dead lock situation.</p></comment>
<comment id="15345469" author="hadoopqa" created="Thu, 23 Jun 2016 00:28:34 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12812677/ZOOKEEPER-2080.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12812677/ZOOKEEPER-2080.patch</a><br/> against trunk revision 1748630.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3240//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3240//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3240//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3240//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3240//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3240//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15345538" author="hanm" created="Thu, 23 Jun 2016 01:19:29 +0000"><p>Both failed tests on hudson bot might be flaky as they pass for me locally / my test cluster. </p></comment>
<comment id="15390256" author="hanm" created="Fri, 22 Jul 2016 21:54:49 +0000"><p>Friendly nudge <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> - not sure if you guys have cycles to review this, but just check. Just to recap, the problem revealed by this issue is a real bug I think, that under certain cases a ZooKeeper server can deadlock during re-config. I don't have any better solution ATM other than just timeout on join, as indicated in this patch.</p></comment>
<comment id="15391182" author="shralex" created="Sun, 24 Jul 2016 22:04:06 +0000"><p>Michael, thanks for the patch! I was wondering whether moving the "self.getElectionAlg().shutdown();" outside of the synchronized block in FLE would <br/> also address the problem. The rest of the reconfig stuff is in the synchronized block because it touches the configuration state, also accessed by quorum peer. But<br/> shutting down FLE doesn't seem like a shared-state operation (am I missing something ?). What if you move this line right after the synchronized, do <br/> something like if (self.shuttingDownLE = true) self.getElectionAlg().shutdown();</p></comment>
<comment id="15391189" author="shralex" created="Sun, 24 Jul 2016 22:25:03 +0000"><p>On second thought, this may not work. There may be another race there with access to shuttingDownLE: <br/> Quorum peer does this:<br/> if (shuttingDownLE) {<br/> shuttingDownLE = false;<br/> startLeaderElection();<br/> }</p> <p>Which isn't synchronized now, but probably should be. So looks like one has to set the flag and do the restart (or at least trigger it) atomically in FLE.</p></comment>
<comment id="15392565" author="hanm" created="Mon, 25 Jul 2016 19:57:37 +0000"><blockquote><p>Which isn't synchronized now, but probably should be.</p></blockquote> <p>Yeah, this looks like a bug to me since all other accesses to the 'shuttingDownLE' flag is synchronized except these ones:<br/> <a href="https://github.com/apache/zookeeper/blob/3c37184e83a3e68b73544cebccf9388eea26f523/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1066" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/3c37184e83a3e68b73544cebccf9388eea26f523/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1066</a><br/> <a href="https://github.com/apache/zookeeper/blob/3c37184e83a3e68b73544cebccf9388eea26f523/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1083" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/blob/3c37184e83a3e68b73544cebccf9388eea26f523/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1083</a></p> </comment>
<comment id="15392817" author="hanm" created="Mon, 25 Jul 2016 23:07:46 +0000"><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2488" title="Unsynchronized access to shuttingDownLE in QuorumPeer" class="issue-link" data-issue-key="ZOOKEEPER-2488">ZOOKEEPER-2488</a> to track this.</p></comment>
<comment id="15392825" author="hanm" created="Mon, 25 Jul 2016 23:14:45 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> Thanks for all the feedback so far<img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. I am trying to find a different solution today (my previous patch does not fix root cause, it is a workaround only.). I've tried another solution by <a href="https://github.com/apache/zookeeper/blob/3c37184e83a3e68b73544cebccf9388eea26f523/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L475" class="external-link" target="_blank" rel="nofollow noopener">returning here</a> before locking on QuorumPeer if the 'shutdown' flag is set to true, and it does not always work (failed my pressure test). I'll try finding another solution.</p></comment>
<comment id="15394748" author="hanm" created="Tue, 26 Jul 2016 23:17:08 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> I have a working solution inspired from your comment that fixes the deadlock by moving <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L303" class="external-link" target="_blank" rel="nofollow noopener">self.getElectionAlg().shutdown()</a> out of the <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L289" class="external-link" target="_blank" rel="nofollow noopener">synchronized code block</a>, while still keeping the <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L302" class="external-link" target="_blank" rel="nofollow noopener">self.shuttingDownFEL</a> inside the block. </p> <p>I think the safety property is still satisfied because:</p> <ul> <li><a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L303" class="external-link" target="_blank" rel="nofollow noopener">self.getElectionAlg().shutdown()</a> does not directly change any state of the 'self' QuorumPeer object. It only changes the state of the <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L688" class="external-link" target="_blank" rel="nofollow noopener">election object</a> that the 'self' QuorumPeer holds. So we only need to take care of property synchronize the election object here.</li> </ul> <ul> <li>On the QuorumPeer side, when it is signaled shuttingDown from FEL, it will restart leader election (example: <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1066" class="external-link" target="_blank" rel="nofollow noopener">here</a> and <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1083" class="external-link" target="_blank" rel="nofollow noopener">here</a>. <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L811" class="external-link" target="_blank" rel="nofollow noopener">startLeaderElection</a> however does not directly changing the current leader election algorithm object it holds (which is also the object we try to protect against concurrent access); it <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L834" class="external-link" target="_blank" rel="nofollow noopener">recreates a new object</a> and use it from there. So we don't need to worry about synchronizing on the leader election object of the quorum peer, we just need keep a handle of it and shut it down properly so the resources it uses (like sockets) can be released and the object can be garbage collected.</li> </ul> <ul> <li>In the patch, the assignment of the shuttingDownLE flag and keeping old election object for the record is synchronized on the quorum peer.</li> </ul> <p>This patch passed my pressure tests and does not cause any regressions.</p></comment>
<comment id="15394813" author="shralex" created="Wed, 27 Jul 2016 00:06:47 +0000"><p>Hi Michael, thanks for the patch, it looks good to me. I have two questions: do you think that the creation of a new election object won't be<br/> interfered if the old object shutdown/GC hasn't happened yet ? and any way to test this using a unit test ? Since you're doing<br/> stress tests I'm less worried if a unit test is complicated. You'd probably have to somehow suspend a messaging thread to create<br/> the deadlock, not sure.</p></comment>
<comment id="15396091" author="hanm" created="Wed, 27 Jul 2016 18:15:54 +0000"><p>Hi Alex, thanks for the review <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <blockquote><p>do you think that the creation of a new election object won't be interfered if the old object shutdown/GC hasn't happened yet </p></blockquote> <p>The new leader election object and the old leader election object does not share object state: each object has their own QuorumCnxManager that manages the underlying TCP connections used for leader election. They could in theory possibly share the same socket address (election address), because I believe this address is statically generated from the connection string instead of dynamically generated (like the uniquePort utility we had in test), and this address seems to be only thing that different QuroumCnxManager shares. In theory we might have two QuorumCnxManager, one from old election object waiting to be shutdown and the other one from the new election object, that both try binding to same address. I haven't found any issues related this though during my stress test on unit tests (in particular for reconfig test), and I think we could possibly address this issue by some retry logic with exponential back off when binding to socket in QuorumCnxManager.</p> <blockquote><p>any way to test this using a unit test</p></blockquote> <p>I don't have any concrete ideas around this, my thinking is we could possibly expose some options from related classes under test so we can artificially inject faults, creating race conditions and control timings. For example we could delay the shut down of the old leader election object and see what happens. As a simple test, I simply remove the statement completely and 5 out of 6 ReconfigRecoveryTest tests failed, which is expected because that is not supposed to be completely removed, so maybe instead of removing we can add a delay and make sure everything still works.</p> </comment>
<comment id="15401425" author="rgs" created="Mon, 1 Aug 2016 01:25:02 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a>: thanks for tracking this down and for the patch! A few questions/asks, looking at the code:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">Election election = <span class="code-keyword">null</span>; <span class="code-keyword">synchronized</span>(self) { <span class="code-keyword">try</span> { rqv = self.configFromString(<span class="code-keyword">new</span> <span class="code-object">String</span>(b)); QuorumVerifier curQV = self.getQuorumVerifier(); <span class="code-keyword">if</span> (rqv.getVersion() gt; curQV.getVersion()) { LOG.info(<span class="code-quote">"{} Received version: {} my version: {}"</span>, self.getId(), <span class="code-object">Long</span>.toHexString(rqv.getVersion()), <span class="code-object">Long</span>.toHexString(self.getQuorumVerifier().getVersion())); <span class="code-keyword">if</span> (self.getPeerState() == ServerState.LOOKING) { LOG.debug(<span class="code-quote">"Invoking processReconfig(), state: {}"</span>, self.getServerState()); self.processReconfig(rqv, <span class="code-keyword">null</span>, <span class="code-keyword">null</span>, <span class="code-keyword">false</span>); <span class="code-keyword">if</span> (!rqv.equals(curQV)) { LOG.info(<span class="code-quote">"restarting leader election"</span>); <span class="code-comment">// Signaling quorum peer to restart leader election. </span> self.shuttingDownLE = <span class="code-keyword">true</span>; <span class="code-comment">// Get a hold of current leader election object of quorum peer, </span> <span class="code-comment">// so we can clean it up later without holding the lock of quorum </span> <span class="code-comment">// peer. If we shutdown current leader election we will run into </span> <span class="code-comment">// potential deadlock. See ZOOKEEPER-2080 <span class="code-keyword">for</span> more details. </span> election = self.getElectionAlg(); } } <span class="code-keyword">else</span> { LOG.debug(<span class="code-quote">"Skip processReconfig(), state: {}"</span>, self.getServerState()); } } } <span class="code-keyword">catch</span> (IOException e) { LOG.error(<span class="code-quote">"Something went wrong <span class="code-keyword">while</span> processing config received from {}"</span>, response.sid); } <span class="code-keyword">catch</span> (ConfigException e) { LOG.error(<span class="code-quote">"Something went wrong <span class="code-keyword">while</span> processing config received from {}"</span>, response.sid); } } </pre> </div></div> <p>Do we really need to synchronize around self for the first part:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">rqv = self.configFromString(<span class="code-keyword">new</span> <span class="code-object">String</span>(b)); QuorumVerifier curQV = self.getQuorumVerifier(); <span class="code-keyword">if</span> (rqv.getVersion() gt; curQV.getVersion()) { </pre> </div></div> <p>? Sounds like that can be done without synchronizing... no? </p> <p>Also, given you've spent a good amount of cycles untangling the dependencies around locking QuorumPeer, could you maybe add a comment before the synchronize(self) block noting why it is needed and who else might be contending for this lock. Thanks so much!</p> <p>I think unit testing these things is a bit tricky, we might get a better return by just keeping better comments around synchronized regions and generally keeping them well maintained (imho). So I am happy to +1 without tests. </p></comment>
<comment id="15403146" author="hanm" created="Tue, 2 Aug 2016 01:02:15 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> Thanks for your feedback <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. New patch uploaded based on your feedback.</p> <blockquote><p>Do we really need to synchronize around self for the first part</p></blockquote> <p>Good point, self.configFromString does not involve state changes and for self.getQuorumVerifier, I can't find another place in code where a race could be possibly introduced that require self.getQuorumVerifier and the subsequent to be an atomic code block - so I moved them out of sync block and updated patch. CC <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> just to double check.</p> <blockquote><p>could you maybe add a comment before the synchronize(self) block </p></blockquote> <p>Comments added in latest patch.</p></comment>
<comment id="15403173" author="hadoopqa" created="Tue, 2 Aug 2016 01:21:22 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12821475/ZOOKEEPER-2080.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12821475/ZOOKEEPER-2080.patch</a><br/> against trunk revision 1754582.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3318//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3318//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3318//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3318//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3318//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3318//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15403431" author="rgs" created="Tue, 2 Aug 2016 06:12:09 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a>: thanks for the updated patch! I think the failure with org.apache.zookeeper.test.QuorumTest.testMultipleWatcherObjs is unrelated, have you seen it fail before? Passes for me locally:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">~/src/zookeeper-svn (master) ✔ function runt() { ant -Dtestcase=$1 test-core-java; } ~/src/zookeeper-svn (master) ✔ runt QuorumTest (....) junit.run-concurrent: [echo] Running 1 concurrent JUnit processes. [junit] WARNING: multiple versions of ant detected in path <span class="code-keyword">for</span> junit [junit] jar:file:/usr/share/java/ant/ant.jar!/org/apache/tools/ant/Project.class [junit] and jar:file:/usr/share/ant/lib/ant.jar!/org/apache/tools/ant/Project.class [junit] Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=utf8 [junit] Running org.apache.zookeeper.test.QuorumTest [junit] Tests run: 15, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 125.227 sec junit.run: test-core-java: BUILD SUCCESSFUL Total time: 2 minutes 52 seconds </pre> </div></div> <p>Other than that, lgtm #8211; +1. </p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>: what do you think?</p> <p>Happy to merge this after Alex gets another look. Thanks!</p></comment>
<comment id="15404190" author="hanm" created="Tue, 2 Aug 2016 15:29:47 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> I did a search on previous Jenkins builds and there were a couple where org.apache.zookeeper.test.QuorumTest.testMultipleWatcherObjs also failed, so logged <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2497" title="Flaky Test: org.apache.zookeeper.test.QuorumTest.testMultipleWatcherObjs" class="issue-link" data-issue-key="ZOOKEEPER-2497"><del>ZOOKEEPER-2497</del></a> to track this. Yeah I don't think this failure is related to this JIRA / reconfig in general. The latest patch also passed my stress testing on my cluster BTW.</p></comment>
<comment id="15414491" author="shralex" created="Wed, 10 Aug 2016 00:18:46 +0000"><p>I'm not sure about removing the synchonized in the last change. Configuration changes can occur via reconfig commands being committed, or via fastleaderelection messages being received. The synchronized was trying to do a config read + update (if needed) as an atomic step, whereas now it may be updating based on stale read... I'm not sure its actually a problem in this case, but also can't say for sure it isn't so personally wouldn't remove that part.</p></comment>
<comment id="15414666" author="hanm" created="Wed, 10 Aug 2016 03:59:54 +0000"><p>Alex, the explanation about having an atomic config + update makes sense to me. </p> <p>I only considered FastLeaderElection context but looked through code just now QuorumPeer::processReconfig, which changes the QuorumPeer::quorumVerifier field is also invoked in different context (such as Follower::processPacket, Learner::syncWithLeader) against same QuorumPeer which could cause problems as you described if we move getQuorumVerifier out of the atomic read-update block. I'll update the patch shortly.</p></comment>
<comment id="15415571" author="hanm" created="Wed, 10 Aug 2016 16:54:34 +0000"><p>Patch updated to address review comments of <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> by moving self.getQuorumVerifier() back to the synchronization block. </p></comment>
<comment id="15415607" author="hadoopqa" created="Wed, 10 Aug 2016 17:18:45 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12823092/ZOOKEEPER-2080.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12823092/ZOOKEEPER-2080.patch</a><br/> against trunk revision 1755379.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3351//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3351//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3351//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3351//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3351//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3351//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15415646" author="shralex" created="Wed, 10 Aug 2016 17:35:29 +0000"><p>+1 from me, assuming you tested the patch using your script to see that it solves the problem. </p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> what do you think ?</p></comment>
<comment id="15415654" author="hanm" created="Wed, 10 Aug 2016 17:42:14 +0000"><p>Yup stress tested (which is why updating the patch takes a while.).</p></comment>
<comment id="15415657" author="hanm" created="Wed, 10 Aug 2016 17:43:42 +0000"><p>Failed test is TestReconfig.cc that is taking care of by <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2152" title="Intermittent failure in TestReconfig.cc" class="issue-link" data-issue-key="ZOOKEEPER-2152"><del>ZOOKEEPER-2152</del></a>.</p></comment>
<comment id="15435457" author="phunt" created="Wed, 24 Aug 2016 18:47:15 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a> can you take a look at this one as it's changing FLE code, which you're probably the most familiar with.</p></comment>
<comment id="15471541" author="fpj" created="Wed, 7 Sep 2016 19:14:42 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a> <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a> <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a></p> <p>I gave it a look and had a look at the patch, and I'm wondering the following:</p> <ol> <li>Is it the case that the <tt>synchronized(self) }} block only needs to cover up to {{self.processReconfig</tt>? If so, perhaps we should end the block there and process the following outside. I'm saying this because of a couple of things. First, it is in general better to keep such synchronized blocks as short as possible. Second, <tt>shuttingDownLE</tt> is being used without synchronization in other parts of the code, so either that is broken or we don't need it in the block.<br/> # Should we invert the order between <tt>shuttingDownLE</tt> and <tt>shutdown()</tt> to avoid a new election being created concurrently? I'd really rather avoid having multiple concurrent election objects to avoid confusion about connections and such.</li> </ol> </comment>
<comment id="15475408" author="hanm" created="Fri, 9 Sep 2016 00:05:17 +0000"><p>Thanks for feedback, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>!</p> <blockquote><p>Is it the case that the {{ synchronized(self) }} block only needs to cover up to <tt>self.processReconfig</tt></p></blockquote> <p>I think from the way the code was implemented, the block is to cover not just the processReconfig, but also the <tt>if (!rqv.equals(curQV)) {</tt> following, and the entire block has to be a single atomic operation.</p> <blockquote><p>If so, perhaps we should end the block there and process the following outside. </p></blockquote> <p>Are you suggesting something like <a href="https://github.com/hanm/zookeeper/blob/60bcf70b83605e0fd574a95fd00a32e7e763f6f7/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L292" class="external-link" target="_blank" rel="nofollow noopener">this</a>? Here I make the sync block only covers processReconfig. However there are a couple of reconfig tests failed deterministically because of such a change. I haven't figured out why those tests failed, but it could be the entire code block (processReconfig + the rest of what's the current sync covered currently) has to be covered such that the processReconfig and this has to be a transaction together:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> <span class="code-keyword">if</span> (!rqv.equals(curQV)) { LOG.info(<span class="code-quote">"restarting leader election"</span>); self.shuttingDownLE = <span class="code-keyword">true</span>; self.getElectionAlg().shutdown(); <span class="code-keyword">break</span>; } </pre> </div></div> <p>So making the sync block only covers up to processReconfig probably would not work ... (I need to dig deeper into the reconfig logic - probably do some data flow analysis to figure out the dependencies<img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> - for now I can't prove on paper it's safe (or not) as for where the sync block ends (I am using existing tests as the verifier).</p></comment>
<comment id="15475420" author="hanm" created="Fri, 9 Sep 2016 00:11:44 +0000"><blockquote><p>First, it is in general better to keep such synchronized blocks as short as possible. </p></blockquote> <p>Absolutely agree. </p> <blockquote><p>Second, shuttingDownLE is being used without synchronization in other parts of the code, so either that is broken or we don't need it in the block.</p></blockquote> <p>This was noticed earlier as Alex commented:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>Quorum peer does this: if (shuttingDownLE) { shuttingDownLE = false; startLeaderElection(); } Which isn't synchronized now, but probably should be. </pre> </div></div> <p>Similarly I can't prove on paper if this should be sync-ed or not. Need more investigation.</p></comment>
<comment id="15478360" author="fpj" created="Fri, 9 Sep 2016 21:44:04 +0000"><p>I thought a bit more about this. My understanding is that all operations related to the current quorum verifier need to be in the synchronized block. The shut down of leader election doesn't need to be in the synchronized block.</p> <p>I don't think "shuttingDownLE" needs to be synchronized with self, but given that it is accessed by multiple threads, it should be volatile.</p> <p>"shuttingDownLE" is a bit misleading because QP uses it to determine that it needs to start leader election, not that shut down is in progress. One thing that isn't entirely clear to me is whether QP can miss that "shuttingDownLE" is supposed to be true due to a race. Specifically, <a href="https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1082" class="external-link" target="_blank" rel="nofollow noopener">here</a> is it possible that due to a race we miss that we are supposed to start LE? I think so because it doesn't seem to be synchronized.</p></comment>
<comment id="15482766" author="hanm" created="Mon, 12 Sep 2016 01:46:55 +0000"><blockquote><p>The shut down of leader election doesn't need to be in the synchronized block.</p></blockquote> <p>This is what the patch did, by moving the shut down of LE out of the sync block. </p> <blockquote><p>it should be volatile.</p></blockquote> <p>Yes, agreed. Will update patch.</p> <blockquote><p>is it possible that due to a race we miss that we are supposed to start LE? </p></blockquote> <p>Possible in theory - an example:</p> <ul> <li>shuttingDownLE is set to true in <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L302" class="external-link" target="_blank" rel="nofollow noopener">FastLeaderElection</a></li> <li>There are a couple of other places in Leader / Follower where <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/Learner.java#L438" class="external-link" target="_blank" rel="nofollow noopener">processReconfig</a> will be called with restart LE flag set to true, which will set the shuttingDownLE flag to false.</li> <li>So in theory, between we set shuttingDownLE to true in <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L302" class="external-link" target="_blank" rel="nofollow noopener">FastLeaderElection</a> and we ran into check the same flag in <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1066" class="external-link" target="_blank" rel="nofollow noopener">QuorumPeer</a>, there could be concurrent operations which involves processReconfig that change the state of shuttingDownLE from true to false. As a result, we miss the event of the state change of shuttingDownLE in QuorumPeer's main loop.</li> </ul> <p>Now does it matter if we miss such event due to interleaving operations from processReconfig set shuttingDownLE from true to false? I am not sure, as I am still learning the semantic of reconfig and FLE to make a better guess here. </p> <p>Other notes:</p> <ul> <li>Do we need to synchronize on <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1066" class="external-link" target="_blank" rel="nofollow noopener">this code</a> in QuorumPeer? I think probably we should, because similar 'test and set' operation around shuttingDownLE in QuorumPeer (such as <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1419" class="external-link" target="_blank" rel="nofollow noopener">restartLeaderElection</a> is synchronized, which makes sense (as typically in multithreading, what we need to protected is not just the signal variable but also the executions that depends on the value of the variable).</li> </ul> <ul> <li>I think we have another potential dead lock in <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1415" class="external-link" target="_blank" rel="nofollow noopener">QuorumPeer.restartLeaderElection</a>. Here the method is synchronized, but part of its execution requires invokes of <a href="https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1418" class="external-link" target="_blank" rel="nofollow noopener">FastLeaderElection.shutdown</a>, which, as previously analyzed could end up at a place in <a href="https://github.com/apache/zookeeper/blob/3c37184e83a3e68b73544cebccf9388eea26f523/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L475" class="external-link" target="_blank" rel="nofollow noopener">QuorumCnxManager</a> where it requires obtain same QuorumPeer lock. I don't think we are shot by this yet, could either because we don't have test case cover such case, or could because that is just a theory that in practice we will never end up with such code execution flow.</li> </ul> <ul> <li>While looking through code, I find it is hard to reason about current behavior due to the mixed state changes that could be done by many parties. I am thinking if there is better ways of doing this, for example using an actor based mode to restructure the code such that we have an event driven architecture where each object has a main thread which only dispatch events and entities (such as QuorumPeer and FastLeaderElection) will communicate each other by passing event messages - there would not be any shared state and state changes for each entities will then be easier to reason about. I think I will have a better evaluation after more investigation around FLE codebase.</li> </ul> </comment>
<comment id="15489366" author="hanm" created="Wed, 14 Sep 2016 04:21:41 +0000"><p>Patch updated: make shuttingDownLE volatile. Everything else same with previous patch.</p></comment>
<comment id="15489395" author="hadoopqa" created="Wed, 14 Sep 2016 04:40:56 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12828380/ZOOKEEPER-2080.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12828380/ZOOKEEPER-2080.patch</a><br/> against trunk revision b2a484cfe743116d2531fe5d1e1d78b3960c511e.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3427//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3427//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3427//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3427//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3427//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3427//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15490982" author="fpj" created="Wed, 14 Sep 2016 17:26:22 +0000"><p>On the race involving <tt>shuttingDownLE</tt>, say that FLE sets it to true right after the <tt>QuorumPeer</tt> thread has checked that it is false here:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>if (shuttingDownLE) { shuttingDownLE = false; startLeaderElection(); } setCurrentVote(makeLEStrategy().lookForLeader()); </pre> </div></div> <p>The quorum peer thread will skip starting leader election, and when it calls <tt>lookForLeader</tt>, we might end up getting an empty vote because the FLE instance is stopped. This doesn't look like it is fatal, though. The server will remain in the looking state, which will force it to try again. Do you agree?</p> <blockquote><p>Do we need to synchronize on this code in QuorumPeer? </p></blockquote> <p>I think this is the case I'm mentioning above, but let me know.</p> <blockquote><p>I think we have another potential dead lock in QuorumPeer.restartLeaderElection</p></blockquote> <p>Sounds right, good catch. I'm wondering why <tt>QuorumCnxManager.connectOne</tt> is synchronized on self, all it is trying to do is to connect to another server.</p> <blockquote><p>While looking through code, I find it is hard to reason about current behavior due to the mixed state changes that could be done by many parties.</p></blockquote> <p>A refactor of this code makes perfect sense to me. <tt>QuorumPeer</tt> and <tt>QuorumCnxManager</tt>} could highly benefit from a redesign. FLE could also benefit from a refactor, but I find it better encapsulated because in principle all we need is to call <tt>lookForLeader</tt> and let it send and receive messages.</p> <p>One thing that would be awesome to do with respect to leader election is to remove the need of an additional port. It would be great if we had a single port for all server communication.</p> <p>Sorry about the daydreaming, you got me going...</p></comment>
<comment id="15494073" author="hanm" created="Thu, 15 Sep 2016 17:51:57 +0000"><blockquote><p>The server will remain in the looking state, which will force it to try again. Do you agree?</p></blockquote> <p>Yes, the explanation makes sense to me. Previously I was not sure about this as I was concerning if skipping this will cause the following <tt>setCurrentVote</tt> fail, but now it looks like everything will converge. </p> <blockquote><p>I think this is the case I'm mentioning above, but let me know.</p></blockquote> <p>Agreed.</p> <blockquote><p>A refactor of this code makes perfect sense to me.</p></blockquote> <p>Out of scope of this JIRA, but notes are taken <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="15494088" author="hanm" created="Thu, 15 Sep 2016 17:58:27 +0000"><p>Regarding <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>'s comment on </p> <blockquote><p>I'm wondering why QuorumCnxManager.connectOne is synchronized on self, all it is trying to do is to connect to another server.</p></blockquote> <p>The synchronization is introduced as part of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-107" title="Allow dynamic changes to server cluster membership" class="issue-link" data-issue-key="ZOOKEEPER-107"><del>ZOOKEEPER-107</del></a> (<a href="https://github.com/apache/zookeeper/commit/675ef85ba5cd97d69b875d14854b638da6f4423c#diff-1e15b8a38445193d635ac681fe37df67R409" class="external-link" target="_blank" rel="nofollow noopener">reference</a>). I think the synchronization is required because this code check and react to state of QuorumPeer thus needs to synchronize with self as a whole. If we can get ride of the synchronization here, then both this JIRA and the potential deadlock spotted at <tt>QuorumPeer.restartLeaderElection</tt> can be fixed. I am not sure if that is feasible though.</p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>: Could you shed some lights on the motivation of synchronizing on self in QuorumCnxManager.connectOne and also, any possibilities we can get ride of the synchronization here?</p></comment>
<comment id="15495429" author="shralex" created="Fri, 16 Sep 2016 05:30:04 +0000"><p>There is a lot of accesses to the config info from this function, and the synchronization may be needed<br/> to make sure all of them return a state which is consistent. getView returns the last committed<br/> config and getLastSeenQuorumVerifier returns the last proposed config. If we wouldn't be in a synchronized block, and the committed view changed (reconfig commits while we're in this function), it seems possible that sid<br/> moves from last proposed to last committed config and we will never try to connect to it.</p> <p>First, getLastSeenQuorumVerifier and getView shouldn't be accessed more than once (currently 4 and 3 times each).<br/> We can just store the result and use that. </p> <p>To remove the synchronized block completely you could create a synchronized function in QuorumPeer that returns a pair: last committed and last proposed view, and call that function once from connectOne.</p></comment>
<comment id="15495437" author="shralex" created="Fri, 16 Sep 2016 05:35:15 +0000"><p>If I'm not mistaken, when the configuration changes we create a completely new QuorumVerifier object, so if you call the new function and have a reference to the old QV, the information in that object shouldn't change. But please make sure that this is the case and document this assumption if you choose to use this method.</p></comment>
<comment id="15504624" author="fpj" created="Mon, 19 Sep 2016 20:38:51 +0000"><p>Here is a thought. <tt>connectOne</tt> is synchronized both on the <tt>QuorumCnxManager</tt> object and <tt>self</tt>, which is a <tt>QuorumPeer</tt> instance. If we pass the QV instance as part of the <tt>connectOne</tt> call, then can we remove the <tt>synchronized(self)</tt> block?</p> <p>I think the method is synchronized because of accesses such as the one to <tt>sendWorkerMap</tt>.</p> <p>cc <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a> <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a></p> </comment>
<comment id="15516954" author="hanm" created="Fri, 23 Sep 2016 16:52:11 +0000"><p>cancel patch while I am working on a new one.</p></comment>
<comment id="15517870" author="hanm" created="Fri, 23 Sep 2016 23:30:55 +0000"><p>Thanks a ton for your feedback Alex, and Flavio. Had more thoughts about this today. First to reply your comments posted earlier:</p> <blockquote><p>If we pass the QV instance as part of the connectOne call, then can we remove the synchronized(self) block?</p></blockquote> <p>To pass QV instances we have to first retrieve them from a QuorumPeer object. Get QV instances on a QuorumPeer object requires synchronization on the QuorumPeer itself, either using existing methods or using what Alex was suggesting:</p> <blockquote><p>To remove the synchronized block completely you could create a synchronized function in QuorumPeer that returns a pair</p></blockquote> <p>So in any case we will still possibly end up with a deadlock somewhere inside listener threads - we just moved the deadlock from one place to the other <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> - because somewhere in the listener thread of QuorumCnxManager we are going to invoke synchronized version of getQV, which might block because the same QuorumPeer object which the getQV methods are invoking were acquired as a lock during restart of FLE.</p> <p>To recap the deadlock problem - a simplified version description:</p> <ul> <li>Restart leader election acquires a QuorumPeer lock.</li> <li>Restart leader election requires shut down QuorumCnxManager as part of the process while holding the lock.</li> <li>Shutdown QuorumCnxManager requires synchronize on the same QuorumPeer.</li> </ul> <p>The solution for each of these in order:</p> <ul> <li>Don't acquire a QuorumPeer lock when restart LE. This is less likely a solution due to the state changes to QuorumPeer during the process required the process has to be synchronized.</li> <li>Don't hold the lock while shutdown QuorumCnxManager. This is essentially the latest patch did by moving the shutdown out of the sync block. However, it does not fix the issue I spotted in previous comments (potential dead lock in QuorumPeer.restartLeaderElection - because this method synchronized implicitly on the intrinsic lock).</li> <li>Don't synchronize on the QuorumPeer inside QuorumCnxManager's shutdown process: this implies we can't involve any of the QuorumPeer's synchronized methods in listener threads run loop - otherwise we will end up a deadlock. As previously commented, removing <tt>synchronized(self)</tt> block by passing QV instance to <tt>connectOne</tt> would not work because we still need to invoke the synchronized version of getQA somewhere in listener threads.</li> </ul> <p>Other thoughts - we could possibly interrupt the connectOne which is synchronizing on the QuorumPeer. It should be fine to interrupt because at this point everything is shutting down and the server socket was already closed (in listener.halt) so no resource leak concerns. So we just need to find a way that after we call <tt>listener.halt()</tt> in <tt>QuorumCnxManager.halt()</tt>, we can signal the listener threads to bail out the blocking state - I need to think more about how to do this because it seems not possible to interrupt a synchronized code block - so we may have to use additional abstractions (i.e. ReentrantLock?) which adds more complexity.</p> </comment>
<comment id="15519026" author="fpj" created="Sat, 24 Sep 2016 13:08:00 +0000"><p>I suspect that <tt>connectOne</tt> needs to synchronize on self because it needs a consistent view of <tt>self.getView()</tt> and <tt>self.getLastSeenQuorumVerifier()</tt>. In fact, one interesting thing is that <tt>self.getView()</tt> is declared as:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>public Maplt;Long,QuorumPeer.QuorumServergt; getView() { return Collections.unmodifiableMap(getQuorumVerifier().getAllMembers()); } </pre> </div></div> <p>So all we really need is <tt>self.getLastSeenQuorumVerifier()</tt>.</p> <p>The root cause of all these deadlocks seems to be that we are trying to get a consistent view of the ensemble and locking <tt>QuorumPeer</tt> to guarantee consistency. The complex interdependencies across classes is making it difficult to guarantee that we don't have deadlocks. My suggestion is that we take a different approach. Each class that needs a consistent view of <tt>self.getLastSeenQuorumVerifier()</tt> will implement a listener that caches the new value locally, and <tt>QuorumPeer</tt> will broadcast changes to the quorum verifier to all listeners. Broadcasting can be done under a lock to prevent races with other operations inside <tt>QuorumPeer</tt>. I think that if we do something like this, we will be avoiding the circular dependencies and fixing the deadlocks. The change doesn't seem to be super complex, but I could be wrong, though.</p></comment>
<comment id="15523553" author="shralex" created="Mon, 26 Sep 2016 16:40:13 +0000"><p>I agree about the cause, but my suggestion (above) may be easier - create one synchronized method that returns both committed and proposed configs together (though an unmodifiable collection sounds like a good idea).</p></comment>
<comment id="15523638" author="hanm" created="Mon, 26 Sep 2016 17:13:19 +0000"><p>Hi Alex, the constraint here is that we can't invoke any of the QuroumPeer's synchronized functions inside the listener thread of QuorumCnxManager, because when we restart leader election, the same QuorumPeer object is acquired first to kick off the restart, and the lock would not be released until restart finished - and the restart would not finish until listener thread joins. Due to timing we could end up in any places inside listener's run method, so if we try to synchronize on the same QuorumPeer we would get blocked indefinitely. </p></comment>
<comment id="15523711" author="shralex" created="Mon, 26 Sep 2016 17:41:28 +0000"><p>I see. Maybe in this case Flavio's suggestion would work, or even a simpler method where you keep a copy of the views in QCM and update them from the QuorumPeer methods that set the last committed and last proposed views. But this update would have to synchronize on both QP and QCM, so not sure if the same problem exists as above.</p></comment>
<comment id="15526260" author="fpj" created="Tue, 27 Sep 2016 14:11:32 +0000"><p>The only reason I had to suggest that we use this listener pattern is that we apparently need the view across a number of classes, so instead of having to have QP keeping direct references to each of these classes, we simply keep implementations of some <tt>ViewListener</tt> interface. It is unclear to me whether we need to synchronize on QP when invoking the interface call on each of the registered instances. Do we need to update all view listeners in a critical section?</p></comment>
<comment id="15593380" author="hanm" created="Thu, 20 Oct 2016 23:41:05 +0000"><p>Getting back on this issue. I have another perspective - rather than synchronizing on entire QuorumPeer we could use fine grained locks to specifically guard the set of states affiliated with QuorumVerifier, namely:</p> <ul> <li>Quorum verifier.</li> <li>Last seen quorum verifier.</li> <li>Some additional fields that appertain to QV and last QV, such as quorum address, election port, and client address.</li> </ul> <p>As for what to guard, I feel guard on individual fields (QV, last QV, quorum address, etc) is enough after examining the code paths and call graphs - if I am wrong, then we will need to figure out a compound state and invent a new class that encapsulates all these states. Also we should make sure that every access to these states will be guarded by the same lock. </p> <blockquote><p>But this update would have to synchronize on both QP and QCM, so not sure if the same problem exists as above.</p></blockquote> <p>I feel the same way - this solution just moves the lock around =).</p> <blockquote><p>Do we need to update all view listeners in a critical section?</p></blockquote> <p>I think yes, if we want to maintain a global consistent view of the QV states. When the value of QV in QP is updated, QP needs to fire events to notify subscribers of such change, and without locking when the event hits subscriber the view of the world might already changed. We might also need locking on the event callbacks of each listener, to avoid any potential race condition of each listener. But this case the likely hood of running into race / dead lock sounds lower as we are not synchronizing on a single QP anymore.</p> <p>In any cases, I feel refactoring the QuorumPeer to use fine grained locking is necessary. Attaching a patch to express my idea.</p></comment>
<comment id="15593386" author="githubbot" created="Thu, 20 Oct 2016 23:44:30 +0000"><p>GitHub user hanm opened a pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92</a></p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2080" title="Fix deadlock in dynamic reconfiguration" class="issue-link" data-issue-key="ZOOKEEPER-2080"><del>ZOOKEEPER-2080</del></a>: Fix deadlock in dynamic reconfiguration.</p> <p> Use explicit fine grained locks for synchronizing access to QuorumVerifier states in QuorumPeer.</p> <p>You can merge this pull request into a Git repository by running:</p> <p> $ git pull <a href="https://github.com/hanm/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/hanm/zookeeper</a> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2080" title="Fix deadlock in dynamic reconfiguration" class="issue-link" data-issue-key="ZOOKEEPER-2080"><del>ZOOKEEPER-2080</del></a></p> <p>Alternatively you can review and apply these changes as the patch at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92.patch" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92.patch</a></p> <p>To close this pull request, make a commit to your master/trunk branch<br/> with (at least) the following in the commit message:</p> <p> This closes #92</p> <hr /> <p>commit cfb4d73a94f23c6e047f75d400372caa495f197f<br/> Author: Michael Han lt;hanm@cloudera.comgt;<br/> Date: 2016-10-20T22:37:22Z</p> <p> Use explicit fine grained lock for maintaining a consistent global view of QuorumVerifier in QuorumPeer.</p> <hr /></comment>
<comment id="15593405" author="hanm" created="Thu, 20 Oct 2016 23:52:32 +0000"><p>I've also left some comments on PR about the refactoring. The patch is stress tested on internal Jenkins with the previous failed tests, and so far all tests passed (with 500+ runs).</p></comment>
<comment id="15593437" author="hadoopqa" created="Fri, 21 Oct 2016 00:08:08 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12834574/ZOOKEEPER-2080.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12834574/ZOOKEEPER-2080.patch</a><br/> against trunk revision cef5978969bedfe066f903834a9ea4af6d508844.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3496//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3496//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3496//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3496//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3496//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3496//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15613237" author="yuzhihong@gmail.com" created="Thu, 27 Oct 2016 21:14:47 +0000"><p>Thanks for the effort, Michael.</p></comment>
<comment id="15718771" author="githubbot" created="Sat, 3 Dec 2016 21:31:33 +0000"><p>Github user lvfangmin commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92#discussion_r90764675" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92#discussion_r90764675</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java #8212;<br/> @@ -1390,24 +1406,29 @@ public QuorumVerifier configFromString(String s) throws IOException, ConfigExcep<br/> }</p> <p> /**</p> <ul class="alternate" type="square"> <li>* Return QuorumVerifier object for the last committed configuration<br/> + * Return QuorumVerifier object for the last committed configuration.<br/> */<br/> -</li> <li>public synchronized QuorumVerifier getQuorumVerifier(){</li> <li>return quorumVerifier;<br/> -<br/> + public QuorumVerifier getQuorumVerifier() <div class="error"><span class="error">Unknown macro: { + synchronized (qvLock) { + return quorumVerifier; + } }</span> </div></li> </ul> <ul class="alternate" type="square"> <li>public synchronized QuorumVerifier getLastSeenQuorumVerifier(){</li> <li>return lastSeenQuorumVerifier;<br/> + /**<br/> + * Return QuorumVerifier object for the last proposed configuration.<br/> + */<br/> + public QuorumVerifier getLastSeenQuorumVerifier() <div class="error"><span class="error">Unknown macro: { + synchronized (qvLock) { + return lastSeenQuorumVerifier; + } }</span> </div></li> </ul> <ul class="alternate" type="square"> <li>public synchronized void connectNewPeers(){</li> <li>if (qcm!=null amp;amp; getQuorumVerifier()!=null amp;amp; getLastSeenQuorumVerifier()!=null) {</li> <li>Maplt;Long, QuorumServergt; committedView = getQuorumVerifier().getAllMembers();</li> <li>for (Entrylt;Long, QuorumServergt; e: getLastSeenQuorumVerifier().getAllMembers().entrySet()){<br/> + private void connectNewPeers(){ <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Hi @hanm, I've followed the long discussion on the Jira, thanks for digging deeper into the problem. LGTM, only a small suggestion: it's error-prone to assume that in the future this method won't be called by other non-synchronized methods, we'd better to add the synchronize(qvLock) here too.</p></comment>
<comment id="15722835" author="githubbot" created="Mon, 5 Dec 2016 17:42:54 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92#discussion_r90916712" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92#discussion_r90916712</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java #8212;<br/> @@ -1390,24 +1406,29 @@ public QuorumVerifier configFromString(String s) throws IOException, ConfigExcep<br/> }</p> <p> /**</p> <ul class="alternate" type="square"> <li>* Return QuorumVerifier object for the last committed configuration<br/> + * Return QuorumVerifier object for the last committed configuration.<br/> */<br/> -</li> <li>public synchronized QuorumVerifier getQuorumVerifier(){</li> <li>return quorumVerifier;<br/> -<br/> + public QuorumVerifier getQuorumVerifier() <div class="error"><span class="error">Unknown macro: { + synchronized (qvLock) { + return quorumVerifier; + } }</span> </div></li> </ul> <ul class="alternate" type="square"> <li>public synchronized QuorumVerifier getLastSeenQuorumVerifier(){</li> <li>return lastSeenQuorumVerifier;<br/> + /**<br/> + * Return QuorumVerifier object for the last proposed configuration.<br/> + */<br/> + public QuorumVerifier getLastSeenQuorumVerifier() <div class="error"><span class="error">Unknown macro: { + synchronized (qvLock) { + return lastSeenQuorumVerifier; + } }</span> </div></li> </ul> <ul class="alternate" type="square"> <li>public synchronized void connectNewPeers(){</li> <li>if (qcm!=null amp;amp; getQuorumVerifier()!=null amp;amp; getLastSeenQuorumVerifier()!=null) {</li> <li>Maplt;Long, QuorumServergt; committedView = getQuorumVerifier().getAllMembers();</li> <li>for (Entrylt;Long, QuorumServergt; e: getLastSeenQuorumVerifier().getAllMembers().entrySet()){<br/> + private void connectNewPeers(){ <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> @lvfangmin Good suggestion, PR updated. Thanks for double checking. </p></comment>
<comment id="15722843" author="hadoopqa" created="Mon, 5 Dec 2016 17:45:45 +0000"><p>-1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +0 tests included. The patch appears to be a documentation patch that doesn't require tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/100//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/100//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/100//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/100//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/100//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/100//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15830313" author="hadoopqa" created="Thu, 19 Jan 2017 17:38:50 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +0 tests included. The patch appears to be a documentation patch that doesn't require tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/225//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/225//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/225//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/225//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/225//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/225//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15830331" author="hanm" created="Thu, 19 Jan 2017 17:49:41 +0000"><p>Update... current status of this issue:</p> <ul> <li>Rebased against latest master.</li> <li>My stress tests on failed unit tests all pass.</li> <li>Code reviewed by @lvfangmin on github.</li> </ul> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shralex" class="user-hover" rel="shralex">Alexander Shraer</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a> Could you do a review on <a href="https://github.com/apache/zookeeper/pull/92" class="external-link" target="_blank" rel="nofollow noopener">Pull Request 92</a> when you have a chance? </p></comment>
<comment id="15830354" author="hadoopqa" created="Thu, 19 Jan 2017 18:08:01 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12834574/ZOOKEEPER-2080.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12834574/ZOOKEEPER-2080.patch</a><br/> against trunk revision 42c75b5f2457f8ea5b4106ce5dc1c34c330361c0.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3563//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3563//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3563//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3563//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3563//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3563//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15830406" author="githubbot" created="Thu, 19 Jan 2017 18:51:58 +0000"><p>Github user eribeiro commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92#discussion_r96929565" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92#discussion_r96929565</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java #8212;<br/> @@ -434,6 +434,10 @@ public int getQuorumSize(){<br/> //last proposed quorum verifier<br/> public QuorumVerifier lastSeenQuorumVerifier = null;</p> <p> + // Lock object that guard access to quorumVerifier and lastSeenQuorumVerifier.<br/> + private byte[] qvLock = new byte<span class="error">#91;0#93;</span>;<br/> #8212; End diff #8211;</p> <p> It should be <b>final</b> if you want to use it as a lock object. Also, as constant it would be renamed as <b>QV_LOCK</b>.</p> <p> nit: Also, we usually use a `Object`:<br/> ```<br/> private final Object LOCK = new Object();<br/> ```<br/> or a `ReentrantReadWriteLock` (more verbose tough, with try-finally, etc).</p></comment>
<comment id="15834049" author="githubbot" created="Mon, 23 Jan 2017 08:19:55 +0000"><p>Github user shralex commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92#discussion_r97266698" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92#discussion_r97266698</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java #8212;<br/> @@ -468,31 +469,33 @@ synchronized private boolean connectOne(long sid, InetSocketAddress electionAddr<br/> */</p> <p> synchronized void connectOne(long sid)</p> { + connectOne(sid, self.getLastSeenQuorumVerifier()); + } <p> +<br/> + synchronized void connectOne(long sid, QuorumVerifier lastSeenQV){<br/> if (senderWorkerMap.get(sid) != null) </p> { - LOG.debug("There is a connection already for server " + sid); - return; + LOG.debug("There is a connection already for server " + sid); + return; } <ul class="alternate" type="square"> <li>synchronized(self) {</li> <li>boolean knownId = false;</li> <li>// Resolve hostname for the remote server before attempting to</li> <li>// connect in case the underlying ip address has changed.</li> <li>self.recreateSocketAddresses(sid);</li> <li>if (self.getView().containsKey(sid)) { - knownId = true; - if (connectOne(sid, self.getView().get(sid).electionAddr)) - return; - }</li> <li>if (self.getLastSeenQuorumVerifier()!=null amp;amp; self.getLastSeenQuorumVerifier().getAllMembers().containsKey(sid)</li> <li>amp;amp; (!knownId || (self.getLastSeenQuorumVerifier().getAllMembers().get(sid).electionAddr !=</li> <li>self.getView().get(sid).electionAddr))) { - knownId = true; - if (connectOne(sid, self.getLastSeenQuorumVerifier().getAllMembers().get(sid).electionAddr)) - return; - }</li> <li>if (!knownId) {</li> <li>LOG.warn("Invalid server id: " + sid);<br/> + boolean knownId = false;<br/> + // Resolve hostname for the remote server before attempting to<br/> + // connect in case the underlying ip address has changed.<br/> + self.recreateSocketAddresses(sid);<br/> + if (self.getView().containsKey(sid)) { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> How about passing also the last committed view so you don't need to call getView() multiple times ?<br/> I know you're protecting this with the lock in QuorumPeer, but before I read the other file I thought there may be a race because of multiple accesses to the config. A comment would help here.</p> </comment>
<comment id="15835441" author="githubbot" created="Tue, 24 Jan 2017 00:39:58 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92#discussion_r97451281" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92#discussion_r97451281</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java #8212;<br/> @@ -468,31 +469,33 @@ synchronized private boolean connectOne(long sid, InetSocketAddress electionAddr<br/> */</p> <p> synchronized void connectOne(long sid)</p> { + connectOne(sid, self.getLastSeenQuorumVerifier()); + } <p> +<br/> + synchronized void connectOne(long sid, QuorumVerifier lastSeenQV){<br/> if (senderWorkerMap.get(sid) != null) </p> { - LOG.debug("There is a connection already for server " + sid); - return; + LOG.debug("There is a connection already for server " + sid); + return; } <ul class="alternate" type="square"> <li>synchronized(self) {</li> <li>boolean knownId = false;</li> <li>// Resolve hostname for the remote server before attempting to</li> <li>// connect in case the underlying ip address has changed.</li> <li>self.recreateSocketAddresses(sid);</li> <li>if (self.getView().containsKey(sid)) { - knownId = true; - if (connectOne(sid, self.getView().get(sid).electionAddr)) - return; - }</li> <li>if (self.getLastSeenQuorumVerifier()!=null amp;amp; self.getLastSeenQuorumVerifier().getAllMembers().containsKey(sid)</li> <li>amp;amp; (!knownId || (self.getLastSeenQuorumVerifier().getAllMembers().get(sid).electionAddr !=</li> <li>self.getView().get(sid).electionAddr))) { - knownId = true; - if (connectOne(sid, self.getLastSeenQuorumVerifier().getAllMembers().get(sid).electionAddr)) - return; - }</li> <li>if (!knownId) {</li> <li>LOG.warn("Invalid server id: " + sid);<br/> + boolean knownId = false;<br/> + // Resolve hostname for the remote server before attempting to<br/> + // connect in case the underlying ip address has changed.<br/> + self.recreateSocketAddresses(sid);<br/> + if (self.getView().containsKey(sid)) { <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> @shralex Thanks for review comments! Made two changes:</p> <ul> <li>Refactored the code to reuse getView results. This view is not passed in as I thought that's simplified caller site.</li> <li>This code block inside connectOne is now synchronized with the same lock that protecting other view / quorum verifiers of the same QuorumPeer. I think this makes the code block semantically equivalent to the previous code block before this change, where the code block was synchronizing on the whole QuorumPeer 'self' with the intention that during the entire execution of connectOne, accesses to configs are protected. I did not add any comments as with the explicit synchronizing block, the semantic should be self explanatory.</li> </ul> <p> My stress tests look good so far with latest changes.</p> </comment>
<comment id="15835445" author="githubbot" created="Tue, 24 Jan 2017 00:41:06 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92#discussion_r97451441" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92#discussion_r97451441</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java #8212;<br/> @@ -434,6 +434,10 @@ public int getQuorumSize(){<br/> //last proposed quorum verifier<br/> public QuorumVerifier lastSeenQuorumVerifier = null;</p> <p> + // Lock object that guard access to quorumVerifier and lastSeenQuorumVerifier.<br/> + private byte[] qvLock = new byte<span class="error">#91;0#93;</span>;<br/> #8212; End diff #8211;</p> <p> Thanks for the comments, Edward. Code updated.</p></comment>
<comment id="15835474" author="hadoopqa" created="Tue, 24 Jan 2017 01:05:35 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +0 tests included. The patch appears to be a documentation patch that doesn't require tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/246//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/246//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/246//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/246//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/246//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/246//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15835604" author="hadoopqa" created="Tue, 24 Jan 2017 03:42:32 +0000"><p>+1 overall. GitHub Pull Request Build</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +0 tests included. The patch appears to be a documentation patch that doesn't require tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 3.0.1) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/247//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/247//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/247//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/247//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/247//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/247//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15835700" author="shralex" created="Tue, 24 Jan 2017 05:48:13 +0000"><p>+1, thanks a lot Michael!</p> <p>Please rerun your tests one more time before commiting <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="15858773" author="githubbot" created="Thu, 9 Feb 2017 00:33:53 +0000"><p>Github user hanm commented on the issue:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92</a></p> <p> Hey @shralex, want to close the loop here. Does the latest pull request look good to you? My stress tests on this branch has been green for past two weeks.</p> </comment>
<comment id="15858783" author="shralex" created="Thu, 9 Feb 2017 00:43:00 +0000"><p>Hi Michael, Nothing changed in the code since my last comment right? so I'm still +1.</p></comment>
<comment id="15858789" author="hanm" created="Thu, 9 Feb 2017 00:47:37 +0000"><p>Thanks Alex. I made a small change to address your last comment:</p> <blockquote><p>Instead of passing lastSeenQV as a parameter, could you add a line here Maplt;Long, QuorumPeer.QuorumServergt; lastProposedView = self.getLastSeenQuorumVerifier().getAllMembers();</p></blockquote> <p>and the change is here fyi. <br/> <a href="https://github.com/apache/zookeeper/pull/92/commits/25f0caf15a0992b3e871f1fa5c7532f78c949037" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92/commits/25f0caf15a0992b3e871f1fa5c7532f78c949037</a></p></comment>
<comment id="15858792" author="shralex" created="Thu, 9 Feb 2017 00:49:39 +0000"><p>This looks good, thanks Michael. I'm still +1.</p></comment>
<comment id="15859025" author="githubbot" created="Thu, 9 Feb 2017 05:00:05 +0000"><p>Github user asfgit closed the pull request at:</p> <p> <a href="https://github.com/apache/zookeeper/pull/92" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/92</a></p></comment>
<comment id="15859052" author="rakeshr" created="Thu, 9 Feb 2017 05:31:42 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=hanm" class="user-hover" rel="hanm">Michael Han</a> for the good work and others for the useful review comments.</p> <p>Committed to branch-3.5:<br/> <a href="https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=commit;h=ac864f53bf7d1f3c8630348ed4cdeb2539ec3932" class="external-link" target="_blank" rel="nofollow noopener">https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=commit;h=ac864f53bf7d1f3c8630348ed4cdeb2539ec3932</a></p> <p>Committed to master:<br/> <a href="https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=commit;h=434abbbb7eef271fab02306bcc9c8ad29ec2fe2e" class="external-link" target="_blank" rel="nofollow noopener">https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=commit;h=434abbbb7eef271fab02306bcc9c8ad29ec2fe2e</a></p></comment>
<comment id="15859061" author="hudson" created="Thu, 9 Feb 2017 05:40:29 +0000"><p>SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3269 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/3269/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/3269/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2080" title="Fix deadlock in dynamic reconfiguration" class="issue-link" data-issue-key="ZOOKEEPER-2080"><del>ZOOKEEPER-2080</del></a>: Fix deadlock in dynamic reconfiguration (rakeshr: rev 434abbbb7eef271fab02306bcc9c8ad29ec2fe2e)</p> <ul> <li>(edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java</li> <li>(edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java</li> </ul> </comment>
<comment id="15999296" author="githubbot" created="Sat, 6 May 2017 05:18:21 +0000"><p>Github user hanm commented on a diff in the pull request:</p> <p> <a href="https://github.com/apache/zookeeper/pull/247#discussion_r115113425" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/apache/zookeeper/pull/247#discussion_r115113425</a></p> <p> #8212; Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java #8212;<br/> @@ -682,27 +682,19 @@ public void setQuorumAddress(InetSocketAddress addr){<br/> }</p> <p> public InetSocketAddress getElectionAddress(){</p> <ul class="alternate" type="square"> <li>synchronized (QV_LOCK) { - return myElectionAddr; - } <p> + return myElectionAddr;</p> <ul class="alternate" type="square"> <li> <ul class="alternate" type="square"> <li>End diff #8211;</li> </ul> </li> </ul> </li> </ul> <p> Note this synchronization was introduced as part of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2080" title="Fix deadlock in dynamic reconfiguration" class="issue-link" data-issue-key="ZOOKEEPER-2080"><del>ZOOKEEPER-2080</del></a> (which fixed a separate dead lock issue.). The intent was to protect access on these states while a reconfig operation is in flight, but my analysis indicate it might be totally fine without these synchronizations.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10032">
<name>Blocker</name>
<inwardlinks description="is blocked by">
<issuelink>
<issuekey id="12477563">ZOOKEEPER-901</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="13069641">ZOOKEEPER-2778</issuekey>
</issuelink>
</outwardlinks>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12855756">ZOOKEEPER-2246</issuekey>
</issuelink>
<issuelink>
<issuekey id="12677175">ZOOKEEPER-1807</issuekey>
</issuelink>
<issuelink>
<issuekey id="12820740">ZOOKEEPER-2164</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="12310050">
<name>Regression</name>
<outwardlinks description="breaks">
<issuelink>
<issuekey id="13069641">ZOOKEEPER-2778</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
<issuelinktype id="12310040">
<name>Required</name>
<outwardlinks description="requires">
<issuelink>
<issuekey id="12676962">ZOOKEEPER-1806</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12834574" name="ZOOKEEPER-2080.patch" size="13961" author="hanm" created="Thu, 20 Oct 2016 23:41:46 +0000"/>
<attachment id="12828380" name="ZOOKEEPER-2080.patch" size="5730" author="hanm" created="Wed, 14 Sep 2016 04:21:41 +0000"/>
<attachment id="12823092" name="ZOOKEEPER-2080.patch" size="5214" author="hanm" created="Wed, 10 Aug 2016 16:54:34 +0000"/>
<attachment id="12821475" name="ZOOKEEPER-2080.patch" size="5693" author="hanm" created="Tue, 2 Aug 2016 00:55:54 +0000"/>
<attachment id="12820310" name="ZOOKEEPER-2080.patch" size="2936" author="hanm" created="Tue, 26 Jul 2016 23:17:08 +0000"/>
<attachment id="12812677" name="ZOOKEEPER-2080.patch" size="1056" author="hanm" created="Thu, 23 Jun 2016 00:09:53 +0000"/>
<attachment id="12754611" name="jacoco-ZOOKEEPER-2080.unzip-grows-to-70MB.7z" size="916303" author="suda" created="Tue, 8 Sep 2015 10:04:44 +0000"/>
<attachment id="12750696" name="repro-20150816.log" size="2771139" author="suda" created="Sun, 16 Aug 2015 10:20:23 +0000"/>
<attachment id="12812676" name="threaddump.log" size="78475" author="hanm" created="Thu, 23 Jun 2016 00:09:31 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i22b33:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1858] JMX checks - potential race conditions while stopping and starting server</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1858</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>I've noticed one potential case, where previously created zkclient session immediately reconnected and publishing those beans while starting back the zkserver and affecting zk#startup jmx checks.</p> <p>Say, before stopping the server, there is a zk client session 0x143576544c50000 exists. While starting back the server, there could be possibility of seeing the client sessions in jmx. Following is one such case. Please see below logs which has taken from build <a href="https://builds.apache.org/job/ZooKeeper-trunk-WinVS2008_java/642/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk-WinVS2008_java/642/</a></p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> [junit] 2014-01-03 09:18:12,809 [myid:] - INFO [main-SendThread(127.0.0.1:11222):ClientCnxn$SendThread@1228] - Session establishment complete on server 127.0.0.1/127.0.0.1:11222, sessionid = 0x143576544c50000, negotiated timeout = 30000 [junit] 2014-01-03 09:18:12,809 [myid:] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11222:ZooKeeperServer@617] - Established session 0x143576544c50000 with negotiated timeout 30000 <span class="code-keyword">for</span> client /127.0.0.1:55377</pre> </div></div> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> [junit] 2014-01-03 09:18:12,391 [myid:] - INFO [main:JMXEnv@135] - ensureOnly:[] [junit] 2014-01-03 09:18:12,395 [myid:] - INFO [main:ClientBase@438] - STARTING server [junit] 2014-01-03 09:18:12,395 [myid:] - INFO [main:ClientBase@359] - CREATING server instance 127.0.0.1:11222 [junit] 2014-01-03 09:18:12,395 [myid:] - INFO [main:NIOServerCnxnFactory@94] - binding to port 0.0.0.0/0.0.0.0:11222 [junit] 2014-01-03 09:18:12,395 [myid:] - INFO [main:ClientBase@334] - STARTING server instance 127.0.0.1:11222 [junit] 2014-01-03 09:18:19,030 [myid:] - INFO [main:JMXEnv@142] - unexpected:org.apache.ZooKeeperService:name0=StandaloneServer_port-1,name1=Connections,name2=127.0.0.1,name3=0x143576544c50000 [junit] 2014-01-03 09:18:19,030 [myid:] - INFO [main:JMXEnv@142] - unexpected:org.apache.ZooKeeperService:name0=StandaloneServer_port-1 [junit] 2014-01-03 09:18:19,030 [myid:] - INFO [main:JUnit4ZKTestRunner$LoggedInvokeMethod@62] - TEST METHOD FAILED testDefaultWatcherAutoResetWithChroot [junit] junit.framework.AssertionFailedError: expected:lt;0gt; but was:lt;2gt; [junit] at junit.framework.Assert.fail(Assert.java:47) [junit] at junit.framework.Assert.failNotEquals(Assert.java:283) [junit] at junit.framework.Assert.assertEquals(Assert.java:64) [junit] at junit.framework.Assert.assertEquals(Assert.java:195) [junit] at junit.framework.Assert.assertEquals(Assert.java:201) [junit] at org.apache.zookeeper.test.JMXEnv.ensureOnly(JMXEnv.java:144) [junit] at org.apache.zookeeper.test.ClientBase.startServer(ClientBase.java:443) [junit] at org.apache.zookeeper.test.DisconnectedWatcherTest.testDefaultWatcherAutoResetWithChroot(DisconnectedWatcherTest.java:123) [junit] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) </pre> </div></div></description>
<environment/>
<key id="12687226">ZOOKEEPER-1858</key>
<summary>JMX checks - potential race conditions while stopping and starting server</summary>
<type id="7" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21146avatarType=issuetype">Sub-task</type>
<parent id="12683243">ZOOKEEPER-1833</parent>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="rakeshr">Rakesh Radhakrishnan</assignee>
<reporter username="rakeshr">Rakesh Radhakrishnan</reporter>
<labels>
<label>test</label>
</labels>
<created>Fri, 3 Jan 2014 18:55:27 +0000</created>
<updated>Fri, 24 Mar 2017 17:20:38 +0000</updated>
<resolved>Sat, 25 Jan 2014 00:19:42 +0000</resolved>
<fixVersion>3.4.6</fixVersion>
<fixVersion>3.5.0</fixVersion>
<due/>
<votes>0</votes>
<watches>5</watches>
<comments>
<comment id="13861789" author="rakeshr" created="Fri, 3 Jan 2014 19:06:02 +0000"><p>Attached patch, now while starting the server it will pass the optional beans and will be skipped. These optional beans will not be used for strong assertions.</p></comment>
<comment id="13861842" author="hadoopqa" created="Fri, 3 Jan 2014 19:43:52 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12621365/ZOOKEEPER-1858.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12621365/ZOOKEEPER-1858.patch</a><br/> against trunk revision 1554981.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 29 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1872//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1872//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1872//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1872//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1872//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1872//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13861931" author="angelines" created="Fri, 3 Jan 2014 21:44:17 +0000"><p>2014-01-02 23:53:22,474 DEBUG <span class="error">#91;o.a.c.e.o.NetworkOrchestrator#93;</span> (Network-Scavenger-1:ctx-8cae1bef) Sending network shutdown to VirtualRouter<br/> 2014-01-02 23:53:22,478 DEBUG <span class="error">#91;c.c.n.r.VirtualNetworkApplianceManagerImpl#93;</span> (Network-Scavenger-1:ctx-8cae1bef) Stopping router VM<span class="error">#91;DomainRouter|r-8-VM#93;</span><br/> 2014-01-02 23:53:22,479 WARN <span class="error">#91;o.a.c.e.o.NetworkOrchestrator#93;</span> (Network-Scavenger-1:ctx-8cae1bef) Unable to complete shutdown of the network elements due to element: VirtualRouter<br/> java.lang.NullPointerException<br/> at com.cloud.vm.VirtualMachineManagerImpl.advanceStop(VirtualMachineManagerImpl.java:1268)<br/> at com.cloud.network.router.VirtualNetworkApplianceManagerImpl.stop(VirtualNetworkApplianceManagerImpl.java:2702)<br/> at com.cloud.network.router.VirtualNetworkApplianceManagerImpl.stop(VirtualNetworkApplianceManagerImpl.java:139)<br/> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br/> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<br/> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br/> at java.lang.reflect.Method.invoke(Method.java:616)<br/> at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)<br/> at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)<br/> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)<br/> at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:91)<br/> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)<br/> at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)<br/> at sun.proxy.$Proxy240.stop(Unknown Source)<br/> at com.cloud.network.element.VirtualRouterElement.shutdown(VirtualRouterElement.java:665)<br/> at org.apache.cloudstack.engine.orchestration.NetworkOrchestrator.shutdownNetworkElementsAndResources(NetworkOrchestrator.java:2052)<br/> at org.apache.cloudstack.engine.orchestration.NetworkOrchestrator.shutdownNetwork(NetworkOrchestrator.java:1965)<br/> at org.apache.cloudstack.engine.orchestration.NetworkOrchestrator$NetworkGarbageCollector.reallyRun(NetworkOrchestrator.java:2305)<br/> at org.apache.cloudstack.engine.orchestration.NetworkOrchestrator$NetworkGarbageCollector.runInContext(NetworkOrchestrator.java:2248)<br/> at org.apache.cloudstack.managed.context.ManagedContextRunnable$1.run(ManagedContextRunnable.java:49)<br/> at org.apache.cloudstack.managed.context.impl.DefaultManagedContext$1.call(DefaultManagedContext.java:56)<br/> at org.apache.cloudstack.managed.context.impl.DefaultManagedContext.callWithContext(DefaultManagedContext.java:103)<br/> at org.apache.cloudstack.managed.context.impl.DefaultManagedContext.runWithContext(DefaultManagedContext.java:53)<br/> at org.apache.cloudstack.managed.context.ManagedContextRunnable.run(ManagedContextRunnable.java:46)<br/> at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)<br/> at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:351)<br/> at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:178)<br/> at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:165)<br/> at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:267)<br/> at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1146)<br/> at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)<br/> at java.lang.Thread.run(Thread.java:679)<br/> 2014-01-02 23:53:22,488 DEBUG <span class="error">#91;o.a.c.e.o.NetworkOrchestrator#93;</span> (Network-Scavenger-1:ctx-8cae1bef) Lock is released for network Ntwk<span class="error">#91;205|Guest|8#93;</span> as a part of network shutdown<br/> 2014-01-02 23:53:23,112 WARN <span class="error">#91;c.c.u.n.Link#93;</span> (AgentManager-Selector:null) SSL: Fail to find the generated keystore. Loading fail-safe one to continue.<br/> 2014-01-02 23:53:27,528 DEBUG <span class="error">#91;c.c.s.StatsCollector#93;</span> (StatsCollector-2:ctx-0a4e0b12) VmStatsCollector is running...<br/> 2014-01-02 23:53:27,550 DEBUG <span class="error">#91;c.c.a.m.DirectAgentAttache#93;</span> (DirectAgent-406:ctx-d13f6f69) Seq 1-77595884: Executing request<br/> 2014-01-02 23:53:27,898 DEBUG <span class="error">#91;c.c.h.v.m.HostMO#93;</span> (DirectAgent-406:ctx-d13f6f69 10.223.51.4) find VM i-2-12-VM on host</p> <p>2014-01-02 23:13:22,188 DEBUG <span class="error">#91;o.a.c.e.o.NetworkOrchestrator#93;</span> (Network-Scavenger-1:ctx-fbd8a699) Sending network shutdown to VirtualRouter<br/> 2014-01-02 23:13:22,192 DEBUG <span class="error">#91;c.c.n.r.VirtualNetworkApplianceManagerImpl#93;</span> (Network-Scavenger-1:ctx-fbd8a699) Stopping router VM<span class="error">#91;DomainRouter|r-8-VM#93;</span><br/> 2014-01-02 23:13:22,192 WARN <span class="error">#91;o.a.c.e.o.NetworkOrchestrator#93;</span> (Network-Scavenger-1:ctx-fbd8a699) Unable to complete shutdown of the network elements due to element: VirtualRouter<br/> java.lang.NullPointerException<br/> at com.cloud.vm.VirtualMachineManagerImpl.advanceStop(VirtualMachineManagerImpl.java:1268)<br/> at com.cloud.network.router.VirtualNetworkApplianceManagerImpl.stop(VirtualNetworkApplianceManagerImpl.java:2702)<br/> at com.cloud.network.router.VirtualNetworkApplianceManagerImpl.stop(VirtualNetworkApplianceManagerImpl.java:139)<br/> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br/> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)<br/> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br/> at java.lang.reflect.Method.invoke(Method.java:616)<br/> at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)<br/> at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)<br/> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)<br/> at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:91)<br/> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)<br/> at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)<br/> at sun.proxy.$Proxy240.stop(Unknown Source)<br/> at com.cloud.network.element.VirtualRouterElement.shutdown(VirtualRouterElement.java:665)<br/> at org.apache.cloudstack.engine.orchestration.NetworkOrchestrator.shutdownNetworkElementsAndResources(NetworkOrchestrator.java:2052)<br/> at org.apache.cloudstack.engine.orchestration.NetworkOrchestrator.shutdownNetwork(NetworkOrchestrator.java:1965)<br/> at org.apache.cloudstack.engine.orchestration.NetworkOrchestrator$NetworkGarbageCollector.reallyRun(NetworkOrchestrator.java:2305)<br/> at org.apache.cloudstack.engine.orchestration.NetworkOrchestrator$NetworkGarbageCollector.runInContext(NetworkOrchestrator.java:2248)<br/> at org.apache.cloudstack.managed.context.ManagedContextRunnable$1.run(ManagedContextRunnable.java:49)<br/> at org.apache.cloudstack.managed.context.impl.DefaultManagedContext$1.call(DefaultManagedContext.java:56)<br/> at org.apache.cloudstack.managed.context.impl.DefaultManagedContext.callWithContext(DefaultManagedContext.java:103)<br/> at org.apache.cloudstack.managed.context.impl.DefaultManagedContext.runWithContext(DefaultManagedContext.java:53)<br/> at org.apache.cloudstack.managed.context.ManagedContextRunnable.run(ManagedContextRunnable.java:46)<br/> at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)<br/> at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:351)<br/> at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:178)<br/> at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:165)<br/> at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:267)<br/> at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1146)<br/> at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)<br/> at java.lang.Thread.run(Thread.java:679)<br/> 2014-01-02 23:13:22,202 DEBUG <span class="error">#91;o.a.c.e.o.NetworkOrchestrator#93;</span> (Network-Scavenger-1:ctx-fbd8a699) Lock is released for network Ntwk<span class="error">#91;205|Guest|8#93;</span> as a part of network shutdown<br/> 2014-01-02 23:13:23,299 WARN <span class="error">#91;c.c.u.n.Link#93;</span> (AgentManager-Selector:null) SSL: Fail to find the generated keystore. Loading fail-safe one to continue.<br/> 2014-01-02 23:13:27,734 DEBUG <span class="error">#91;c.c.a.m.AgentManagerImpl#93;</span> (AgentManager-Handler-4:null) SeqA 3-2432: Processing Seq 3-2432: { Cmd , MgmtId: -1, via: 3, Ver: v1, Flags: 11, [{"com.cloud.agent.api.ConsoleProxyLoadReportC<br/> ommand":{"_proxyVmId":1,"_loadInfo":"</p> {\n \"connections\": []\n} <p>","wait":0}}] }</p> </comment>
<comment id="13862172" author="rakeshr" created="Sat, 4 Jan 2014 02:59:02 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=angelines" class="user-hover" rel="angelines">angeline shen</a>, I didn't understand the stacktrace. Kindly explain the background of the issue and it would be helpful.</p></comment>
<comment id="13867485" author="rakeshr" created="Fri, 10 Jan 2014 04:24:05 +0000"><p>I could see <a href="https://issues.apache.org/jira/browse/CLOUDSTACK-5769" title="[vmware] scheduled snapshot failed" class="issue-link" data-issue-key="CLOUDSTACK-5769"><del>CLOUDSTACK-5769</del></a> <a href="https://issues.apache.org/jira/browse/CLOUDSTACK-5769?focusedCommentId=13861933amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13861933" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/CLOUDSTACK-5769?focusedCommentId=13861933amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13861933</a> has the same stacktrace. Also there is no response from @angeline shen about my queries. So I'm strongly thinking, by mistake he might have added the stacktrace to this jira and IMHO we can ignore it.</p> <p>Hi All, I would like to know the feedback on the problem statement and the proposed fix. Thanks</p></comment>
<comment id="13867557" author="abranzyck" created="Fri, 10 Jan 2014 06:33:47 +0000"><p>This problem looks very similar to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1837" title="Fix JMXEnv checks (potential race conditions)" class="issue-link" data-issue-key="ZOOKEEPER-1837"><del>ZOOKEEPER-1837</del></a>, which was never committed to trunk. The patch in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1837" title="Fix JMXEnv checks (potential race conditions)" class="issue-link" data-issue-key="ZOOKEEPER-1837"><del>ZOOKEEPER-1837</del></a> should work for trunk. <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>, could you please check if it would make sense to apply that fix? Does that cover the issue?</p></comment>
<comment id="13867581" author="rakeshr" created="Fri, 10 Jan 2014 07:14:11 +0000"><p>Yeah German, its similar case only. I'm seeing the issue <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1837" title="Fix JMXEnv checks (potential race conditions)" class="issue-link" data-issue-key="ZOOKEEPER-1837"><del>ZOOKEEPER-1837</del></a> has fixed on 14/Dec/13 11:24. Even after the fix I could see again the same case occured in 3.4 branch. Please see the build <a href="https://builds.apache.org/job/ZooKeeper-3.4-WinVS2008_java/397/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-3.4-WinVS2008_java/397/</a><br/> I think, good to avoid those client sessions when restarting the server, because timeout may not work well. What do you say?</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> [junit] 2014-01-03 09:18:19,710 [myid:] - INFO [main:FinalRequestProcessor@415] - shutdown of request processor complete [junit] 2014-01-03 09:18:19,711 [myid:] - INFO [main:FourLetterWordMain@43] - connecting to 127.0.0.1 11222 [junit] 2014-01-03 09:18:20,716 [myid:] - INFO [main:JMXEnv@135] - ensureOnly:[] [junit] 2014-01-03 09:18:20,719 [myid:] - INFO [main:ZKTestCase$1@65] - FAILED testDefaultWatcherAutoResetWithChroot [junit] junit.framework.AssertionFailedError: expected:lt;0gt; but was:lt;2gt; [junit] at junit.framework.Assert.fail(Assert.java:47) [junit] at junit.framework.Assert.failNotEquals(Assert.java:283) [junit] at junit.framework.Assert.assertEquals(Assert.java:64) [junit] at junit.framework.Assert.assertEquals(Assert.java:195) [junit] at junit.framework.Assert.assertEquals(Assert.java:201) [junit] at org.apache.zookeeper.test.JMXEnv.ensureOnly(JMXEnv.java:144) [junit] at org.apache.zookeeper.test.ClientBase.startServer(ClientBase.java:443) [junit] at org.apache.zookeeper.test.DisconnectedWatcherTest.testDefaultWatcherAutoResetWithChroot(DisconnectedWatcherTest.java:123) [junit] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [junit] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [junit] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [junit] at java.lang.reflect.Method.invoke(Method.java:601) </pre> </div></div></comment>
<comment id="13867631" author="rakeshr" created="Fri, 10 Jan 2014 08:46:18 +0000"><p>Adding one more point. Here the failure cause is - due to the immediate zkclient reconnection and publishing of zkclient session beans, while starting back the stopped zkserver.</p></comment>
<comment id="13868691" author="abranzyck" created="Sat, 11 Jan 2014 07:03:11 +0000"><p>I think I understand now. I will put it in my own words.<br/> The problem that you solve here is that there are test cases in which we have running zk clients while a server is stopped and started with ClientBase.stopServer and ClientBase.startServer. ClientBase.startServer has an assertion checking that there are no session beans in JMX, however, depending on timing, the running zk clients might be able to reconnect and create session beans before the check takes place. So we need to have those beans into account in the checking in order to avoid problems.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1837" title="Fix JMXEnv checks (potential race conditions)" class="issue-link" data-issue-key="ZOOKEEPER-1837"><del>ZOOKEEPER-1837</del></a> does not solve the problem, since <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1837" title="Fix JMXEnv checks (potential race conditions)" class="issue-link" data-issue-key="ZOOKEEPER-1837"><del>ZOOKEEPER-1837</del></a> just repeats this check a few times in order to avoid race conditions in which the JMX update may take longer, but this is actually happening because the correct status in JMX takes less time (with respect to the threads that checks) than what it seems to take in other environments.</p> <p>Please correct this interpretation if wrong. Otherwise, +1, it looks good to me.</p></comment>
<comment id="13868695" author="rakeshr" created="Sat, 11 Jan 2014 07:15:44 +0000"><p>Yeah German, exactly your thinking is correct<img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="13869098" author="fpj" created="Sun, 12 Jan 2014 17:52:23 +0000"><p>The assessment of the problem seems ok, but I have a couple of concerns about this patch:</p> <ol> <li>If ensureAll is there, it is likely that someone wanted to make sure we are not leaking JMX beans. Making some names optional defeats the purpose of the check. Here is a guess, though. Is there a way of checking the beans of sessions that do not exist? For a valid session, we ignore the check. A different approach would be to make sure that there are not such sessions. Is any of these possible?</li> <li>Assuming that this direction is the best we can do, I don't like the changes to the method signatures. Adding optional names to ensureAll is odd because I'd expect something that has all in the name to really check all.</li> </ol> </comment>
<comment id="13870466" author="rakeshr" created="Tue, 14 Jan 2014 07:06:24 +0000"><p>Hi Flavio, I agree with you, my previous logic was changing the semantics of ensureAll api.<br/> Can you please look at the latest patch, where I tried to solve the problem in parent and child beans approach. Does this sound good to you?</p></comment>
<comment id="13870470" author="hadoopqa" created="Tue, 14 Jan 2014 07:11:43 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12622803/ZOOKEEPER-1858.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12622803/ZOOKEEPER-1858.patch</a><br/> against trunk revision 1557875.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1883//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1883//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13870487" author="rakeshr" created="Tue, 14 Jan 2014 07:43:33 +0000"><p>Ah. Previously attached patch is from branch3.4. Attaching new patch generated from trunk.</p></comment>
<comment id="13870512" author="hadoopqa" created="Tue, 14 Jan 2014 08:14:48 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12622810/ZOOKEEPER-1858.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12622810/ZOOKEEPER-1858.patch</a><br/> against trunk revision 1557875.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1884//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1884//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1884//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1884//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1884//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1884//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13872217" author="fpj" created="Wed, 15 Jan 2014 16:01:26 +0000"><p>It looks better now, thanks, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a>. I'm still a bit hesitant in checking in this patch as is. Tracing back the change, the JMX stuff apparently got in with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-94" title="JMX tests are needed to verify that the JMX MBeans work properly" class="issue-link" data-issue-key="ZOOKEEPER-94"><del>ZOOKEEPER-94</del></a>. I was wondering if <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a> can chime in to make sure that we are not breaking anything.</p></comment>
<comment id="13872444" author="phunt" created="Wed, 15 Jan 2014 19:10:49 +0000"><p>I see why this is necessary, the patch seems reasonable to me.</p> <p>One thing caught my eye in the patch</p> <blockquote><p>waits in a loop up to 5 seconds</p></blockquote> <p>why are we waiting 5 seconds?</p></comment>
<comment id="13872943" author="rakeshr" created="Thu, 16 Jan 2014 01:49:37 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a> for the reviews.</p> <blockquote><p>why are we waiting 5 seconds?</p></blockquote> <p>Please see <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1837" title="Fix JMXEnv checks (potential race conditions)" class="issue-link" data-issue-key="ZOOKEEPER-1837"><del>ZOOKEEPER-1837</del></a> issue. There is a pattern we had observed while analysing the windows jenkins failure, it may take few moments to see the published beans by the clients and the test cases are failing randomly due to this. So its giving some more grace period rather than failing immediately.</p></comment>
<comment id="13872953" author="phunt" created="Thu, 16 Jan 2014 01:55:06 +0000"><p>The reason I ask, 5 seconds is pretty short. What typically ends up happening is that it works fine for you, but on lesser powered (underprovisioned) test hardware it will fail. We end up with a flakey test. What I'd suggest is either don't use a timeout, or, if you do need to use a timeout use something crazy large (60 sec?), typically including polling at a shorter interval. The key is that the test, in the typical case, should not be affected by the 60sec timeout (it should not take 60 sec longer for example) but if the h/w is slow we can handle that case and still give the test a chance to pass.</p></comment>
<comment id="13873262" author="rakeshr" created="Thu, 16 Jan 2014 10:56:15 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a>, attached patch by giving 60secs grace period. </p></comment>
<comment id="13873293" author="hadoopqa" created="Thu, 16 Jan 2014 11:34:46 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12623353/ZOOKEEPER-1858.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12623353/ZOOKEEPER-1858.patch</a><br/> against trunk revision 1557875.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1890//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1890//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1890//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1890//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1890//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1890//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13873505" author="fpj" created="Thu, 16 Jan 2014 15:42:23 +0000"><p>Thanks for checking this one out, @phunt. <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a>, will you generate a 3.4 patch?</p></comment>
<comment id="13873546" author="hadoopqa" created="Thu, 16 Jan 2014 16:11:28 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12623411/ZOOKEEPER-1858_br3_4.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12623411/ZOOKEEPER-1858_br3_4.patch</a><br/> against trunk revision 1557875.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1891//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1891//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13873549" author="rakeshr" created="Thu, 16 Jan 2014 16:12:38 +0000"><p>Hi Flavio, attached 3.4 patch. Please have a look at it.</p> <p>As this is 3.4 patch, please ignore jenkins failure report (if any)</p></comment>
<comment id="13876355" author="fpj" created="Mon, 20 Jan 2014 11:21:50 +0000"><p>The 3.4 patch looks good, but the trunk patch conflicts. Could you fix it, please, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a>?</p></comment>
<comment id="13876522" author="rakeshr" created="Mon, 20 Jan 2014 15:42:20 +0000"><p>Hi Flavio, I have rebased both trunk and branch3.4 patch.<br/> In this I have added link to the JIRA also, please have a look at it.</p></comment>
<comment id="13876545" author="hadoopqa" created="Mon, 20 Jan 2014 16:14:58 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12623957/ZOOKEEPER-1858.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12623957/ZOOKEEPER-1858.patch</a><br/> against trunk revision 1558950.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1895//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1895//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1895//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1895//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1895//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1895//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13881553" author="fpj" created="Sat, 25 Jan 2014 00:19:42 +0000"><p>+1, thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a>.</p> <p>Trunk: Committed revision 1561236.<br/> Branch 3.4: Committed revision 1561069</p></comment>
<comment id="13881812" author="hudson" created="Sat, 25 Jan 2014 11:09:53 +0000"><p>SUCCESS: Integrated in ZooKeeper-trunk #2195 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2195/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2195/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1858" title="JMX checks - potential race conditions while stopping and starting server" class="issue-link" data-issue-key="ZOOKEEPER-1858"><del>ZOOKEEPER-1858</del></a>. JMX checks - potential race conditions while stopping <br/> and starting server (Rakesh R via fpj) (fpj: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1561236" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1561236</a>)</p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ClientBase.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/FourLetterWordsQuorumTest.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/FourLetterWordsTest.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/JMXEnv.java</li> </ul> </comment>
<comment id="13933693" author="fpj" created="Thu, 13 Mar 2014 18:16:53 +0000"><p>Closing issues after releasing 3.4.6.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="13041156">ZOOKEEPER-2686</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12621364" name="ZOOKEEPER-1858-br3.4.patch" size="12064" author="rakeshr" created="Fri, 3 Jan 2014 19:01:30 +0000"/>
<attachment id="12623957" name="ZOOKEEPER-1858.patch" size="7721" author="rakeshr" created="Mon, 20 Jan 2014 15:39:07 +0000"/>
<attachment id="12623353" name="ZOOKEEPER-1858.patch" size="7484" author="rakeshr" created="Thu, 16 Jan 2014 10:54:36 +0000"/>
<attachment id="12622810" name="ZOOKEEPER-1858.patch" size="7177" author="rakeshr" created="Tue, 14 Jan 2014 07:40:13 +0000"/>
<attachment id="12622803" name="ZOOKEEPER-1858.patch" size="7548" author="rakeshr" created="Tue, 14 Jan 2014 07:01:17 +0000"/>
<attachment id="12621365" name="ZOOKEEPER-1858.patch" size="10799" author="rakeshr" created="Fri, 3 Jan 2014 19:01:47 +0000"/>
<attachment id="12623956" name="ZOOKEEPER-1858_br3_4.patch" size="7730" author="rakeshr" created="Mon, 20 Jan 2014 15:38:44 +0000"/>
<attachment id="12623411" name="ZOOKEEPER-1858_br3_4.patch" size="7642" author="rakeshr" created="Thu, 16 Jan 2014 16:09:00 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>366221</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i1r4l3:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>366532</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-2243] Supported platforms is completely out of date</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-2243</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p><a href="http://zookeeper.apache.org/doc/r3.4.6/zookeeperAdmin.html#sc_supportedPlatforms" class="external-link" target="_blank" rel="nofollow noopener">http://zookeeper.apache.org/doc/r3.4.6/zookeeperAdmin.html#sc_supportedPlatforms</a></p> <p>It refers to Solaris as Sun Solaris so it's at least 5 years out of date.</p> <p>We should "support" the platforms that we are running zookeeper on regularly, so I suggest paring it down to linux and windows (mac os doesn't really count because people don't run it on servers anymore). Everything else should be "may work, not supported, but will fix obvious bugs".</p></description>
<environment/>
<key id="12854088">ZOOKEEPER-2243</key>
<summary>Supported platforms is completely out of date</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="cnauroth">Chris Nauroth</assignee>
<reporter username="ikelly">Ivan Kelly</reporter>
<labels> </labels>
<created>Tue, 11 Aug 2015 08:16:17 +0000</created>
<updated>Thu, 21 Jul 2016 20:18:29 +0000</updated>
<resolved>Mon, 8 Feb 2016 21:33:20 +0000</resolved>
<fixVersion>3.4.9</fixVersion>
<fixVersion>3.5.2</fixVersion>
<fixVersion>3.6.0</fixVersion>
<due/>
<votes>0</votes>
<watches>8</watches>
<comments>
<comment id="14681576" author="fpj" created="Tue, 11 Aug 2015 10:13:18 +0000"><p>We have a solaris build queue on jenkins, I believe some of our users cared about it. I'm fine with Linux, but I'm not sure about removing mac os. I understand that folks don't run it in production, but many devs use macs to develop, so I think we should try to make it work on a mac. I'm not sure what to do about Windows. We don't have any committer or strong contributors to support Windows. There is even a recent jira with a .NET client that got very little attention. I personally don't have a machine to run windows tests any longer. </p></comment>
<comment id="14681586" author="ikelly" created="Tue, 11 Aug 2015 10:34:15 +0000"><p>That solaris build on jenkins hasn't passed in years. I don't think there are many places even using solaris now. Joyent is the only one I can think off offhand. Which is a pity. </p> <p>Regarding Mac OSX, when you support something, I take it to mean, this will work in production for you and if it doesn't thats a major bug. It doesn't mean it won't work. That said I've no problem with having Mac OSX on the list. It does get plenty of testing on Mac in any case.</p> <p>Windows, I think Huawei were using it on windows. Perhaps <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a> could enlighten us. </p></comment>
<comment id="14681739" author="rakeshr" created="Tue, 11 Aug 2015 12:37:49 +0000"><p>AFAIK in production both servers and clients uses Unix based systems like SuSE, RedHat, CentOS etc and not using Windows environment. But for the development and testing purpose we use Windows environment and running both servers/clients there. I feel it is OK to mention <tt>development platform</tt> in the document like today we have. I remember few people queried in the <a href="http://qnalist.com/questions/4669709/windows-support-win-64" class="external-link" target="_blank" rel="nofollow noopener">mailing list about the Windows support</a></p></comment>
<comment id="14681744" author="ikelly" created="Tue, 11 Aug 2015 12:46:28 +0000"><p>In that case, I think Windows (and Mac) should be supported as development platform. We're clearly not supporting it in production as there's been a bug (<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2244" title="On Windows zookeeper fails to restart" class="issue-link" data-issue-key="ZOOKEEPER-2244"><del>ZOOKEEPER-2244</del></a>) in 3.5 since it went out.</p></comment>
<comment id="14681783" author="rakeshr" created="Tue, 11 Aug 2015 13:17:45 +0000"><blockquote><p>I think Windows (and Mac) should be supported as development platform</p></blockquote> <p>+1 from me. Will help in fixing ZooKeeper bugs reported on Windows platform. BTW I noticed <a href="https://builds.apache.org/job/ZooKeeper-trunk-WinVS2008/" class="external-link" target="_blank" rel="nofollow noopener">ZooKeeper</a> <a href="https://builds.apache.org/computer/windows1" class="external-link" target="_blank" rel="nofollow noopener">windows build</a> is not running, any one has idea about this.</p></comment>
<comment id="14682066" author="cnauroth" created="Tue, 11 Aug 2015 16:50:15 +0000"><p>I know of multiple deployments running ZooKeeper in production on Windows (both client and server). It would be great if the community can consider declaring Windows to be part of the official supported platform list.</p> <p>Regarding the build, it looks like there is just a single Windows Jenkins host that can serve as executor for the job, and it appears to be offline. This likely needs follow up with INFRA. I'll aim to check with INFRA tomorrow, unless someone else beats me to it today.</p></comment>
<comment id="14682161" author="rakeshr" created="Tue, 11 Aug 2015 17:46:47 +0000"><p>Thats really good news<img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="14694411" author="cnauroth" created="Wed, 12 Aug 2015 23:36:57 +0000"><p>I filed <a href="https://issues.apache.org/jira/browse/INFRA-10116" title="Jenkins windows1 slave is not running." class="issue-link" data-issue-key="INFRA-10116"><del>INFRA-10116</del></a> to follow up on the outage with the host that was running the ZooKeeper Windows builds.</p></comment>
<comment id="14702183" author="cnauroth" created="Tue, 18 Aug 2015 23:47:44 +0000"><p>Big thanks to <span class="error">#91;~ipv6guru#93;</span> for resolving the Windows Jenkins host problem in <a href="https://issues.apache.org/jira/browse/INFRA-10116" title="Jenkins windows1 slave is not running." class="issue-link" data-issue-key="INFRA-10116"><del>INFRA-10116</del></a>. Here is a clean Windows build from 8/18:</p> <p><a href="https://builds.apache.org/job/ZooKeeper-trunk-WinVS2008/1825/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk-WinVS2008/1825/</a></p></comment>
<comment id="14702192" author="cnauroth" created="Tue, 18 Aug 2015 23:57:02 +0000"><p>Related to this, the Solaris build has been marked disabled.</p> <p><a href="https://builds.apache.org/job/ZooKeeper-trunk-solaris/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk-solaris/</a></p> <p>It has been failing on tests for a long time, even though compilation was fixed in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1077" title="C client lib doesn#39;t build on Solaris" class="issue-link" data-issue-key="ZOOKEEPER-1077"><del>ZOOKEEPER-1077</del></a>.</p> <p>I know <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=alanburlison" class="user-hover" rel="alanburlison">Alan Burlison</a> has been driving some Solaris compatibility work over in Hadoop. Alan, do your plans also include looking at ZooKeeper on Solaris?</p></comment>
<comment id="14703034" author="alanburlison" created="Wed, 19 Aug 2015 13:43:57 +0000"><p>I don't have any immediate plans but I can add it to the list to look at. I need to get Hadoop working first though <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/wink.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="14703443" author="ikelly" created="Wed, 19 Aug 2015 17:46:45 +0000"><p>Isn't zk support a prerequisite for hadoop on solaris? That said, zk support for solaris shouldn't be so hard. It doesn't require any jni stuff like hadoop does. However, if we do support it, we should have a build for it and we should gate commits on solaris builds passing also. </p></comment>
<comment id="14703501" author="alanburlison" created="Wed, 19 Aug 2015 18:13:43 +0000"><p>I'm happy to help/advise on the Solaris front but I'm not really clear what the problem is that needs fixing.</p></comment>
<comment id="14703727" author="fpj" created="Wed, 19 Aug 2015 20:56:45 +0000"><p>hey <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=alanburlison" class="user-hover" rel="alanburlison">Alan Burlison</a>, you could check the jenkins build which has been failing forever.</p></comment>
<comment id="14703929" author="cnauroth" created="Wed, 19 Aug 2015 23:16:23 +0000"><blockquote><p>Isn't zk support a prerequisite for hadoop on solaris?</p></blockquote> <p>ZooKeeper isn't strictly a requirement for Hadoop. It becomes a requirement though if you want to run an HA deployment for some of the critical daemons like NameNode and ResourceManager. Their HA architecture uses an active/standby pair coordinating on a distributed lock using ZooKeeper. Realistic production deployments would want this functionality.</p></comment>
<comment id="14703936" author="cnauroth" created="Wed, 19 Aug 2015 23:19:47 +0000"><p>It looks like we have a functional build after the <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1077" title="C client lib doesn#39;t build on Solaris" class="issue-link" data-issue-key="ZOOKEEPER-1077"><del>ZOOKEEPER-1077</del></a> patch fixed the native code compilation problem. However, it also looks like the Solaris build has a long history of intermittent test failures that don't repro in other environments. I expect getting to a completely green build would require trying to repro the test failures on Solaris and then investigating further to determine if there is a bad assumption in a test or a legitimate problem in the main ZooKeeper code.</p></comment>
<comment id="14703959" author="cnauroth" created="Wed, 19 Aug 2015 23:35:17 +0000"><p>The ZooKeeper codebase at this point has multiple sub-components, and I wonder if the statement of support needs a more specific breakdown per component.</p> <p>As Ivan pointed out, the main client and server pieces don't have any native code requirements. I expect it isn't too much burden to support a wide variety of platforms for the client and server, as long as we stick to some rules in the Java code, like avoiding hard-coded file path separators.</p> <p>Support gets a lot trickier for the native client. In that case, we'd need a healthy base of contributors familiar with each platform and available to field bug reports.</p> <p>Then there is contrib, where it seems like contributors are sparse. Some contrib modules like zkfuse contain native code, so they'll have the same challenges as the native client.</p> <p>Based on that, I wonder if we need something more like a matrix listing client/server/native client/etc. on one axis and OS on the other axis, and yes or no in each box. Transitioning one of those boxes from no to yes ought to require some thought and agreement about whether or not the community is capable of taking on the extra support burden. If not, then it might require recruiting some additional contributors to help before making the commitment.</p></comment>
<comment id="14704541" author="ikelly" created="Thu, 20 Aug 2015 09:00:05 +0000"><p>I wouldn't even try to support the native client in solaris until someone explicitly asks for that support. And the contrib modules, even less so. </p></comment>
<comment id="14718482" author="alanburlison" created="Fri, 28 Aug 2015 12:40:00 +0000"><p>I am working on getting all the native parts of Hadoop working properly on Solaris, I can take a look at Zookeeper after that. Having a matrix to help identify which bits to look at first would indeed be a big help.</p></comment>
<comment id="14718490" author="ikelly" created="Fri, 28 Aug 2015 12:44:31 +0000"><p>Ok. Lets check in again once there's a release pending and update the doc at that point.</p></comment>
<comment id="14746517" author="cnauroth" created="Tue, 15 Sep 2015 23:51:32 +0000"><p>I'm attaching a trunk patch that shows what I had in mind for the support matrix. For the content of the matrix (what we're committing to support), I summarized the conversation here that a few of us came to agreement on. Please do check that I got this information right.</p> <p>The only additional thing that wasn't discussed here is FreeBSD. I added it to the matrix with support for the Java side but not the native side or contrib.</p></comment>
<comment id="14746566" author="hadoopqa" created="Wed, 16 Sep 2015 00:24:49 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12756122/ZOOKEEPER-2243.001.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12756122/ZOOKEEPER-2243.001.patch</a><br/> against trunk revision 1702378.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2877//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2877//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2877//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2877//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2877//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2877//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14995821" author="rgs" created="Sun, 8 Nov 2015 21:49:01 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a> patch lgtm, +1.</p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ikelly" class="user-hover" rel="ikelly">Ivan Kelly</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=fpj" class="user-hover" rel="fpj">Flavio Paiva Junqueira</a>, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a>: thoughts?</p></comment>
<comment id="15005502" author="rakeshr" created="Sat, 14 Nov 2015 17:32:12 +0000"><p>+1 looks good.</p> <p>small nit: Please remove one extra space before <tt>Some components</tt> while committing the patch.</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">multiple components. Some components </pre> </div></div></comment>
<comment id="15012350" author="cnauroth" created="Wed, 18 Nov 2015 23:26:17 +0000"><p>I just noticed that we'll need a slightly different patch file for branch-3.4. On that branch, we have a mention that NIO support is broken in the JVM on FreeBSD. This slightly different text causes the trunk patch to fail to apply. As per discussion in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1509" title="Please update documentation to reflect updated FreeBSD support." class="issue-link" data-issue-key="ZOOKEEPER-1509"><del>ZOOKEEPER-1509</del></a>, this is out-dated information, so I have removed this statement.</p> <p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> or <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a>, could you please review the branch-3.4 patch too? Once I have a +1 on that, I'll commit to all relevant branches. Thanks!</p></comment>
<comment id="15012538" author="hadoopqa" created="Thu, 19 Nov 2015 01:20:09 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12773117/ZOOKEEPER-2243-branch-3.4.001.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12773117/ZOOKEEPER-2243-branch-3.4.001.patch</a><br/> against trunk revision 1713774.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2959//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2959//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15135527" author="hadoopqa" created="Sat, 6 Feb 2016 03:24:35 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12773117/ZOOKEEPER-2243-branch-3.4.001.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12773117/ZOOKEEPER-2243-branch-3.4.001.patch</a><br/> against trunk revision 1728577.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3040//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3040//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15136020" author="cnauroth" created="Sat, 6 Feb 2016 21:43:21 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rgs" class="user-hover" rel="rgs">Raúl Gutiérrez Segalés</a> and <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rakeshr" class="user-hover" rel="rakeshr">Rakesh Radhakrishnan</a>, you have already +1'd the trunk patch. Could I also please get a +1 for the slightly different branch-3.4 patch so we can close this out? Thank you.</p></comment>
<comment id="15136350" author="rakeshr" created="Sun, 7 Feb 2016 18:11:13 +0000"><p>Thanks <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cnauroth" class="user-hover" rel="cnauroth">Chris Nauroth</a>, +1 <tt>branch-3.4</tt> patch looks good to me.</p></comment>
<comment id="15137736" author="cnauroth" created="Mon, 8 Feb 2016 21:33:20 +0000"><p>I have committed this to trunk, branch-3.5 and branch-3.4. Everyone, thank you for the discussion and reviews.</p></comment>
<comment id="15137915" author="hudson" created="Mon, 8 Feb 2016 22:48:11 +0000"><p>FAILURE: Integrated in ZooKeeper-trunk #2833 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2833/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2833/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2243" title="Supported platforms is completely out of date" class="issue-link" data-issue-key="ZOOKEEPER-2243"><del>ZOOKEEPER-2243</del></a>: Supported platforms is completely out of date (cnauroth) (cnauroth: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1729259" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1729259</a>)</p> <ul> <li>trunk/CHANGES.txt</li> <li>trunk/src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml</li> </ul> </comment>
</comments>
<issuelinks>
<issuelinktype id="12310000">
<name>Duplicate</name>
<inwardlinks description="is duplicated by">
<issuelink>
<issuekey id="12730192">ZOOKEEPER-1996</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12855723">INFRA-10116</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12773117" name="ZOOKEEPER-2243-branch-3.4.001.patch" size="4746" author="cnauroth" created="Wed, 18 Nov 2015 23:26:17 +0000"/>
<attachment id="12756122" name="ZOOKEEPER-2243.001.patch" size="4869" author="cnauroth" created="Tue, 15 Sep 2015 23:51:32 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i2ikqn:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>9223372036854775807</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1604] remove rpm/deb/... packaging</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1604</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Remove rpm/deb/... packaging from our source repo. Now that BigTop is available and fully supporting ZK it's no longer necessary for us to attempt to include this.</p></description>
<environment/>
<key id="12624197">ZOOKEEPER-1604</key>
<summary>remove rpm/deb/... packaging</summary>
<type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21148avatarType=issuetype">Task</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="cnauroth">Chris Nauroth</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Sun, 16 Dec 2012 17:53:03 +0000</created>
<updated>Thu, 21 Jul 2016 20:18:28 +0000</updated>
<resolved>Thu, 3 Mar 2016 16:14:34 +0000</resolved>
<version>3.3.0</version>
<fixVersion>3.5.2</fixVersion>
<fixVersion>3.6.0</fixVersion>
<component>build</component>
<due/>
<votes>0</votes>
<watches>12</watches>
<comments>
<comment id="13671332" author="johanhillertz" created="Fri, 31 May 2013 11:00:57 +0000"><p>As part of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1708" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1708</a> i got pointed to this issue. I can not find the latest 3.4.5 in BigTop the latest version i find is 3.4.3. How would the BigTop be updated? </p> <p>If it is not updated at all release it can be good to keep the possibility to make a local package build.</p></comment>
<comment id="13984503" author="ralph.tice" created="Tue, 29 Apr 2014 17:09:25 +0000"><p>-1 for this ticket and +1 for keeping packaging local to the ZK project. I would be interested in helping with the infrastructure work for automated testing of the debs/rpms.</p></comment>
<comment id="13984589" author="michim" created="Tue, 29 Apr 2014 17:58:52 +0000"><p>What's wrong with using BigTop?</p></comment>
<comment id="13984653" author="ralph.tice" created="Tue, 29 Apr 2014 18:49:56 +0000"><p>I don't have anything against BigTop but the path to getting latest version of ZooKeeper packaged should be kept as simple as possible. Let BigTop mirror the packaging and merge in their own patches if there are Hadoop-specific use cases to support, but ideally the packaging in the ZooKeeper repository should be made generic enough to support any Hadoop use case and BigTop should simply consume the same packaging from upstream. IMO.</p></comment>
<comment id="13986004" author="michim" created="Wed, 30 Apr 2014 20:10:07 +0000"><p>Ok let's hear from other people to what their thoughts are.</p> <p>By the way, we don't actively monitor the github mirror for pull requests. Please follow the steps described here to submit your patches.</p> <p><a href="http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute" class="external-link" target="_blank" rel="nofollow noopener">http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute</a></p> <p>Thanks!<br/> --Michi</p></comment>
<comment id="14503483" author="cnauroth" created="Mon, 20 Apr 2015 19:40:05 +0000"><p>I'm curious if there has been any resolution to this discussion. If there is a decision to maintain the packaging targets, then would someone please review <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2124" title="Allow Zookeeper version string to have underscore #39;_#39;" class="issue-link" data-issue-key="ZOOKEEPER-2124"><del>ZOOKEEPER-2124</del></a>? This would fix the rpm packaging for -alpha releases. (The hyphen character is illegal in an rpm version.) There were also some earlier rpm fixes discussed in an email thread that would need to be committed and credited to the original author.</p> <p><a href="http://mail-archives.apache.org/mod_mbox/zookeeper-user/201212.mbox/%3C50D2D481.8010507@pt-consulting.eu%3E" class="external-link" target="_blank" rel="nofollow noopener">http://mail-archives.apache.org/mod_mbox/zookeeper-user/201212.mbox/%3C50D2D481.8010507@pt-consulting.eu%3E</a></p></comment>
<comment id="14503502" author="fpj" created="Mon, 20 Apr 2015 19:53:29 +0000"><p>I don't think there is a resolution. <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ralph.tice" class="user-hover" rel="ralph.tice">Ralph Tice</a> isn't in favor of relying only on BigTop, but frankly I don't understand if there is a strong reason behind it. If we are to maintain our own packaging, then I'd like to know how is interested in maintaining. In any case, I'll have a look at <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2124" title="Allow Zookeeper version string to have underscore #39;_#39;" class="issue-link" data-issue-key="ZOOKEEPER-2124"><del>ZOOKEEPER-2124</del></a>.</p></comment>
<comment id="14504098" author="ralph.tice" created="Tue, 21 Apr 2015 01:13:31 +0000"><p>There definitely wasn't a strong reason, and I've come around on this issue. I don't think I'm supposed to minus or plus things either, sorry.</p></comment>
<comment id="14505045" author="phunt" created="Tue, 21 Apr 2015 14:42:35 +0000"><p>I'd say the main issues were/are that the original packaging was added (prior to bigtop existing btw), it worked ok, but there were bugs. Maintaining the different package types, ensuring they work across all the distros, versions, etc... is not a simple job. Not many/any folks in this community really understand all the packaging issues. Bigtop does and their charter is to create packaging. So it would make more sense imo to handle packaging there. At this point the packaging is out of date, there are more issues and they haven't been resolved. My thought is that it would make more sense to spend the effort once, at Bigtop, rather than twice, once at Bigtop and once here.</p></comment>
<comment id="14505351" author="cnauroth" created="Tue, 21 Apr 2015 17:43:50 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a>, that makes a lot of sense. Speaking for myself, I can fumble through some packaging work, but I can't claim expertise in all of the variations that you mentioned.</p> <p>In Hadoop, we've made the decision to publish releases in tarball form only and defer all other packaging concerns to Bigtop. One possible additional consideration for ZooKeeper is that some users deploy it completely outside of the context of Hadoop. My own first use cases involved coordinating a distributed cache update and putting a distributed lock around some Cassandra schema modification operations that were not safe for concurrent execution at the time. Nothing else from the Bigtop ecosystem was relevant in this deployment. For those kinds of users, perhaps it's valuable for ZooKeeper to have its own release cadence with packaging support, decoupled from the Bigtop release cadence. It's definitely a trade-off though because of the maintenance costs.</p> <p>I'm attaching a patch that removes the ant rpm and deb targets and all supporting properties and files. Between this and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2124" title="Allow Zookeeper version string to have underscore #39;_#39;" class="issue-link" data-issue-key="ZOOKEEPER-2124"><del>ZOOKEEPER-2124</del></a>, I think one will need to get committed and the other will be a no-fix. Alternatively, if this one goes in on trunk, then maybe <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2124" title="Allow Zookeeper version string to have underscore #39;_#39;" class="issue-link" data-issue-key="ZOOKEEPER-2124"><del>ZOOKEEPER-2124</del></a> still goes into older maintenance release branches to minimize surprises for users on those branches.</p> <p>Thanks!</p></comment>
<comment id="14505372" author="phunt" created="Tue, 21 Apr 2015 17:55:00 +0000"><p>If you're rolling your own (not using Bigtop packaging) they you typically start from tarball anyway. Even our scripts are of limited use in most of those cases. What I've seen is folks typically start from class files (jar) and work their way up from that for their particular context.</p></comment>
<comment id="14505484" author="hadoopqa" created="Tue, 21 Apr 2015 18:42:36 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12726926/ZOOKEEPER-1604.001.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12726926/ZOOKEEPER-1604.001.patch</a><br/> against trunk revision 1672934.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2643//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2643//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2643//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2643//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2643//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2643//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="14505771" author="cnauroth" created="Tue, 21 Apr 2015 21:10:29 +0000"><blockquote><p>-1 tests included. The patch doesn't appear to include any new or modified tests.</p></blockquote> <p>There are no new tests, because this is a change in the build only. My manual test procedure was:</p> <ol> <li>Verify <tt>ant rpm</tt> does nothing/fails.</li> <li>Verify <tt>ant deb</tt> does nothing/fails.</li> <li>Verify <tt>ant package-native tar</tt> succeeds. Deploy the resulting zookeeper-lt;VERSIONgt;.tar.gz and zookeeper-lt;VERSIONgt;-lib.tar.gz. Run a single node and exercise some basic create/get/set commands.</li> </ol> </comment>
<comment id="14506503" author="michim" created="Wed, 22 Apr 2015 06:17:36 +0000"><p>How does Bigtop package ZooKeeper? It's not a standalone rpm/deb package?</p></comment>
<comment id="14506521" author="cnauroth" created="Wed, 22 Apr 2015 06:35:19 +0000"><p>The Bigtop rpm/deb packages are stand-alone. Those are visible here:</p> <p><a href="http://bigtop.s3.amazonaws.com/" class="external-link" target="_blank" rel="nofollow noopener">http://bigtop.s3.amazonaws.com/</a></p> <p>It's definitely possible to install just a Zookeeper package from Bigtop. The point was more about discussing whether or not it would be valuable to offer rpm/deb packages in ZooKeeper's own release cycle, independent of Bigtop. As Patrick points out, there is always the tarball if a user needs to deploy a patch urgently before Bigtop publishes a package.</p></comment>
<comment id="14744221" author="cnauroth" created="Mon, 14 Sep 2015 20:40:20 +0000"><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2275" title="Fix RPM package creation on recent distros" class="issue-link" data-issue-key="ZOOKEEPER-2275"><del>ZOOKEEPER-2275</del></a> is another new incoming issue where the presence of broken rpm packaging code in the build has caused confusion. Can we try again to reach a decision on this issue? Shall we drop rpm/deb/etc. packaging support within the ZooKeeper build? Last time we discussed it, I came around to thinking it was best overall, so I posted a patch that does the removal.</p> <p>If instead the decision is to maintain it, then let's get <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2275" title="Fix RPM package creation on recent distros" class="issue-link" data-issue-key="ZOOKEEPER-2275"><del>ZOOKEEPER-2275</del></a> in so that it's not broken.</p></comment>
<comment id="14744223" author="hadoopqa" created="Mon, 14 Sep 2015 20:40:56 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12726926/ZOOKEEPER-1604.001.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12726926/ZOOKEEPER-1604.001.patch</a><br/> against trunk revision 1702378.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2875//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2875//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15177450" author="hadoopqa" created="Thu, 3 Mar 2016 07:59:23 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12726926/ZOOKEEPER-1604.001.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12726926/ZOOKEEPER-1604.001.patch</a><br/> against trunk revision 1733348.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3077//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3077//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15177990" author="phunt" created="Thu, 3 Mar 2016 15:51:22 +0000"><p>Updated the original patch to apply cleanly. Removed debian target as well.</p></comment>
<comment id="15178018" author="hadoopqa" created="Thu, 3 Mar 2016 16:08:40 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12791195/ZOOKEEPER-1604.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12791195/ZOOKEEPER-1604.patch</a><br/> against trunk revision 1733348.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3078//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3078//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3078//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3078//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3078//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3078//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15178023" author="phunt" created="Thu, 3 Mar 2016 16:14:34 +0000"><p>Makes sense to remove this given Bigtop. Thanks Chris!</p></comment>
<comment id="15178045" author="hadoopqa" created="Thu, 3 Mar 2016 16:23:40 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12791195/ZOOKEEPER-1604.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12791195/ZOOKEEPER-1604.patch</a><br/> against trunk revision 1733348.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3079//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3079//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3079//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3079//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3079//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3079//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="15178069" author="hudson" created="Thu, 3 Mar 2016 16:36:18 +0000"><p>FAILURE: Integrated in ZooKeeper-trunk #2836 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/2836/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/2836/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1604" title="remove rpm/deb/... packaging" class="issue-link" data-issue-key="ZOOKEEPER-1604"><del>ZOOKEEPER-1604</del></a> remove rpm/deb/... packaging (cnauroth via phunt) (phunt: <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1733489" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1733489</a>)</p> <ul> <li>trunk/README_packaging.txt</li> <li>trunk/build.xml</li> <li>trunk/ivy.xml</li> <li>trunk/src/contrib/build-contrib.xml</li> <li>trunk/src/contrib/build.xml</li> <li>trunk/src/contrib/zkpython/build.xml</li> <li>trunk/src/contrib/zkpython/ivy.xml</li> <li>trunk/src/contrib/zkpython/src/packages</li> <li>trunk/src/packages</li> <li>trunk/src/recipes/build-recipes.xml</li> <li>trunk/src/recipes/build.xml</li> </ul> </comment>
<comment id="15178220" author="cnauroth" created="Thu, 3 Mar 2016 17:47:17 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=phunt" class="user-hover" rel="phunt">Patrick D. Hunt</a>, thank you for reviewing and committing.</p></comment>
<comment id="15179013" author="eyang" created="Fri, 4 Mar 2016 00:30:45 +0000"><p>There are 4 people expressed interest to keep this in source code. Yet, Cloudera push in changes regardless of people protest against this issue. This is a sad day for Apache community. In addition, Bigtop contains /lib/lsb/init-functions which will import redhat-lsb-core which imports exim. Exim is known for common root escalation vulnerability. If you value your cluster security, I would recommend to think twice before using BigTop.</p></comment>
<comment id="15179058" author="cnauroth" created="Fri, 4 Mar 2016 00:56:15 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eyang" class="user-hover" rel="eyang">Eric Yang</a>, I'm sorry to hear this change disappoints you. However, we did allow this issue to remain open for discussion for multiple years, with a lot of the discussion happening in the past 10 months. Based on past history, we have not had success maintaining packaging infrastructure within the ZooKeeper project itself. (It has been broken at various times without anyone noticing for a long time.) Many projects have externalized their packaging infrastructure to BigTop. We felt we had reached a consensus decision that the overall best choice for the project was to remove our own packaging infrastructure.</p> <p>Patrick and I and others are in agreement about this change, even though we don't share a common employer. We are trying our best to act in a way that benefits as much of the Apache community as possible. Unfortunately, any resolution of this issue is likely to be disappointing to someone. Sometimes compromise is necessary.</p> <p>I hope you can reconsider using BigTop. Would you consider raising your security concern with the BigTop community?</p></comment>
<comment id="15179060" author="phunt" created="Fri, 4 Mar 2016 00:56:36 +0000"><p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eyang" class="user-hover" rel="eyang">Eric Yang</a>, I didn't mean to exclude anyone. Based on my reading of the recent comments it seemed like the questions had been answered, and we had reached consensus, e.g. Ralph's "I've come around on this issue" and comments from Chris and others. A patch had been posted (not by me) and no negative comments have come in in over six months.</p> <p>I also feel that your comments re Cloudera are unfair to me. My main goal here was just to clean things up and move forward. However you're entitled to your opinion.</p> <p>Additionally this is consistent with what a number of other components (Hadoop) have done over time. Our packaging was created before Bigtop existed, a number of issues have been reported but not resolved, and it seemed like it was causing more problems than it solved. e.g. Chris's comment "<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2275" title="Fix RPM package creation on recent distros" class="issue-link" data-issue-key="ZOOKEEPER-2275"><del>ZOOKEEPER-2275</del></a> is another new incoming issue where the presence of broken rpm packaging code in the build has caused confusion."</p> <p>EOD we just don't have community available to support packaging, we barely have enough folks to address issues found with the service itself, and while there may have been "interest" there unfortunately hasn't been enough "action".</p> <p>Wouldn't it make more sense to focus on the Bigtop packaging rather than duplicate it here, poorly?</p></comment>
<comment id="15179103" author="eyang" created="Fri, 4 Mar 2016 01:23:39 +0000"><p>If <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2007" title="Update RPM package to be relocatable and contrib packaging bugfix" class="issue-link" data-issue-key="ZOOKEEPER-2007"><del>ZOOKEEPER-2007</del></a> was committed, then <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2275" title="Fix RPM package creation on recent distros" class="issue-link" data-issue-key="ZOOKEEPER-2275"><del>ZOOKEEPER-2275</del></a> would not exist. Evidently, There are people that are willing to provide patch for packaging issues. Instead, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-2007" title="Update RPM package to be relocatable and contrib packaging bugfix" class="issue-link" data-issue-key="ZOOKEEPER-2007"><del>ZOOKEEPER-2007</del></a> patch were left without review and code became stale. (Code did not apply due to pre-commit test did not verify patch depth, not the patch.) BigTop has some security issues, including non-uniform uid/gid generation on cluster, and including security vulnerable packages. I am only presenting facts for others to consider. It seems like it's a few steps backward because BigTop project create interlocks of open source projects instead of allow individual project to evolve on their own pace. Ex-Cloudera developers had made some poor choices in BigTop project direction, rather than allowing other projects to evolve. Granted that this is my opinion, and I respect yours. Good luck with BigTop.</p></comment>
<comment id="15179195" author="phunt" created="Fri, 4 Mar 2016 02:51:08 +0000"><p>Here are a couple things to also consider.</p> <p>Maybe the patches aren't getting reviewed because we (committers) don't have the expertise to review, nor the infrastructure to test the changes. (let's assume we have the time, although based on the PA load I don't think that's true). From what I saw folks were hesitant to move these forward w/o understanding and validating the impact.</p> <p>You can get ZooKeeper packages from Cloudera, certainly, but you can also get them from Hortonworks, or from Canonical (deb) <a href="http://packages.ubuntu.com/search?keywords=zookeeper" class="external-link" target="_blank" rel="nofollow noopener">http://packages.ubuntu.com/search?keywords=zookeeper</a> or RPMs <a href="http://rpmfind.net/linux/rpm2html/search.php?query=zookeeper" class="external-link" target="_blank" rel="nofollow noopener">http://rpmfind.net/linux/rpm2html/search.php?query=zookeeper</a> etc... </p> <p>The Hadoop ecosystem has moved forward. There just isn't the value in a project trying to maintain it's own packages when others are already doing so. Apache already has it's own packaging infrastructure that lots of folks are using and contributing to - Apache Bigtop. I'd rather see the investment go there.</p></comment>
<comment id="15192133" author="cos" created="Sun, 13 Mar 2016 05:12:46 +0000"><p>It is quite fascinating to read this exchange. Especially, <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eyang" class="user-hover" rel="eyang">Eric Yang</a>'s laying it thick on everyone including LSB community.</p> <p>I see two ways to resolve your grudge: you can stop using Linux (or just LSB part of it, perhaps?) because of the commonly known exim vulnerability (and perhaps a few others). Or you can contribute a patch to Bigtop to fix the issue.</p> <p>Perhaps, we have stepped on your toe somewhere along the road. If we did - please accept my sincere apologies. And let me make it worth your while: once your patch resolving this alleged exim issue is submitted, I will <em>personally</em> make it my utmost priority to review and bring it in ASAP. Until then, please be considerate not to bad-mouth your fellow Apache contributors nor the project you haven't ever personally contributed to.</p></comment>
<comment id="15192245" author="eyang" created="Sun, 13 Mar 2016 09:32:42 +0000"><p>Konstantin,</p> <p>Exim is a soft target for root exploit. I am only stating the obvious to help Apache projects.</p> <p><a href="https://www.cvedetails.com/vulnerability-list/vendor_id-10919/product_id-19563/Exim-Exim.html" class="external-link" target="_blank" rel="nofollow noopener">https://www.cvedetails.com/vulnerability-list/vendor_id-10919/product_id-19563/Exim-Exim.html</a></p> <p>What you do with this information is entirely up to you. The patch to remove redhat-lsb-core is located here: </p> <p><a href="https://issues.apache.org/jira/browse/BIGTOP-1194" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/BIGTOP-1194</a> </p> <p>Inverse patch it, then your system has one less threat.</p> <p>What the community does to remove rpm packages from the projects, that is community's choice. I respect that, but it is also irritating to see that projects are all tight up to a monolithic packaging project. BigTop copied packaging technique from <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a> to enable support for packaging both deb and rpm packages for most of the projects surrounding Hadoop. While I appreciate the hard work that bigtop committers invested in Bigtop. It is just awkward to use for people that don't want to have the monolithic build system. It's like a zombie that put on a blue dress to imitate Elsa from Disney Frozen. The bigtop show just won't work for some parents.</p></comment>
<comment id="15192349" author="fpj" created="Sun, 13 Mar 2016 13:57:55 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eyang" class="user-hover" rel="eyang">Eric Yang</a> at this point, I'm a bit confused about what you'd like to happen. You seem to be dissatisfied with BigTop and you seem to want this community to move in a different different direction with respect to packaging. I believe we are all trying to move forward as a community, so why don't why start a thread on the dev list explaining what is troubling you and what you'd like to happen? I'm suggesting it because the scope of this jira is too narrow for what you seem to be trying to convey. I also suggest that you try to be specific about what you'd like to happen and how you'd like to contribute for it to happen, and let's see how the community reacts. Is that fair?</p></comment>
<comment id="15192446" author="oflebbe" created="Sun, 13 Mar 2016 17:48:28 +0000"><p>Exim is not in any way installed by Bigtop on Centos/RHEL. At least not in Bigtop-1.0.0 or later.</p> <p>LSB-core happens to require a MTA, any one. And Centos/RHEL redhat-lsb-core chooses sendmail rather then exim at least in the bigtop default setup.</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">rpm -q zookeeper-server redhat-lsb-core sendmail exim zookeeper-server-3.4.6-1.el6.x86_64 redhat-lsb-core-4.0-7.el6.centos.x86_64 sendmail-8.14.4-9.el6.x86_64 <span class="code-keyword">package</span> exim is not installed </pre> </div></div> <p>Either way, please consider java a huge target for remote exploits and avoid it. See for instance.<br/> <a href="https://www.cvedetails.com/vulnerability-list/vendor_id-93/product_id-19117/Oracle-JRE.html" class="external-link" target="_blank" rel="nofollow noopener">https://www.cvedetails.com/vulnerability-list/vendor_id-93/product_id-19117/Oracle-JRE.html</a> .</p></comment>
<comment id="15192460" author="eyang" created="Sun, 13 Mar 2016 18:14:35 +0000"><p>Does every Linux box needs MTA? Government sector is one of the customers that ask for removal of MTA dependencies. People don't bind Java program to lower port and use firewall/reverse proxy to shield their system as solutions. I agree there are ways to work around problems. However, one less problem for novice is better than leaving problems behind for future generations. This is the reason that I am cool with removing the current rpm/deb packaging for ant build. However, if someone put patches forward for making rpm package with better tooling. I hope we don't stumble on them like this incidence.</p></comment>
<comment id="15192465" author="apurtell" created="Sun, 13 Mar 2016 18:28:41 +0000"><p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eyang" class="user-hover" rel="eyang">Eric Yang</a> your complaint seems to be with RedHat as best as I can gather. Like <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=oflebbe" class="user-hover" rel="oflebbe">Olaf Flebbe</a> I'm not seeing exim installed, but this is a Linux OS issue at any rate having nothing to do with ZooKeeper or Bigtop. Suggest you file something on the RedHat bug tracker. </p></comment>
<comment id="15192485" author="eyang" created="Sun, 13 Mar 2016 19:07:53 +0000"><p>Exim is only active if no other MTA programs are installed. This usually only happens on minimal install without sendmail. Redhat closes these type of bugs as not a problem because LSB specification enforces MTA dependency. The question is, does using ZooKeeper need to comply to LSB specification? I hope we don't tie up in ball and chains to use a light weight program like ZooKeeper. Of course, I could be wrong and people like to have a MTA on their ZooKeeper servers.</p></comment>
<comment id="15192495" author="apurtell" created="Sun, 13 Mar 2016 19:34:32 +0000"><p>You are not talking about anything to do with zookeeper <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=eyang" class="user-hover" rel="eyang">Eric Yang</a>, especially since they're getting out of the self packaging business. Why don't you bring your opinions over to the Bigtop mailing lists since it's completely off topic to have the discussion you want here. </p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12776511">ZOOKEEPER-2124</issuekey>
</issuelink>
<issuelink>
<issuekey id="12864014">ZOOKEEPER-2275</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="12310051">
<name>Supercedes</name>
<outwardlinks description="supercedes">
<issuelink>
<issuekey id="12732940">ZOOKEEPER-2007</issuekey>
</issuelink>
<issuelink>
<issuekey id="12864014">ZOOKEEPER-2275</issuekey>
</issuelink>
<issuelink>
<issuekey id="12648184">ZOOKEEPER-1707</issuekey>
</issuelink>
<issuelink>
<issuekey id="12648188">ZOOKEEPER-1708</issuekey>
</issuelink>
<issuelink>
<issuekey id="12664869">ZOOKEEPER-1743</issuekey>
</issuelink>
<issuelink>
<issuekey id="12749932">ZOOKEEPER-2065</issuekey>
</issuelink>
<issuelink>
<issuekey id="12762691">ZOOKEEPER-2095</issuekey>
</issuelink>
<issuelink>
<issuekey id="12748107">ZOOKEEPER-2061</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12726926" name="ZOOKEEPER-1604.001.patch" size="51885" author="cnauroth" created="Tue, 21 Apr 2015 17:43:50 +0000"/>
<attachment id="12791195" name="ZOOKEEPER-1604.patch" size="52693" author="phunt" created="Thu, 3 Mar 2016 15:51:22 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>298954</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i15xg7:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>242719</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-572] add ability for operator to examine state of watches currently registered with a server</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-572</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>it may be useful for an operator to examine the watches registered with a server by the various connected sessions</p> <p>seems useful to allow:</p> <p>1) watches on a session<br/> 2) watches on a path<br/> 3) all watches?</p> <p>command port and JMX.</p></description>
<environment/>
<key id="12440230">ZOOKEEPER-572</key>
<summary>add ability for operator to examine state of watches currently registered with a server</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Tue, 10 Nov 2009 00:39:13 +0000</created>
<updated>Wed, 1 Jul 2015 19:24:41 +0000</updated>
<resolved>Tue, 26 Jan 2010 00:18:07 +0000</resolved>
<fixVersion>3.3.0</fixVersion>
<component>jmx</component>
<component>server</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12802929" author="phunt" created="Wed, 20 Jan 2010 18:51:47 +0000"><p>this adds watch 4letter words (see docs)</p> <p>verify:<br/> 1) I spawn threads for the "expensive" 4letter words now, so verify that I do this correctly<br/> in particular locking while operating (as we don't stop the client thread now for the length of 4l processing)<br/> 2) verify that I close the connection properly (again, things like selector locking)<br/> 3) obv verify the output</p></comment>
<comment id="12802945" author="hadoopqa" created="Wed, 20 Jan 2010 19:20:04 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12430911/ZOOKEEPER-572.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12430911/ZOOKEEPER-572.patch</a><br/> against trunk revision 900939.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/41/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/41/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/41/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/41/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/41/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/41/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12802968" author="phunt" created="Wed, 20 Jan 2010 20:16:03 +0000"><p>we don't have tests for 4letter words, please review/commit</p></comment>
<comment id="12804565" author="mahadev" created="Mon, 25 Jan 2010 15:20:27 +0000"><p>looks like <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-655" title="StringBuffer -gt; StringBuilder - conversion of references as necessary" class="issue-link" data-issue-key="ZOOKEEPER-655"><del>ZOOKEEPER-655</del></a> conflicted with this patch. This patch does not apply to the trunk now. Pat can you update the patch? </p></comment>
<comment id="12804654" author="phunt" created="Mon, 25 Jan 2010 19:13:16 +0000"><p>merged against the latest trunk</p></comment>
<comment id="12804666" author="hadoopqa" created="Mon, 25 Jan 2010 19:39:36 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12431329/ZOOKEEPER-572.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12431329/ZOOKEEPER-572.patch</a><br/> against trunk revision 902694.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/55/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/55/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/55/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/55/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/55/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/55/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12804684" author="mahadev" created="Mon, 25 Jan 2010 20:06:22 +0000"><p>+1 this looks good ..... </p> <p>one minor nit:</p> <ul class="alternate" type="square"> <li>can you add some javadoc/documentation to SendBufferWriter. That code is a little tricky. more in the form of how the sockets are closing and how the response is getting written to and why the selector wake up calls are necessary.</li> </ul> </comment>
<comment id="12804751" author="phunt" created="Mon, 25 Jan 2010 22:27:20 +0000"><p>Added some docs per Mahadev's excellent suggestion.</p></comment>
<comment id="12804761" author="hadoopqa" created="Mon, 25 Jan 2010 22:49:35 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12431365/ZOOKEEPER-572.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12431365/ZOOKEEPER-572.patch</a><br/> against trunk revision 902694.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/56/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/56/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/56/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/56/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/56/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/56/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12804775" author="phunt" created="Mon, 25 Jan 2010 22:59:58 +0000"><p>My bad, there are tests for 4letter words now... I'll update to include.</p></comment>
<comment id="12804790" author="phunt" created="Mon, 25 Jan 2010 23:34:37 +0000"><p>Ok, testing the 3 new commands.</p></comment>
<comment id="12804796" author="hadoopqa" created="Mon, 25 Jan 2010 23:58:13 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12431379/ZOOKEEPER-572.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12431379/ZOOKEEPER-572.patch</a><br/> against trunk revision 902694.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/58/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/58/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/58/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/58/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/58/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/58/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12804811" author="mahadev" created="Tue, 26 Jan 2010 00:18:07 +0000"><p>I just committed this. thanks pat.</p></comment>
<comment id="12805476" author="hudson" created="Wed, 27 Jan 2010 11:05:50 +0000"><p>Integrated in ZooKeeper-trunk #680 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/680/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/680/</a>)</p> </comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12440233">ZOOKEEPER-573</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
<issuelinktype id="12310050">
<name>Regression</name>
<outwardlinks description="breaks">
<issuelink>
<issuekey id="12842083">ZOOKEEPER-2227</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12431379" name="ZOOKEEPER-572.patch" size="55459" author="phunt" created="Mon, 25 Jan 2010 23:34:37 +0000"/>
<attachment id="12431365" name="ZOOKEEPER-572.patch" size="52222" author="phunt" created="Mon, 25 Jan 2010 22:27:20 +0000"/>
<attachment id="12431329" name="ZOOKEEPER-572.patch" size="50519" author="phunt" created="Mon, 25 Jan 2010 19:13:15 +0000"/>
<attachment id="12430911" name="ZOOKEEPER-572.patch" size="45634" author="phunt" created="Wed, 20 Jan 2010 18:51:47 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47722</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0633z:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33435</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>Add four letter words for monitoring/administering watches on zookeeper nodes. See zookeeperAdmin.pdf/html for more info.</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1095] Simple leader election recipe</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1095</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Leader election recipe originally contributed to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1080" title="Provide a Leader Election framework based on Zookeeper recipe" class="issue-link" data-issue-key="ZOOKEEPER-1080"><del>ZOOKEEPER-1080</del></a>.</p></description>
<environment/>
<key id="12510472">ZOOKEEPER-1095</key>
<summary>Simple leader election recipe</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="esammer">Eric Sammer</assignee>
<reporter username="henryr">Henry Robinson</reporter>
<labels> </labels>
<created>Wed, 15 Jun 2011 17:04:15 +0000</created>
<updated>Sat, 17 May 2014 12:03:02 +0000</updated>
<resolved>Thu, 7 Jul 2011 22:55:37 +0000</resolved>
<version>3.3.3</version>
<fixVersion>3.4.0</fixVersion>
<due/>
<votes>2</votes>
<watches>5</watches>
<comments>
<comment id="13061030" author="esammer" created="Thu, 7 Jul 2011 03:58:31 +0000"><p>Attached patch against ZK trunk.</p> <p>This patch includes many of the suggestions made by Henry Robinson in a previous review and adds a 'leader' directory under the recipes.</p></comment>
<comment id="13061045" author="hadoopqa" created="Thu, 7 Jul 2011 06:09:37 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12485530/ZK-1095.diff" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12485530/ZK-1095.diff</a><br/> against trunk revision 1142377.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 7 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/370//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/370//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/370//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/370//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/370//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/370//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13061400" author="phunt" created="Thu, 7 Jul 2011 15:55:35 +0000"><p>I see two issues that need to be addressed in this patch:</p> <p>1) if you use git use "--no-prefix", the current patch is rooted in "b" directory when applied</p> <p>2) most of the tests fail. See the lock recipe tests, the issue afaict is that the test server is not being started.</p> <p>"ant test" in the election directory should result in "SUCCESS"</p></comment>
<comment id="13061449" author="esammer" created="Thu, 7 Jul 2011 17:25:19 +0000"><p>Updated patch that uses ZK's ClientBase to configure a test server / client. Patch prefix is also fixed as to apply cleanly. Ran all tests (main and election) via the command line; everything passed.</p></comment>
<comment id="13061459" author="hadoopqa" created="Thu, 7 Jul 2011 17:51:16 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12485624/ZK-1095-2.diff" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12485624/ZK-1095-2.diff</a><br/> against trunk revision 1143688.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 7 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/376//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/376//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/376//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/376//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/376//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/376//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13061572" author="esammer" created="Thu, 7 Jul 2011 20:31:47 +0000"><p>The core test failures appear to be unrelated to this patch. It's a connection loss issue.</p> <p>Error Message</p> <p>KeeperErrorCode = ConnectionLoss for /foo_q1</p> <p>Stacktrace</p> <p>org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /foo_q1<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:99)<br/> at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)<br/> at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:761)<br/> at org.apache.zookeeper.server.quorum.QuorumPeerMainTest.testBadPackets(QuorumPeerMainTest.java:428)<br/> at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)</p></comment>
<comment id="13061610" author="hadoopqa" created="Thu, 7 Jul 2011 21:40:59 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12485624/ZK-1095-2.diff" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12485624/ZK-1095-2.diff</a><br/> against trunk revision 1143688.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 7 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/380//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/380//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/380//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/380//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/380//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/380//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13061644" author="phunt" created="Thu, 7 Jul 2011 22:55:37 +0000"><p>Committed to trunk. Thanks Eric!</p></comment>
<comment id="13061892" author="hudson" created="Fri, 8 Jul 2011 10:57:57 +0000"><p>Integrated in ZooKeeper-trunk #1237 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1237/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1237/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1095" title="Simple leader election recipe" class="issue-link" data-issue-key="ZOOKEEPER-1095"><del>ZOOKEEPER-1095</del></a>. Simple leader election recipe (Eric Sammer via henry and phunt)</p> <p>phunt : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1144087" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1144087</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/src/recipes/election/src/java</li> <li>/zookeeper/trunk/src/recipes/election/test/org/apache</li> <li>/zookeeper/trunk/src/recipes/election/test/org/apache/zookeeper/recipes/leader</li> <li>/zookeeper/trunk/src/recipes/election/build.xml</li> <li>/zookeeper/trunk/src/recipes/election/README.txt</li> <li>/zookeeper/trunk/src/recipes/election/src/java/org/apache/zookeeper</li> <li>/zookeeper/trunk/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderElectionAware.java</li> <li>/zookeeper/trunk/src/recipes/election/test</li> <li>/zookeeper/trunk/src/recipes/election/src/java/org/apache</li> <li>/zookeeper/trunk/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderOffer.java</li> <li>/zookeeper/trunk/src/recipes/election/src</li> <li>/zookeeper/trunk/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderElectionSupport.java</li> <li>/zookeeper/trunk/src/recipes/election/test/org/apache/zookeeper/recipes</li> <li>/zookeeper/trunk/src/recipes/election/src/java/org</li> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/recipes/election/src/java/org/apache/zookeeper/recipes</li> <li>/zookeeper/trunk/src/recipes/election</li> <li>/zookeeper/trunk/src/recipes/election/test/org</li> <li>/zookeeper/trunk/src/recipes/election/test/org/apache/zookeeper/recipes/leader/LeaderElectionSupportTest.java</li> <li>/zookeeper/trunk/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader</li> <li>/zookeeper/trunk/src/recipes/election/test/org/apache/zookeeper</li> </ul> </comment>
</comments>
<issuelinks>
<issuelinktype id="12310000">
<name>Duplicate</name>
<inwardlinks description="is duplicated by">
<issuelink>
<issuekey id="12508707">ZOOKEEPER-1080</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12507892">HDFS-1973</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12485624" name="ZK-1095-2.diff" size="35545" author="esammer" created="Thu, 7 Jul 2011 17:25:19 +0000"/>
<attachment id="12485530" name="ZK-1095.diff" size="35765" author="esammer" created="Thu, 7 Jul 2011 03:58:30 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47482</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i062hj:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33334</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>Adds an implementation of the leader election recipe</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1838] ZooKeeper shutdown hangs indefinitely at NioServerSocketChannelFactory.releaseExternalResources</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1838</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Zookeeper shutdown hangs when releasing external resources. This has been observed when executing NioNettySuiteTest.</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-quote">"main"</span> prio=6 tid=0x01498400 nid=0x2328 waiting on condition [0x0158e000..0x0158fe28] java.lang.<span class="code-object">Thread</span>.State: TIMED_WAITING (parking) at sun.misc.Unsafe.park(Native Method) - parking to wait <span class="code-keyword">for</span> lt;0x22f58918gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963) at java.util.concurrent.ThreadPoolExecutor.awaitTermination(ThreadPoolExecutor.java:1244) at org.jboss.netty.util.internal.ExecutorUtil.terminate(ExecutorUtil.java:87) at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.releaseExternalResources(NioServerSocketChannelFactory.java:146) at org.jboss.netty.bootstrap.Bootstrap.releaseExternalResources(Bootstrap.java:324) at org.apache.zookeeper.server.NettyServerCnxnFactory.shutdown(NettyServerCnxnFactory.java:345) at org.apache.zookeeper.test.ClientBase.shutdownServerInstance(ClientBase.java:355) at org.apache.zookeeper.test.ClientBase.stopServer(ClientBase.java:422) </pre> </div></div></description>
<environment/>
<key id="12684458">ZOOKEEPER-1838</key>
<summary>ZooKeeper shutdown hangs indefinitely at NioServerSocketChannelFactory.releaseExternalResources</summary>
<type id="7" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21146avatarType=issuetype">Sub-task</type>
<parent id="12683243">ZOOKEEPER-1833</parent>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="3">Duplicate</resolution>
<assignee username="rakeshr">Rakesh Radhakrishnan</assignee>
<reporter username="rakeshr">Rakesh Radhakrishnan</reporter>
<labels> </labels>
<created>Fri, 13 Dec 2013 12:18:58 +0000</created>
<updated>Thu, 13 Mar 2014 18:17:08 +0000</updated>
<resolved>Fri, 13 Dec 2013 19:24:12 +0000</resolved>
<fixVersion>3.4.6</fixVersion>
<component>server</component>
<due/>
<votes>0</votes>
<watches>5</watches>
<comments>
<comment id="13847441" author="fpj" created="Fri, 13 Dec 2013 12:24:07 +0000"><p>Do you know why bumping the netty version up solves the problem?</p></comment>
<comment id="13847443" author="rakeshr" created="Fri, 13 Dec 2013 12:26:21 +0000"><p>In my windows env, org.apache.zookeeper.test.NioNettySuiteTest test case is hanging indefinitely. When analyzed the threaddump, its waiting to release the external resources. When gone through the netty bug fixes, there are many potential bug fixes happened after 3.2.4 . Also, there is a fix <a href="https://issues.jboss.org/browse/NETTY-417" class="external-link" target="_blank" rel="nofollow noopener">https://issues.jboss.org/browse/NETTY-417</a> which talks about the possibilities of open channels after closure. After bumping the version, have seen the test case is consistently passing.</p></comment>
<comment id="13847451" author="fpj" created="Fri, 13 Dec 2013 12:43:17 +0000"><p>Could you send a message to the dev list and ask if anyone has a problem with us bumping up the netty version? This message will go to the same list, but I don't think folks pay close attention to what's going on in random jiras.</p></comment>
<comment id="13847475" author="rakeshr" created="Fri, 13 Dec 2013 13:22:17 +0000"><p>Thanks Flavio for the comment. I've sent mail to dev@zookeeper.apache.org list, this will really help to know more about the compatibilty issues and feedback. Also I have attached the threaddump to the jira.</p></comment>
<comment id="13847569" author="fpj" created="Fri, 13 Dec 2013 15:18:28 +0000"><p>I had the impression we had talked about upgrading the netty version at some point, so I searched and found it: <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1715" title="Upgrade netty version" class="issue-link" data-issue-key="ZOOKEEPER-1715"><del>ZOOKEEPER-1715</del></a></p></comment>
<comment id="13847803" author="michim" created="Fri, 13 Dec 2013 19:22:01 +0000"><p>Ok, so let's backport <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1715" title="Upgrade netty version" class="issue-link" data-issue-key="ZOOKEEPER-1715"><del>ZOOKEEPER-1715</del></a> to 3.4. I'll close this ticket and reopen <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1715" title="Upgrade netty version" class="issue-link" data-issue-key="ZOOKEEPER-1715"><del>ZOOKEEPER-1715</del></a>.</p></comment>
<comment id="13847810" author="michim" created="Fri, 13 Dec 2013 19:24:12 +0000"><p>This is a dup of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1715" title="Upgrade netty version" class="issue-link" data-issue-key="ZOOKEEPER-1715"><del>ZOOKEEPER-1715</del></a>.</p></comment>
<comment id="13848161" author="rakeshr" created="Sat, 14 Dec 2013 02:10:18 +0000"><p>Thanks Flavio, Michi for looking at this and nice to hear about the netty upgradation plans in 3.4 branch.</p></comment>
<comment id="13933765" author="fpj" created="Thu, 13 Mar 2014 18:17:08 +0000"><p>Closing issues after releasing 3.4.6.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12651846">ZOOKEEPER-1715</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12618586" name="ZOOKEEPER-1838.patch" size="4793" author="rakeshr" created="Fri, 13 Dec 2013 12:20:00 +0000"/>
<attachment id="12618592" name="zk_threaddump-netty-external-resource.txt" size="15036" author="rakeshr" created="Fri, 13 Dec 2013 13:10:44 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>363530</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i1qnvb:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>363836</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1841] problem in QuorumTest</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1841</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>QuorumTest.testNoLogBeforeLeaderEstablishment fails with Assertion: "NOt following"</p></description>
<environment><p>Windows, Java 1.7</p></environment>
<key id="12684965">ZOOKEEPER-1841</key>
<summary>problem in QuorumTest</summary>
<type id="7" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21146avatarType=issuetype">Sub-task</type>
<parent id="12683243">ZOOKEEPER-1833</parent>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="abranzyck">Germán Blanco</assignee>
<reporter username="abranzyck">Germán Blanco</reporter>
<labels> </labels>
<created>Mon, 16 Dec 2013 14:32:09 +0000</created>
<updated>Thu, 13 Mar 2014 18:16:59 +0000</updated>
<resolved>Wed, 18 Dec 2013 13:06:17 +0000</resolved>
<version>3.4.5</version>
<fixVersion>3.4.6</fixVersion>
<component>tests</component>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="13849197" author="abranzyck" created="Mon, 16 Dec 2013 14:34:37 +0000"><p>The cause seems to be the fact that two Quorums of 5 peers each are started currently in QuorumTest with this test case ... preparing a patch.</p></comment>
<comment id="13849222" author="abranzyck" created="Mon, 16 Dec 2013 15:05:21 +0000"><p>This patch moves the test cases that use a different quorum util from QuorumTest to QuorumTest2.</p> <p>This is the patch to 3.4 branch and it doesn't work for trunk, so QA will fail.</p></comment>
<comment id="13849228" author="fpj" created="Mon, 16 Dec 2013 15:20:19 +0000"><p>The test still fails for me, and I don't think that creating the two ensembles is a problem, although not doing it is probably a good thing to do. The problem seems to be that leader election is not completing. Towards the end of the test, I see this:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2013-12-16 15:15:01,607 [myid:] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@597] - Notification: 1 (message format version), 2 (n.leader), 0x100000ff0 (n.zxid), 0x2 (n.round), LOOKING (n.state), 2 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 15:15:01,607 [myid:] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000ff0 (n.zxid), 0x2 (n.round), LOOKING (n.state), 3 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 15:15:01,607 [myid:] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000ff0 (n.zxid), 0x2 (n.round), LOOKING (n.state), 3 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 15:15:01,607 [myid:] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 2 (n.leader), 0x100000ff0 (n.zxid), 0x2 (n.round), LOOKING (n.state), 2 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 15:15:01,607 [myid:] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000ff0 (n.zxid), 0x2 (n.round), LOOKING (n.state), 1 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 15:15:01,608 [myid:] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@597] - Notification: 1 (message format version), 2 (n.leader), 0x100000ff0 (n.zxid), 0x2 (n.round), LOOKING (n.state), 2 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 15:15:01,608 [myid:] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000ff0 (n.zxid), 0x2 (n.round), LOOKING (n.state), 3 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 15:15:01,608 [myid:] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000ff0 (n.zxid), 0x2 (n.round), LOOKING (n.state), 1 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 15:15:01,608 [myid:] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000ff0 (n.zxid), 0x2 (n.round), LOOKING (n.state), 1 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) </pre> </div></div> <p>Server 2 receives two votes for 3, but it apparently doesn't change its vote.</p></comment>
<comment id="13849247" author="abranzyck" created="Mon, 16 Dec 2013 15:57:03 +0000"><p>This is strange.<br/> I did run it on a Windows box, and it passes the test.<br/> I have just done it again and it has passed the test again.<br/> I must say, though that I have tried the same modification on trunk and it hangs forever.<br/> In your log, I only see 2 (myid=2) receiving a vote for 3 (n.leader) in the last line and two lines before that. I don't see any vote coming from 2 (n.sid) after that.</p></comment>
<comment id="13849256" author="fpj" created="Mon, 16 Dec 2013 16:05:55 +0000"><blockquote><p>In your log, I only see 2 (myid=2) receiving a vote for 3 (n.leader) in the last line and two lines before that. I don't see any vote coming from 2 (n.sid) after that.</p></blockquote> <p>That's precisely the problem I was trying to point at...</p></comment>
<comment id="13849285" author="abranzyck" created="Mon, 16 Dec 2013 16:25:15 +0000"><p>Now I have a failure, and yes, it seems that the leader election hasn't finished.<br/> What I see in my logs now is that one of the servers is not responding ...</p></comment>
<comment id="13849294" author="abranzyck" created="Mon, 16 Dec 2013 16:33:31 +0000"><p>What I mean is that in the end, 2 and 3 report timeouts, but 1 is not there.</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2013-12-16 17:06:26,766 [myid:] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x0 (n.zxid), 0x1 (n.round), FOLLOWING (n.state), 2 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:32,787 [myid:] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000859 (n.zxid), 0x2 (n.round), LOOKING (n.state), 3 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:32,806 [myid:] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@597] - Notification: 1 (message format version), 2 (n.leader), 0x100000859 (n.zxid), 0x2 (n.round), LOOKING (n.state), 2 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:32,806 [myid:] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000859 (n.zxid), 0x2 (n.round), LOOKING (n.state), 3 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:32,807 [myid:] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000859 (n.zxid), 0x2 (n.round), LOOKING (n.state), 3 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:32,812 [myid:] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 2 (n.leader), 0x100000859 (n.zxid), 0x2 (n.round), LOOKING (n.state), 2 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:32,817 [myid:] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000859 (n.zxid), 0x2 (n.round), LOOKING (n.state), 1 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:32,819 [myid:] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000859 (n.zxid), 0x2 (n.round), LOOKING (n.state), 1 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:32,819 [myid:] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@597] - Notification: 1 (message format version), 2 (n.leader), 0x100000859 (n.zxid), 0x2 (n.round), LOOKING (n.state), 2 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:32,820 [myid:] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@597] - Notification: 1 (message format version), 3 (n.leader), 0x100000859 (n.zxid), 0x2 (n.round), LOOKING (n.state), 1 (n.sid), 0x1 (n.peerEpoch) LOOKING (my state) 2013-12-16 17:06:33,020 [myid:] - INFO [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11223:FastLeaderElection@849] - Notification time out: 400 2013-12-16 17:06:33,021 [myid:] - INFO [QuorumPeer[myid=3]/0:0:0:0:0:0:0:0:11225:FastLeaderElection@849] - Notification time out: 400 2013-12-16 17:06:33,421 [myid:] - INFO [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11223:FastLeaderElection@849] - Notification time out: 800 2013-12-16 17:06:33,422 [myid:] - INFO [QuorumPeer[myid=3]/0:0:0:0:0:0:0:0:11225:FastLeaderElection@849] - Notification time out: 800 2013-12-16 17:06:34,222 [myid:] - INFO [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11223:FastLeaderElection@849] - Notification time out: 1600 2013-12-16 17:06:34,223 [myid:] - INFO [QuorumPeer[myid=3]/0:0:0:0:0:0:0:0:11225:FastLeaderElection@849] - Notification time out: 1600 </pre> </div></div></comment>
<comment id="13849301" author="fpj" created="Mon, 16 Dec 2013 16:37:11 +0000"><p>yeah, it is pretty odd... <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="13849302" author="fpj" created="Mon, 16 Dec 2013 16:38:10 +0000"><p>I wonder if it has anything to do with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-790" title="Last processed zxid set prematurely while establishing leadership" class="issue-link" data-issue-key="ZOOKEEPER-790"><del>ZOOKEEPER-790</del></a>, based on the comment before the failing test case.</p></comment>
<comment id="13849699" author="abranzyck" created="Mon, 16 Dec 2013 20:34:37 +0000"><p>The last patch for branch 3.4 hasn't failed for me so far.<br/> The reasoning is that the current infinite loop in the tests looking for a leader causes CPU exhaustion on the QuorumPeers and they don't manage to finish the election.<br/> Adding a few sleeps in order to free the CPU in the infinite loops seems to solve the problem.</p></comment>
<comment id="13849910" author="fpj" created="Tue, 17 Dec 2013 00:20:26 +0000"><p>yeah, it passes for me, but it takes forever to run. we might want to fix it in a different way so that it doesn't take so long to run. also, let's rename the class and call it something different from QuorumTest2, perhaps something related to followers like FollowerTest or similar.</p></comment>
<comment id="13850264" author="abranzyck" created="Tue, 17 Dec 2013 09:04:20 +0000"><p>This version passes the test and runs in around 45 seconds on my machine.<br/> There was a bit of chaos in FLE timeouts caused by the fact that two or the peers are not reachable and connection timeouts to these peers are 5 seconds long. Fortunately, connection timeout in FLE is a configuration parameter. </p></comment>
<comment id="13850308" author="abranzyck" created="Tue, 17 Dec 2013 09:55:58 +0000"><p>I thought it would make sense to tearDown the QuorumUtil in the end of the test ... however that adds 10 more seconds to the execution time.</p></comment>
<comment id="13850326" author="abranzyck" created="Tue, 17 Dec 2013 10:33:45 +0000"><p>Removing the wait in the loop looking for a leader, since it is actually not an endless loop. It goes from 1 to 3.</p></comment>
<comment id="13850365" author="abranzyck" created="Tue, 17 Dec 2013 11:30:49 +0000"><p>Only the 3.4 patch is available.<br/> QA will fail.<br/> The tests don't work in trunk, since shutdown of the quorum seems to take for ever (when calling qu.startQuorum() at the beginning of the tests). This problem doesn't happen in branch 3.4. Any idea why?</p></comment>
<comment id="13850367" author="hadoopqa" created="Tue, 17 Dec 2013 11:32:21 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12619076/ZOOKEEPER-1841-branch3.4.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12619076/ZOOKEEPER-1841-branch3.4.patch</a><br/> against trunk revision 1551366.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1844//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1844//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13850421" author="fpj" created="Tue, 17 Dec 2013 13:03:30 +0000"><p>Thanks, Germán. What are the precise changes you have made in this patch relative to the one I checked yesterday? One is the removal of the sleep inside the loop, but I don´t understand these other comments:</p> <blockquote><p>There was a bit of chaos in FLE timeouts caused by the fact that two or the peers are not reachable and connection timeouts to these peers are 5 seconds long. Fortunately, connection timeout in FLE is a configuration parameter.</p></blockquote> <p>Are you referring to this: System.setProperty("zookeeper.cnxTimeout", "50");</p> <blockquote><p>Removing the wait in the loop looking for a leader, since it is actually not an endless loop. It goes from 1 to 3.</p></blockquote> <p>Which loop are you referring to?</p></comment>
<comment id="13850507" author="abranzyck" created="Tue, 17 Dec 2013 14:45:09 +0000"><p>Yes, sorry about that, it was not a clear explanation.<br/> The test runs with only 3 servers out of a 5 server cluster. The other 2 servers are simply not there. In every FLE timeout, the 3 servers that are running attempt to connect to the 2 servers that are not there, this attempt may take up to 5 seconds which is the connection timeout. Since the CPU is very loaded (this is a guess) and TCP REJECT messages don't seem to be happening very quickly, the 3 servers that are running do spend a lot of time waiting for that connection. Since connections are attempted in the single FLE thread (no multithreading there yet), this means that servers are locked waiting for up to 5 seconds. During this time they don't respond to the rest of the servers that are running, which may trigger additional disconnects. This is what I mean with chaos. The result is that leader election doesn't finalize. Setting System.setProperty("zookeeper.cnxTimeout", "50"); means that servers that are running quickly discard servers that are not running and are able to process requests from the other servers that are running and leader election finalizes.</p> <p>The loop that I was referring to is this one:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> while(qu.getPeer(index).peer.leader == null) { index++; } </pre> </div></div> <p>I added the Thread.sleep there because I thought it was running for a long time and eating CPU, but that thought was wrong. It only runs from 1 to 3, and then if it doesn't find a leader throws a null pointer exception.<br/> I hope that clarifies.</p></comment>
<comment id="13850546" author="fpj" created="Tue, 17 Dec 2013 15:06:59 +0000"><p>Ok, it does clarify, thanks, +1. If no one has a concern about this patch, I'll get this checked in.</p></comment>
<comment id="13851677" author="fpj" created="Wed, 18 Dec 2013 13:06:17 +0000"><p>B3.4: Committed revision 1551930.</p></comment>
<comment id="13933722" author="fpj" created="Thu, 13 Mar 2014 18:16:59 +0000"><p>Closing issues after releasing 3.4.6.</p></comment>
</comments>
<attachments>
<attachment id="12619076" name="ZOOKEEPER-1841-branch3.4.patch" size="16081" author="abranzyck" created="Tue, 17 Dec 2013 10:33:45 +0000"/>
<attachment id="12619071" name="ZOOKEEPER-1841-branch3.4.patch" size="16227" author="abranzyck" created="Tue, 17 Dec 2013 09:55:58 +0000"/>
<attachment id="12619059" name="ZOOKEEPER-1841-branch3.4.patch" size="16227" author="abranzyck" created="Tue, 17 Dec 2013 09:04:20 +0000"/>
<attachment id="12618966" name="ZOOKEEPER-1841-branch3.4.patch" size="16106" author="abranzyck" created="Mon, 16 Dec 2013 20:34:37 +0000"/>
<attachment id="12618917" name="ZOOKEEPER-1841-branch3.4.patch" size="15940" author="abranzyck" created="Mon, 16 Dec 2013 15:05:21 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>364042</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i1qqzb:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>364342</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-1181] Fix problems with Kerberos TGT renewal</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-1181</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Currently, in Zookeeper trunk, there are two problems with Kerberos TGT renewal:</p> <p>1. TGTs obtained from a keytab are not refreshed periodically. They should be, just as those from ticket cache are refreshed.</p> <p>2. Ticket renewal should be retried if it fails. Ticket renewal might fail if two or more separate processes (different JVMs) running as the same user try to renew Kerberos credentials at the same time. </p></description>
<environment/>
<key id="12522975">ZOOKEEPER-1181</key>
<summary>Fix problems with Kerberos TGT renewal</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="ekoontz">Eugene Joseph Koontz</assignee>
<reporter username="ekoontz">Eugene Joseph Koontz</reporter>
<labels>
<label>kerberos</label>
<label>security</label>
</labels>
<created>Tue, 13 Sep 2011 23:38:55 +0000</created>
<updated>Thu, 2 May 2013 02:29:44 +0000</updated>
<resolved>Mon, 24 Oct 2011 06:47:23 +0000</resolved>
<version>3.4.0</version>
<fixVersion>3.4.0</fixVersion>
<fixVersion>3.5.0</fixVersion>
<component>java client</component>
<component>server</component>
<due/>
<votes>0</votes>
<watches>3</watches>
<comments>
<comment id="13104092" author="hadoopqa" created="Wed, 14 Sep 2011 00:17:00 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12494346/ZOOKEEPER-1181.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12494346/ZOOKEEPER-1181.patch</a><br/> against trunk revision 1170365.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/531//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/531//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/531//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/531//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/531//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/531//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13104517" author="fournc" created="Wed, 14 Sep 2011 14:22:27 +0000"><p>I wish this was a touch cleaner... aren't reloginFromKeytab and reloginFromTicketCache almost the same method? Can we refactor the retry logic into one place? </p></comment>
<comment id="13104680" author="phunt" created="Wed, 14 Sep 2011 17:20:07 +0000"><p>also qa bot found some findbugs issues. Canceling for now.</p></comment>
<comment id="13104916" author="hadoopqa" created="Wed, 14 Sep 2011 21:50:46 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12494526/ZOOKEEPER-1181.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12494526/ZOOKEEPER-1181.patch</a><br/> against trunk revision 1170458.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/538//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/538//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/538//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/538//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/538//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/538//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13105008" author="ekoontz" created="Wed, 14 Sep 2011 23:44:33 +0000"><blockquote><p>-1 tests included. The patch doesn't appear to include any new or modified tests.</p></blockquote> <blockquote><p>Please justify why no new tests are needed for this patch.</p></blockquote> <blockquote><p>Also please list what manual steps were performed to verify this patch.</p></blockquote> <p>Have tested this with a Kerberized HBase/Hadoop cluster on Amazon EC2. Tested with a short Kerberos ticket life (modprinc -maxlife "5 minutes") for zookeeper server and clients. Tested with zookeeper server using a keytab and zookeeper client with ticket cache. Ran YCSB on HBase successfully.</p> <p>I think I might be able to learn Mockito and mock up a Kerberos server for adding additional tests, but would rather defer that to later.</p></comment>
<comment id="13105010" author="ekoontz" created="Wed, 14 Sep 2011 23:45:56 +0000"><p>This was a one master, 3 regionserver cluster, where the master and 2 of the regionservers ran Quorum Peers.</p></comment>
<comment id="13108059" author="thkoch" created="Mon, 19 Sep 2011 19:00:00 +0000"><p>Could you please upload the patch to <a href="https://reviews.apache.org/r/new/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/new/</a> for review?</p></comment>
<comment id="13108098" author="ekoontz" created="Mon, 19 Sep 2011 20:04:27 +0000"><p>Hi Thomas, Thanks for your interest! Please see the review here:</p> <p><a href="https://reviews.apache.org/r/1958" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1958</a></p> <p>-Eugene</p></comment>
<comment id="13112253" author="ekoontz" created="Thu, 22 Sep 2011 00:14:06 +0000"><p>Hi Patrick, <br/> I'd like to push for this to be included in 3.4.0. It fixes significant problems with the currently-available Kerberos support in the 3.4.0 branch and trunk.<br/> Thanks for considering it,<br/> Eugene</p></comment>
<comment id="13112813" author="jiraposter@reviews.apache.org" created="Thu, 22 Sep 2011 18:39:26 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1958/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1958/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-09-22 18:39:22.010877)</p> <p>Review request for zookeeper.</p> <p>Changes<br/> -------</p> <p>Add link to JIRA.</p> <p>Summary<br/> -------</p> <p>Currently, in Zookeeper trunk, there are two problems with Kerberos TGT renewal:</p> <p>1. TGTs obtained from a keytab are not refreshed periodically. They should be, just as those from ticket cache are refreshed.</p> <p>2. Ticket renewal should be retried if it fails. Ticket renewal might fail if two or more separate processes (different JVMs) running as the same user try to renew Kerberos credentials at the same time.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1181" title="Fix problems with Kerberos TGT renewal" class="issue-link" data-issue-key="ZOOKEEPER-1181"><del>ZOOKEEPER-1181</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1181" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1181</a></p> <p>Diffs</p> <hr /> <p> src/java/main/org/apache/zookeeper/Login.java de64d0d </p> <p>Diff: <a href="https://reviews.apache.org/r/1958/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1958/diff</a></p> <p>Testing<br/> -------</p> <p>Have tested this with a Kerberized HBase/Hadoop cluster on Amazon EC2. Tested with a short Kerberos ticket life (modprinc -maxlife "5 minutes") for zookeeper server and clients. Tested with zookeeper server using a keytab and zookeeper client with ticket cache. Ran YCSB on HBase successfully on a one master, 3 regionserver cluster, where the master and 2 of the regionservers ran Quorum Peers.</p> <p>Thanks,</p> <p>Eugene</p> </comment>
<comment id="13115144" author="mahadev" created="Tue, 27 Sep 2011 02:36:24 +0000"><p>Eugene,<br/> We should write some unit tests for this. I am fine checking this into 3.4 for now. Can you please create a ticket to add a unit test for this? Mockito would be very helpful here.</p> <p>Might make some changes to the patch to get this in ASAP.</p></comment>
<comment id="13115218" author="ekoontz" created="Tue, 27 Sep 2011 05:06:48 +0000"><p>Hi Mahadev, good idea; I added <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1205" title="Add a unit test for Kerberos Ticket-Granting Ticket (TGT) renewal" class="issue-link" data-issue-key="ZOOKEEPER-1205">ZOOKEEPER-1205</a> for unit tests for this bug.</p></comment>
<comment id="13130420" author="mahadev" created="Wed, 19 Oct 2011 07:05:26 +0000"><p>Reuploading the same patch to run thorugh hudson.</p></comment>
<comment id="13130436" author="hadoopqa" created="Wed, 19 Oct 2011 07:33:27 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12499644/ZOOKEEPER-1181.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12499644/ZOOKEEPER-1181.patch</a><br/> against trunk revision 1185994.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no new tests are needed for this patch.<br/> Also please list what manual steps were performed to verify this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/625//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/625//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/625//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/625//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/625//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/625//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13133857" author="mahadev" created="Mon, 24 Oct 2011 06:47:23 +0000"><p>Just committed this. Hope to see test cases soon for these classes. Thanks Eugene!</p></comment>
<comment id="13133974" author="hudson" created="Mon, 24 Oct 2011 10:53:12 +0000"><p>Integrated in ZooKeeper-trunk #1342 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1342/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1342/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1181" title="Fix problems with Kerberos TGT renewal" class="issue-link" data-issue-key="ZOOKEEPER-1181"><del>ZOOKEEPER-1181</del></a>. Fix problems with Kerberos TGT renewal. (Eugene Koontz via mahadev)</p> <p>mahadev : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1188033" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1188033</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/Login.java</li> </ul> </comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12524795">ZOOKEEPER-1205</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10001">
<name>dependent</name>
<outwardlinks description="depends upon">
<issuelink>
<issuekey id="12480698">ZOOKEEPER-938</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12499644" name="ZOOKEEPER-1181.patch" size="25323" author="mahadev" created="Wed, 19 Oct 2011 07:05:26 +0000"/>
<attachment id="12494526" name="ZOOKEEPER-1181.patch" size="25323" author="ekoontz" created="Wed, 14 Sep 2011 21:24:59 +0000"/>
<attachment id="12494346" name="ZOOKEEPER-1181.patch" size="25747" author="ekoontz" created="Tue, 13 Sep 2011 23:49:57 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>29</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05yfj:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32677</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>-Fixes two findbugs warnings related to holding a lock while sleeping.<br/> -Addresses Camille#39;s point: merge two almost-identical retry methods into a single retry method.</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-763] Deadlock on close w/ zkpython / c client</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-763</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>deadlocks occur if we attempt to close a handle while there are any outstanding async requests (aget, acreate, etc). Normally on close both the io thread terminates and the completion thread are terminated and joined, however w\ith outstanding async requests, the completion thread won't be in a joinable state, and we effectively hang when the main thread does the join.</p> <p>afaics ideal behavior would be on close of a handle, to effectively clear out any remaining callbacks and let the completion thread terminate.</p> <p>i've tried adding some bookkeeping to within a python client to guard against closing while there is an outstanding async completion request, but its an imperfect solution since even after the python callback is executed there is still a window for deadlock before the completion thread finishes the callback.</p> <p>a simple example to reproduce the deadlock is attached.</p></description>
<environment><p>ubuntu 10.04, zookeeper 3.3.0 and trunk</p></environment>
<key id="12463663">ZOOKEEPER-763</key>
<summary>Deadlock on close w/ zkpython / c client</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="henryr">Henry Robinson</assignee>
<reporter username="kapilt">Kapil Thangavelu</reporter>
<labels> </labels>
<created>Tue, 4 May 2010 13:09:43 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:44 +0000</updated>
<resolved>Wed, 5 May 2010 22:02:10 +0000</resolved>
<version>3.3.0</version>
<fixVersion>3.3.1</fixVersion>
<fixVersion>3.4.0</fixVersion>
<component>contrib-bindings</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12863803" author="kapilt" created="Tue, 4 May 2010 13:13:16 +0000"><p>a simple example that exhibits deadlock behavior on close.</p></comment>
<comment id="12864403" author="kapilt" created="Wed, 5 May 2010 17:01:34 +0000"><p>A gdb stack trace on the process after it deadlocks.</p></comment>
<comment id="12864429" author="henryr" created="Wed, 5 May 2010 18:06:43 +0000"><p>Hi Kapil - </p> <p>As seems to be the norm for me this week, I'm struggling to reproduce <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> It does seem like your python script explicitly waits for a completion to be called before closing a handle. Is this enough to leave an outstanding completion on the queue?</p> <p>Can you capture the stacktrace for the completion thread? I think it must be getting stuck in process_completions but it would be very valuable to know where - if it's stuck on the callback into zkpython then that means the deadlock is in the python bindings and not solely in C-land.</p> <p>cheers,<br/> Henry</p></comment>
<comment id="12864452" author="kapilt" created="Wed, 5 May 2010 19:08:18 +0000"><p>Hi Henry</p> <p>The issue with the example i sent is that when the condition notify happens in the python callback, the main process thread can start running before the callback has exited and the completion thread will still be running. It could probably make be made more explicit for reproducing by inserting a time.sleep(1) line into the callback after the notify.</p> <p>This is the stack trace for the completion thread on deadlock.</p> <p>#0 0x00cb8422 in __kernel_vsyscall ()<br/> #1 0x00387245 in sem_wait@@GLIBC_2.1 () from /lib/tls/i686/cmov/libpthread.so.0<br/> #2 0x0810abe8 in PyThread_acquire_lock ()<br/> #3 0x080dcc11 in PyEval_EvalFrameEx ()<br/> #4 0x080e2807 in PyEval_EvalCodeEx ()<br/> #5 0x080e0c8b in PyEval_EvalFrameEx ()<br/> #6 0x080e1bb0 in PyEval_EvalFrameEx ()<br/> #7 0x080e2807 in PyEval_EvalCodeEx ()<br/> #8 0x0816b2ac in ?? ()<br/> #9 0x0806245a in PyObject_Call ()<br/> #10 0x080db892 in PyEval_CallObjectWithKeywords ()<br/> #11 0x080624f0 in PyObject_CallObject ()<br/> #12 0x00a8dd95 in data_completion_dispatch (rc=0, value=0xa01dcd8 "8\334\001\n\370\263N", value_len=0, stat=0xb773828c, data=0xa0035d0) at src/c/zookeeper.c:410<br/> #13 0x00f33ecc in process_completions (zh=0xa024ab0) at src/zookeeper.c:1778<br/> #14 0x00f4005b in do_completion (v=0xa024ab0) at src/mt_adaptor.c:333<br/> #15 0x0038096e in start_thread () from /lib/tls/i686/cmov/libpthread.so.0<br/> #16 0x00461a0e in clone () from /lib/tls/i686/cmov/libc.so.6</p> <p>thanks,<br/> Kapil</p></comment>
<comment id="12864453" author="kapilt" created="Wed, 5 May 2010 19:13:22 +0000"><p>new version of the deadlock script that uses an explicit sleep to get a thread switch, instead of looping around the function and hoping it happens.</p></comment>
<comment id="12864488" author="henryr" created="Wed, 5 May 2010 20:20:24 +0000"><p>Kapil - </p> <p>Thanks! Adding that sleep helped me understand what was going on. </p> <p>pyzoo_close has the GIL but blocks inside zookeeper_close, waiting for the completion thread to finish. However, if a completion is still inside Python, but has been pre-empted by the main thread which calls pyzoo_close, the completion can't get the GIL back to finish up executing, blocking the completions_thread for ever more. The fix is simple - relinquish the GIL during the zookeeper_close call, and then reacquire it straight after. There are even handy macros to do this:</p> <p>Py_BEGIN_ALLOW_THREADS<br/> ret = zookeeper_close(zhandles<span class="error">#91;zkhid#93;</span>);<br/> Py_END_ALLOW_THREADS</p> <p>This same issue will affect any part of zkpython where a call to the C client is blocked on some work being completed in another Python thread - in practice, I think this means from callbacks. I'll audit the code to see if any other API calls are affected. Patch to fix this issue is following shortly - Kapil, I'd be very grateful if you could help us by testing it. </p> <p>cheers,<br/> Henry</p></comment>
<comment id="12864503" author="henryr" created="Wed, 5 May 2010 21:06:53 +0000"><p>Patch attached, with new test (note that test will hang if it fails, no obvious way to fix that - will open a JIRA to track).</p> <p>Also included is fix for type in acl_test.py; not sure how I allowed that to creep in :/</p></comment>
<comment id="12864508" author="hadoopqa" created="Wed, 5 May 2010 21:12:26 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12443765/ZOOKEEPER-763.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12443765/ZOOKEEPER-763.patch</a><br/> against trunk revision 941473.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 2 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/83/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/83/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12864511" author="henryr" created="Wed, 5 May 2010 21:20:44 +0000"><p>Forgot --no-prefix again :/</p></comment>
<comment id="12864517" author="phunt" created="Wed, 5 May 2010 21:29:04 +0000"><p>This addressed the problem on my machine (ubuntu karmic)</p></comment>
<comment id="12864523" author="kapilt" created="Wed, 5 May 2010 21:36:29 +0000"><p>works for me on a couple of different zkpython apps (ubuntu lucid) , thanks! </p></comment>
<comment id="12864539" author="hadoopqa" created="Wed, 5 May 2010 21:48:35 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12443769/ZOOKEEPER-763.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12443769/ZOOKEEPER-763.patch</a><br/> against trunk revision 941473.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 5 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/149/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/149/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/149/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/149/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/149/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/149/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12864546" author="phunt" created="Wed, 5 May 2010 21:59:32 +0000"><p>updated patch for 3.3 branch</p></comment>
<comment id="12864548" author="phunt" created="Wed, 5 May 2010 22:02:10 +0000"><p>+1, thanks Henry (and Kapil!)</p></comment>
<comment id="12864871" author="phunt" created="Thu, 6 May 2010 18:14:45 +0000"><p>For some reason I got confused on the 3.3 branch (may not have been up to date), the main patch applies to both just fine. Fixed this in svn.</p></comment>
</comments>
<attachments>
<attachment id="12443769" name="ZOOKEEPER-763.patch" size="3209" author="henryr" created="Wed, 5 May 2010 21:20:44 +0000"/>
<attachment id="12443765" name="ZOOKEEPER-763.patch" size="2686" author="henryr" created="Wed, 5 May 2010 21:06:52 +0000"/>
<attachment id="12443579" name="deadlock.py" size="440" author="kapilt" created="Tue, 4 May 2010 13:13:16 +0000"/>
<attachment id="12443751" name="deadlock_v2.py" size="409" author="kapilt" created="Wed, 5 May 2010 19:13:22 +0000"/>
<attachment id="12443734" name="stack-trace-deadlock.txt" size="716" author="kapilt" created="Wed, 5 May 2010 17:01:34 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47616</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05zpj:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32884</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-690] AsyncTestHammer test fails on hudson.</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-690</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>the hudson test failed on <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/2/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/2/testReport/</a>. There are huge set of cancelledkeyexceptions in the logs. Still going through the logs to find out the reason for failure.</p></description>
<environment/>
<key id="12458489">ZOOKEEPER-690</key>
<summary>AsyncTestHammer test fails on hudson.</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="5">Cannot Reproduce</resolution>
<assignee username="henryr">Henry Robinson</assignee>
<reporter username="mahadev">Mahadev Konar</reporter>
<labels> </labels>
<created>Tue, 9 Mar 2010 01:42:31 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:30 +0000</updated>
<resolved>Sat, 16 Jul 2011 17:49:55 +0000</resolved>
<fixVersion>3.4.0</fixVersion>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12846307" author="phunt" created="Wed, 17 Mar 2010 05:44:17 +0000"><p>downgrading from blocker, haven't seen this again after many runs. we'll keep an eye but shouldn't block 3.3.0 (and may have been fixed)</p></comment>
<comment id="12846715" author="phunt" created="Thu, 18 Mar 2010 01:46:38 +0000"><p>not a blocker for 3.3.0, tracking in 3.3.1. Have not seen these since, ie not reproduceable but let's keep an eye open.</p></comment>
<comment id="12858644" author="maguro" created="Mon, 19 Apr 2010 19:26:07 +0000"><p>This consistently hangs on my machine. I'll try to get some time to see why this is so.</p></comment>
<comment id="12858665" author="henryr" created="Mon, 19 Apr 2010 20:17:53 +0000"><p>Alan - that would be great. If you can take a jstack dump of the process when it hangs we can do some forensics.</p></comment>
<comment id="12858684" author="phunt" created="Mon, 19 Apr 2010 21:18:38 +0000"><p>Details such as os and java version would be really helpful. If you could upload the log file from the failed test that would be super useful. (build/test/logs/.)</p> <p>This test in particular has found at least a couple issues.</p> <p>Btw, you know that you can run just this test via:</p> <p>ant -Dtestcase=AsyncHammerTest test-core-java</p> <p>which might save you some time.</p></comment>
<comment id="12858689" author="maguro" created="Mon, 19 Apr 2010 21:34:38 +0000"><p>Odd. Didn't hang this time.</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">junit.run: [junit] Running org.apache.zookeeper.test.AsyncHammerTest [junit] Tests run: 2, Failures: 0, Errors: 2, Time elapsed: 32.958 sec [junit] Test org.apache.zookeeper.test.AsyncHammerTest FAILED BUILD FAILED /Users/acabrera/dev/hadoop/zookeeper/build.xml:818: Tests failed! Total time: 46 seconds [acabrera-md:zookeeper 620]$ java -version java version <span class="code-quote">"1.6.0_17"</span> Java(TM) SE <span class="code-object">Runtime</span> Environment (build 1.6.0_17-b04-248-9M3125) Java HotSpot(TM) 64-Bit Server VM (build 14.3-b01-101, mixed mode) </pre> </div></div> <p>Mac OS X 10.5.8</p></comment>
<comment id="12858694" author="maguro" created="Mon, 19 Apr 2010 21:46:48 +0000"><p>Ok, this run of the test has been running for about 10 minutes</p></comment>
<comment id="12858767" author="phunt" created="Tue, 20 Apr 2010 06:10:46 +0000"><p>The following snippets are from TEST-org.apache.zookeeper.test.AsyncHammerTest.txt</p> <p>Looks like there's a problem with the address already being in use. Maybe you can <br/> try editing src/java/test/org/apache/zookeeper/PortAssignment.java and see if that helps?</p> <p>2010-04-19 14:31:55,010 - INFO <span class="error">#91;main:QuorumBase@88#93;</span> - Ports are: 127.0.0.1:11222,127.0.0.1:11223,127.0.0.1:11224,127.0.0.1:11225,127.0.0.1:11226<br/> 2010-04-19 14:31:55,015 - INFO <span class="error">#91;main:QuorumBase@145#93;</span> - creating QuorumPeer 1 port 11222<br/> 2010-04-19 14:31:55,062 - INFO <span class="error">#91;main:NIOServerCnxn$Factory@144#93;</span> - binding to port 0.0.0.0/0.0.0.0:11222<br/> 2010-04-19 14:31:55,063 - INFO <span class="error">#91;main:AsyncHammerTest@68#93;</span> - Test clients shutting down<br/> 2010-04-19 14:31:55,064 - INFO <span class="error">#91;main:QuorumBase@254#93;</span> - TearDown started</p> <p>Testcase: testHammer took 0.443 sec<br/> Caused an ERROR<br/> Address already in use<br/> java.net.BindException: Address already in use<br/> at sun.nio.ch.Net.bind(Native Method)<br/> at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:119)<br/> at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:59)<br/> at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:52)<br/> at org.apache.zookeeper.server.NIOServerCnxn$Factory.lt;initgt;(NIOServerCnxn.java:145)<br/> at org.apache.zookeeper.server.NIOServerCnxn$Factory.lt;initgt;(NIOServerCnxn.java:126)<br/> at org.apache.zookeeper.server.quorum.QuorumPeer.lt;initgt;(QuorumPeer.java:450)<br/> at org.apache.zookeeper.test.QuorumBase.startServers(QuorumBase.java:146)<br/> at org.apache.zookeeper.test.QuorumBase.setUp(QuorumBase.java:96)<br/> at org.apache.zookeeper.test.QuorumBase.setUp(QuorumBase.java:60)<br/> at org.apache.zookeeper.test.AsyncHammerTest.setUp(AsyncHammerTest.java:54)</p> <p> Caused an ERROR</p></comment>
<comment id="12858980" author="maguro" created="Tue, 20 Apr 2010 17:32:11 +0000"><p>I reran the tests a minute or two later, without having done anything, and the test got hung. I attached the thread dump to this issue.</p></comment>
<comment id="12858984" author="phunt" created="Tue, 20 Apr 2010 17:37:11 +0000"><p>Can you attach the log, that would be very useful for me to review prior to digging into the thread dump.</p></comment>
<comment id="12858986" author="maguro" created="Tue, 20 Apr 2010 17:39:14 +0000"><p>There's nothing in the log:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">[acabrera-md:zookeeper 507]$ cat build/test/logs/TEST-org.apache.zookeeper.test.AsyncHammerTest.txt Testsuite: org.apache.zookeeper.test.AsyncHammerTest </pre> </div></div></comment>
<comment id="12858988" author="mahadev" created="Tue, 20 Apr 2010 17:45:23 +0000"><p>alan,<br/> junit doesnt persist the logs into the testfiles in case the test hangs. So, you will have to print out the logs on the console so that you know where it is hanging -</p> <p>try</p> <p>ant test -Dtestcase=AsyncHammerTest -Dtest.output=yes</p></comment>
<comment id="12858991" author="phunt" created="Tue, 20 Apr 2010 17:49:52 +0000"><p>Right, also gt; test.out 2gt;amp;1</p> <p>will help to capture the output.</p></comment>
<comment id="12858993" author="maguro" created="Tue, 20 Apr 2010 17:55:03 +0000"><p>Stack dump and log.</p></comment>
<comment id="12858997" author="maguro" created="Tue, 20 Apr 2010 18:03:25 +0000"><p>One interesting thing I noticed is that after I kill the process it turns into a zombie process.</p></comment>
<comment id="12859008" author="phunt" created="Tue, 20 Apr 2010 18:24:45 +0000"><p>The Observer test is failing, and it looks like one of the observer servers might be the issue (11247 is the fifth server afaict), Henry any insight?</p> <p> <span class="error">#91;junit#93;</span> 2010-04-20 10:48:21,936 - INFO <span class="error">#91;QuorumPeer:/0.0.0.0:11247:QuorumPeer@619#93;</span> - OBSERVING</p> <p> <span class="error">#91;junit#93;</span> 2010-04-20 10:49:42,593 - INFO <span class="error">#91;main:ClientBase@536#93;</span> - Found match with array:<span class="error">#91;389, 389, 389, 389, 0#93;</span><br/> <span class="error">#91;junit#93;</span> 2010-04-20 10:49:42,594 - INFO <span class="error">#91;main:JUnit4ZKTestRunner$LoggedInvokeMethod@53#93;</span> - TEST METHOD FAILED testObserversHammer<br/> <span class="error">#91;junit#93;</span> java.lang.AssertionError: node count not consistent expected:lt;389gt; but was:lt;0gt;</p></comment>
<comment id="12859525" author="phunt" created="Wed, 21 Apr 2010 21:08:52 +0000"><p>Moving this as a blocker for 3.3.1 - I think we need to fix this as part of the release.</p> <p>Henry, any progress? It would be great to get 3.3.1 to a vote soon (to get out a fix for the stat issue)</p></comment>
<comment id="12861865" author="henryr" created="Wed, 28 Apr 2010 17:45:29 +0000"><p>Progress update - possibly to do with a bug in FLE allowing an Observer to be elected. We're looking into this now.</p></comment>
<comment id="12861909" author="fpj" created="Wed, 28 Apr 2010 19:17:44 +0000"><p>FLE relies upon a correct implementation of the voting view. My understanding is that if an observer is being elected leader, then the following predicate is evaluating to false:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>(!self.getVotingView().containsKey(response.sid)) </pre> </div></div> <p>This is line 201 of FastLeaderElection.java. If this predicate is true, meaning that an observer is not in the voting view of a server, then the server will send a response right away and won't consider the vote of the observer. Does it make sense?</p></comment>
<comment id="12862350" author="henryr" created="Thu, 29 Apr 2010 19:03:11 +0000"><p>I have found what I hope is the problem.</p> <p>Because QuorumPeers duplicate their 'LearnerType' in two places there's the possibility that they may get out of sync. This is what was happening here - it was a test bug. Although the Observers knew that they were Observers, the other nodes did not. This affected the leader election protocol as other node did not know to reject an Observer.</p> <p>I feel like we should refactor the QuorumPeer.QuorumServer code so as not to duplicate information, but for the time being I think this patch will work. </p> <p>I have also taken the opportunity to standardise the naming of 'learnertype' throughout the code (in some places it was called 'peertype' adding to the confusion).</p> <p>Tests pass on my machine, but I can't guarantee that the problem is fixed as I could never recreate the error.</p> <p>Thanks to Flavio for catching the broken invariant!</p></comment>
<comment id="12862351" author="henryr" created="Thu, 29 Apr 2010 19:03:42 +0000"><p>Alan - can you try this patch to see if it fixes things? </p> <p>Thanks, </p> <p>Henry</p></comment>
<comment id="12862398" author="maguro" created="Thu, 29 Apr 2010 20:33:08 +0000"><p>Test does not lock up but it does not pass.</p></comment>
<comment id="12862400" author="henryr" created="Thu, 29 Apr 2010 20:36:01 +0000"><p>Note that both testHammer and testObserversHammer fail in the most recent log.</p></comment>
<comment id="12862411" author="maguro" created="Thu, 29 Apr 2010 21:11:44 +0000"><p>Disregard the last comment.</p> <p>I have now cleaned and rebuilt and now it still locks up.</p></comment>
<comment id="12862414" author="breed" created="Thu, 29 Apr 2010 21:17:01 +0000"><p>i think the key fix is here:</p> <blockquote> <p>public void setLearnerType(LearnerType p) {<br/> learnerType = p;<br/> if (quorumPeers.containsValue(this.myid)) </p> <div class="error"><span class="error">Unknown macro: { this.quorumPeers.get(myid).type = p; }</span> </div> <p> else </p> <div class="error"><span class="error">Unknown macro: { LOG.error(quot;Setting LearnerType to quot; + p + quot; but quot; + myid + quot; not in QuorumPeers. quot;); }</span> </div> <p> ...<br/> }</p></blockquote> <p>right?</p> <p>the problem i see is that we are only updating the quorumPeers for the one peer. the other peers are going to be thinking it is a participant.</p></comment>
<comment id="12862424" author="henryr" created="Thu, 29 Apr 2010 21:30:16 +0000"><p>This map is, I think, shared between the quorumpeers for the purposes of the test (and in general there aren't two quorumpeers sharing this datastructure when running normally). </p> <p>But! The error here is that I'm dumb (and that Java's type-checking leaves a little to be desired). I've written quorumPeers.containsValue up there, but actually it should be quorumPeers.containsKey. New patch on the way, let's see if that fixes it.</p></comment>
<comment id="12862434" author="henryr" created="Thu, 29 Apr 2010 21:53:32 +0000"><p>Alan - would you mind trying this new patch? Thanks for your patience. I suspect that something might still be a bit flaky with these tests (not the code, but the tests), but I hope this will fix this particular problem. </p></comment>
<comment id="12862451" author="maguro" created="Thu, 29 Apr 2010 22:30:02 +0000"><p>Still locks up. (BTW, I applied the latest patch to a clean checkout of zookeeper)</p></comment>
<comment id="12862478" author="henryr" created="Thu, 29 Apr 2010 23:39:19 +0000"><p>Fixing that bug unmasked another ugliness with the way that tests were started and stopped. This patch makes the process cleaner. Let's see if it helps, Alan?</p></comment>
<comment id="12862480" author="breed" created="Thu, 29 Apr 2010 23:44:07 +0000"><p>henry, i think this may show that we can't really have a setLearnerType() method. In the real distributed setting, each peer will have its own list, so we should really think of the peers list as immutable.</p></comment>
<comment id="12862482" author="henryr" created="Thu, 29 Apr 2010 23:52:09 +0000"><p>Ben - </p> <p>Agreed. I see this as the same as setMyid(...) - it sets an immutable value and should only be called once. I'd prefer if these parameters were 'final' in QuorumPeer and set in the constructor, but that's not the way that runFromConfig (the only place outside of tests that these methods are called) is written. Then we could get rid of setLearnerType, for sure. </p> <p>The real error here, I think, is duplicating the learnertype between QuorumPeer and QuorumServer. If we are going to have the list of QuorumServers, then getLearnerType should lookup the learner type in the peer map. Same for the serverid, perhaps, and we should just save a reference to the QuorumServer that represents our Quorumpeer. </p></comment>
<comment id="12862594" author="hadoopqa" created="Fri, 30 Apr 2010 08:59:37 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12443246/ZOOKEEPER-690.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12443246/ZOOKEEPER-690.patch</a><br/> against trunk revision 939172.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/77/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/77/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/77/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/77/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/77/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/77/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12863082" author="henryr" created="Sun, 2 May 2010 02:53:40 +0000"><p>Hi Alan - Do you think you might have a chance to test whether this patch improves things?</p></comment>
<comment id="12863888" author="maguro" created="Tue, 4 May 2010 17:03:14 +0000"><p>The test still locks up but it seems that it's Ant that freezes. This process then becomes a zombie process. This zombie process holds on to ports that the tests use and so subsequent runs fail. Notably, QuorumPeerMainTest takes 15 minutes to fail.</p></comment>
<comment id="12863902" author="henryr" created="Tue, 4 May 2010 17:21:31 +0000"><p>Hi Alan - </p> <p>Looking at this attachment: nohup-AsyncHammerTest-201004301209.txt - the tests appear to be run twice. The first testObserversHammer completes successfully, the second fails. Were you running the tests until you experienced the failure? </p> <p>Henry</p></comment>
<comment id="12863912" author="maguro" created="Tue, 4 May 2010 17:38:33 +0000"><p>The first run is the run where Ant locks up. The second run is the subsequent run after the first run zombies. </p> <p>Rebooting clears everything for the first test run to lock up and become zombied.</p></comment>
<comment id="12863915" author="henryr" created="Tue, 4 May 2010 17:50:50 +0000"><p>Weird - it looks like the test is shutting down correctly:</p> <p><span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,896 - INFO <span class="error">#91;main:ClientBase@222#93;</span> - connecting to 127.0.0.1 11233<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,896 - INFO <span class="error">#91;main:QuorumBase@277#93;</span> - 127.0.0.1:11233 is no longer accepting client connections<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,896 - INFO <span class="error">#91;main:ClientBase@222#93;</span> - connecting to 127.0.0.1 11234<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,897 - INFO <span class="error">#91;main:QuorumBase@277#93;</span> - 127.0.0.1:11234 is no longer accepting client connections<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,897 - INFO <span class="error">#91;main:ClientBase@222#93;</span> - connecting to 127.0.0.1 11235<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,897 - INFO <span class="error">#91;main:QuorumBase@277#93;</span> - 127.0.0.1:11235 is no longer accepting client connections<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,897 - INFO <span class="error">#91;main:ClientBase@222#93;</span> - connecting to 127.0.0.1 11236<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,898 - INFO <span class="error">#91;main:QuorumBase@277#93;</span> - 127.0.0.1:11236 is no longer accepting client connections<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,898 - INFO <span class="error">#91;main:ClientBase@222#93;</span> - connecting to 127.0.0.1 11237<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,898 - INFO <span class="error">#91;main:QuorumBase@277#93;</span> - 127.0.0.1:11237 is no longer accepting client connections<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,901 - INFO <span class="error">#91;main:JUnit4ZKTestRunner$LoggedInvokeMethod@56#93;</span> - FINISHED TEST METHOD testObserversHammer<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,901 - INFO <span class="error">#91;main:ZKTestCase$1@59#93;</span> - SUCCEEDED testObserversHammer<br/> <span class="error">#91;junit#93;</span> 2010-04-30 11:41:52,901 - INFO <span class="error">#91;main:ZKTestCase$1@54#93;</span> - FINISHED testObserversHammer</p> <p>and then it goes into trying the C tests which fail for an unrelated reason - does it lock up at this point or does it actually fail out to the CLI? If it locks up, is the jstack output you attached from that run?</p> </comment>
<comment id="12863917" author="breed" created="Tue, 4 May 2010 17:54:12 +0000"><p>alan it looks like you took the jstack of the parent process rather than the child.</p></comment>
<comment id="12863922" author="maguro" created="Tue, 4 May 2010 18:00:21 +0000"><p>Correct. The child seem to have completed. The parent was the one that seemed to have locked up.</p></comment>
<comment id="12863996" author="fpj" created="Tue, 4 May 2010 21:03:34 +0000"><p>+1, the patch looks good. </p> <p>I believe I have the same setup as Alan: Mac OS X 10.5.8 and the same java version. It runs fine for me. I have run from Eclipse and from the command line multiple times, and I observed no problem. I have also asked a colleague with the same setup to try to reproduce, and also runs for my colleague. </p> <p>Alan, could you make sure that JAVA_HOME is set to the correct path before you run ant from the command line? If the variable is not set, then ant might not pick the correct java version to run, even if it is marked in the java preferences utility.</p> <p>We should keep investigating this problem, but given that it runs in two computers with similar configurations, I recommend we remove the blocker flag for this issue.</p></comment>
<comment id="12864009" author="maguro" created="Tue, 4 May 2010 21:23:56 +0000"><p>Are you saying that the AsyncHammerTest also fails on your machines w/ out the patch? I ask this because <tt>trunk</tt>, with no patches, builds and tests fine on all my other Macs except the one at work.</p> <p>My JAVA_HOME is properly set.</p></comment>
<comment id="12864010" author="fpj" created="Tue, 4 May 2010 21:25:11 +0000"><p>Removing the blocker flag and making it major for 3.4.0.</p></comment>
<comment id="12864014" author="phunt" created="Tue, 4 May 2010 21:30:57 +0000"><p>I think Flavio is saying it works for him.</p> <p>Alan, any idea what's different btw the versions that are running fine, and the one where it fails? Java VM version? CPU core count, networking setup, is there something that stands out?</p></comment>
<comment id="12864024" author="maguro" created="Tue, 4 May 2010 21:42:56 +0000"><p>I understand that it works for him. Just wondering if he needs the patch to get it to work.</p> <p>Fine:</p> <p>MacBook Pro - Intel Core 2 Duo 2.53 GHz, 4 GB<br/> Mac OS X 10.5.8 - all updates applied<br/> Java(TM) SE Runtime Environment (build 1.6.0_17-b04-248-9M3125)<br/> Java HotSpot(TM) 64-Bit Server VM (build 14.3-b01-101, mixed mode)<br/> Using WiFi through Cisco VPN</p> <p>Not so good:</p> <p>MacPro - 2 Quad-Core Intel Xeon 2.26GHz, 24GB<br/> Mac OS X 10.5.8 - all updates applied<br/> Java(TM) SE Runtime Environment (build 1.6.0_17-b04-248-9M3125)<br/> Java HotSpot(TM) 64-Bit Server VM (build 14.3-b01-101, mixed mode)<br/> One Ethernet port used</p> <p>If you're interested I might be able to clean this machine and put it in a DMZ for you all to tinker with.</p></comment>
<comment id="12864040" author="fpj" created="Tue, 4 May 2010 22:07:32 +0000"><p>Hi Alan, It does not block for me, with or without the patch. My configuration is pretty much like your "fine" one. </p></comment>
<comment id="13066479" author="mahadev" created="Sat, 16 Jul 2011 17:49:55 +0000"><p>Its been too long for this jira. I cant reproduce it now.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12463709">ZOOKEEPER-764</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12442233" name="TEST-org.apache.zookeeper.test.AsyncHammerTest.txt" size="2341976" author="maguro" created="Mon, 19 Apr 2010 21:35:20 +0000"/>
<attachment id="12443246" name="ZOOKEEPER-690.patch" size="11609" author="henryr" created="Thu, 29 Apr 2010 23:39:19 +0000"/>
<attachment id="12443237" name="ZOOKEEPER-690.patch" size="9762" author="henryr" created="Thu, 29 Apr 2010 21:53:32 +0000"/>
<attachment id="12443218" name="ZOOKEEPER-690.patch" size="9764" author="henryr" created="Thu, 29 Apr 2010 19:03:10 +0000"/>
<attachment id="12442333" name="jstack-201004201053.txt" size="46824" author="maguro" created="Tue, 20 Apr 2010 17:55:03 +0000"/>
<attachment id="12443234" name="jstack-201004291409.txt" size="47304" author="maguro" created="Thu, 29 Apr 2010 21:11:44 +0000"/>
<attachment id="12443240" name="jstack-201004291527.txt" size="11925" author="maguro" created="Thu, 29 Apr 2010 22:30:01 +0000"/>
<attachment id="12443595" name="jstack-AsyncHammerTest-201004301209.txt" size="10241" author="maguro" created="Tue, 4 May 2010 17:03:52 +0000"/>
<attachment id="12442334" name="nohup-201004201053.txt" size="4556006" author="maguro" created="Tue, 20 Apr 2010 17:55:03 +0000"/>
<attachment id="12443233" name="nohup-201004291409.txt" size="4923019" author="maguro" created="Thu, 29 Apr 2010 21:11:42 +0000"/>
<attachment id="12443241" name="nohup-201004291527.txt" size="2150150" author="maguro" created="Thu, 29 Apr 2010 22:30:01 +0000"/>
<attachment id="12443594" name="nohup-AsyncHammerTest-201004301209.txt" size="9456253" author="maguro" created="Tue, 4 May 2010 17:03:50 +0000"/>
<attachment id="12443596" name="nohup-QuorumPeerMainTest-201004301209.txt" size="182864" author="maguro" created="Tue, 4 May 2010 17:03:53 +0000"/>
<attachment id="12442235" name="zoo.log" size="50506" author="maguro" created="Mon, 19 Apr 2010 21:46:48 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>67900</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05zxr:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32921</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-965] Need a multi-update command to allow multiple znodes to be updated safely</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-965</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>The basic idea is to have a single method called "multi" that will accept a list of create, delete, update or check objects each of which has a desired version or file state in the case of create. If all of the version and existence constraints can be satisfied, then all updates will be done atomically.</p> <p>Two API styles have been suggested. One has a list as above and the other style has a "Transaction" that allows builder-like methods to build a set of updates and a commit method to finalize the transaction. This can trivially be reduced to the first kind of API so the list based API style should be considered the primitive and the builder style should be implemented as syntactic sugar.</p> <p>The total size of all the data in all updates and creates in a single transaction should be limited to 1MB.</p> <p>Implementation-wise this capability can be done using standard ZK internals. The changes include:</p> <ul class="alternate" type="square"> <li>update to ZK clients to all the new call</li> </ul> <ul class="alternate" type="square"> <li>additional wire level request</li> </ul> <ul class="alternate" type="square"> <li>on the server, in the code that converts transactions to idempotent form, the code should be slightly extended to convert a list of operations to idempotent form.</li> </ul> <ul class="alternate" type="square"> <li>on the client, a down-rev server that rejects the multi-update should be detected gracefully and an informative exception should be thrown.</li> </ul> <p>To facilitate shared development, I have established a github repository at <a href="https://github.com/tdunning/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/tdunning/zookeeper</a> and am happy to extend committer status to anyone who agrees to donate their code back to Apache. The final patch will be attached to this bug as normal.</p></description>
<environment/>
<key id="12494148">ZOOKEEPER-965</key>
<summary>Need a multi-update command to allow multiple znodes to be updated safely</summary>
<type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21141avatarType=issuetype">New Feature</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="tdunning">Ted Dunning</assignee>
<reporter username="tdunning">Ted Dunning</reporter>
<labels> </labels>
<created>Tue, 28 Dec 2010 00:18:46 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:26 +0000</updated>
<resolved>Thu, 30 Jun 2011 22:54:23 +0000</resolved>
<version>3.3.3</version>
<fixVersion>3.4.0</fixVersion>
<due/>
<votes>0</votes>
<watches>14</watches>
<comments>
<comment id="12975405" author="tdunning" created="Tue, 28 Dec 2010 02:38:43 +0000"> <p>I have committed a minimal set of client side changes to the github repo mentioned in the description.</p> <p>This includes:</p> <p>jute changes to encode a few new things</p> <p>a Record class that encodes multiple transactions</p> <p>an Op class and sub-classes that encode the necessary operations</p> <p>a new multi() method on Zookeeper that send the request to the server (which will still fail to respond).</p> <p>Reviews, comments and updates are welcome!</p></comment>
<comment id="12975411" author="thkoch" created="Tue, 28 Dec 2010 04:18:43 +0000"><p>I think it would help if we'd have the API proposed in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-911" title="move operations from methods to individual classes" class="issue-link" data-issue-key="ZOOKEEPER-911">ZOOKEEPER-911</a>. So you would have operation objects for the user which could be added to a multi-transaction</p></comment>
<comment id="12975451" author="thkoch" created="Tue, 28 Dec 2010 08:57:16 +0000"><p>Continuing a short conversation from <a href="https://github.com/tdunning/zookeeper/commit/1b1cbff2e38bc04b53174381b485304c87d5f743" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/tdunning/zookeeper/commit/1b1cbff2e38bc04b53174381b485304c87d5f743</a> here.</p> <p>We could introduce operation classes for all operations, including getChildren, getData and exists with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-911" title="move operations from methods to individual classes" class="issue-link" data-issue-key="ZOOKEEPER-911">ZOOKEEPER-911</a> and use these operation classes instead of the Op classes introduced by Ted. The MultiTransaction class would of course only accept write operations (Create, setData, Delete). This could be enforced either manually or with an interface "WriteOperation".</p> <p>Having an interface "Operation" doesn't mean you couldn't have an abstract "BaseOperation" which could implement interface and be a base for the other operations to extend. I also don't like to have interfaces for everything. But making Operation an interface could make testing a lot easier.</p> <p>Regarding the naming Op vs. Operation: We have more then 640k of memory nowadays and screens show more then 80 characters in a line. So we gained the possibility to write readable code. If you talk about it, would you say "Op" or "Operation"? So to avoid confusion it makes sense to write the class the same as you'd call it when speaking. Even with modern IDEs there may be cases when one wants to search for names. "Op" could also be in "Option", "Operator", "Open", .</p> <p>If you don't mind, I really loved reading "Clean Code" from Robert C. Martin. He also explains naming guidelines and it's a nice book to read.</p></comment>
<comment id="12975527" author="tdunning" created="Tue, 28 Dec 2010 15:27:39 +0000"> <p>I don't like the use of an interface for Op since it really does share function. I can't see how testing would be facilitated by having an interface there.</p> <p>Also, Op is of long standard as an abbreviation for Operation (it appears in other Zookeeper code, in multiple dictionaries in the form of op code and in the IBM 650 manual from 1954).</p> <p>Regarding 911, I would really like to finish this issue off with a limited mission before taking on other JIRA's in the same patch.</p></comment>
<comment id="12975580" author="tdunning" created="Tue, 28 Dec 2010 18:43:50 +0000"><p>Added unit tests in the github version.</p> <p>Thanks to Thomas who was kind enough to provide several comments on the code.</p></comment>
<comment id="12975601" author="thkoch" created="Tue, 28 Dec 2010 19:22:54 +0000"><p>Please Ted, don't move that fast. I've three outstanding issues that needs review or comments from commiters and that could influence your patch. Your current patch directly conflicts with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-911" title="move operations from methods to individual classes" class="issue-link" data-issue-key="ZOOKEEPER-911">ZOOKEEPER-911</a> and how I'd propose to implement it. I'm waiting on a comment for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-849" title="Provide Path class" class="issue-link" data-issue-key="ZOOKEEPER-849">ZOOKEEPER-849</a> (on the mailing list) to continue with that. And once <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-837" title="cyclic dependency ClientCnxn, ZooKeeper" class="issue-link" data-issue-key="ZOOKEEPER-837"><del>ZOOKEEPER-837</del></a> would be committed I could continue with <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-911" title="move operations from methods to individual classes" class="issue-link" data-issue-key="ZOOKEEPER-911">ZOOKEEPER-911</a>.</p> <p>I'm also working hard to clean up the mess that ZooKeeper currently still is and would ask you not to make it worse with your patch.</p> <p>Things are moving extremely slow here at ZooKeeper because commiters don't have time for reviews or comments. I'm working since may (more then six months now) to slowly move the ZooKeeper API in a usable state.</p> <p>I gave a presentation about the internals of ZooKeeper in my team before christmas. People were pretty much scared at the poor code quality of such a central peace of some NoSQL systems.</p> <p>Could you also be so kind please and provide a use case for your request? The issue of transactions has been raised multiple times on the mailing list and one standard answer was to rather use one ZNode that'd contain all necessary informations. Maybe there's an easier solution to what you intend to do?</p> <p>Hope I don't sound too rude. I feel a little frustrated. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="12975613" author="tdunning" created="Tue, 28 Dec 2010 19:58:13 +0000"><blockquote> <p>Please Ted, don't move that fast.</p></blockquote> <p>My time is only available in tiny drips so I have to use them when I get them. You must be the first <br/> person to have accused me of moving too fast on open source projects.</p> <p>I think that you will have a slow time of it changing the ZK API except with an add-on library because of the all the backwards compatibility issues that will raise. I doubt seriously that any fundamental changes will be acceptable to the community.</p> <p>As such, I am certainly not going to hold off on this change waiting for an API change that may not happen.</p> <p>As far as use cases are concerned, there have been several recently on the mailing list. They have been compelling enough that I have changed my mind about the value of multi-update and would like to contribute to making it happen. One excellent use-case was the graph idea where nodes have connections to and from other nodes. It is unreasonable to keep a relatively large graph in a single node, but it is also important to have coherent updates to the graph. Multi-update makes this trivial.</p></comment>
<comment id="12975702" author="henryr" created="Wed, 29 Dec 2010 03:00:42 +0000"><p>Hi Ted - </p> <p>I took a quick look at the github branch. Looks really good, thanks.</p> <p>I've got a few comments on the code itself, but I'll save those until you post a patch. My main issue is the following: the 'multi' API call is expressed in terms of an iterable over a polymorphic type, both of which are Java features that aren't extant in C. To aid future language bindings authors and to make the implementation really easy to verify, I'd like to see an API signature that's very easily translated between languages. The iterable isn't too concerning (almost every language has <b>some</b> notion of lists) but the polymorphic op object should map onto some simpler struct type. </p> <p>I know that the serialisation is independent of the signature, so we could call it whatever we liked in any language, but I'd like to keep the core ZK API consistent across all bindings where possible and use wrappers in, for example, Python to provide more idiomatic interfaces. The serialisation may also change when we finally vote jute off the island, so we can't use that as the API spec. Indeed, we'll probably use Avro, where we have to write APIs in language-agnostic IDLs.</p> <p>So, to cut a long story short: any chance you can make the API a bit more language neutral? Then the op stuff can be a (very) thin wrapper. Shouldn't be a large change at all. </p> <p>You might consider chopping this up into a few JIRAs (apologies if you have and I've missed them) - core API, Java wrapper, finishing touches (like payload size limits).</p> <p>Excited to see this! Let me know how I can help. </p> <p>Henry</p> </comment>
<comment id="12975704" author="henryr" created="Wed, 29 Dec 2010 03:11:47 +0000"><p>Hi Thomas - </p> <p>I really appreciate all your hard work cleaning up ZooKeeper's internals. I understand your frustration about the speed at which some tickets are moving. You've correctly identified that the committers have limited time, and particularly so over the holiday season. Hopefully we can pick up the pace now!</p> <p>However, I'm uncomfortable with the idea that ongoing refactoring work could block an often asked-for feature like this - particularly a JIRA (911) where there isn't yet consensus on the approach, or indeed an available patch. Open source projects see fluctuating participation so we can't afford generally for issues to come with 'locks' on the code they touch, otherwise we run the risk of starvation <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>So if this issue gets a patch with consensus before <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-911" title="move operations from methods to individual classes" class="issue-link" data-issue-key="ZOOKEEPER-911">ZOOKEEPER-911</a>, I'll be very happy to commit it and then to work with you on the extra changes in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-911" title="move operations from methods to individual classes" class="issue-link" data-issue-key="ZOOKEEPER-911">ZOOKEEPER-911</a> that this patch would cause. </p> <p>Henry</p></comment>
<comment id="12975705" author="henryr" created="Wed, 29 Dec 2010 03:12:44 +0000"><p>Assigning to Ted.</p></comment>
<comment id="12975732" author="tdunning" created="Wed, 29 Dec 2010 07:03:20 +0000"><p>Henry, </p> <p>I can definitely set up some sub-tasks.</p> <p>Relative to the iterable and polymorphism, I don't much see the problem. In particular, I think I set it up so that the API visible components are independent of the lower levels.</p> <p>In C, for instance, using a list/array/whatever of structs with a type field and a super set of all possible fields would work out just about as easily as the Java version. The jute objects don't overlap and both Java and C api's would have to be creating and serializing the jute objects. When jute gets the boot, I would presume that we would have something similar in terms of a separation between the API level structures and the serialization level structures. In particular, I simply re-used most of the request structures in the multi request and only added the single check structure (and the multi for the overall header).</p> <p>So I really don't see the problem on the C side of things. To be concrete, I see that the C side could have something kind of like:</p> <p> result multi(op[] ops) // assumes last op is null</p> <p>or</p> <p> result multi(op[] ops, int opCount) </p> <p>where </p> {verbatim}<br/> typedef struct {<br/> int type; // always present<br/> char *path; // always present<br/> uint8 * data; // only with create, setData<br/> ACL* acl; // only for create<br/> int version; // only for delete, setData<br/> }{verbatim} <p>Doesn't this match up well enough with the Java side of the house? I would be loathe to lose the idiomatic Java idiom.</p> </comment>
<comment id="12975836" author="thkoch" created="Wed, 29 Dec 2010 17:11:19 +0000"><p>Hi,</p> <p>I uploaded a patch for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-911" title="move operations from methods to individual classes" class="issue-link" data-issue-key="ZOOKEEPER-911">ZOOKEEPER-911</a>. Please have a look how you could use the provided Operation classes in ZK911.</p></comment>
<comment id="12975918" author="henryr" created="Wed, 29 Dec 2010 21:32:54 +0000"><p>Hi Ted - </p> <p>You don't have to lose the idiomatic Java - I like the API. I'm just distinguishing between the API provided by the Java client and the API that the Java client calls in ZooKeeper, which should not be idiomatic. Currently that API is defined by the serialisation (and this is true for most API calls, not just multi(...)) rather than some abstract API signature which is realisable in every implementing language - I want to make sure that the serialisation is not the specification. Again, an Avro or Thrift or whatever IDL API would make these issues go away. </p> <p>However, the idiomatic changes here are so slight that having thought about it overnight I'm not too concerned about separating it out. It would be different if, e.g. the API was heavily object-oriented (for example a builder interface); then I would mandate that such an API should wrap a simple procedural API. It's pretty clear here what the multi(...) API means in all languages we're interested in. </p> <p>Thanks for listening <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>Henry</p></comment>
<comment id="12975922" author="tdunning" created="Wed, 29 Dec 2010 21:46:54 +0000"><blockquote> <p>However, the idiomatic changes here are so slight that having thought about it overnight I'm not too concerned about separating it out. It would be different if, e.g. the API was heavily object-oriented (for example a builder interface); then I would mandate that such an API should wrap a simple procedural API. It's pretty clear here what the multi(...) API means in all languages we're interested in.</p></blockquote> <p>For what it is worth, I plan to throw in a builder API as well. It will, however, be naught more than syntactic cover over the API you see already.</p></comment>
<comment id="12976612" author="vishalmlst" created="Mon, 3 Jan 2011 05:09:34 +0000"><p>Hi Ted,</p> <p>Will this induce any change to watches (especially when one transactions is modifying same znode multiple times)?</p> <p>Thanks.</p></comment>
<comment id="12976629" author="tdunning" created="Mon, 3 Jan 2011 06:37:48 +0000"><p>I would anticipate no changes to the way that watches work. All that is happening here is that a group of transactions will all be applied or will all fail. These operations could have been done separately with the same effect insofar as watches are concerned. </p> <p>Remember that you may only get a single watch notification for several updates even without the multi command. </p> <p>Sent from my iPhone</p> </comment>
<comment id="13004296" author="jaredc" created="Wed, 9 Mar 2011 00:03:57 +0000"><p>Hey Ted,</p> <p>Has there been any progress on this issue? We would really love to see this happen, so just pinging to see what's left....</p></comment>
<comment id="13004311" author="tdunning" created="Wed, 9 Mar 2011 00:42:23 +0000"><p>There has only been limited progress.</p> <p>I have the client and server command parsing, wire formats and some message passing defined.</p> <p>I have talked to Ben and Mahadev about where the final commit needs to be placed, but not done any code at all.</p> <p>My own extra-curricular schedule is completely under water from day job activities. I am happy to help explain what has happened so far, but I am unable to drive further right now.</p> <p>I can update my git branch on request to make it easier to see what is going on relative to trunk.</p></comment>
<comment id="13019548" author="marshall" created="Wed, 13 Apr 2011 21:02:55 +0000"><p>Ted,</p> <p>I work with Jared and this is becoming an increasingly important issue for us. I have some bandwidth to work on this issue and would like to get started right away. I will of course be donating all my code back to Apache. </p> <p>When you have time, could you update your git branch?</p> <p>Many thanks!</p></comment>
<comment id="13019568" author="tdunning" created="Wed, 13 Apr 2011 21:39:52 +0000"><p>I would love to.</p> <p>I would also love to schedule a phone (skype) call among all interested parties to make sure that things can go forward as quickly as possible.</p> <p>Send email on the list so we can set up a good time. I will be happy to coordinate the call and summarize back to the mailing list.</p></comment>
<comment id="13019571" author="tdunning" created="Wed, 13 Apr 2011 21:42:06 +0000"><p>On Wed, Apr 13, 2011 at 2:04 PM, Marshall McMullen (JIRA)</p> </comment>
<comment id="13019577" author="tdunning" created="Wed, 13 Apr 2011 22:08:38 +0000"><p>OK. I have rebased to follow trunk and pushed the changes to github.</p> <p>See <a href="https://github.com/tdunning/zookeeper/tree/zookeeper-966" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/tdunning/zookeeper/tree/zookeeper-966</a></p></comment>
<comment id="13019677" author="marshall" created="Thu, 14 Apr 2011 03:18:47 +0000"><p>Ted, I totally agree, let's set up a skype call for everyone to discuss this and get it moving forward. I'm available anytime during the day to talk, or I can make myself available in the evening/night if that's easier.</p></comment>
<comment id="13019909" author="marshall" created="Thu, 14 Apr 2011 16:57:14 +0000"><p>By the way, I'm in Colorado (time zone is Mountain) in case that affects when you'd like to schedule the call. I'm happy to do it whenever it's convenient for you though.</p></comment>
<comment id="13019920" author="tdunning" created="Thu, 14 Apr 2011 17:16:38 +0000"><p>I sent out a call for the discussion on the zookeeper-dev mailing list. </p> <p>The tentative call time is Friday 4/14 at 4PM PDT.</p> <p>Please respond to me via direct email at tdunning@apache.org so I can handle the logistics of the call.</p></comment>
<comment id="13019926" author="marshall" created="Thu, 14 Apr 2011 17:26:16 +0000"><p>Ted, I've sent you an email so we can coordinate.</p> <p>Date/time works fine for me.</p> <p>Thanks.</p></comment>
<comment id="13022833" author="marshall" created="Thu, 21 Apr 2011 17:31:43 +0000"><p>I've been having email discussions with various folks that have been super helpful in getting this implemented. I'm going to try to summaries some of the key points here for posterity and other interested parties.</p> <p>Ted's initial version of this adds a new MultiTransactionRecord with an OpCode of 'multi'. This contains a list of all the ops that need to get committed. The design is such that all of the ops must succeed in order for the multi op to succeed. If any one of the ops fails, then the entire multi op must fail. </p> <p>The basic approach I've taken to enhance Ted's version is to look at all the processors and enhance them as needed in order to support the new multi op. Here's the flow of the processors (as documented in LeaderZooKeeperServer.java):</p> <p> processors: PrepRequestProcessor -gt; ProposalRequestProcessor -gt;</p> <ul> <li>CommitProcessor -gt; Leader.ToBeAppliedRequestProcessor -gt;</li> <li>FinalRequestProcessor</li> </ul> <p>The purpose of PrepRequestProcessor (pRequest) is essentially to validate the incoming request and ensure (for example) the path we want to create doesn't already exist, or the path we want to delete does exist. So I've enhanced PrepRequestProcessor and added a case statement for 'multi' that essentially iterates over all the ops contained in the multi op and calls pRequest on each. If any of them fails, then it fails. Otherwise, a new MultiTxn will be created. This is *<b>one</b>* transaction that contains all the ops in the multi op. </p></comment>
<comment id="13022834" author="marshall" created="Thu, 21 Apr 2011 17:33:24 +0000"><p>Another key design point we discussed in email was with regard to the order of the ops inside a multi op and the final state that should result. We discussed the notion that the order of the ops inside a multi op must be significant since there is nothing to be gained by having order be non-deterministic. Supposing we have a multi that says:</p> <p> update "foo" to 1<br/> update "foo" to 2</p> <p>The end result should be 2.</p></comment>
<comment id="13022835" author="fournc" created="Thu, 21 Apr 2011 17:34:06 +0000"><p>I am out of the office until tuesday april 26. For ServiceBase or GSDiscovery issues please contact gs-servicebase-dev. For Permit questions contact gs-permit-dev.</p></comment>
<comment id="13022836" author="marshall" created="Thu, 21 Apr 2011 17:34:41 +0000"><p>I've finished the necessary work inside PrepRequestProcessor.java to deal with multi-ops. I'm going to next look at SyncRequestProcessor and then FinalRequestProcessor.</p></comment>
<comment id="13022837" author="marshall" created="Thu, 21 Apr 2011 17:38:33 +0000"><p>I've realized there's a hole in my current implementation. I need to create a MultiTxn.java to exist alongside CreateTxn.java, DeleteTxn.java, etc.</p> <p>I wasn't sure how this gets generated, but Mahadev pointed me in the right direction. He indicated I should look at src/zookeeper.jute to create the necessary auto generated file.</p></comment>
<comment id="13022855" author="marshall" created="Thu, 21 Apr 2011 18:06:41 +0000"><p>So I've added a new 'class' entry to src/zookeeper.jute for a MultiTxn. But I can't seem to get it to build and generate the new file. I'm still not sure what I want in this MutliTxn, but for now I'd like to get it to build and generate the required java file so I can start using it. Is there something special I need to do other than just running 'ant compile' to generate the files?</p></comment>
<comment id="13022882" author="marshall" created="Thu, 21 Apr 2011 19:33:24 +0000"><p>Never mind, figured it out == "ant compile_jute"</p></comment>
<comment id="13023462" author="marshall" created="Fri, 22 Apr 2011 23:43:43 +0000"><p>Status Update::</p> <p>I've made all the changes necessary to PrepRequestProcessor, SyncRequestProcessor, FinalRequestProcessor, DataTree, as well as many, many other classes. I've now gotten all the unit tests that Ted originally wrote to pass. I then spent all day today writing a ton of new unit tests to test strange corner cases, conflicts, and other more complex issues. These identified a few bugs in my implementation which I've since fixed.</p> <p>The two remaining tasks I have on my plate that I intend to finish this weekend:<br/> (1) Finish up the remaining client-side code<br/> (2) Clean up all the code I've added, document things, etc.</p> <p>This weekend I'll commit all my changes to Ted's multi branch.</p> <p>Thanks everyone for your help!!</p></comment>
<comment id="13023468" author="fournc" created="Sat, 23 Apr 2011 00:06:19 +0000"><p>Awesome Marshall. Please post a patch here when you feel good about it. The sooner people can start reviewing it, the faster it'll get approval to go into trunk.</p></comment>
<comment id="13023481" author="tdunning" created="Sat, 23 Apr 2011 01:32:46 +0000"><blockquote> <p>yowza Marshall!</p></blockquote> <p>You are code monster. This is really exciting.</p> <p>Commit at will. Don't worry about half baked stuff. Getting eyes on semicolons sooner is good.</p> </comment>
<comment id="13025157" author="marshall" created="Tue, 26 Apr 2011 10:05:42 +0000"><p>Thanks everyone for all the help and the kind words. Hopefully when I get this all committed I've done most of it correctly <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>.</p> <p>I'm going to go ahead and commit my pending changes to Ted's private git branch. It's not perfect as there are a few things I wanted to work out better but it wasn't working out as well as I'd have liked. Specifically:</p> <p>1. No client work is done. I'm not sure where to start on this, so if someone wants to point me the right direction I'll tackle that next.</p> <p>2. PrepRequestProcessor.java:432: I don't like how I had to serialize the individual Txns into the MultiTxn only to deserialize it in the next request processor in DataTree. I wanted to just have MultiTxn contain a list of Txns. However, the jute auto code generation stuff got in my way. I couldn't figure out how to make the MultiTxn contain a list of Txns so I made it a buffer that I serialize into/out of. It works, but I think this could be better.</p> <p>3. Several places where we do a switch on types of ops inside multi op, and in default it throws an IOException. That <br/> doesn't seem very appropriate. Maybe instead a KeeperException.APIERROR or perhaps we need a (new) specific exception?</p> <p>4. There is currently no way to tell which op in a multi op failed. It's implemented so that it throws the KeeperException corresponding to the first op in the multi op that caused the multi op to pass. However, it might be more useful if there was a way to know exactly which op failed. I tried several approaches to implement this but couldn't get it working correctly. Maybe someone can offer some advice on this.</p> <p>I'll commit my pending changes momentarily.</p></comment>
<comment id="13025163" author="marshall" created="Tue, 26 Apr 2011 10:25:16 +0000"><p>Alright, got my changes pushed to Ted's multi branch. I'd appreciate feedback/thoughts/suggestions/ideas from anyone who has the time to look these changes over. Thanks so much!</p></comment>
<comment id="13025317" author="marshall" created="Tue, 26 Apr 2011 16:47:31 +0000"><p>Finally sorted out how to properly run one unit test (e.g. MultiTransactionTest.java) from the command line and show its output:</p> <p>ant compile test -Dtest.category=MultiTransaction -Dtest.output=yes</p></comment>
<comment id="13025406" author="marshall" created="Tue, 26 Apr 2011 20:09:00 +0000"><p>Regarding my comments above, I've made great progress on #4. I am now able to collect out the result from each op in a multi op. If there's an exception on that op, it will get caught and stored into the results array. Ultimately I still throw an exception if any of the ops fail (just like before) but the change here is that we'll be able to determine which op failed and why.</p> <p>After I flush out more of these details I'll get this committed. </p></comment>
<comment id="13025424" author="tdunning" created="Tue, 26 Apr 2011 20:45:21 +0000"><p>This is awesome Marshall!</p></comment>
<comment id="13025439" author="marshall" created="Tue, 26 Apr 2011 21:21:20 +0000"><p>Thanks Ted!! I'm super excited about this work as well. I'm working on flushing out some more details with failure detection and adding some unit tests around that. I'll commit them later today when they are finished....</p> <p>Next I want to tackle the client-side changes (Java and C). Any pointers on what file(s) to look into for where that's all handled would be appreciated...</p> <p>Thanks!!</p></comment>
<comment id="13025445" author="tdunning" created="Tue, 26 Apr 2011 21:26:47 +0000"><p>Marshall,</p> <p>Go ahead and micro-commit. Nobody is expecting the github branch to even pass tests. </p> <p>The client side (in Java) should be nearly done since that is where I started. We should be able to start writing<br/> some real unit tests that do round trip tests as soon as you are happy with the server stuff.</p></comment>
<comment id="13025624" author="marshall" created="Wed, 27 Apr 2011 05:49:51 +0000"><p>I've committed my work from the last couple of days that implements a mechanism to detect which op in the multi op failed. From my commit message:</p> <p>Enhanced multi-op so caller can tell which op failed.</p> <p>This turned out to be a lot harder than it looked. The jist of<br/> the problem was I was throwing an exception early in<br/> PrepRequestProcessor on the first error in the multi op. That was<br/> the right thing to do, but it didn't allow returning the results<br/> back to the caller as the exception caused us to discard the current<br/> multi-op and create a new ErrorTxn that traversed all the other<br/> request handlers.</p> <p>Instead, this new implementation retains the multi-op all the way<br/> through all the request handlers (though it becomes a MultiTxn<br/> and ultimately a MultiResponse). It now allows returning back<br/> to the caller the result for each individual Op.</p> <p>In ZooKeeper's multi function, it still ultimately behaves the<br/> same as before #8211; namely the first error in the results array<br/> gets detected as the fatal error that caused the multi op to fail<br/> and this is what we throw as our exception.</p> <p>The major difference is that we first (optionally) populate a given<br/> result array <b>before</b> we throw the exception.</p> <p>There are some rough details here still and some things I'd like to<br/> fix. But it works really well and all the major bugs are flushed<br/> out so I'm committing....</p></comment>
<comment id="13025845" author="marshall" created="Wed, 27 Apr 2011 15:33:10 +0000"><p>Made a couple small bug fixes this morning: </p> <p>(1) Fix compile error introduced by new arg in multi_internal. <br/> (2) Fix bug in error reporting on failed multi-op. </p> <p>Now I'm looking at the C client. Hope to get this done today....</p></comment>
<comment id="13025865" author="mahadev" created="Wed, 27 Apr 2011 16:05:09 +0000"><p>nice work marshall. Given that 3.4 is getting delayed, if enough testing is done we can put it in 3.4.0 release as well!</p></comment>
<comment id="13025873" author="marshall" created="Wed, 27 Apr 2011 16:17:35 +0000"><p>Mahadev, that's wonderful news!! We would really like to get this into the 3.4.0 release as well. Do you know what the timeline is for the release of 3.4?</p></comment>
<comment id="13027569" author="marshall" created="Mon, 2 May 2011 07:29:28 +0000"><p>I've committed an initial pass at the necessary work in the C client. I did some refactoring to avoid some massive code duplication as well. Notes from my checkin comments:</p> <p> This adds new zoo_multi and zoo_amulti interfaces to the C client to<br/> atomically commit (either synchronously or asynchronously) a set of<br/> operations. The server side guarantees transactional consistency<br/> in that <b>all</b> the ops either fail or succeed.</p> <p> Limitations of this implementation:</p> <ul class="alternate" type="square"> <li>asynchronous interface (zoo_amulti) doesn't work yet.</li> </ul> <ul class="alternate" type="square"> <li>can't get back the index of the failing op from zoo_multi though<br/> zoo_amulti is designed to support this. I have a plan for how<br/> to implement this in zoo_multi too.</li> </ul> <ul class="alternate" type="square"> <li>Only limited testing done on C client. The one test I did write<br/> only works in multithread mode. Looks to be a limitation of the<br/> test case I modelled mine after.</li> </ul> <p> Cleanup/refactoring needed:</p> <ul class="alternate" type="square"> <li>Deal with deeply nested errors in zoo_amulti better (free any<br/> allocated memory, etc).</li> </ul> <ul class="alternate" type="square"> <li>Don't need the existing ErrorResponse (added on java side to<br/> allow determining which op failed). On C side it was so much<br/> easier to just add a field to MultiHeader to indicate if that<br/> op failed or not. That will make the Java side a lot cleaner</li> </ul> </comment>
<comment id="13027729" author="tdunning" created="Mon, 2 May 2011 17:17:24 +0000"><p>Patch against current trunk. Commit messages are reworded versus github version</p></comment>
<comment id="13027733" author="tdunning" created="Mon, 2 May 2011 17:24:22 +0000"><p>This patch should be very close to done for the Java side (thanks to Marshall and Camille for carrying this forward).</p> <p>Marshall is working out some kinks on the C API.</p> <p>Getting some reviews from the core ZK team would be very helpful at this point.</p></comment>
<comment id="13027734" author="marshall" created="Mon, 2 May 2011 17:25:20 +0000"><p>Ted, thanks for creating the patch against trunk.</p> <p>I should note that there are a few (previously mentioned) limitations/bugs with this version. I hope to sort them out over the next day or so. However, for anyone who wants to start reviewing this now is welcome to as the remaining bugs I intend to fix shouldn't modify the basic approach.</p></comment>
<comment id="13027738" author="marshall" created="Mon, 2 May 2011 17:36:17 +0000"><p>Yes, I should clarify and confirm what Ted said. The Java side of this (both the client and server) should be very close to a final working version. The kinks I'm working out are definitely only on the C API side.</p></comment>
<comment id="13028013" author="marshall" created="Tue, 3 May 2011 04:03:12 +0000"><p>If anyone's looking at this already, please disregard the C client entirely. I've refactored it considerably after I got some sleep and took a second look at it. I realize now that I didn't understand the C client well enough when I wrote this first version. Now that I have more context, the solution was a lot simpler...</p> <p>Anyhow, I'll finish this up tonight and commit my changes back to Ted's git branch.</p></comment>
<comment id="13028018" author="mahadev" created="Tue, 3 May 2011 05:04:03 +0000"><p>marshall,<br/> Great progress.<br/> you might want to post a preliminary patch for this on the jira for others to take a look at it.</p></comment>
<comment id="13028051" author="tdunning" created="Tue, 3 May 2011 05:58:36 +0000"><p>Mahadev, </p> <p>There is a patch on this JIRA.</p></comment>
<comment id="13028052" author="tdunning" created="Tue, 3 May 2011 05:59:08 +0000"><p>This patch isn't final yet.</p></comment>
<comment id="13028054" author="hadoopqa" created="Tue, 3 May 2011 06:01:21 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12477971/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12477971/ZOOKEEPER-965.patch</a><br/> against trunk revision 1097865.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 15 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/236//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/236//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13028113" author="marshall" created="Tue, 3 May 2011 09:01:28 +0000"><p>Alright, made significant progress tonight rewriting my prior attempts at the C client. The new version is a lot cleaner, simpler, and safer. I still have a few things to work out, but it's working significantly better now than the prior version.</p> <p>We're moving offices tomorrow (I think, might be Wed..) but I'll try to get my latest changes committed as soon as I can.</p></comment>
<comment id="13028510" author="marshall" created="Tue, 3 May 2011 23:48:33 +0000"><p>I've just committed a rewrite of the C API:<br/> <a href="https://github.com/tdunning/zookeeper/commit/dcd7ea9233314ce96c8913b8b0659a8f7d02e93b" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/tdunning/zookeeper/commit/dcd7ea9233314ce96c8913b8b0659a8f7d02e93b</a>.</p> <p>From my commit message:</p> <p>commit dcd7ea9233314ce96c8913b8b0659a8f7d02e93b<br/> Author: Marshall McMullen lt;marshall@solidfire.comgt;<br/> Date: Tue May 3 17:45:00 2011 -0600</p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a> - Rewrite of the C API for multi op support.</p> <p> This is a rewrite of my earlier C API support for multi op support.<br/> My earlier version didn't work correctly due to a lack of understanding<br/> of the completion mechanism and how it interacted with sync and async<br/> mechanisms. This version correctly works in both sync and async<br/> contexts.</p> <p> I've also gotten rid of the horrid variadic zoo_multi/zoo_amulti interfaces<br/> in favor of a simpler, stricter/safer, and actually more succinct and<br/> easier to use syntax. See test cases in TestClient.cc for examples.</p> <p> I've also added a couple of more tests cases to test the async<br/> interface and to test error code propagation.</p> <p> Removed no-longer-necessary cruft from my last version.</p></comment>
<comment id="13028511" author="marshall" created="Tue, 3 May 2011 23:49:32 +0000"><p>The rewrite of the C API's multi support exposed a bug in the backend multi op implementation that I must fix. I'll hopefully have a fix for that in hand late this evening.</p></comment>
<comment id="13028515" author="tdunning" created="Wed, 4 May 2011 00:05:32 +0000"><p>Updated to trunk and Marshall's changes</p></comment>
<comment id="13028518" author="hadoopqa" created="Wed, 4 May 2011 00:11:17 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478111/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478111/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099267.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 9 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/239//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/239//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13028520" author="tdunning" created="Wed, 4 May 2011 00:19:38 +0000"><p>Hopefully this makes jenkins happier.</p></comment>
<comment id="13028531" author="hadoopqa" created="Wed, 4 May 2011 00:42:46 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478112/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478112/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099267.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 9 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 27 release audit warnings (more than the trunk's current 24 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/240//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/240//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/240//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/240//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/240//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/240//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/240//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/240//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13028553" author="tdunning" created="Wed, 4 May 2011 01:41:20 +0000"><p>Added some copyrights and cleaned up a bit of code.</p></comment>
<comment id="13028560" author="marshall" created="Wed, 4 May 2011 02:03:28 +0000"><p>I'm aware of the current failing tests. They're a result of the bug I referred to above. Specifically, on a failed multi op, a NULL MultiTransaction entry is getting written to disk. A subsequent attempt to read that back in fails. This bug wasn't found in the java unit tests, but it is found by my new C API unit tests. It's easy to reproduce and I have a good idea where the problem is. I'll get it fixed tonight.</p></comment>
<comment id="13028561" author="hadoopqa" created="Wed, 4 May 2011 02:12:54 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478117/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478117/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099267.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 9 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/242//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/242//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/242//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/242//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/242//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/242//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13028579" author="marshall" created="Wed, 4 May 2011 04:09:36 +0000"><p>So maybe someone can help me narrow in on where to find the problem I'm debugging. The C unit tests exposed a problem where it reads in the database snapshot from disk and finds a MultiTxn that is NULL. Here's the stacktrace:</p> <p>2011-05-03 21:07:11,609 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:FileSnap@83#93;</span> - Reading snapshot /tmp/zkdata/version-2/snapshot.3e9<br/> 2011-05-03 21:07:11,728 <span class="error">#91;myid:#93;</span> - ERROR <span class="error">#91;main:ZooKeeperServerMain@63#93;</span> - Unexpected exception, exiting abnormally<br/> java.lang.NullPointerException<br/> at org.apache.zookeeper.server.DataTree.processTxn(DataTree.java:818)<br/> at org.apache.zookeeper.server.persistence.FileTxnSnapLog.processTransaction(FileTxnSnapLog.java:186)<br/> at org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(FileTxnSnapLog.java:145)<br/> at org.apache.zookeeper.server.ZKDatabase.loadDataBase(ZKDatabase.java:223)<br/> at org.apache.zookeeper.server.ZooKeeperServer.loadData(ZooKeeperServer.java:242)<br/> at org.apache.zookeeper.server.ZooKeeperServer.startdata(ZooKeeperServer.java:369)<br/> at org.apache.zookeeper.server.NIOServerCnxnFactory.startup(NIOServerCnxnFactory.java:122)<br/> at org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:112)<br/> at org.apache.zookeeper.server.ZooKeeperServerMain.initializeAndRun(ZooKeeperServerMain.java:86)<br/> at org.apache.zookeeper.server.ZooKeeperServerMain.main(ZooKeeperServerMain.java:52)</p> <p>A hack workaround is DataTree.processTxn, if the MultiTxn is NULL, just skip it. But that only addresses the symptom. I'd like to understand how it's getting into the snapshot that is being written to disk and NOT do so if it's an empty MultiTxn. I just don't know where all that magic happens... Anyone want to offer some guidance?</p></comment>
<comment id="13028580" author="marshall" created="Wed, 4 May 2011 04:16:02 +0000"><p>Additional debugging... Note that as zk server is coming up it's reading in a snapshot:</p> <p>2011-05-03 22:14:16,872 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:Environment@98#93;</span> - Server environment:java.io.tmpdir=/tmp<br/> 2011-05-03 22:14:16,872 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:Environment@98#93;</span> - Server environment:java.compiler=lt;NAgt;<br/> 2011-05-03 22:14:16,872 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:Environment@98#93;</span> - Server environment:os.name=Linux<br/> 2011-05-03 22:14:16,873 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:Environment@98#93;</span> - Server environment:os.arch=amd64<br/> 2011-05-03 22:14:16,873 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:Environment@98#93;</span> - Server environment:os.version=2.6.37-gentoo-r4<br/> 2011-05-03 22:14:16,874 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:Environment@98#93;</span> - Server environment:user.name=marshall<br/> 2011-05-03 22:14:16,874 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:Environment@98#93;</span> - Server environment:user.home=/home/marshall<br/> 2011-05-03 22:14:16,875 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:Environment@98#93;</span> - Server environment:user.dir=/home/marshall/zookeeper-multi/src/c<br/> 2011-05-03 22:14:16,880 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:ZooKeeperServer@713#93;</span> - tickTime set to 3000<br/> 2011-05-03 22:14:16,881 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:ZooKeeperServer@722#93;</span> - minSessionTimeout set to -1<br/> 2011-05-03 22:14:16,881 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:ZooKeeperServer@731#93;</span> - maxSessionTimeout set to -1<br/> 2011-05-03 22:14:16,899 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:NIOServerCnxnFactory@94#93;</span> - binding to port 0.0.0.0/0.0.0.0:22181<br/> 2011-05-03 22:14:16,916 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:FileSnap@83#93;</span> - Reading snapshot /tmp/zkdata/version-2/snapshot.0<br/> 2011-05-03 22:14:16,927 <span class="error">#91;myid:#93;</span> - INFO <span class="error">#91;main:FileTxnSnapLog@186#93;</span> - gt;gt; PROCESSING HDR=85490560384172033,1304482428,3,1304482430503,14 TXN=null</p> <p>This ends up triggering the null pointer exception b/c the TXN (which is of type MultiTxn) is NULL due to a failed multi-op. I'll try to track down better what the error handling is around a multi txn that fails and see why the Txn in the snapshot is null...</p></comment>
<comment id="13028582" author="mahadev" created="Wed, 4 May 2011 04:18:54 +0000"><p>interesting, are you adding the multitxn in the c test? if no, this looks like a case wherein its reading an int written out via the txn log (not sure what) but when reading it back interprets it wrong. Which line is throwing null pointer exception (am assuming your codebase is different than the one on trunk).</p></comment>
<comment id="13028590" author="marshall" created="Wed, 4 May 2011 04:31:45 +0000"><p>The C client is just calling the new zoo_multi API. One of the unit tests does a zoo_multi which purposefully fails (due to duplicate nodes). The error is correctly detected and propagated from server back to client. The <b>NEXT</b> unit tests which causes the server to start up again during it's init phase reads in the database off of the disk (ZKDatabase.loadDatabase) which then ultimately ends up in DataTree.processTxn(DataTree.java:818). That line of code is new code I've added to processTxn that essentially says:</p> <p> ...<br/> case OpCode.multi:<br/> MultiTxn multiTxn = (MultiTxn) txn ; <br/> Listlt;Txngt; txns = multiTxn.getTxns(); // lt;---- THAT CAUSES THE NULL POINTER EXCEPTION B/C 'txn' is null.</p> <p>So this bug only happens after a failed multi op. The normal multi op gets written to disk and loaded correctly. I don't understand all of how this works, but I presume we take a snapshot before we actually apply a transaction so we can roll back if it fails. So I <b>think</b> the snapshot we're taking is putting a null txn into the snapshot ... I'm not sure... Any ideas?</p></comment>
<comment id="13028613" author="marshall" created="Wed, 4 May 2011 05:14:22 +0000"><p>*<b>GAH</b>* I'm stupid. OK, I found the problem... <b>sigh</b>. It had absolutely nothing to do with what I thought at all (typical).</p> <p>The snapshotting code serializes all the transactions to create a snapshot. While the code is written to serialize a MultiTxn properly, there was no case statement in the necessary place in SerializeUtils. So nothing was getting written out to the snapshot properly....</p> <p><b>sigh</b>.</p></comment>
<comment id="13028619" author="marshall" created="Wed, 4 May 2011 05:50:27 +0000"><p>Just checked in a fix. C unit tests now pass (including the three new multi-op tests). <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>.</p></comment>
<comment id="13028622" author="tdunning" created="Wed, 4 May 2011 06:06:29 +0000"><p>Marshall,</p> <p>Do these C unit tests have a corresponding set of Java unit tests?</p></comment>
<comment id="13028625" author="marshall" created="Wed, 4 May 2011 06:11:03 +0000"><p>The Java unit tests are actually much more developed (see MultiTransactionTest.java). Now that I've got all the plumbing in the C API working correctly, I'll work on porting the Java tests over to the C side.... </p></comment>
<comment id="13028626" author="mahadev" created="Wed, 4 May 2011 06:12:01 +0000"><p><img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> nice catch! Good to see tests proving to be useful! </p></comment>
<comment id="13028628" author="tdunning" created="Wed, 4 May 2011 06:12:05 +0000"><p>Latests repairs from Marshall.</p> <p>This should be ready for review, but not commit.</p></comment>
<comment id="13028638" author="hadoopqa" created="Wed, 4 May 2011 06:43:47 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478127/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478127/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 9 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/245//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/245//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/245//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/245//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/245//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/245//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13028745" author="marshall" created="Wed, 4 May 2011 13:31:51 +0000"><p>What is this warning about:</p> <p>-1 findbugs. The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.</p></comment>
<comment id="13028746" author="fournc" created="Wed, 4 May 2011 13:35:56 +0000"><p>Check out the findbugs link:<br/> <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/245//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/245//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a></p> <p>Looks like they're upset by:<br/> org.apache.zookeeper.Op$Create.getData() may expose internal representation by returning Op$Create.data <br/> In class org.apache.zookeeper.Op$Create<br/> In method org.apache.zookeeper.Op$Create.getData()<br/> Field org.apache.zookeeper.Op$Create.data<br/> At Op.java:<span class="error">#91;line 99#93;</span></p> <p>org.apache.zookeeper.Op$SetData.getData() may expose internal representation by returning Op$SetData.data </p></comment>
<comment id="13028763" author="marshall" created="Wed, 4 May 2011 14:40:19 +0000"><p>Thanks Camille! I've got some other things on my plate today, but I'll try to get to this later.</p></comment>
<comment id="13028802" author="tdunning" created="Wed, 4 May 2011 16:15:48 +0000"><p>Camille is correct.</p> <p>I don't think that we can get rid of these warnings because passing the buffer around here is of the essence. The warning<br/> is reasonable except for the fact that the data structure is really just a wrapper around the byte array.</p> <p>Mahadev, Ben,</p> <p>Is it OK to ultimately commit code that has these two warnings?</p></comment>
<comment id="13028807" author="marshall" created="Wed, 4 May 2011 16:18:03 +0000"><p>Actually I have a solution to this (I believe). Basically put a constructor inside Op.java that takes a Record and creates an Op. Then we don't have to expose the internals of the data field to the caller. I should have something in the next hour or so.</p></comment>
<comment id="13028809" author="marshall" created="Wed, 4 May 2011 16:22:49 +0000"><p>Or, the 'add' method just takes a type and a request and does the right thing there. No internals exposed.</p></comment>
<comment id="13028814" author="marshall" created="Wed, 4 May 2011 16:36:09 +0000"><p>OK, Looks like this approach will work to get rid of this error.</p></comment>
<comment id="13028827" author="marshall" created="Wed, 4 May 2011 17:12:15 +0000"><p>Letting this test run completely but I'll check in a fix momentarily.</p></comment>
<comment id="13028843" author="tdunning" created="Wed, 4 May 2011 17:34:15 +0000"><p>There is a much simpler approach.</p> <p>ALL of the getters can be deleted and the toRequestRecord method can be used. THis also kills several casts.</p> <p>Patch coming shortly.</p></comment>
<comment id="13028846" author="marshall" created="Wed, 4 May 2011 17:38:34 +0000"><p>Yeah, I was looking at using that as well. I'll let you tackle this then. Let me know if you need help...</p></comment>
<comment id="13028847" author="tdunning" created="Wed, 4 May 2011 17:39:25 +0000"><p>Pushed fix to github.</p> <p>Note that I also reworded the commit messages to include the JIRA.</p> <p>This will require that you force the pull.</p></comment>
<comment id="13028850" author="tdunning" created="Wed, 4 May 2011 17:41:54 +0000"><p>I made the tweaks. I will post another patch and see what jenkins has to say.</p></comment>
<comment id="13028851" author="tdunning" created="Wed, 4 May 2011 17:42:24 +0000"><p>This should fix the niggling warnings</p></comment>
<comment id="13028871" author="hadoopqa" created="Wed, 4 May 2011 18:13:11 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478186/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478186/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 9 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/248//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/248//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/248//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/248//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/248//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/248//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13028875" author="tdunning" created="Wed, 4 May 2011 18:19:25 +0000"><p>This latest Hudson report appears to be a Jenkins problem rather than a real test failure.</p></comment>
<comment id="13030646" author="marshall" created="Mon, 9 May 2011 08:15:09 +0000"><p>I've just checked in a change to allow setdata ops to work properly. Previously I was using a struct with a union of all the op types. This worked well on C as you can specify which field of union to initialize to using extended struct initializers. This isn't supported on C++ without special compiler flags so I decided that was a bad approach. So I opted for a much simpler solution. Put all the necessary arguments into the main op_t structure and provide some simple macros that provide simple convenience wrappers to only take the arguments appropriate for that op (and in the same order as the non-multi version). This provides very simple caller syntax with no added overhead or memory allocations.</p> <p>I also added an entirely new C API test suite that's a port of the tests from the Java Client side.</p> <p>There is still a limitation on C API setdata op in that it can't pass back Stat structure results to caller. This is causing two of my new tests to fail so that part of the tests are commented out for now.</p> </comment>
<comment id="13030810" author="tdunning" created="Mon, 9 May 2011 17:00:15 +0000"><p>This is a WIP patch. Marshall says that he has a setData issue still that is giving a bit of pause.</p> <p>This is still a very good reference for review.</p></comment>
<comment id="13030821" author="hadoopqa" created="Mon, 9 May 2011 17:23:34 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478618/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478618/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 15 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/252//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/252//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/252//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/252//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/252//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/252//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13031010" author="marshall" created="Tue, 10 May 2011 04:42:22 +0000"><p>I've just committed a change to fix the bugs with the C API and a setdata op inside a multi op. It was mostly due to bugs in the test code, but it <b>did</b> identify a real bug inside zookeeper.c so I'm glad I finally tracked it down.</p> <p>Everything should be pretty stable and workable now. Comments regarding the current state:</p> <p>(1) There are a few "FIXME" comments in the code I've checked in that I'd like input from anyone who reviews<br/> (2) C API unit tests don't work in single-threaded mode. I believe this is due to limitations in the unit test I copied as starting point for my unit test. Would love any input on this if anyone can take a look at what I'm doing wrong there.<br/> (3) The Java API supports a "CHECK_OP" inside the multi-op but the C API does not. I will try to implement that soon.</p></comment>
<comment id="13031021" author="tdunning" created="Tue, 10 May 2011 05:09:53 +0000"><p>Here is Marshall's code in the form of an updated patch against trunk</p></comment>
<comment id="13031022" author="hadoopqa" created="Tue, 10 May 2011 05:11:20 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478667/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478667/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 15 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/253//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/253//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13031023" author="tdunning" created="Tue, 10 May 2011 05:16:14 +0000"><p>Second try getting a usable diff.</p></comment>
<comment id="13031029" author="hadoopqa" created="Tue, 10 May 2011 05:43:58 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478668/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478668/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 15 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/254//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/254//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/254//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/254//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/254//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/254//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13031055" author="marshall" created="Tue, 10 May 2011 06:48:12 +0000"><p>In regards to my comment above: "(3) The Java API supports a "CHECK_OP" inside the multi-op but the C API does not. I will try to implement that soon." I've just checked in a fix for this. And actually, the Java server and client side for CHECK_OP (CheckVersionRequest) weren't fully implemented either. I flushed out all the details and got it working correctly on both sides.</p> <p>The C API allows passing in an optional pointer for the Stat structure to get back the stat of the node in question. Or just pass in NULL if you only care about doing the version check itself. </p></comment>
<comment id="13031056" author="marshall" created="Tue, 10 May 2011 06:50:05 +0000"><p>Pending comments and feedback, I think after Ted builds a new patch against my latest commit (<a href="https://github.com/tdunning/zookeeper/commit/9da6439682c1bc23ca922473951f37e02c5a73b7" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/tdunning/zookeeper/commit/9da6439682c1bc23ca922473951f37e02c5a73b7</a>) then I think I'm done with this feature... Would love folks to start looking it over and give me some feedback.</p> <p>Thanks!</p></comment>
<comment id="13031229" author="marshall" created="Tue, 10 May 2011 15:15:07 +0000"><p>Just added a new commit to Ted' branch to fix check op's in a non-multi context. From my commit message:</p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a> - Fix CHECK_OP to work in a non-multi context.</p> <p> The CHECK_OP wasn't implemented to work in a non-multi context. It was added<br/> specifically for multi-op, but for completeness and consistency I felt it was<br/> better to go ahead and support it in a non-multi context.</p> <p> Also added some unit test code around the multi-op version of a CHECK_OP as<br/> well as a non-multi op versio nof CHECK_OP.</p> <p> Also fixed/added comments to zookeper.h regarding new APIs.</p></comment>
<comment id="13031405" author="tdunning" created="Tue, 10 May 2011 21:56:34 +0000"><p>Includes Marshall's latest updates.</p></comment>
<comment id="13031419" author="hadoopqa" created="Tue, 10 May 2011 22:24:01 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12478739/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12478739/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 15 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/257//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/257//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/257//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/257//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/257//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/257//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13032575" author="tyree731" created="Thu, 12 May 2011 18:47:32 +0000"><p>Great job all around! Some comments on the C library portion of the patch:</p> <ul class="alternate" type="square"> <li>The zoo_acheck comment includes documentation on a member 'stat' that is not an argument</li> <li>The zoo_check comment has the parameter stat listed as _stat</li> <li>In create_completion_entry, you commented out the else case where you set c-gt;clist to NULL. Did you mean to leave this in there?</li> <li>In op_result_string_completion, you memcpy from the value onto data-gt;value based on the size of value. Is data-gt;value guaranteed to be larger than value?</li> <li>You only assert result in op_result_string_completion, but none of the other op_result_* functions</li> <li>Do you not need to set result-gt;err in op_result_multi_completion?</li> <li>In zoo_amulti, any reason "int index = 0;" isn't a few lines down right before it's used?</li> <li>Slick zoo_amulti code, very nicely done.</li> <li>In testCreate you compare results<span class="error">#91;*#93;</span>.err to 0, which will work, but shouldn't you compare it to ZOK? Or do I misunderstand op_result_t.</li> <li>In testDelete, your comment should say "// '/multi2' should have been deleted"</li> </ul> <p>All-in-all the code looks great in the C client. Nicely done.</p></comment>
<comment id="13032647" author="tdunning" created="Thu, 12 May 2011 20:24:30 +0000"><p>Stephen,</p> <p>Nice work on the code review. Marshall will have to comment on your points, but it is clear that you<br/> read the code well and deserve a stroke for that!</p></comment>
<comment id="13032669" author="marshall" created="Thu, 12 May 2011 20:52:47 +0000"><p>Stephen, </p> <p>Thanks very much for doing a thorough code review of the C library. It is super appreciated. I think all your points are valid. Specifically, comments in-line below:</p> <ul> <li>The zoo_acheck comment includes documentation on a member 'stat' that is not an argument</li> <li>The zoo_check comment has the parameter stat listed as _stat</li> </ul> <p>Copy-paste errors <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. Fixed.</p> <ul> <li>In create_completion_entry, you commented out the else case where you set c-gt;clist to NULL. Did you mean to leave this in there?</li> </ul> <p>I had at one point had that field as a pointer instead of a struct. Instead I should probably zero out that structure to be safest. It shouldn't matter in this case, but it's better to be overly cautious I think.</p> <ul> <li>In op_result_string_completion, you memcpy from the value onto data-gt;value based on the size of value. Is data-gt;value guaranteed to be larger than value?</li> </ul> <p>No, that's a very good catch. I need to take the length into account and deal with that error path accordingly as we do elsewhere. I'll check in a fix for this.</p> <ul> <li>You only assert result in op_result_string_completion, but none of the other op_result_* functions</li> </ul> <p>Nice catch. I'll add that to my fixes.</p> <ul> <li>Do you not need to set result-gt;err in op_result_multi_completion?</li> </ul> <p>No, I don't think so. Unlike the other op_result_* completions, this one doesn't take a op_result_t that I fill in the return code. This purpose of this completion is to hold the list of completions for each op in the multi op. That way when we see a multi op, we can pop off the completions and call them. You may have noticed I append a COMPLETION_VOID (I called this the "tail completion" at the end of the multi's completion list. This is a void completion that <b>does</b> set the return value in the completion so it propagates to the caller. Does that make sense? I'll add some comments to the completion to explain.</p> <ul> <li>In zoo_amulti, any reason "int index = 0;" isn't a few lines down right before it's used?</li> </ul> <p>Nope, probably result of moving stuff around a lot. I'll clean that up.</p> <ul> <li>Slick zoo_amulti code, very nicely done.</li> </ul> <p>:-] THANKS!! I wrestled with the implementation for a long time. I'm happy with how it came out.</p> <ul> <li>In testCreate you compare results<span class="error">#91;*#93;</span>.err to 0, which will work, but shouldn't you compare it to ZOK? Or do I misunderstand op_result_t.</li> </ul> <p>Yes, you're right. I also should reverse those arguments to CPPUNIT_ASSERT_EQUAL as we always have the expected followed by the actual. I also found that error elsewhere in that test file that I fixed.</p> <ul> <li>In testDelete, your comment should say "// '/multi2' should have been deleted"</li> </ul> <p>Yep, good catch.</p> <p>Again, thanks for all the valuable and appreciate feedback. I'll commit these changes shortly.</p></comment>
<comment id="13032676" author="marshall" created="Thu, 12 May 2011 21:02:34 +0000"><p>Ted, I pushed my latest changes to fix the things Stephen identified in his review. </p></comment>
<comment id="13032733" author="jiraposter@reviews.apache.org" created="Thu, 12 May 2011 22:52:47 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a><br/> -----------------------------------------------------------</p> <p>Review request for zookeeper and Benjamin Reed.</p> <p>Summary<br/> -------</p> <p>This mega-patch adds the multi-op capability to ZK. This allows a batch of create, delete, update or version-check operations to <br/> succeed or fail together. Both C and java bindings are provided.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965</a></p> <p>Diffs</p> <hr /> <p> CHANGES.txt d22f1f0 <br/> src/c/Makefile.am 65830fe <br/> src/c/configure.ac cdea898 <br/> src/c/include/proto.h 843032f <br/> src/c/include/zookeeper.h c055edb <br/> src/c/src/zookeeper.c db715b0 <br/> src/c/tests/TestMulti.cc PRE-CREATION <br/> src/java/main/org/apache/zookeeper/MultiResponse.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/MultiTransactionRecord.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/Op.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/OpResult.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/Transaction.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/ZooDefs.java 832976f <br/> src/java/main/org/apache/zookeeper/ZooKeeper.java 00b4012 <br/> src/java/main/org/apache/zookeeper/server/DataTree.java d16537e <br/> src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 2538cf7 <br/> src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java 68970d2 <br/> src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 50f208d <br/> src/java/main/org/apache/zookeeper/server/Request.java a5c57e2 <br/> src/java/main/org/apache/zookeeper/server/RequestProcessor.java 5c3e8ff <br/> src/java/main/org/apache/zookeeper/server/TraceFormatter.java 8ece929 <br/> src/java/main/org/apache/zookeeper/server/package.html 3ec7656 <br/> src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java 49affd5 <br/> src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java 9774fb2 <br/> src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java 0ad4dd6 <br/> src/java/test/org/apache/zookeeper/MultiResponseTest.java PRE-CREATION <br/> src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java PRE-CREATION <br/> src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java PRE-CREATION <br/> src/zookeeper.jute 7d96f32 </p> <p>Diff: <a href="https://reviews.apache.org/r/739/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff</a></p> <p>Testing<br/> -------</p> <p>A number of unit tests have been implemented. Test coverage is very good.</p> <p>A sample application has been written to do simple operations on a graph of nodes.</p> <p>Thanks,</p> <p>Ted</p> </comment>
<comment id="13032736" author="tdunning" created="Thu, 12 May 2011 22:54:25 +0000"><p>Latest updates from Marshall. This is also the same as the patch for the review request that I just posted on RB. </p></comment>
<comment id="13032862" author="hadoopqa" created="Fri, 13 May 2011 07:26:38 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12479027/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12479027/ZOOKEEPER-965.patch</a><br/> against trunk revision 1099329.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 15 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/259//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/259//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13033042" author="marshall" created="Fri, 13 May 2011 13:57:34 +0000"><p>Ted, are you going to look at why this patch wouldn't apply cleanly or do you want me to investigate? Thanks!</p></comment>
<comment id="13033163" author="tdunning" created="Fri, 13 May 2011 18:03:46 +0000"><p>I will take a look. It is likely the prefix issue.</p></comment>
<comment id="13033636" author="marshall" created="Sun, 15 May 2011 03:09:43 +0000"><p>Ted, I pushed another update to your branch. The macro names in proto.h didn't adhere to normal zookeeper naming convention of prefixing everything (externally visible) with ZOO_. That caused conflicts when including other packages that already used "CHECK_OP" (which I ran into today). So I renamed them all as well as the places they were used to use the right naming convention.</p> <p>Note: This won't break any compatibility anywhere as we were never exposing this list of defines before the multi op code was added.</p></comment>
<comment id="13033654" author="tdunning" created="Sun, 15 May 2011 06:56:47 +0000"><p>Great.</p> <p>I will use this as an excuse to jump on the problem with the patch again.</p> <p>On Sat, May 14, 2011 at 8:09 PM, Marshall McMullen (JIRA)</p> </comment>
<comment id="13033656" author="tdunning" created="Sun, 15 May 2011 08:02:41 +0000"><p>Name changes in the C code only.</p></comment>
<comment id="13034452" author="marshall" created="Tue, 17 May 2011 00:33:51 +0000"><p>In line with my prior change to rename externally visible macros to have ZOO_ prefix, I've done the same to op_t and op_result_t so they are now zoo_op_t and zoo_op_result_t. </p> <p>Name changes in the C code only but important to avoid namespace pollution.</p></comment>
<comment id="13034466" author="hadoopqa" created="Tue, 17 May 2011 01:02:26 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12479254/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12479254/ZOOKEEPER-965.patch</a><br/> against trunk revision 1103811.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 21 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/265//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/265//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13034589" author="breed" created="Tue, 17 May 2011 05:52:09 +0000"><p>i'm reviewing the patch. you guys did a lot of great work. i have a couple of questions. i see what is happening in the code, but i want to make sure i understand the semantics:</p> <p>1) if i pass a list of multi ops and there is an error, does it all fail?<br/> 2) what is the use case for the check operation?</p> </comment>
<comment id="13034592" author="tdunning" created="Tue, 17 May 2011 06:01:49 +0000"> <p>Yes.</p> <p>Imagine a graph where each node is a znode. If you want to update a node<br/> based on the contents of its neighbors, you would first read the list of<br/> neighbors from the node, then read each of the neighbors contents, and then<br/> finally update the original node. You might not want to complete the<br/> update, however, if one of the neighbors had been modified in the meantime.</p> <p>To accomplish this, you would include check operations for each of neighbors<br/> in your update as well as a version for the node being updated.</p> <p>This is essentially a multi-node extension of the standard<br/> read-modify-write-if-correct-version idiom widely used in normal ZK work.</p></comment>
<comment id="13034593" author="marshall" created="Tue, 17 May 2011 06:02:22 +0000"><p>Benjamin,</p> <p>Thanks very much!! This was a lot of work, but also very interesting. Really glad to have been able to jump in and work on it. As to your questions:</p> <p>1) Yes, if there is an error in any of the ops in the multi-op, then the entire multi-op fails. On the java client, this will throw an exception corresponding to the error in the op that caused the multi-op to fail. You also optionally get an array populated with the results of each op in the multi-op in case you want to iterate over it and see which one failed. The semantics of the error codes in that result array are as follows</p> <p>ZOK: the op would have succeeded<br/> ZRUNTIMEINCONSISTENCY: We never tried the op because it was <b>after</b> the op that caused the multi-op to fail. I chose this error code (somewhat arbitrarily) because it would violate transactional consistency if we were to have committed an op inside a failing multi-op.<br/> Anything else: The error of the failing op.</p> <p>2) Ted, feel free to jump in here, but I believe the idea is to not proceed with the ops that follow in a multi op if a version on some other node has changed out from under us. e.g. if you have 100 ops in a multi op, and you get to the 50th one, it's a way to do a sanity check of "hey, don't go past this point if any other client changed this node"... Does that make sense?</p> </comment>
<comment id="13034594" author="marshall" created="Tue, 17 May 2011 06:03:56 +0000"><p>Also, regarding #1 above... on the C client, we don't throw exceptions obviously. The C client returns the error of the failing op in the multi-op. The semantics are the same though as it takes an optional array to fill in with the results of all the ops in the multiop. This array can be used like in the Java client to see which op caused the multi op to fail...</p></comment>
<comment id="13034851" author="breed" created="Tue, 17 May 2011 16:20:55 +0000"><p>nice design. ok back to reviewing <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="13034940" author="fournc" created="Tue, 17 May 2011 18:22:24 +0000"><p>It would be really great if we could get <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1046" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1046</a> merged in before this patch. This feature will require a few additional changes on 1046 but given that 1046 is an outstanding bug I'd like to see it fixed before we add the feature.</p></comment>
<comment id="13035623" author="marshall" created="Wed, 18 May 2011 19:56:03 +0000"><p>Ted, others...</p> <p>I've just pushed a commit to Ted's private branch to fix a few minor error handling issues I discovered while integrating this into our own product. Details below from my commit message:</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a> - Fix error code handling. </p> <p>Error codes were not propagating out from the server properly. <br/> The original design dictated that if the multi op fails, then <br/> all the entries in the multi result would be an error result. The <br/> error code in that error result would be used to determine which <br/> op failed in the multi-op. Specifically, error codes in the multi result: </p> <p>0: The op would have succeeded had the entire multi op not failed <br/> ZRUNTIMEINCONSISTENCY: The op was AFTER the failing op and was aborted <br/> Anything else: The real error code for the op that caused the entire <br/> multi op to fail (this is the one that is thrown as well). </p> <p>Also, discovered another error code issue. If a op in the multi <br/> op is after the failing op, it still ran through PrepRequestProcessor. <br/> That was confusing (and unecessary) as we know the entire multi op <br/> is going to fail. Modified it to abort all ops after a failing op <br/> to avoid unecessary work and also to avoid confusion in the log files. </p> <p>Also added some unit tests to verify all above described changes. </p></comment>
<comment id="13035792" author="tdunning" created="Wed, 18 May 2011 22:19:26 +0000"><p>Patch will be updated shortly. I will also update reviewboard if I hear<br/> from somebody that this will not damage ongoing reviews.</p> <p>Also, the "private branch" mentioned below is available to anyone at<br/> <a href="https://github.com/tdunning/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/tdunning/zookeeper</a></p> <p>On Wed, May 18, 2011 at 12:56 PM, Marshall McMullen (JIRA)</p> </comment>
<comment id="13035858" author="breed" created="Wed, 18 May 2011 23:44:55 +0000"><p>please update. i'm still digging into how everything fits together, so i haven't really started any significant comments.</p> <p>i do have a general comment. we need to get a bit more documentation in both javadoc and forrest. (i'm i remembering correctly that there was some doxygen?)</p></comment>
<comment id="13035917" author="tdunning" created="Thu, 19 May 2011 01:33:53 +0000"><p>Updated to trunk. Includes Marshall's latest naming tweaks.</p></comment>
<comment id="13035919" author="tdunning" created="Thu, 19 May 2011 01:35:37 +0000"><p>Updated review board</p></comment>
<comment id="13035920" author="jiraposter@reviews.apache.org" created="Thu, 19 May 2011 01:36:48 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-05-19 01:35:29.152433)</p> <p>Review request for zookeeper and Benjamin Reed.</p> <p>Changes<br/> -------</p> <p>Latest small changes from Marshall.<br/> Updated to trunk.</p> <p>Summary<br/> -------</p> <p>This mega-patch adds the multi-op capability to ZK. This allows a batch of create, delete, update or version-check operations to <br/> succeed or fail together. Both C and java bindings are provided.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965</a></p> <p>Diffs (updated)</p> <hr /> <p> src/c/Makefile.am 65830fe <br/> src/c/include/proto.h 843032f <br/> src/c/include/zookeeper.h c055edb <br/> src/c/src/zookeeper.c db715b0 <br/> src/c/tests/TestMulti.cc PRE-CREATION <br/> src/c/tests/TestOperations.cc f9441ea <br/> src/c/tests/ZKMocks.cc a75dce6 <br/> src/java/main/org/apache/zookeeper/MultiResponse.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/MultiTransactionRecord.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/Op.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/OpResult.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/Transaction.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/ZooDefs.java 832976f <br/> src/java/main/org/apache/zookeeper/ZooKeeper.java 00b4012 <br/> src/java/main/org/apache/zookeeper/server/DataTree.java d16537e <br/> src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 2538cf7 <br/> src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 50f208d <br/> src/java/main/org/apache/zookeeper/server/Request.java a5c57e2 <br/> src/java/main/org/apache/zookeeper/server/RequestProcessor.java 5c3e8ff <br/> src/java/main/org/apache/zookeeper/server/TraceFormatter.java 8ece929 <br/> src/java/main/org/apache/zookeeper/server/package.html 3ec7656 <br/> src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java 49affd5 <br/> src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java 0ad4dd6 <br/> src/java/test/org/apache/zookeeper/MultiResponseTest.java PRE-CREATION <br/> src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java PRE-CREATION <br/> src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java PRE-CREATION <br/> src/zookeeper.jute 7d96f32 </p> <p>Diff: <a href="https://reviews.apache.org/r/739/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff</a></p> <p>Testing<br/> -------</p> <p>A number of unit tests have been implemented. Test coverage is very good.</p> <p>A sample application has been written to do simple operations on a graph of nodes.</p> <p>Thanks,</p> <p>Ted</p> </comment>
<comment id="13035941" author="tdunning" created="Thu, 19 May 2011 02:12:27 +0000"><p>Added some javadocs per request.</p></comment>
<comment id="13035945" author="jiraposter@reviews.apache.org" created="Thu, 19 May 2011 02:14:48 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-05-19 02:13:14.619335)</p> <p>Review request for zookeeper and Benjamin Reed.</p> <p>Changes<br/> -------</p> <p>Added javadocs</p> <p>Summary<br/> -------</p> <p>This mega-patch adds the multi-op capability to ZK. This allows a batch of create, delete, update or version-check operations to <br/> succeed or fail together. Both C and java bindings are provided.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965</a></p> <p>Diffs (updated)</p> <hr /> <p> src/c/Makefile.am 65830fe <br/> src/c/include/proto.h 843032f <br/> src/c/include/zookeeper.h c055edb <br/> src/c/src/zookeeper.c db715b0 <br/> src/c/tests/TestMulti.cc PRE-CREATION <br/> src/c/tests/TestOperations.cc f9441ea <br/> src/c/tests/ZKMocks.cc a75dce6 <br/> src/java/main/org/apache/zookeeper/MultiResponse.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/MultiTransactionRecord.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/Op.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/OpResult.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/Transaction.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/ZooDefs.java 832976f <br/> src/java/main/org/apache/zookeeper/ZooKeeper.java 00b4012 <br/> src/java/main/org/apache/zookeeper/server/DataTree.java d16537e <br/> src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 2538cf7 <br/> src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 50f208d <br/> src/java/main/org/apache/zookeeper/server/Request.java a5c57e2 <br/> src/java/main/org/apache/zookeeper/server/RequestProcessor.java 5c3e8ff <br/> src/java/main/org/apache/zookeeper/server/TraceFormatter.java 8ece929 <br/> src/java/main/org/apache/zookeeper/server/package.html 3ec7656 <br/> src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java 49affd5 <br/> src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java 0ad4dd6 <br/> src/java/test/org/apache/zookeeper/MultiResponseTest.java PRE-CREATION <br/> src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java PRE-CREATION <br/> src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java PRE-CREATION <br/> src/zookeeper.jute 7d96f32 </p> <p>Diff: <a href="https://reviews.apache.org/r/739/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff</a></p> <p>Testing<br/> -------</p> <p>A number of unit tests have been implemented. Test coverage is very good.</p> <p>A sample application has been written to do simple operations on a graph of nodes.</p> <p>Thanks,</p> <p>Ted</p> </comment>
<comment id="13036017" author="hadoopqa" created="Thu, 19 May 2011 06:25:11 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12479713/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12479713/ZOOKEEPER-965.patch</a><br/> against trunk revision 1103811.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 21 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/276//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/276//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/276//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/276//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/276//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/276//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13036601" author="breed" created="Fri, 20 May 2011 00:26:27 +0000"><p>i'm almost done with the review. (it's a big patch!!!) there is a high level issue i'd like to bring up: i don't think the check request should return anything because if the check succeeds, you already know the information that is returned. (it's what you expected.) if the check fails, you just get an error code. if check doesn't return anything, we can either drop it if it succeeds in PrepRequestProcesor or propogate an error. this simplifies the rest of the pipeline a bit because they will not have to care about the check op.</p></comment>
<comment id="13036605" author="marshall" created="Fri, 20 May 2011 00:30:22 +0000"><p>Benjamin,</p> <p>I completely agree. At my company our internal code that uses zookeeper and the new multi op support does exactly what you suggest. We didn't see any need for the return from a check op, so we ignore it completely. I think your suggestion is a good one.</p></comment>
<comment id="13036609" author="tdunning" created="Fri, 20 May 2011 00:42:10 +0000"><p>Well, I am not entirely sure about ignoring the check result.</p> <p>First, the order and count of results is very handy to make sure that you can attach results back to which operation caused the result. I realize that there is no conditionality here but one-for-one correspondence in the results is very nice. The idea that multi transforms ops into results is nice and simple.</p> <p>It is true that it is hard to imagine that the Stat structure that comes back has any new information in it. I would be happy if the client inserts place-holder results. My original motivation was to design check as if it were a call to an exists method. As you point out, the client probably have done that already. </p> <p>Would you be happy with the client side insertion only? This would give all of the economies you want, but would preserve a simpler facade for the user.</p></comment>
<comment id="13036642" author="marshall" created="Fri, 20 May 2011 03:10:23 +0000"><p>Ted brings up a very valid point. All of the code in the server and both Java and C clients always assume the one-to-one correspondence between the number of ops submitted and the number of results. </p> <p>But, I'm not sure it needs to be a Stat that we put into the results. It could just have a placeholder or boolean value (which would always been one on a successful multi-op). </p> <p>Ted, I'm not sure I understand what you mean by client-side insertion only. Can you elaborate on what that would entail? Also, I'd be hesitant to do anything that makes the server-side (or the C client) processing any more complex or difficult than it already is....</p></comment>
<comment id="13036664" author="jiraposter@reviews.apache.org" created="Fri, 20 May 2011 04:14:47 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/739/#review689" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#review689</a><br/> -----------------------------------------------------------</p> <p>src/c/include/zookeeper.h<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1380" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1380</a>gt;</p> <p> shouldn't this be a union</p> <p>src/c/include/zookeeper.h<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1381" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1381</a>gt;</p> <p> it isn't clear to me that we should expose check outside of a multitransaction.</p> <p>src/java/main/org/apache/zookeeper/Transaction.java<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1382" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1382</a>gt;</p> <p> should we also have an asynchronous version?</p> <p>src/java/main/org/apache/zookeeper/ZooKeeper.java<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1383" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1383</a>gt;</p> <p> i think we also need an asynchronous version.</p> <p>src/java/main/org/apache/zookeeper/server/DataTree.java<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1384" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1384</a>gt;</p> <p> if stat didn't return anything, we could skip this altogether. if we are going to return something, should we return more than the version?</p> <p>src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1385" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1385</a>gt;</p> <p> i don't think we want to log this at all do we?</p> <p>src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1386" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1386</a>gt;</p> <p> don't use tabs. spaces!</p> <p>src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1392" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1392</a>gt;</p> <p> i think we are only half atomic here. if the multi txn fails half way through, it will not be applied to the database, but we will still have recorded it as pending, so we may fail later changes.</p> <p> for example, if there is a create for a znode that would otherwise succeed, but fails do to a later (in the multi txn) check failing. there will be a pending change record created, so even though the create failed, later creates to that znode will result in a node exists error.</p> <p>src/zookeeper.jute<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1379" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1379</a>gt;</p> <p> i don't think we should use TxnHeader since all we need is the type.</p> <ul class="alternate" type="square"> <li>Benjamin</li> </ul> <p>On 2011-05-19 02:13:14, Ted Dunning wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-05-19 02:13:14)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Benjamin Reed.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This mega-patch adds the multi-op capability to ZK. This allows a batch of create, delete, update or version-check operations to </p></blockquote> <blockquote><p>succeed or fail together. Both C and java bindings are provided.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>src/c/Makefile.am 65830fe </p></blockquote> <blockquote><p>src/c/include/proto.h 843032f </p></blockquote> <blockquote><p>src/c/include/zookeeper.h c055edb </p></blockquote> <blockquote><p>src/c/src/zookeeper.c db715b0 </p></blockquote> <blockquote><p>src/c/tests/TestMulti.cc PRE-CREATION </p></blockquote> <blockquote><p>src/c/tests/TestOperations.cc f9441ea </p></blockquote> <blockquote><p>src/c/tests/ZKMocks.cc a75dce6 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiResponse.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiTransactionRecord.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Op.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/OpResult.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Transaction.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooDefs.java 832976f </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooKeeper.java 00b4012 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/DataTree.java d16537e </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 2538cf7 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 50f208d </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/Request.java a5c57e2 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/RequestProcessor.java 5c3e8ff </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/TraceFormatter.java 8ece929 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/package.html 3ec7656 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java 49affd5 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java 0ad4dd6 </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiResponseTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/zookeeper.jute 7d96f32 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/739/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A number of unit tests have been implemented. Test coverage is very good.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A sample application has been written to do simple operations on a graph of nodes.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Ted</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13036666" author="breed" created="Fri, 20 May 2011 04:19:47 +0000"><p>yeah, i was thinking along the same lines as you two: a boolean place holder would work out nicely.</p></comment>
<comment id="13037165" author="tdunning" created="Fri, 20 May 2011 23:54:37 +0000"><blockquote> <p>Ted, I'm not sure I understand what you mean by client-side insertion only. Can you elaborate on what that would entail? Also, I'd be hesitant to do anything that makes the server-side (or the C client) processing any more complex or difficult than it already is....</p></blockquote> <p>What I meant was that the rules for inserting place-holder results are pretty simple. As such, if it is preferable to not return results from the server in these spots, then a simple merge could be used to create a results list with place-holder structures. Something like this:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">Iteratorlt;Resultgt; i = results.iterator(); Listlt;Resultgt; r = Lists.newHashList(); <span class="code-keyword">for</span> (op in ops) { <span class="code-keyword">if</span> (op.type() == CHECK) { r.add(PLACE_HOLDER); } <span class="code-keyword">else</span> { r.add(i.next()); } } </pre> </div></div> <p>I agree that complication of the client is bad, but this isn't much and if it makes the server side easier, then it isn't a big deal. My guess is that the server side solution is very simple (as in, just quit setting the version). Or the cost of getting the version may be low enough we really don't care.</p> </comment>
<comment id="13037217" author="breed" created="Sat, 21 May 2011 01:21:59 +0000"><p>i think propagating a boolean from preprequestprocessor should work well. the main thing i wanted to avoid is adding the processing logic in the datatree.</p></comment>
<comment id="13037225" author="jiraposter@reviews.apache.org" created="Sat, 21 May 2011 02:01:47 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/739/#review706" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#review706</a><br/> -----------------------------------------------------------</p> <p>src/java/main/org/apache/zookeeper/ZooKeeper.java<br/> lt;<a href="https://reviews.apache.org/r/739/#comment1410" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#comment1410</a>gt;</p> <p> What would you say about deferring this to a separate JIRA?</p> <ul class="alternate" type="square"> <li>Ted</li> </ul> <p>On 2011-05-19 02:13:14, Ted Dunning wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-05-19 02:13:14)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Benjamin Reed.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This mega-patch adds the multi-op capability to ZK. This allows a batch of create, delete, update or version-check operations to </p></blockquote> <blockquote><p>succeed or fail together. Both C and java bindings are provided.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>src/c/Makefile.am 65830fe </p></blockquote> <blockquote><p>src/c/include/proto.h 843032f </p></blockquote> <blockquote><p>src/c/include/zookeeper.h c055edb </p></blockquote> <blockquote><p>src/c/src/zookeeper.c db715b0 </p></blockquote> <blockquote><p>src/c/tests/TestMulti.cc PRE-CREATION </p></blockquote> <blockquote><p>src/c/tests/TestOperations.cc f9441ea </p></blockquote> <blockquote><p>src/c/tests/ZKMocks.cc a75dce6 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiResponse.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiTransactionRecord.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Op.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/OpResult.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Transaction.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooDefs.java 832976f </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooKeeper.java 00b4012 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/DataTree.java d16537e </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 2538cf7 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 50f208d </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/Request.java a5c57e2 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/RequestProcessor.java 5c3e8ff </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/TraceFormatter.java 8ece929 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/package.html 3ec7656 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java 49affd5 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java 0ad4dd6 </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiResponseTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/zookeeper.jute 7d96f32 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/739/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A number of unit tests have been implemented. Test coverage is very good.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A sample application has been written to do simple operations on a graph of nodes.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Ted</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13037445" author="breed" created="Sat, 21 May 2011 20:30:25 +0000"><p>i think deferring the async version to a separate jira is reasonable since it is hard to keep the code fresh. we should open the jira before we commit the change though.</p></comment>
<comment id="13037452" author="tdunning" created="Sat, 21 May 2011 21:10:39 +0000"><p>See <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1066" title="Multi should have an async version" class="issue-link" data-issue-key="ZOOKEEPER-1066">ZOOKEEPER-1066</a> for the asynchronous version of multi.</p> <p>(I should file a JIRA for my inability to type asynchronous in less than 5 attempts as well)</p></comment>
<comment id="13038556" author="marshall" created="Tue, 24 May 2011 13:41:55 +0000"><p>Hey Ted, I wanted to reply to some of the comments Benjamin made on review<br/> board, but I can't figure out how to do so. There's no place that I see to<br/> add comments or to login to the interface... should I just post my comments<br/> on Jira along with the original bug?</p> <p>Thanks...</p> </comment>
<comment id="13038642" author="phunt" created="Tue, 24 May 2011 16:00:39 +0000"><p>Hi Marshall, when you open this link <a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a> do you see a "login" and "register" links in the top right? (I do in chrome incognito window) If this is your first time on apache rb then you'll need to register.</p></comment>
<comment id="13038656" author="tdunning" created="Tue, 24 May 2011 16:49:50 +0000"><p>Marshall,</p> <p>After logging in as Patrick says, you also need to click on the number on the far left. That will<br/> pop up an overlay window that will let you type in your response. Or riposte as the case may be.</p> <p>If the replies are general rather than line by line, you can also just put them here. That can<br/> even be better.</p></comment>
<comment id="13038944" author="jiraposter@reviews.apache.org" created="Wed, 25 May 2011 03:42:47 +0000"> <blockquote><p>On 2011-05-20 04:15:05, Benjamin Reed wrote:</p></blockquote> <blockquote><p>gt; src/c/include/zookeeper.h, line 1119</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19416#file19416line1119" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19416#file19416line1119</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; it isn't clear to me that we should expose check outside of a multitransaction.</p></blockquote> <p>That's a valid point. I did it for completeness, but there's really no need to have a check op outside a multi op. It would clean up the code as well if I removed it. I'll try to get that done tonight as well.</p> <blockquote><p>On 2011-05-20 04:15:05, Benjamin Reed wrote:</p></blockquote> <blockquote><p>gt; src/java/main/org/apache/zookeeper/Transaction.java, line 57</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19425#file19425line57" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19425#file19425line57</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; should we also have an asynchronous version?</p></blockquote> <p>Agreed. Ted's created a new jira case for this.</p> <blockquote><p>On 2011-05-20 04:15:05, Benjamin Reed wrote:</p></blockquote> <blockquote><p>gt; src/java/main/org/apache/zookeeper/ZooKeeper.java, line 801</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19427#file19427line801" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19427#file19427line801</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; i think we also need an asynchronous version.</p></blockquote> <p>Agreed. Ted's created a new jira case for this.</p> <blockquote><p>On 2011-05-20 04:15:05, Benjamin Reed wrote:</p></blockquote> <blockquote><p>gt; src/java/main/org/apache/zookeeper/server/DataTree.java, line 817</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19428#file19428line817" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19428#file19428line817</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; if stat didn't return anything, we could skip this altogether. if we are going to return something, should we return more than the version?</p></blockquote> <p>I'm not sure I understand... can you elaborate ?</p> <blockquote><p>On 2011-05-20 04:15:05, Benjamin Reed wrote:</p></blockquote> <blockquote><p>gt; src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java, line 483</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19430#file19430line483" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19430#file19430line483</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; i don't think we want to log this at all do we?</p></blockquote> <p>Agreed. I'll clean that up tonight.</p> <blockquote><p>On 2011-05-20 04:15:05, Benjamin Reed wrote:</p></blockquote> <blockquote><p>gt; src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java, line 484</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19430#file19430line484" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19430#file19430line484</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; don't use tabs. spaces!</p></blockquote> <p>Sorry... at my day job we use tabs (I know) and I forgot to switch my settings around #8211; I'm usually very careful about that <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/wink.png" height="16" width="16" align="absmiddle" alt="" border="0"/>.</p> <blockquote><p>On 2011-05-20 04:15:05, Benjamin Reed wrote:</p></blockquote> <blockquote><p>gt; src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java, line 489</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19430#file19430line489" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19430#file19430line489</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; i think we are only half atomic here. if the multi txn fails half way through, it will not be applied to the database, but we will still have recorded it as pending, so we may fail later changes.</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; for example, if there is a create for a znode that would otherwise succeed, but fails do to a later (in the multi txn) check failing. there will be a pending change record created, so even though the create failed, later creates to that znode will result in a node exists error.</p></blockquote> <p>I thought not applying it to the database was sufficient, but perhaps I'm wrong. I thought the pending change records would get discarded if the multi op failed. Do I need to do that explicitly somehow? What are your thoughts on how to deal with this? </p> <blockquote><p>On 2011-05-20 04:15:05, Benjamin Reed wrote:</p></blockquote> <blockquote><p>gt; src/zookeeper.jute, line 267</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19440#file19440line267" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19440#file19440line267</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; i don't think we should use TxnHeader since all we need is the type.</p></blockquote> <p>Agreed. I'll see about refactoring that.</p> <blockquote><p>On 2011-05-20 04:15:05, Benjamin Reed wrote:</p></blockquote> <blockquote><p>gt; src/c/include/zookeeper.h, line 273</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19416#file19416line273" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19416#file19416line273</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; shouldn't this be a union</p></blockquote> <p>It originally was a union but I ran into some annoyances when trying to use the C API from C++ code as C++ won't let you use designated initializers unless you compile with a newer --std flag (which, when enabled, caused other zookeeper code not to compile from C++). e.g. you get warnings like:</p> <p>tests/TestMulti.cc:689: warning: extended initializer lists only available with -std=c+<ins>0x or -std=gnu</ins>+0x</p> <p>Anyhow, I think the current implementation is a bit of a hack, and would prefer a union as well. Let me take another look at this tonight.</p> <ul class="alternate" type="square"> <li>Marshall</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/739/#review689" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#review689</a><br/> -----------------------------------------------------------</p> <p>On 2011-05-19 02:13:14, Ted Dunning wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-05-19 02:13:14)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Benjamin Reed.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This mega-patch adds the multi-op capability to ZK. This allows a batch of create, delete, update or version-check operations to </p></blockquote> <blockquote><p>succeed or fail together. Both C and java bindings are provided.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>src/c/Makefile.am 65830fe </p></blockquote> <blockquote><p>src/c/include/proto.h 843032f </p></blockquote> <blockquote><p>src/c/include/zookeeper.h c055edb </p></blockquote> <blockquote><p>src/c/src/zookeeper.c db715b0 </p></blockquote> <blockquote><p>src/c/tests/TestMulti.cc PRE-CREATION </p></blockquote> <blockquote><p>src/c/tests/TestOperations.cc f9441ea </p></blockquote> <blockquote><p>src/c/tests/ZKMocks.cc a75dce6 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiResponse.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiTransactionRecord.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Op.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/OpResult.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Transaction.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooDefs.java 832976f </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooKeeper.java 00b4012 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/DataTree.java d16537e </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 2538cf7 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 50f208d </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/Request.java a5c57e2 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/RequestProcessor.java 5c3e8ff </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/TraceFormatter.java 8ece929 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/package.html 3ec7656 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java 49affd5 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java 0ad4dd6 </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiResponseTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/zookeeper.jute 7d96f32 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/739/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A number of unit tests have been implemented. Test coverage is very good.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A sample application has been written to do simple operations on a graph of nodes.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Ted</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13038981" author="marshall" created="Wed, 25 May 2011 06:40:42 +0000"><p>Thanks Patrick, Ted. Don't know how I missed that the first time 'round... too little sleep I suppose <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. </p> <p>I've commented Benjamin's review. I'm also going to check in some updated changes to github to fix the things he requested fixing. </p></comment>
<comment id="13038986" author="jiraposter@reviews.apache.org" created="Wed, 25 May 2011 06:55:47 +0000"> <blockquote><p>On 2011-05-21 02:00:22, Ted Dunning wrote:</p></blockquote> <blockquote><p>gt; src/java/main/org/apache/zookeeper/ZooKeeper.java, line 801</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/739/diff/4/?file=19427#file19427line801" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff/4/?file=19427#file19427line801</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; What would you say about deferring this to a separate JIRA?</p></blockquote> <p>Does the separate JIRA you created address both of Benjamin's async requests? I think he wanted an async multi method as well as an async commit method...?</p> <ul class="alternate" type="square"> <li>Marshall</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/739/#review706" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#review706</a><br/> -----------------------------------------------------------</p> <p>On 2011-05-19 02:13:14, Ted Dunning wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-05-19 02:13:14)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Benjamin Reed.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This mega-patch adds the multi-op capability to ZK. This allows a batch of create, delete, update or version-check operations to </p></blockquote> <blockquote><p>succeed or fail together. Both C and java bindings are provided.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>src/c/Makefile.am 65830fe </p></blockquote> <blockquote><p>src/c/include/proto.h 843032f </p></blockquote> <blockquote><p>src/c/include/zookeeper.h c055edb </p></blockquote> <blockquote><p>src/c/src/zookeeper.c db715b0 </p></blockquote> <blockquote><p>src/c/tests/TestMulti.cc PRE-CREATION </p></blockquote> <blockquote><p>src/c/tests/TestOperations.cc f9441ea </p></blockquote> <blockquote><p>src/c/tests/ZKMocks.cc a75dce6 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiResponse.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiTransactionRecord.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Op.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/OpResult.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Transaction.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooDefs.java 832976f </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooKeeper.java 00b4012 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/DataTree.java d16537e </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 2538cf7 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 50f208d </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/Request.java a5c57e2 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/RequestProcessor.java 5c3e8ff </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/TraceFormatter.java 8ece929 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/package.html 3ec7656 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java 49affd5 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java 0ad4dd6 </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiResponseTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/zookeeper.jute 7d96f32 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/739/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A number of unit tests have been implemented. Test coverage is very good.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A sample application has been written to do simple operations on a graph of nodes.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Ted</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13038987" author="marshall" created="Wed, 25 May 2011 06:55:53 +0000"><p>I've just pushed a change to github with the changes requested by Benjamin in his review on review board. It addresses these core issues:</p> <p>(1) Tighten up C API to use a union of structs for each op type instead of one mismashed set of fields. Removed macros to init zoo_op_t and created more explicit init functions for each type of op.</p> <p>(2) Removed zoo_check and zoo_acheck as there's no need to expose the check operation outside the context of a multi op. It was only added for completeness but it's totally unnecessaryR and needless adds clutter.</p> <p>(3) Removed superfluous logging in PrepRequestProcessor indicating ops were being skipped after a failing op in a multi op. There's already logging when the op fails, and a very clear log statement indicating all subsequent ops in the multi op will be skipped.</p> <p>(4) Converted all tabs to spaces (in my day job we use tabs and I forgot to adjust my editor's settings)</p> <p>(5) Removed TxnHeader from Txn since all we really need is the type. Replaced it with one int for the type.</p></comment>
<comment id="13039500" author="breed" created="Thu, 26 May 2011 03:31:39 +0000"><p>excellent. wrt the pending ops in the prerequestprocessor. we have to undo them if we abort the mult-update. otherwise, the pending ops can cause future ops to incorrectly fail. (for example, if there was a pending create in a multi-update that is aborted, future creates will fail because the pending op data structure says that there is a create in process.) we have to update both the list and hashmap of pending operations. we also need to be careful since the pending operations are modified by the thread executing finalrequestprocessor.</p></comment>
<comment id="13040095" author="marshall" created="Fri, 27 May 2011 07:01:16 +0000"><p>I've just checked in another change to Ted's github branch that fixes a nasty bug in the C API that we discovered while integrating the code into our code base. I think this is a critical fix to the C API that should absolutely be part of the final version we commit.</p> <p>From my commit message:</p> <p> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a> - fix inoperable multi called from watch context.</p> <p> While integrating the new zoo_multi and zoo_amulti into the<br/> code at our company, we discovered a nasty bug in the C API. If<br/> a multi op is triggered from a watch callback, then it would hang<br/> indefinitely. This was due to a fundamental flaw in my earlier<br/> implementation whereby I treated all the ops in a multi op as<br/> asynchronous, with a forced synchronous tail completion that I<br/> tacked onto the end of my completion list. BUT, that tail completion<br/> ultimately never got called when called from a watch context!!</p> <p> The fix was ultimately to create code in both process functions<br/> (both sync and async) for dealing with multi-ops. Each op inside<br/> the multiop is dealt with the same, so they call into a common<br/> function. This way, all the existing logic for dealing with<br/> sync/async completions now deals with multi ops instead of<br/> me trying to deal with that specially.</p> <p> I've also added a new unit test that demonstrated this bug and<br/> also now passes with my refactoring.</p></comment>
<comment id="13040900" author="tdunning" created="Sun, 29 May 2011 23:52:13 +0000"><p>Updated patch with Marshall's latest.</p></comment>
<comment id="13040901" author="jiraposter@reviews.apache.org" created="Sun, 29 May 2011 23:54:47 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-05-29 23:54:13.115005)</p> <p>Review request for zookeeper and Benjamin Reed.</p> <p>Changes<br/> -------</p> <p>This should have fixes for a problem in the c api and for removing the pending changes in the data tree<br/> as suggested by Ben.</p> <p>Summary<br/> -------</p> <p>This mega-patch adds the multi-op capability to ZK. This allows a batch of create, delete, update or version-check operations to <br/> succeed or fail together. Both C and java bindings are provided.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965</a></p> <p>Diffs (updated)</p> <hr /> <p> src/c/Makefile.am 65830fe <br/> src/c/include/proto.h 843032f <br/> src/c/include/zookeeper.h c055edb <br/> src/c/src/zookeeper.c db715b0 <br/> src/c/tests/TestMulti.cc PRE-CREATION <br/> src/c/tests/TestOperations.cc f9441ea <br/> src/c/tests/ZKMocks.cc a75dce6 <br/> src/java/main/org/apache/zookeeper/MultiResponse.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/MultiTransactionRecord.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/Op.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/OpResult.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/Transaction.java PRE-CREATION <br/> src/java/main/org/apache/zookeeper/ZooDefs.java 832976f <br/> src/java/main/org/apache/zookeeper/ZooKeeper.java 00b4012 <br/> src/java/main/org/apache/zookeeper/server/DataTree.java d16537e <br/> src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 2538cf7 <br/> src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 50f208d <br/> src/java/main/org/apache/zookeeper/server/Request.java a5c57e2 <br/> src/java/main/org/apache/zookeeper/server/RequestProcessor.java 5c3e8ff <br/> src/java/main/org/apache/zookeeper/server/TraceFormatter.java 8ece929 <br/> src/java/main/org/apache/zookeeper/server/package.html 3ec7656 <br/> src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java 49affd5 <br/> src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java 0ad4dd6 <br/> src/java/test/org/apache/zookeeper/MultiResponseTest.java PRE-CREATION <br/> src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java PRE-CREATION <br/> src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java PRE-CREATION <br/> src/zookeeper.jute 7d96f32 </p> <p>Diff: <a href="https://reviews.apache.org/r/739/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff</a></p> <p>Testing<br/> -------</p> <p>A number of unit tests have been implemented. Test coverage is very good.</p> <p>A sample application has been written to do simple operations on a graph of nodes.</p> <p>Thanks,</p> <p>Ted</p> </comment>
<comment id="13040904" author="hadoopqa" created="Mon, 30 May 2011 00:02:02 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12480807/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12480807/ZOOKEEPER-965.patch</a><br/> against trunk revision 1125581.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 21 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/296//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/296//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13041273" author="phunt" created="Mon, 30 May 2011 20:23:44 +0000"><p>patch fails to apply against latest trunk (see console output)</p></comment>
<comment id="13041291" author="tdunning" created="Mon, 30 May 2011 21:04:03 +0000"><p>Updated to track trunk</p></comment>
<comment id="13041300" author="hadoopqa" created="Mon, 30 May 2011 21:34:40 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12480874/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12480874/ZOOKEEPER-965.patch</a><br/> against trunk revision 1125581.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 48 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/297//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/297//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/297//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/297//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/297//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/297//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13041337" author="tdunning" created="Mon, 30 May 2011 23:58:59 +0000"><p>Rebased patch to current trunk. Note that there were several conflicts in the merge. The most important was in </p> <p>src/java/main/org/apache/zookeeper/server/DataTree.java around line 891.</p> <p>The conflict was versus changes introduced by <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1046" title="Creating a new sequential node results in a ZNODEEXISTS error" class="issue-link" data-issue-key="ZOOKEEPER-1046"><del>ZOOKEEPER-1046</del></a></p> <p>Camille, if you can, could you check that my merge preserved your fix?</p> </comment>
<comment id="13041338" author="hadoopqa" created="Tue, 31 May 2011 00:02:27 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12480882/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12480882/ZOOKEEPER-965.patch</a><br/> against trunk revision 1125581.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 21 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> -1 findbugs. The patch appears to cause Findbugs (version 1.3.9) to fail.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/298//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/298//testReport/</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/298//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/298//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13041352" author="tdunning" created="Tue, 31 May 2011 00:52:24 +0000"><p>Cut and paste error in resolving conflict.</p></comment>
<comment id="13041362" author="hadoopqa" created="Tue, 31 May 2011 01:25:28 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12480886/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12480886/ZOOKEEPER-965.patch</a><br/> against trunk revision 1125581.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 21 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/299//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/299//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/299//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/299//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/299//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/299//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13041700" author="breed" created="Tue, 31 May 2011 17:38:38 +0000"><p>reviewing the patch now.</p></comment>
<comment id="13041730" author="fournc" created="Tue, 31 May 2011 18:26:41 +0000"><p>Ted, looking at just the change in DataTree, I don't see any corresponding changes in FileTxnSnapLog. Is it possible to hit the same bug we saw in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1046" title="Creating a new sequential node results in a ZNODEEXISTS error" class="issue-link" data-issue-key="ZOOKEEPER-1046"><del>ZOOKEEPER-1046</del></a> in this multi case? I haven't reasoned it through yet but my instinct says yes, which means that FileTxnSnapLog needs to be changed to do the appropriate updating of cversion inside the components of the multi txn when the NONODE/NODEEXIST error conditions occur inside the multitxn. </p> <p>Other than that the merge itself looks ok I think.</p></comment>
<comment id="13041733" author="tdunning" created="Tue, 31 May 2011 18:32:41 +0000"><blockquote> <p> I don't see any corresponding changes in FileTxnSnapLog</p></blockquote> <p>Of course, you are correct here. The individual operations in a multi work exactly like the <br/> individual operations. Unless we somehow inherit the right behavior, your change will need<br/> to be replicated.</p> <p>I won't get to this for a day or two. Would it be possible for you to drop this change in on<br/> the github version?</p></comment>
<comment id="13041734" author="fournc" created="Tue, 31 May 2011 18:36:37 +0000"><p>Not before Wed PM but I can look at it then if you need.</p></comment>
<comment id="13042546" author="tdunning" created="Thu, 2 Jun 2011 01:05:00 +0000"><p>Wrote up an intro to the multi command. <a href="http://tdunning.blogspot.com/2011/06/tour-of-multi-update-for-zookeeper.html" class="external-link" target="_blank" rel="nofollow noopener">http://tdunning.blogspot.com/2011/06/tour-of-multi-update-for-zookeeper.html</a></p> <p>This references a simple multi sample application at github. <a href="https://github.com/tdunning/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/tdunning/zookeeper</a></p></comment>
<comment id="13042603" author="marshall" created="Thu, 2 Jun 2011 04:43:01 +0000"><p>Ted, very nice write-up. I think it does a good job of explaining the problem and the solution. Nice job.</p></comment>
<comment id="13042610" author="marshall" created="Thu, 2 Jun 2011 05:09:44 +0000"><p>So I'm finally getting a chance to circle back around to Benjamin's comments above about the stale ChangeRecords that get left in PrepRequestProcessor on a failed multi-op. I want to be sure I understand what needs to be done here, so Benjamin, feel free to correct me if I'm off track here.... </p> <p>You mentioned:</p> <p>gt; we have to update both the list and hashmap of pending operations.</p> <p>If I'm reading this right, this is all currently updated via addChangeRecord (in PrepRequestProcess). I think it's adding it to the list via zks.outstandingChanges.add(c) and adding to the hashmap via zks.outstandingChangesForPath.put(c.path, c). So, adding in a removeChangeRecord method here that mirrors addChangeRecord looks like a good approach. I think I can use the transaction id on the failed multi op to identify all the failed change requests that need to be removed. Luckily, all change requests associated with a multiop will have the same txn id, so that should be super helpful here.</p> <p>Also, you mentioned :</p> <p>gt; we also need to be careful since the pending operations are modified by the thread executing Finalrequestprocessor</p> <p>Can you elaborate on what the concern is there? If I make the removeChangeRecord synchronized like addChangeRecord is, will that be sufficient?</p> </comment>
<comment id="13042618" author="marshall" created="Thu, 2 Jun 2011 05:52:20 +0000"><p>OK, so I think this is actually pretty straightforward. I've written up an initial version to remove the failed op change records. I'm going to try to write a unit test that exhibits this theoretical bug and then try my fix and see if it fixes it.</p></comment>
<comment id="13042792" author="marshall" created="Thu, 2 Jun 2011 14:32:02 +0000"><p>I am unable to create a unit test that fails due to the "half-atomic" bug Benjamin cited. It looks to me like even though there are stale change records for a failed multi op, they don't seem to cause any noticeable bug. I tried to do a multi that created a node, then tried to delete the same node twice. This leaves a change record for the create. Then I tried another subsequent multi to create that same node. That multi succeeds (b/c the actual create never succeeded and never made it to the database). </p> <p>I don't see any way this can actually cause a problem though I DO think it should be fixed to avoid any possible problems that I just can't think of a way to test. The fix is trivial anyhow. I iterate through the change records on a failed multi op and delete any that have the failed multi op's txn id. </p> <p>Anyhow, I'll commit this change to Ted's multi branch later today. If anyone can think of a unit test that fails without this fix, I'd love to see it.</p> <p>Thanks...</p></comment>
<comment id="13042809" author="marshall" created="Thu, 2 Jun 2011 15:01:04 +0000"><p>OK, I've committed a change to delete the stale change records on a failed multiop. I've got a few other changes to make today that I'll push to the multi branch later today.</p></comment>
<comment id="13042837" author="marshall" created="Thu, 2 Jun 2011 15:56:39 +0000"><p>I'm now finishing up the other suggestion Benjamin had about using a boolean placeholder for a checkop instead of having a real Stat structure in there. This is also simpler than I was thinking so I should have this done shortly. Just testing it out now to ensure no regressions. And actually, as it turns out I don't even need a boolean at all #8211; just a placeholder. B/c if the check failed, then we put a Error txn/response in the result array on the server side not a check response. Anyhow, should have this done in the next 30 minutes.</p></comment>
<comment id="13042894" author="marshall" created="Thu, 2 Jun 2011 17:18:44 +0000"><p>I've just committed another change to Ted's multi branch to remove the Stat_t from a check op and use a simple placeholder as was discussed above.</p></comment>
<comment id="13043128" author="jiraposter@reviews.apache.org" created="Thu, 2 Jun 2011 23:13:47 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/739/#review750" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/#review750</a><br/> -----------------------------------------------------------</p> <p>this looks really great! one thing to think about (you don't need to think about it too long, but it would be great if you could "fix it"): we generally only use generated jute Record instances. i think this makes it easier if we ever switch serialization libraries, but MultiResponse is not generated. i understand why, but it would be cool if we could use a generated class. this is not blocking the patch.</p> <p>the cleanup of pending ops was not in the uploaded diffs, but i looked at the code on git hub. i think this is almost right, but removeChangeRecord has a bug: we do the checking based on the Map not the list, so when we remove the ChangeRecord we need to check to see if there was something there before that we replaced and put it back. i think this is the last blocker that i can see.</p> <ul class="alternate" type="square"> <li>Benjamin</li> </ul> <p>On 2011-05-29 23:54:13, Ted Dunning wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/739/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-05-29 23:54:13)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Benjamin Reed.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This mega-patch adds the multi-op capability to ZK. This allows a batch of create, delete, update or version-check operations to </p></blockquote> <blockquote><p>succeed or fail together. Both C and java bindings are provided.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>src/c/Makefile.am 65830fe </p></blockquote> <blockquote><p>src/c/include/proto.h 843032f </p></blockquote> <blockquote><p>src/c/include/zookeeper.h c055edb </p></blockquote> <blockquote><p>src/c/src/zookeeper.c db715b0 </p></blockquote> <blockquote><p>src/c/tests/TestMulti.cc PRE-CREATION </p></blockquote> <blockquote><p>src/c/tests/TestOperations.cc f9441ea </p></blockquote> <blockquote><p>src/c/tests/ZKMocks.cc a75dce6 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiResponse.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/MultiTransactionRecord.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Op.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/OpResult.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/Transaction.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooDefs.java 832976f </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/ZooKeeper.java 00b4012 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/DataTree.java d16537e </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java 2538cf7 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java 50f208d </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/Request.java a5c57e2 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/RequestProcessor.java 5c3e8ff </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/TraceFormatter.java 8ece929 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/package.html 3ec7656 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java 49affd5 </p></blockquote> <blockquote><p>src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java 0ad4dd6 </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiResponseTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java PRE-CREATION </p></blockquote> <blockquote><p>src/zookeeper.jute 7d96f32 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/739/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/739/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A number of unit tests have been implemented. Test coverage is very good.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>A sample application has been written to do simple operations on a graph of nodes.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Ted</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13043204" author="marshall" created="Fri, 3 Jun 2011 03:48:25 +0000"><p>Benjamin,</p> <p>Thanks for taking the time to look over my latest changes. I sort of get what you're suggesting, but I'm not sure about the implementation. </p> <p>Do you have any ideas in mind on how I'd "check to see if there was something there before that we replaced and put it back". I was thinking I could create a map of any existing change records and if the multi op fails, I can use that map to restore things to their proper state... Does that sound like what you were thinking?</p></comment>
<comment id="13043214" author="marshall" created="Fri, 3 Jun 2011 05:00:26 +0000"><p>Benjamin,</p> <p>I've just pushed a change to github that implements what I think will work for the bug you cited in removeChangeRecords. Essentially, I store off prior change records (if any) for all the paths in the multi-op. Then if the multi-op fails, I restore the values in both the list zks.outstandingChanges and the hashmap zks.outstandingChangesForPath. </p> <p>Can you please look at this latest change and see if you see any problems with this latest approach? My only question is whether the order matters in the outstandingChanges list. Because I delete the old one in a for loop, then add the old (prior) one back onto the end of the list. I could deal with the order more carefully and put it back into the same index position if that's a requirement.... </p> <p>Let me know what you think.</p> <p>Thanks!</p></comment>
<comment id="13043215" author="marshall" created="Fri, 3 Jun 2011 05:01:54 +0000"><p>There were actually two commits to fix the above bug. So if you're just browsing the commits on github, make sure you look at both.... </p></comment>
<comment id="13043320" author="breed" created="Fri, 3 Jun 2011 12:15:46 +0000"><p>no there may be a race condition. between the time you grab the old mapping and the time you abort, the old mapping may have been removed, so you don't want to put it back. you also don't need to re-add the prior change records to the outstandingchanges list.</p> <p>i think i have an efficient way of figuring out what to do:</p> <p>1) keep saving off the prior change records like you are doing now.</p> <p>if you abort, do the following synchronized with outstandingchanges<br/> 2) start at the end of the list and work backwards removing elements from the end of the list as long as they are the zxid you are working on. once the zxid changes you can stop. (list will help you avoid going through the whole list.)<br/> 3) look at the zxid of the first element of the outstandingchanges list (i'll call it firstZxid). go through your prior change records and remove any whose zxid lt; firstZxid.<br/> 4) apply the remaining priorchange records to the outstandingchangesForPath.</p> <p>does that sound reasonable? 2) is kind of a pain because have to work with indices, but it shouldn't be too bad.</p></comment>
<comment id="13043418" author="marshall" created="Fri, 3 Jun 2011 15:47:49 +0000"><p>Benjamin, thanks for the quick reply. I think this sounds like a very easy thing to add to what I've done. Let me make sure I understand you though... Specifically:</p> <p>2) start at the end of the list and work backwards removing elements from the end of the list as long as they are the zxid you <br/> are working on. once the zxid changes you can stop. (list will help you avoid going through the whole list.)</p> <p>When you say "the zxid you are working on" do you mean the zxid for the multi op? </p></comment>
<comment id="13043426" author="breed" created="Fri, 3 Jun 2011 15:58:04 +0000"><p>yes exactly, and that zxid will be at the end of the list since that is the zxid that you are currently working on.</p></comment>
<comment id="13044982" author="marshall" created="Mon, 6 Jun 2011 17:56:37 +0000"><p>Benjamin,</p> <p>I've just pushed a new change to github that I <b>think</b> does what you've suggested to solve the race condition you identified. Please look it over and let me know what you think.</p> <p>I haven't had a chance to look at using jute generated Records. I may have time to look at that tonight.</p></comment>
<comment id="13044991" author="tdunning" created="Mon, 6 Jun 2011 18:10:59 +0000"><p>The jute-ly issue can only be corrected by cut-and-paste coding on the jute<br/> definitions. Putting the message into jute will involve replicating a union<br/> of the fields in the sub-fields. With ZK's history of wire compatibility,<br/> that probably isn't a big deal.</p> <p>On Mon, Jun 6, 2011 at 10:56 AM, Marshall McMullen (JIRA)</p> </comment>
<comment id="13045252" author="marshall" created="Tue, 7 Jun 2011 03:17:02 +0000"><p>I'm not sure I feel comfortable altering the jute definitions themselves. Is this something you would be willing to tackle Ted? Otherwise perhaps we could defer this refactoring into a separate Jira case?</p></comment>
<comment id="13045352" author="tdunning" created="Tue, 7 Jun 2011 10:23:17 +0000"><p>I would be happy to jump on this (just not right now).</p> <p>Deferring this is a fine thing, except that it is likely to be a wire-format<br/> change.</p> </comment>
<comment id="13045701" author="breed" created="Tue, 7 Jun 2011 23:30:59 +0000"><p>it's not a show stopper. it works fine with jute. we can fix it if it turns out to be a problem when we move to a real serialization api.</p></comment>
<comment id="13045705" author="breed" created="Tue, 7 Jun 2011 23:43:02 +0000"><p>the code looks good. there is one other small thing. the case statement for multi-op is much to long. could you extract one or two sections of code into methods: grabPendingChanges() and rollbackPendingChanges() for example just to make it a bit smaller.</p> <p>once that is done we should be good to go. i'm cancelling the patch, so that we can be clear on the patch that you want loaded. (in other words, when you have a patch that you think should go in, submit it.)</p> <p>thanx for all your hard work!</p></comment>
<comment id="13045707" author="marshall" created="Tue, 7 Jun 2011 23:47:39 +0000"><p>Yes, I will do the refactor tonight.</p> <p>Thanks for looking it over Benjamin!</p></comment>
<comment id="13045774" author="marshall" created="Wed, 8 Jun 2011 04:40:21 +0000"><p>Benjamin,</p> <p>I've pushed a new set of changes to github with the multi-op error code refactored as you request. Let me know if this looks OK then we can proceed with generating a new patch....</p> <p>Thanks!</p></comment>
<comment id="13045799" author="tdunning" created="Wed, 8 Jun 2011 05:54:31 +0000"><p>I just integrated changes to trunk (<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1069" title="Calling shutdown() on a QuorumPeer too quickly can lead to a corrupt log" class="issue-link" data-issue-key="ZOOKEEPER-1069"><del>ZOOKEEPER-1069</del></a>) and rebased the github. This also picked up some small changes I made to the API to get results from the exception.</p> <p>Marshall, can you say if you are happy about the API change in 5ce6043f4 ?</p> <p>I have pushed the rebase to github so everybody will have to pull from scratch to make sure that they get the right history.</p> <p>I will also attach the patch for this right now.</p></comment>
<comment id="13045801" author="tdunning" created="Wed, 8 Jun 2011 05:55:30 +0000"><p>I think this is the final state. Marshal should confirm.</p></comment>
<comment id="13045804" author="marshall" created="Wed, 8 Jun 2011 06:03:44 +0000"><p>Ted, the changes in 5ce6043f4 look great to me. Much simpler than how I originally coded it. Thanks very much for refactoring that mess!</p> <p>Yes, I think this is the final state unless Benjamin sees anything amiss in my most recent commit to refactor the large multi-op case statement into a couple of functions. </p> <p>Otherwise I think we've finally finished this massive beast.</p></comment>
<comment id="13045972" author="marshall" created="Wed, 8 Jun 2011 14:22:19 +0000"><p>Ted, can you post an updated patch?</p></comment>
<comment id="13048756" author="marshall" created="Mon, 13 Jun 2011 21:00:28 +0000"><p>I downloaded the latest patch (08/Jun/11 05:55). It applies cleanly, but it does not compile:</p> <p>compile:<br/> <span class="error">#91;javac#93;</span> Compiling 132 source files to /home/marshall/sandboxes/zookeeper-multi/build/classes<br/> <span class="error">#91;javac#93;</span> /home/marshall/sandboxes/zookeeper-multi/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:186: unreported exception java.io.IOException; must be caught or declared to be thrown<br/> <span class="error">#91;javac#93;</span> rc = dt.processTxn(hdr, txn);<br/> <span class="error">#91;javac#93;</span> ^<br/> <span class="error">#91;javac#93;</span> /home/marshall/sandboxes/zookeeper-multi/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:195: unreported exception java.io.IOException; must be caught or declared to be thrown<br/> <span class="error">#91;javac#93;</span> rc = dt.processTxn(hdr, txn);<br/> <span class="error">#91;javac#93;</span> ^<br/> <span class="error">#91;javac#93;</span> /home/marshall/sandboxes/zookeeper-multi/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:198: unreported exception java.io.IOException; must be caught or declared to be thrown<br/> <span class="error">#91;javac#93;</span> rc = dt.processTxn(hdr, txn);<br/> <span class="error">#91;javac#93;</span> ^<br/> <span class="error">#91;javac#93;</span> 3 errors</p> <p>Can we get a new patch generated against latest trunk?</p></comment>
<comment id="13048760" author="marshall" created="Mon, 13 Jun 2011 21:05:28 +0000"><p>Ted, by the way I pulled the latest from your private git hub branch where this doesn't compile.</p></comment>
<comment id="13048794" author="marshall" created="Mon, 13 Jun 2011 21:27:36 +0000"><p>I've pushed a new commit to github to resolve this. The bug was indeed inside the patch.</p></comment>
<comment id="13048909" author="breed" created="Tue, 14 Jun 2011 00:03:29 +0000"><p>one other thing. we need to add a section on multi-update to the zookeeper programmers guide. it should be pretty quick just to add a multi-update section. feel free to open another jira to cover adding the doc so that we can get the code committed asap.</p> <p>i'd like to get this in soon.</p></comment>
<comment id="13049603" author="marshall" created="Wed, 15 Jun 2011 04:29:22 +0000"><p>Ted, is this something you can tackle? Also, did you look at the compilation failure I saw? I'd love to get this committed.</p></comment>
<comment id="13049669" author="tdunning" created="Wed, 15 Jun 2011 07:55:47 +0000"><p>I can take a quick look, but I am having trouble getting reliable net access.</p> <p>On Wed, Jun 15, 2011 at 6:29 AM, Marshall McMullen (JIRA)</p></comment>
<comment id="13049670" author="tdunning" created="Wed, 15 Jun 2011 08:01:47 +0000"><p>OK. As a first step, I rebased our changes to current trunk.</p> <p>This will require the usual recheckout due to non-fast-forward operations.</p> <p>Now to the problems you are seeing.</p> </comment>
<comment id="13049673" author="tdunning" created="Wed, 15 Jun 2011 08:05:47 +0000"><p>I see a clean compile on my mac. Looks like I don't understand the problem.<br/> I can't run all the tests just now, but last time I looked they ran.</p> <p>BuzzBook-Pro:zookeeper<span class="error">#91;trunk*#93;</span>$ git checkout multi<br/> Switched to branch 'multi'<br/> BuzzBook-Pro:zookeeper<span class="error">#91;multi*#93;</span>$ ant clean<br/> Buildfile: /Users/tdunning/Apache/zookeeper/build.xml<br/> ...<br/> clean:<br/> BUILD SUCCESSFUL<br/> Total time: 0 seconds<br/> BuzzBook-Pro:zookeeper<span class="error">#91;multi*#93;</span>$ ant compile<br/> ...<br/> version-info:<br/> <span class="error">#91;java#93;</span> Unknown REVISION number, using -1<br/> ...<br/> <span class="error">#91;javac#93;</span> Compiling 52 source files to<br/> /Users/tdunning/Apache/zookeeper/build/classes<br/> ...<br/> <span class="error">#91;javac#93;</span> Compiling 134 source files to<br/> /Users/tdunning/Apache/zookeeper/build/classes<br/> BUILD SUCCESSFUL<br/> Total time: 11 seconds<br/> BuzzBook-Pro:zookeeper<span class="error">#91;multi*#93;</span>$</p> <p>On Wed, Jun 15, 2011 at 10:01 AM, Ted Dunning (JIRA) lt;jira@apache.orggt;<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanelamp;focusedCommentId=13049670#comment-13049670" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-965?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanelamp;focusedCommentId=13049670#comment-13049670</a>]<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch,<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch,<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch,<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch,<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch,<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>.patch<br/> a list of create, delete, update or check objects each of which has a<br/> desired version or file state in the case of create. If all of the version<br/> and existence constraints can be satisfied, then all updates will be done<br/> atomically.<br/> other style has a "Transaction" that allows builder-like methods to build a<br/> set of updates and a commit method to finalize the transaction. This can<br/> trivially be reduced to the first kind of API so the list based API style<br/> should be considered the primitive and the builder style should be<br/> implemented as syntactic sugar.<br/> transaction should be limited to 1MB.<br/> internals. The changes include:<br/> form, the code should be slightly extended to convert a list of operations<br/> to idempotent form.<br/> be detected gracefully and an informative exception should be thrown.<br/> at <a href="https://github.com/tdunning/zookeeper" class="external-link" target="_blank" rel="nofollow noopener">https://github.com/tdunning/zookeeper</a> and am happy to extend committer<br/> status to anyone who agrees to donate their code back to Apache. The final<br/> patch will be attached to this bug as normal.</p></comment>
<comment id="13049797" author="marshall" created="Wed, 15 Jun 2011 14:44:32 +0000"><p>Ted, thanks for taking a look at this. Not sure if you noticed this, but I checked in a change to github to fix the compile error I was seeing. I just wanted you to look at it and see if/why the fix was necessary....</p></comment>
<comment id="13049953" author="tdunning" created="Wed, 15 Jun 2011 18:48:48 +0000"><p>Ahhh... no.</p> <p>I didn't notice that. I will take a look.</p> <p>On Wed, Jun 15, 2011 at 4:45 PM, Marshall McMullen (JIRA)</p> </comment>
<comment id="13049955" author="tdunning" created="Wed, 15 Jun 2011 18:52:11 +0000"><p>Marshall,</p> <p>I just tried with and without your patch. It compiles either way. </p> <p>My feeling is that excessive throws declarations are bad juju anyway so the current state (with your change)<br/> is better than the previous state (with the extra throws in processTxn).</p> <p>I would leave it as is.</p></comment>
<comment id="13049972" author="marshall" created="Wed, 15 Jun 2011 19:35:39 +0000"><p>I agree completely. Thanks for looking it over Ted. Do we need an updated patch to capture my latest change then? </p> <p>Also, do you want to create a new jira case for the changes Benjamin wanted in the zookeeper programmer's guide so that doesn't hold up committing this change?</p></comment>
<comment id="13052677" author="breed" created="Tue, 21 Jun 2011 17:22:40 +0000"><p>do you guys have a patch ready for commit? mahadev is putting together the 3.4.0 release.</p></comment>
<comment id="13052687" author="marshall" created="Tue, 21 Jun 2011 17:29:05 +0000"><p>Ted, can you generate a patch? If not I will generate one as I definitely one this going into 3.4.0.</p></comment>
<comment id="13052688" author="tdunning" created="Tue, 21 Jun 2011 17:29:47 +0000"><p>I will get it out this morning.</p> </comment>
<comment id="13052699" author="tdunning" created="Tue, 21 Jun 2011 17:41:15 +0000"><p>Here is the latest patch rebased to latest trunk. It compiles cleanly and I am currently running tests.</p> <p>I will update github shortly.</p></comment>
<comment id="13052703" author="tdunning" created="Tue, 21 Jun 2011 17:45:47 +0000"><p>Pushed to github.</p> </comment>
<comment id="13052705" author="marshall" created="Tue, 21 Jun 2011 17:49:34 +0000"><p>The only other outstanding item here was to open a Jira case for the zookeeper programmer's guide. Can you do that too Ted?</p></comment>
<comment id="13052715" author="tdunning" created="Tue, 21 Jun 2011 17:55:47 +0000"><p>Done. See <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1102" title="Need update for programmer manual to cover multi operation" class="issue-link" data-issue-key="ZOOKEEPER-1102">ZOOKEEPER-1102</a></p> <p>On Tue, Jun 21, 2011 at 7:49 PM, Marshall McMullen (JIRA)</p> </comment>
<comment id="13052716" author="marshall" created="Tue, 21 Jun 2011 17:57:20 +0000"><p>Awesome! Thanks so much for quickly taking care of these items Ted.</p></comment>
<comment id="13052730" author="tdunning" created="Tue, 21 Jun 2011 18:15:47 +0000"><p>My tests completed successfully.</p> <p>On Tue, Jun 21, 2011 at 7:57 PM, Marshall McMullen (JIRA)</p> </comment>
<comment id="13058100" author="tdunning" created="Thu, 30 Jun 2011 22:00:10 +0000"><p>Final patch for committing</p></comment>
<comment id="13058108" author="hadoopqa" created="Thu, 30 Jun 2011 22:25:01 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12484833/ZOOKEEPER-965.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12484833/ZOOKEEPER-965.patch</a><br/> against trunk revision 1140017.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 21 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/363//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/363//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/363//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/363//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/363//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/363//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13058120" author="breed" created="Thu, 30 Jun 2011 22:54:23 +0000"><p>Committed revision 1141746.</p> <p>thanx ted and marshall! good work.</p></comment>
<comment id="13058474" author="hudson" created="Fri, 1 Jul 2011 10:51:03 +0000"><p>Integrated in ZooKeeper-trunk #1230 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1230/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1230/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>. Need a multi-update command to allow multiple znodes to be updated safely</p> <p>breed : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1141746" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1141746</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooDefs.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/LearnerTest.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/MultiTransactionRecord.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/package.html</li> <li>/zookeeper/trunk/src/c/tests/ZKMocks.cc</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/Transaction.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/KeeperException.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java</li> <li>/zookeeper/trunk/src/c/Makefile.am</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/MultiResponse.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java</li> <li>/zookeeper/trunk/src/c/src/zookeeper.c</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/DataTree.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/MultiResponseTest.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/Request.java</li> <li>/zookeeper/trunk/src/zookeeper.jute</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/Op.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/TraceFormatter.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java</li> <li>/zookeeper/trunk/src/c/include/proto.h</li> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/RequestProcessor.java</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/OpResult.java</li> <li>/zookeeper/trunk/src/c/include/zookeeper.h</li> <li>/zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java</li> <li>/zookeeper/trunk/src/java/test/org/apache/zookeeper/test/CnxManagerTest.java.orig</li> <li>/zookeeper/trunk/src/c/tests/TestOperations.cc</li> </ul> </comment>
<comment id="13059180" author="hudson" created="Sun, 3 Jul 2011 10:57:55 +0000"><p>Integrated in ZooKeeper-trunk #1232 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1232/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1232/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-965" title="Need a multi-update command to allow multiple znodes to be updated safely" class="issue-link" data-issue-key="ZOOKEEPER-965"><del>ZOOKEEPER-965</del></a>. Need a multi-update command to allow multiple znodes to be updated safely<br/> (missed a file)</p> <p>breed : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1142377" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1142377</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/src/c/tests/TestMulti.cc</li> </ul> </comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12477996">ZOOKEEPER-911</issuekey>
</issuelink>
</outwardlinks>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12513948">ZOOKEEPER-1124</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12484833" name="ZOOKEEPER-965.patch" size="178268" author="tdunning" created="Thu, 30 Jun 2011 22:00:10 +0000"/>
<attachment id="12483314" name="ZOOKEEPER-965.patch" size="178408" author="tdunning" created="Tue, 21 Jun 2011 17:41:14 +0000"/>
<attachment id="12481775" name="ZOOKEEPER-965.patch" size="178427" author="tdunning" created="Wed, 8 Jun 2011 05:55:30 +0000"/>
<attachment id="12480886" name="ZOOKEEPER-965.patch" size="176083" author="tdunning" created="Tue, 31 May 2011 00:52:24 +0000"/>
<attachment id="12480882" name="ZOOKEEPER-965.patch" size="176126" author="tdunning" created="Mon, 30 May 2011 23:58:59 +0000"/>
<attachment id="12480874" name="ZOOKEEPER-965.patch" size="258622" author="tdunning" created="Mon, 30 May 2011 21:04:03 +0000"/>
<attachment id="12480807" name="ZOOKEEPER-965.patch" size="176207" author="tdunning" created="Sun, 29 May 2011 23:52:13 +0000"/>
<attachment id="12479713" name="ZOOKEEPER-965.patch" size="180691" author="tdunning" created="Thu, 19 May 2011 02:12:27 +0000"/>
<attachment id="12479708" name="ZOOKEEPER-965.patch" size="171364" author="tdunning" created="Thu, 19 May 2011 01:33:53 +0000"/>
<attachment id="12479254" name="ZOOKEEPER-965.patch" size="173293" author="tdunning" created="Sun, 15 May 2011 08:02:41 +0000"/>
<attachment id="12479027" name="ZOOKEEPER-965.patch" size="169640" author="tdunning" created="Thu, 12 May 2011 22:54:25 +0000"/>
<attachment id="12478739" name="ZOOKEEPER-965.patch" size="166281" author="tdunning" created="Tue, 10 May 2011 21:56:34 +0000"/>
<attachment id="12478668" name="ZOOKEEPER-965.patch" size="154321" author="tdunning" created="Tue, 10 May 2011 05:16:14 +0000"/>
<attachment id="12478667" name="ZOOKEEPER-965.patch" size="157475" author="tdunning" created="Tue, 10 May 2011 05:09:53 +0000"/>
<attachment id="12478618" name="ZOOKEEPER-965.patch" size="154160" author="tdunning" created="Mon, 9 May 2011 17:00:15 +0000"/>
<attachment id="12478186" name="ZOOKEEPER-965.patch" size="136440" author="tdunning" created="Wed, 4 May 2011 17:42:24 +0000"/>
<attachment id="12478127" name="ZOOKEEPER-965.patch" size="137748" author="tdunning" created="Wed, 4 May 2011 06:12:05 +0000"/>
<attachment id="12478117" name="ZOOKEEPER-965.patch" size="136679" author="tdunning" created="Wed, 4 May 2011 01:41:20 +0000"/>
<attachment id="12478112" name="ZOOKEEPER-965.patch" size="130576" author="tdunning" created="Wed, 4 May 2011 00:19:38 +0000"/>
<attachment id="12478111" name="ZOOKEEPER-965.patch" size="130744" author="tdunning" created="Wed, 4 May 2011 00:05:32 +0000"/>
<attachment id="12477971" name="ZOOKEEPER-965.patch" size="153414" author="tdunning" created="Mon, 2 May 2011 17:17:24 +0000"/>
</attachments>
<subtasks>
<subtask id="12494221">ZOOKEEPER-966</subtask>
<subtask id="12494222">ZOOKEEPER-967</subtask>
<subtask id="12494223">ZOOKEEPER-968</subtask>
</subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47527</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i062mn:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33357</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-999] Create an package integration project</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-999</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></description>
<environment><p>Java 6, RHEL/Ubuntu</p></environment>
<key id="12499287">ZOOKEEPER-999</key>
<summary>Create an package integration project</summary>
<type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21141avatarType=issuetype">New Feature</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="eyang">Eric Yang</assignee>
<reporter username="eyang">Eric Yang</reporter>
<labels> </labels>
<created>Tue, 22 Feb 2011 01:36:14 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:05 +0000</updated>
<resolved>Mon, 29 Aug 2011 21:52:58 +0000</resolved>
<fixVersion>3.4.0</fixVersion>
<component>build</component>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="12997626" author="mahadev" created="Tue, 22 Feb 2011 02:10:38 +0000"><p>eric,<br/> I am not sure what you intend to do with this jira. Can you please be a little more elaborate? </p></comment>
<comment id="12997641" author="eyang" created="Tue, 22 Feb 2011 05:07:40 +0000"><p>The plan is to create an ant target which generates installable rpm package, and a conf pseudo rpm. The layout of the files will be installed as recommended by Owen's deployment layout. This will ensure hadoop stack software can integrate well between projects.</p></comment>
<comment id="12997643" author="eyang" created="Tue, 22 Feb 2011 05:26:06 +0000"><p>Usage:</p> <p>ant "rpm" creates rpm package<br/> ant "deb" creates debian package</p></comment>
<comment id="12997837" author="thkoch" created="Tue, 22 Feb 2011 15:05:54 +0000"><p>ZooKeeper is already packaged for Debian and available in the current testing repository of Debian. I'm the packager.<br/> I'd propose that we coordinate our efforts so that we don't end up with two versions of Debian packages. The official<img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/help_16.png" height="16" width="16" align="absmiddle" alt="" border="0"/> "Debian" package in the Debian repository and the one created by the ant target.</p> <p>I don't know, whether there are any efforts to package ZooKeeper for Fedora/Red Hat.</p></comment>
<comment id="12997883" author="eyang" created="Tue, 22 Feb 2011 16:31:40 +0000"><p>Hi Thomas,</p> <p>Thank you for bringing my attention to the official Debian builds. The packages are divided in smaller components. It would be good to use Debian package naming scheme. What else would you recommend to coordinate our efforts?</p></comment>
<comment id="13000765" author="thkoch" created="Tue, 1 Mar 2011 07:55:38 +0000"><p>Hi Eric,</p> <p>I'd suggest to drop the building of deb packages from your patch and instead join efforts to have ZooKeeper in Debian as polished and current as possible. There's very much more about a proper .deb package then just getting the thing running.<br/> Do you have any need for .deb packages of snapshots or is it enough for you to have packages for each release?</p> <p>I don't know anything about RPMs so I can't give any suggestions about that. Have you asked anybody at Red Hat / Fedora to build official packages?</p> <p>I've asked on IRC and fedora people pointed me to the following pages if someone wants to start building RPMs:<br/> <a href="http://fedoraproject.org/wiki/PackageMaintainers/WishList" class="external-link" target="_blank" rel="nofollow noopener">http://fedoraproject.org/wiki/PackageMaintainers/WishList</a><br/> <a href="http://fedoraproject.org/wiki/PackageMaintainers/Join" class="external-link" target="_blank" rel="nofollow noopener">http://fedoraproject.org/wiki/PackageMaintainers/Join</a></p> <p>Do you really need RPMs?</p> <p>Please also keep in mind that there already are "inofficial" ZooKeeper packages from cloudera.</p></comment>
<comment id="13000993" author="eyang" created="Tue, 1 Mar 2011 18:03:46 +0000"><p>Hi Thomas,</p> <p>The idea is to be able to bring more snapshots to the hands of the developers. Distro based official release usually is more integrated with the OS and more polished for the end user experience. However, the goal is to provide a set of tools that can help early adaptors (developers) to deploy in test/production environment. The packaging cycle is more rapid than distro official release build. It would be challenging to map Apache packages to exactly the way Debian customize the OS because other distro may have different ideas on packaging. If we remove deb packaging from the build system, it would discourage the developer to develop on Debian platform. RedHat does not have RPMs for hadoop for now. When Redhat starts to package hadoop, Redhat team will definitely have their own packaging sets with patches etc. </p> <p>What I proposed here, is similar philosophy that you can download mysql from mysql website with different binary packages options, but the OS vendor will have a more stable and well integrated version.</p></comment>
<comment id="13001021" author="thkoch" created="Tue, 1 Mar 2011 18:59:29 +0000"><p>IRC chat between thkoch and mahadev, march 01<br/> lt;tgt; Hi. Do you need only rpm packages of ZK or also .deb packages?<br/> lt;mgt; i dont really need either... i just thought it would be good for community to get it from ZK<br/> lt;mgt; no ?<br/> lt;tgt; There already are cloudera packages and Debian packages. Having them from ZK also only adds to the confusion. I know that my colleagues did spend time to compare advantages and disadvantages of Debian packages vs. cloudera packages<br/> lt;mgt; thats the reason to do it in ZK<br/> lt;mgt; to remove any confusion<br/> lt;mgt; the easier it is if apache ZK can be the source of truth for RPM's<br/> lt;tgt; IMHO it's best to leave the packaging to the distributions. They know best about integration, QA of integration and release management<br/> lt;tgt; I really don't know about RPM but Debian is doing a great job in QA and application lifecycle<br/> lt;mgt; could be in some cases .... but i'd really like folks on RHEL and debian to be able ot say rpm install<br/> lt;mgt; or simmilar for debian<br/> lt;mgt; and do it via apache releases<br/> lt;tgt; you can do apt-get install zookeeper already<br/> lt;mgt; i totally believe it .....<br/> lt;mgt; agreed if debian guys are already doing it we can throw away zk for deb<br/> lt;mgt; makes sense to me<br/> lt;mgt; but RPMs should be useful no?<br/> lt;mgt; if red had starts doing it ... am willing to throw that away as well<br/> lt;mgt; what do you think?<br/> lt;tgt; It would kind of invalidate my work, if Apache would provide Debian packages... About Red Hat I couldn't care less. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> I only know from colleagues, that packaging for Red Hat should be a major pain.<br/> lt;mgt; if debian provides zk releases<br/> lt;tgt; I'd only suggest to coordinate with cloudera about the RPMs. They already provide RPMs. Maybe one could join forces to bring them into Fedora/Red Hat as official packages<br/> lt;mgt; i'd be happy to ...... you want to comment on the jira?<br/> lt;tgt; I already commented on the jira.<br/> lt;mgt; the idea of folks contributing to apache is to help them contribute<br/> lt;mgt; and not to throw away there work .....<br/> lt;mgt; <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/><br/> lt;mgt; in case of debian it makes sense since we already have debian</p></comment>
<comment id="13001035" author="thkoch" created="Tue, 1 Mar 2011 19:15:05 +0000"><p>I'd be very motivated to work together with the Apache infrastructure team and integrate Debian package building in the Apache QA process. Thus all Apache projects could benefit. This would however be a longer process of several months.</p> <p>For the short term I can offer to update the Debian ZooKeeper package in the Debian experimantal distribution more frequent.</p></comment>
<comment id="13001050" author="mahadev" created="Tue, 1 Mar 2011 19:37:56 +0000"><p>Thomas,<br/> would it be possible to have the package building in the apache (without QA)? This probably might be lesser time. no?</p></comment>
<comment id="13001052" author="eyang" created="Tue, 1 Mar 2011 19:38:36 +0000"><p>Thanks for volunteering. The packaging process could definitely have a good coordinator between Debian and Apache. The current structure is a wireframe of the directory path layout by Owen for the greater hadoop stack. It will be easier for developer to locate dependency libraries across different Apache projects by using the directory structure layout in this chain of jiras. I recommend we keep the code for the longer term planning process, and refine into smaller package sets until packages ready for Debian distribution.</p></comment>
<comment id="13001097" author="thkoch" created="Tue, 1 Mar 2011 20:28:49 +0000"><p>@mahadev: I don't understand? What do you mean with "have the package building in the apache (without QA)"?</p> <p>I don't know much about the apache infrastructure, but I could think of three possibilities:</p> <ul class="alternate" type="square"> <li>build a Debian package for every patch submitted to hudson/jenkins.</li> <li>build a Debian package for every commit to trunk</li> <li>build Debian packages on a manual trigger</li> </ul> <p>@Eric: That's exactly what I'd like to do: Build the packages for Debian and work together with apache to make packaging easier and raise awareness on each side for different priorities and agendas. Unfortunately I don't understand anything beginning from your second sentence. What "current structure", "wireframe", "greater hadoop stack"? Which "chain of jiras"? - I believe I'm missing some context here.</p></comment>
<comment id="13001112" author="mahadev" created="Tue, 1 Mar 2011 20:56:50 +0000"><p>thomas, never mind. Ignore my comments. I think it would be great to have debian packages for every commit. Is that possible? I think you can poll/register for notification. But again all this is for later. </p> <p>I am ok with just having RPM packages and keeping out debian since as you suggest debian already has this.</p> </comment>
<comment id="13001116" author="eyang" created="Tue, 1 Mar 2011 21:09:34 +0000"><p>Thomas, Owen proposed a standard layout (wireframe) of the directory structure in <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>, PDF attachment in <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a> describes the layout. <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a> also links to a list of jiras related to packages for Hadoop stack. Hadoop stack composed of Hadoop, Pig, HBase, Hive, Chukwa and Mahout.</p> <p>All packages have layout the same as the proposed paper. </p></comment>
<comment id="13006278" author="eyang" created="Sun, 13 Mar 2011 21:11:52 +0000"><p>Package builder design</p> <p>For supporting multiple type of packages, this project layout the packaging source code structure like this:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>src/packages/rpm /deb /conf-pseudo </pre> </div></div> <p>rpm - meta data for creating rpm packages. SysV init style startup script is also included for start up process in Redhat like environment.</p> <p>deb - meta data for creating debian packages. BSD init style startup script is also included for start up process in Ubuntu like environment.</p> <p>conf-pseudo - Configuration template for demo pseudo cluster setup. By default both rpm, or deb binary package does not startup the system. The purpose of conf-pseudo is to create a (rpm/deb) package as demonstration of how to setup a single node cluster and turn on services by configuration.</p> <p>Software home directory is designed to locate in:</p> <p>${prefix}/share/${project}</p> <p>src/packages/update-${project}-env.sh runs in the post installation phase which creates symlinks and making software structure to map to the proposed layout in <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a></p> <p>/etc/default/${project}-evn.sh is symlinked to the project environment script. Hence, project environment variables are shared across projects.</p> <p>Project build file can override the package path in the build phase:</p> <p>Sample build.properties</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>package.prefix=/usr package.conf.dir=/etc/project package.log.dir=/var/log/project package.pid.dir=/var/log/project </pre> </div></div> <p>For RPM package, it is possible to override location at installation phase by specifying:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>rpm -i [project]-[version]-[rev].[arch].rpm \ --relocate /usr=/usr/local/zookeeper \ --relocate /etc/zookeeper=/usr/local/etc/zookeeper \ --relocate /var/log/zookeeper=/opt/logs/zookeeper \ --relocate /var/run/zookeeper=/opt/run/zookeeper </pre> </div></div> <p>The same build structure can be apply to both ant or maven build scripts. It also expandable to include mac native package installer using this design pattern.</p></comment>
<comment id="13019500" author="eyang" created="Wed, 13 Apr 2011 19:24:13 +0000"><p>Revised patch to include C/Python binding as part of rpm/deb package builds. Realign directory structure to Linux Standard Base format (same as Owen's proposal).</p></comment>
<comment id="13019947" author="eyang" created="Thu, 14 Apr 2011 17:57:37 +0000"><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-2.patch revised the version number for zkpython to be the same as zookeeper version.</p></comment>
<comment id="13037008" author="phunt" created="Fri, 20 May 2011 19:05:15 +0000"><p>Hi Eric, are you ready to go patch available on this?</p></comment>
<comment id="13052967" author="eyang" created="Wed, 22 Jun 2011 00:20:08 +0000"><ul class="alternate" type="square"> <li>Remove conf-pseudo rpm. RPM works out of the box without additional config tweaks.</li> <li>Improved handling of environment variables.</li> </ul> </comment>
<comment id="13052976" author="hadoopqa" created="Wed, 22 Jun 2011 00:56:14 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12483378/ZOOKEEPER-999-3.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12483378/ZOOKEEPER-999-3.patch</a><br/> against trunk revision 1138213.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 11 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/344//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/344//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/344//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/344//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/344//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/344//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13053556" author="eyang" created="Thu, 23 Jun 2011 00:13:14 +0000"><p>I am not sure how the build system check for ant tar failed. It appears to be working from the console output.</p></comment>
<comment id="13053977" author="phunt" created="Thu, 23 Jun 2011 17:13:30 +0000"><p>Hi Eric, the javac warnings are saved in the jenkins artifacts, I see some issues here:<br/> <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/344/artifact/trunk/patchprocess/patchJavacWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/344/artifact/trunk/patchprocess/patchJavacWarnings.txt</a></p> <p>specifically:<br/> <span class="error">#91;exec#93;</span> src/c/zookeeper.c:19:20: error: Python.h: No such file or directory</p> <p>Would you be able to talk with Giri about this? I'm not sure why but it seems that python.h is missing on this host (hadoop9), either that or something we have changed/not doing. (any ideas? usually we don't see this issue...)</p> <p>Regards.</p></comment>
<comment id="13054012" author="eyang" created="Thu, 23 Jun 2011 18:17:04 +0000"><p>The build machine does not have python-devel rpm installed, I will work with Giri to see if we can install the header files. Thanks</p></comment>
<comment id="13054262" author="gkesavan" created="Fri, 24 Jun 2011 06:40:03 +0000"><p>hadoop build servers are running ubuntu-9.04 which is really old; ATM Im unable to update or install any package with this version of ubuntu. I had to upgrade the os version to add install any package. Im working on it.. </p></comment>
<comment id="13056914" author="mahadev" created="Wed, 29 Jun 2011 00:36:29 +0000"><p>Eric,</p> <p> I applied the patch and tried ant clean package. It fails with the following:</p> <p> <span class="error">#91;exec#93;</span> building 'zookeeper' extension<br/> <span class="error">#91;exec#93;</span> creating /Users/mahadev/workspace/zookeeper-workspace/zookeeper-git/build/contrib/zkpython/temp.macosx-10.5-i386-2.5<br/> <span class="error">#91;exec#93;</span> creating /Users/mahadev/workspace/zookeeper-workspace/zookeeper-git/build/contrib/zkpython/temp.macosx-10.5-i386-2.5/src<br/> <span class="error">#91;exec#93;</span> creating /Users/mahadev/workspace/zookeeper-workspace/zookeeper-git/build/contrib/zkpython/temp.macosx-10.5-i386-2.5/src/c<br/> <span class="error">#91;exec#93;</span> gcc -fno-strict-aliasing -Wno-long-double -no-cpp-precomp -mno-fused-madd -fno-common -dynamic -DNDEBUG -g -Os -Wall -Wstrict-prototypes -DMACOSX -I/usr/include/ffi -DENABLE_DTRACE -arch i386 -arch ppc -pipe -I../../..//src/c/include -I../../..//build/c -I../../..//src/c/generated -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5 -c src/c/zookeeper.c -o /Users/mahadev/workspace/zookeeper-workspace/zookeeper-git/build/contrib/zkpython/temp.macosx-10.5-i386-2.5/src/c/zookeeper.o<br/> <span class="error">#91;exec#93;</span> creating /Users/mahadev/workspace/zookeeper-workspace/zookeeper-git/build/contrib/zkpython/lib.macosx-10.5-i386-2.5<br/> <span class="error">#91;exec#93;</span> gcc -Wl,-F. -bundle -undefined dynamic_lookup -arch i386 -arch ppc /Users/mahadev/workspace/zookeeper-workspace/zookeeper-git/build/contrib/zkpython/temp.macosx-10.5-i386-2.5/src/c/zookeeper.o -L../../..//src/c/.libs/ -L../../..//build/c/.libs/ -L../../..//build/test/test-cppunit/.libs -L/usr/local/lib -lzookeeper_mt -o /Users/mahadev/workspace/zookeeper-workspace/zookeeper-git/build/contrib/zkpython/lib.macosx-10.5-i386-2.5/zookeeper.so<br/> <span class="error">#91;exec#93;</span> ld: library not found for -lzookeeper_mt<br/> <span class="error">#91;exec#93;</span> ld: library not found for -lzookeeper_mt</p> <p>Looks like you added zkpython as the default build depending on c libraries being installed?</p></comment>
<comment id="13056968" author="eyang" created="Wed, 29 Jun 2011 03:16:20 +0000"><p>On Mac, C library should have extension .dylib. zkpython Make file only works on linux with .so extension. I will submit another patch to fix zkpython's make file.</p></comment>
<comment id="13057367" author="eyang" created="Wed, 29 Jun 2011 17:56:05 +0000"><p>Fix quirks in autoconf configuration.</p> <p>zkpython was failing due to missing c binding library. C binding library was failing due to unable to locate cppunit.m4. Since cppunit could be installed anywhere in the system. I modified the build system to have two new properties for specify cppunit location.</p> <p>ant tar -Dcppunit.m4=/usr/local/share/aclocal -Dcppunit.lib=/usr/lib</p></comment>
<comment id="13057378" author="hadoopqa" created="Wed, 29 Jun 2011 18:24:09 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12484668/ZOOKEEPER-999-4.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12484668/ZOOKEEPER-999-4.patch</a><br/> against trunk revision 1140017.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 11 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/357//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/357//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/357//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/357//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/357//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/357//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13060837" author="eyang" created="Wed, 6 Jul 2011 20:58:12 +0000"><p>Giri, any progress on installing Python.h on the build machine? Try: </p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>dpkg --install python-dev </pre> </div></div></comment>
<comment id="13068012" author="phunt" created="Tue, 19 Jul 2011 22:08:15 +0000"><p>Eric, I'd really like to see this in 3.4, perhaps you could turn off python support for the time being? (until jenkins has proper support)</p></comment>
<comment id="13068015" author="jiraposter@reviews.apache.org" created="Tue, 19 Jul 2011 22:16:57 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1119" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1119</a><br/> -----------------------------------------------------------</p> <p>there are a number of places in this patch where ZooKeeper is referred to as Zookeeper, this should be made consistent ("ZooKeeper").</p> <ul class="alternate" type="square"> <li>Patrick</li> </ul> <p>On 2011-07-19 22:15:38, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-19 22:15:38)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1141173 </p></blockquote> <blockquote><p>./build.xml 1141176 </p></blockquote> <blockquote><p>./ivy.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1141173 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zoo.cfg PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1141173 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13068016" author="jiraposter@reviews.apache.org" created="Tue, 19 Jul 2011 22:16:59 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a><br/> -----------------------------------------------------------</p> <p>Review request for zookeeper and Mahadev Konar.</p> <p>Summary<br/> -------</p> <p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p> <p>Diffs</p> <hr /> <p> ./bin/zkCleanup.sh 1141173 <br/> ./bin/zkCli.sh 1141173 <br/> ./bin/zkEnv.sh 1141173 <br/> ./bin/zkServer.sh 1141173 <br/> ./build.xml 1141176 <br/> ./ivy.xml 1141173 <br/> ./src/contrib/build-contrib.xml 1141173 <br/> ./src/contrib/build.xml 1141173 <br/> ./src/contrib/zkpython/build.xml 1141173 <br/> ./src/contrib/zkpython/ivy.xml PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION <br/> ./src/contrib/zkpython/src/python/setup.py 1141173 <br/> ./src/packages/deb/init.d/zookeeper PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/conffile PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/control PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postrm PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/preinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/prerm PRE-CREATION <br/> ./src/packages/rpm/init.d/zookeeper PRE-CREATION <br/> ./src/packages/rpm/spec/zookeeper.spec PRE-CREATION <br/> ./src/packages/templates/conf/zoo.cfg PRE-CREATION <br/> ./src/packages/update-zookeeper-env.sh PRE-CREATION <br/> ./src/recipes/build-recipes.xml 1141173 <br/> ./src/recipes/build.xml 1141173 <br/> ./src/recipes/lock/build.xml 1141173 <br/> ./src/recipes/queue/build.xml 1141173 </p> <p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Patrick</p> </comment>
<comment id="13068040" author="phunt" created="Tue, 19 Jul 2011 22:46:28 +0000"><p>Updated with some comments/concerns.</p> </comment>
<comment id="13068041" author="jiraposter@reviews.apache.org" created="Tue, 19 Jul 2011 22:46:58 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1120" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1120</a><br/> -----------------------------------------------------------</p> <p>1) src/recipes/election has been added recently to trunk, are changes needed there as well? (see my comments below - seems like if we separated out pkg building from regular build it would make this more explicit/obvious)</p> <p>2) i've been wondering for a while, perhaps we should have different scripts for zkServer.sh depending upon whether running in "development mode" and running in "package mode". There's alot of cruft in there having to do with determining which mode we are in and then setting up appropriately (zkCli, zkServer, zkCleanup, etc...).</p> <p>./bin/zkEnv.sh<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2312" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2312</a>gt;</p> <p> this was recently changed by <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1084" title="Hard-coding a well-known location for configuration directory gives less flexibility for packaging Zookeeper configurations" class="issue-link" data-issue-key="ZOOKEEPER-1084"><del>ZOOKEEPER-1084</del></a> to either use the variable if passed, or use ../conf (but not ../etc)</p> <p>./build.xml<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2310" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2310</a>gt;</p> <p> in my case aclocal does not reside in /usr/local... (ubuntu natty) but rather /usr/share</p> <p> can we determine this in some other way?</p> <p>./build.xml<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2311" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2311</a>gt;</p> <p> I think this is going to cause problems for our normal release - we don't compile the c bindings as part of this process. This should be separated out.</p> <p> I think what we'd really need is to have separate targets for building the source artifact, and any additional "binary convenience" artifacts. Avro does this very successfully.</p> <p> How about separating out the building of packages entirely from building/testing the java code? Say by having a separate build-packages.xml (ant build file) instead?</p> <p>./ivy.xml<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2296" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2296</a>gt;</p> <p> jdeb is listed as a default dependency, shouldn't this only be used for building, not default? (similar to say rat)</p> <p>./src/contrib/zkpython/ivy.xml<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2314" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2314</a>gt;</p> <p> sorry, why do we need this in zkpython?</p> <p>./src/contrib/zkpython/ivy.xml<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2298" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2298</a>gt;</p> <p> replace Hadoop with ZooKeeper</p> <p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2299" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2299</a>gt;</p> <p> maintainer should be dev@zookeeper</p> <p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2300" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2300</a>gt;</p> <p> Hadoop?</p> <p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2301" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2301</a>gt;</p> <p> zookeeper rather than hadoop?</p> <p>./src/packages/deb/init.d/zookeeper<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2304" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2304</a>gt;</p> <p> hadoop-gt;zookeeper</p> <p>./src/packages/deb/zookeeper.control/control<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2306" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2306</a>gt;</p> <p> dev@zookeeper ?</p> <p>./src/packages/rpm/spec/zookeeper.spec<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2307" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2307</a>gt;</p> <p> zookeeper</p> <p>./src/packages/rpm/spec/zookeeper.spec<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2308" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2308</a>gt;</p> <p> zookeeper?</p> <p>./src/packages/templates/conf/zoo.cfg<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2309" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2309</a>gt;</p> <p> is there a way to not duplicate this? (a sample is also in conf)</p> <p>./src/packages/update-zookeeper-env.sh<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2303" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2303</a>gt;</p> <p> the group used is hadoop? (seems fine, just wondering...)</p> <ul class="alternate" type="square"> <li>Patrick</li> </ul> <p>On 2011-07-19 22:15:38, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-19 22:15:38)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1141173 </p></blockquote> <blockquote><p>./build.xml 1141176 </p></blockquote> <blockquote><p>./ivy.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1141173 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zoo.cfg PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1141173 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13068076" author="jiraposter@reviews.apache.org" created="Wed, 20 Jul 2011 00:11:57 +0000"> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./bin/zkEnv.sh, lines 31-35</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26344#file26344line31" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26344#file26344line31</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; this was recently changed by <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1084" title="Hard-coding a well-known location for configuration directory gives less flexibility for packaging Zookeeper configurations" class="issue-link" data-issue-key="ZOOKEEPER-1084"><del>ZOOKEEPER-1084</del></a> to either use the variable if passed, or use ../conf (but not ../etc)</p></blockquote> <p>Hadoop stack software used the same pattern *_HOME/conf for configuration directory. This naming convention doesn't work when *_HOME/conf is collapsed into a single directory, (i.e. /usr) A proposal maded in <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a> to address this issue. For packaged software, $PREFIX/etc/$project will be the naming convention for configuration directory. For developer, it will use $PREFIX/conf for source code build. This patch already merged change for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1084" title="Hard-coding a well-known location for configuration directory gives less flexibility for packaging Zookeeper configurations" class="issue-link" data-issue-key="ZOOKEEPER-1084"><del>ZOOKEEPER-1084</del></a>, it will honor $ZOOCFGDIR if it is defined.</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./build.xml, line 155</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26346#file26346line155" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26346#file26346line155</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; in my case aclocal does not reside in /usr/local... (ubuntu natty) but rather /usr/share</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; can we determine this in some other way?</p></blockquote> <p>I am fine to use /usr/share as default. It is also possible to overwrite this in build.properties. Conditional checking to set property is not pretty in ant, it may be better to leave this as a property for now.</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./build.xml, line 627</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26346#file26346line627" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26346#file26346line627</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; I think this is going to cause problems for our normal release - we don't compile the c bindings as part of this process. This should be separated out.</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; I think what we'd really need is to have separate targets for building the source artifact, and any additional "binary convenience" artifacts. Avro does this very successfully.</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; How about separating out the building of packages entirely from building/testing the java code? Say by having a separate build-packages.xml (ant build file) instead?</p></blockquote> <p>We can skip compile-native. There is a package-native target for rpm. I will make the change.</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./ivy.xml, line 52</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26347#file26347line52" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26347#file26347line52</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; jdeb is listed as a default dependency, shouldn't this only be used for building, not default? (similar to say rat)</p></blockquote> <p>I will change from "default" to "package" to be sure jdeb is not included in release tarball.</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/contrib/zkpython/ivy.xml, line 1</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26351#file26351line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26351#file26351line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; sorry, why do we need this in zkpython?</p></blockquote> <p>Only jdeb is required for packaging. I will trim down the ivy.xml.</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/update-zookeeper-env.sh, line 131</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26365#file26365line131" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26365#file26365line131</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; the group used is hadoop? (seems fine, just wondering...)</p></blockquote> <p>I set the full stack of the software to be ownership by group hadoop for easier file ownership management.</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/templates/conf/zoo.cfg, lines 1-12</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26364#file26364line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26364#file26364line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; is there a way to not duplicate this? (a sample is also in conf)</p></blockquote> <p>How about generate conf/zoo_sample.cfg from src/packages/templates/conf/zoo.cfg as part of the build process?</p> <ul class="alternate" type="square"> <li>Eric</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1120" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1120</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-19 22:15:38, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-19 22:15:38)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1141173 </p></blockquote> <blockquote><p>./build.xml 1141176 </p></blockquote> <blockquote><p>./ivy.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1141173 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zoo.cfg PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1141173 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13068077" author="jiraposter@reviews.apache.org" created="Wed, 20 Jul 2011 00:11:59 +0000"> <blockquote><p>On 2011-07-19 22:16:54, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; there are a number of places in this patch where ZooKeeper is referred to as Zookeeper, this should be made consistent ("ZooKeeper").</p></blockquote> <p>Will do.</p> <ul class="alternate" type="square"> <li>Eric</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1119" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1119</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-19 22:15:38, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-19 22:15:38)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1141173 </p></blockquote> <blockquote><p>./build.xml 1141176 </p></blockquote> <blockquote><p>./ivy.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1141173 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zoo.cfg PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1141173 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13068094" author="jiraposter@reviews.apache.org" created="Wed, 20 Jul 2011 00:41:57 +0000"> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; 1) src/recipes/election has been added recently to trunk, are changes needed there as well? (see my comments below - seems like if we separated out pkg building from regular build it would make this more explicit/obvious)</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; 2) i've been wondering for a while, perhaps we should have different scripts for zkServer.sh depending upon whether running in "development mode" and running in "package mode". There's alot of cruft in there having to do with determining which mode we are in and then setting up appropriately (zkCli, zkServer, zkCleanup, etc...).</p></blockquote> <p>What do you think of this idea (2 in particular?) I guess hadoop is fine with this mixed use? Perhaps we can take some ideas from there an apply?</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./bin/zkEnv.sh, lines 31-35</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26344#file26344line31" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26344#file26344line31</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; this was recently changed by <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1084" title="Hard-coding a well-known location for configuration directory gives less flexibility for packaging Zookeeper configurations" class="issue-link" data-issue-key="ZOOKEEPER-1084"><del>ZOOKEEPER-1084</del></a> to either use the variable if passed, or use ../conf (but not ../etc)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>Hadoop stack software used the same pattern *_HOME/conf for configuration directory. This naming convention doesn't work when *_HOME/conf is collapsed into a single directory, (i.e. /usr) A proposal maded in <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a> to address this issue. For packaged software, $PREFIX/etc/$project will be the naming convention for configuration directory. For developer, it will use $PREFIX/conf for source code build. This patch already merged change for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1084" title="Hard-coding a well-known location for configuration directory gives less flexibility for packaging Zookeeper configurations" class="issue-link" data-issue-key="ZOOKEEPER-1084"><del>ZOOKEEPER-1084</del></a>, it will honor $ZOOCFGDIR if it is defined.</p></blockquote> <p>we should look at moving to best practices, esp if hadoop already figured this out. Would you mind starting a ZK wiki page detailing both the bin/* scripts and how it fits into packaging? Or perhaps we can document it within the scripts themselves? I'd like to see us start deprecating (and eventually removing) the old ways of doing things an moving people to whatever our current best practices are.</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./build.xml, line 155</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26346#file26346line155" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26346#file26346line155</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; in my case aclocal does not reside in /usr/local... (ubuntu natty) but rather /usr/share</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; can we determine this in some other way?</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>I am fine to use /usr/share as default. It is also possible to overwrite this in build.properties. Conditional checking to set property is not pretty in ant, it may be better to leave this as a property for now.</p></blockquote> <p>I'm fine either way - as long as it doesn't impact the ability for people to easily checkout the code and build. I wasn't sure how this would effect that.</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/update-zookeeper-env.sh, line 131</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26365#file26365line131" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26365#file26365line131</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; the group used is hadoop? (seems fine, just wondering...)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>I set the full stack of the software to be ownership by group hadoop for easier file ownership management.</p></blockquote> <p>seems fine. Are you planning to participate in Bigtop? Would love to have you involved. It would be great to nail all this type of thing down so that it will be consistent. (or make it easy to configure if there's no consensus, ie figure out what ppl agree on and what not).</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/templates/conf/zoo.cfg, lines 1-12</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26364#file26364line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26364#file26364line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; is there a way to not duplicate this? (a sample is also in conf)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>How about generate conf/zoo_sample.cfg from src/packages/templates/conf/zoo.cfg as part of the build process?</p></blockquote> <p>My concerns are: 1) make it easy for ppl to get started with development, 2) try to limit duplication, esp stuff we're likely to forget to update, 3) generated code should go into build (eventually target once maven is here)</p> <p>perhaps a conf/zoo_template.cfg that could be used by 1), and generate into build/.../src/packages/templates/conf/zoo.cfg for use in packaging?</p> <ul class="alternate" type="square"> <li>Patrick</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1120" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1120</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-19 22:15:38, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-19 22:15:38)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1141173 </p></blockquote> <blockquote><p>./build.xml 1141176 </p></blockquote> <blockquote><p>./ivy.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1141173 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zoo.cfg PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1141173 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13068097" author="jiraposter@reviews.apache.org" created="Wed, 20 Jul 2011 00:45:57 +0000"> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; 1) src/recipes/election has been added recently to trunk, are changes needed there as well? (see my comments below - seems like if we separated out pkg building from regular build it would make this more explicit/obvious)</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; 2) i've been wondering for a while, perhaps we should have different scripts for zkServer.sh depending upon whether running in "development mode" and running in "package mode". There's alot of cruft in there having to do with determining which mode we are in and then setting up appropriately (zkCli, zkServer, zkCleanup, etc...).</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick Hunt wrote:</p></blockquote> <blockquote><p>What do you think of this idea (2 in particular?) I guess hadoop is fine with this mixed use? Perhaps we can take some ideas from there an apply?</p></blockquote> <p>1) Is there a plan to grow more recipes? If yes, I would recommend to use maven for build script because it allows submodule to call parent build profiles. We can have a centralized template for creating recipes rpm/deb packages. Ant recursive structure is difficult to maintain because the subdirectory build.xml file needs to refer to parent build.xml to include packaging templates, which generates too much repetitive tasks. Let's put recipes packaging as a separate task for future enhancement.</p> <p>2) Code reuse would be ideal. I am not sure if we want to have different scripts, perhaps consolidated functions would be sufficient to make organization cleaner.</p> <ul class="alternate" type="square"> <li>Eric</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1120" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1120</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-19 22:15:38, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-19 22:15:38)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1141173 </p></blockquote> <blockquote><p>./build.xml 1141176 </p></blockquote> <blockquote><p>./ivy.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1141173 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zoo.cfg PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1141173 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13068109" author="jiraposter@reviews.apache.org" created="Wed, 20 Jul 2011 00:57:57 +0000"> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; 1) src/recipes/election has been added recently to trunk, are changes needed there as well? (see my comments below - seems like if we separated out pkg building from regular build it would make this more explicit/obvious)</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; 2) i've been wondering for a while, perhaps we should have different scripts for zkServer.sh depending upon whether running in "development mode" and running in "package mode". There's alot of cruft in there having to do with determining which mode we are in and then setting up appropriately (zkCli, zkServer, zkCleanup, etc...).</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick Hunt wrote:</p></blockquote> <blockquote><p>What do you think of this idea (2 in particular?) I guess hadoop is fine with this mixed use? Perhaps we can take some ideas from there an apply?</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>1) Is there a plan to grow more recipes? If yes, I would recommend to use maven for build script because it allows submodule to call parent build profiles. We can have a centralized template for creating recipes rpm/deb packages. Ant recursive structure is difficult to maintain because the subdirectory build.xml file needs to refer to parent build.xml to include packaging templates, which generates too much repetitive tasks. Let's put recipes packaging as a separate task for future enhancement.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>2) Code reuse would be ideal. I am not sure if we want to have different scripts, perhaps consolidated functions would be sufficient to make organization cleaner.</p></blockquote> <p>RE on 2) reapply some logic from Hadoop would be good. i.e. $PREFIX/sbin/<b>-daemon.sh and $PREFIX/libexec/</b>-config.sh would make the pattern cleaner.</p> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/update-zookeeper-env.sh, line 131</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26365#file26365line131" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26365#file26365line131</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; the group used is hadoop? (seems fine, just wondering...)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>I set the full stack of the software to be ownership by group hadoop for easier file ownership management.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick Hunt wrote:</p></blockquote> <blockquote><p>seems fine. Are you planning to participate in Bigtop? Would love to have you involved. It would be great to nail all this type of thing down so that it will be consistent. (or make it easy to configure if there's no consensus, ie figure out what ppl agree on and what not).</p></blockquote> <p>I love to participate in Bigtop. For now, I am making sure the packages are consistent.</p> <ul class="alternate" type="square"> <li>Eric</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1120" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1120</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-19 22:15:38, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-19 22:15:38)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1141173 </p></blockquote> <blockquote><p>./build.xml 1141176 </p></blockquote> <blockquote><p>./ivy.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1141173 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zoo.cfg PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1141173 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13068176" author="eyang" created="Wed, 20 Jul 2011 06:41:24 +0000"><p>Address all issues found in path 4 except the release package would include C/Python binding libraries.</p></comment>
<comment id="13068490" author="eyang" created="Wed, 20 Jul 2011 17:01:22 +0000"><p>Fix zoo.cfg template generation code to use trunk/conf/zoo_sample.cfg as base of the template.</p></comment>
<comment id="13068507" author="jiraposter@reviews.apache.org" created="Wed, 20 Jul 2011 17:44:58 +0000"> <blockquote><p>On 2011-07-19 22:46:10, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; 1) src/recipes/election has been added recently to trunk, are changes needed there as well? (see my comments below - seems like if we separated out pkg building from regular build it would make this more explicit/obvious)</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; 2) i've been wondering for a while, perhaps we should have different scripts for zkServer.sh depending upon whether running in "development mode" and running in "package mode". There's alot of cruft in there having to do with determining which mode we are in and then setting up appropriately (zkCli, zkServer, zkCleanup, etc...).</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick Hunt wrote:</p></blockquote> <blockquote><p>What do you think of this idea (2 in particular?) I guess hadoop is fine with this mixed use? Perhaps we can take some ideas from there an apply?</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>1) Is there a plan to grow more recipes? If yes, I would recommend to use maven for build script because it allows submodule to call parent build profiles. We can have a centralized template for creating recipes rpm/deb packages. Ant recursive structure is difficult to maintain because the subdirectory build.xml file needs to refer to parent build.xml to include packaging templates, which generates too much repetitive tasks. Let's put recipes packaging as a separate task for future enhancement.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>2) Code reuse would be ideal. I am not sure if we want to have different scripts, perhaps consolidated functions would be sufficient to make organization cleaner.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>RE on 2) reapply some logic from Hadoop would be good. i.e. $PREFIX/sbin/<b>-daemon.sh and $PREFIX/libexec/</b>-config.sh would make the pattern cleaner.</p></blockquote> <p>re your 1) "Is there a plan to grow more recipes", yes, however I've proposed that we move it to it's own release artifact, so I think we are in wild agreement here, see:<br/> <a href="http://markmail.org/message/6nljas2ouivw53mw" class="external-link" target="_blank" rel="nofollow noopener">http://markmail.org/message/6nljas2ouivw53mw</a><br/> I'd like to do the same for contrib as well.</p> <p>re maven, I've submitted an initial patch here:<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1078" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1078</a><br/> I'd like to move everything over to maven, ping Mahadev to commit this. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/wink.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>re 2) if you'd like to work on moving us over to some of that please do.</p> <ul class="alternate" type="square"> <li>Patrick</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1120" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1120</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-19 22:15:38, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-19 22:15:38)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1141173 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1141173 </p></blockquote> <blockquote><p>./build.xml 1141176 </p></blockquote> <blockquote><p>./ivy.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1141173 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1141173 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zoo.cfg PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1141173 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1141173 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13068510" author="jiraposter@reviews.apache.org" created="Wed, 20 Jul 2011 17:46:57 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-07-20 17:45:08.665910)</p> <p>Review request for zookeeper and Mahadev Konar.</p> <p>Changes<br/> -------</p> <p>updated from Eric.</p> <p>Summary<br/> -------</p> <p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p> <p>Diffs (updated)</p> <hr /> <p> ./bin/zkCleanup.sh 1148587 <br/> ./bin/zkCli.sh 1148587 <br/> ./bin/zkEnv.sh 1148587 <br/> ./bin/zkServer.sh 1148587 <br/> ./build.xml 1148587 <br/> ./ivy.xml 1148587 <br/> ./src/contrib/build-contrib.xml 1148587 <br/> ./src/contrib/build.xml 1148587 <br/> ./src/contrib/zkpython/build.xml 1148587 <br/> ./src/contrib/zkpython/ivy.xml PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION <br/> ./src/contrib/zkpython/src/python/setup.py 1148587 <br/> ./src/packages/deb/init.d/zookeeper PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/conffile PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/control PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postrm PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/preinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/prerm PRE-CREATION <br/> ./src/packages/rpm/init.d/zookeeper PRE-CREATION <br/> ./src/packages/rpm/spec/zookeeper.spec PRE-CREATION <br/> ./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION <br/> ./src/packages/update-zookeeper-env.sh PRE-CREATION <br/> ./src/recipes/build-recipes.xml 1148587 <br/> ./src/recipes/build.xml 1148587 <br/> ./src/recipes/lock/build.xml 1148587 <br/> ./src/recipes/queue/build.xml 1148587 </p> <p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Patrick</p> </comment>
<comment id="13068516" author="jiraposter@reviews.apache.org" created="Wed, 20 Jul 2011 18:00:58 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1140" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1140</a><br/> -----------------------------------------------------------</p> <p>a few small issues</p> <p>./build.xml<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2369" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2369</a>gt;</p> <p> yes, much nicer.</p> <p> we should add building pkgs as a job on jenkins - to verify we don't break this/other things. (would you mind filing a jira?)</p> <p>./src/contrib/zkpython/ivy.xml<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2370" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2370</a>gt;</p> <p> zookeeper?</p> <p>./src/packages/templates/conf/zoo.cfg<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2371" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2371</a>gt;</p> <p> no longer needed?</p> <p>./build.xml<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2372" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2372</a>gt;</p> <p> don't you mean to have a dependency on package-native here rather than compile-native?</p> <ul class="alternate" type="square"> <li>Patrick</li> </ul> <p>On 2011-07-20 17:45:08, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-20 17:45:08)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1148587 </p></blockquote> <blockquote><p>./build.xml 1148587 </p></blockquote> <blockquote><p>./ivy.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1148587 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1148587 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13068681" author="eyang" created="Wed, 20 Jul 2011 22:31:58 +0000"><p>Jenkins server has Python.h installed, submit patch for build test.</p></comment>
<comment id="13068696" author="hadoopqa" created="Wed, 20 Jul 2011 23:06:22 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12487204/ZOOKEEPER-999-7.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12487204/ZOOKEEPER-999-7.patch</a><br/> against trunk revision 1148553.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 31 release audit warnings (more than the trunk's current 24 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/405//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/405//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/405//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/405//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/405//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/405//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/405//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/405//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13068809" author="jiraposter@reviews.apache.org" created="Thu, 21 Jul 2011 05:32:58 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-07-21 05:31:05.468929)</p> <p>Review request for zookeeper and Mahadev Konar.</p> <p>Changes<br/> -------</p> <p>update from Eric</p> <p>Summary<br/> -------</p> <p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p> <p>Diffs (updated)</p> <hr /> <p> ./bin/zkCleanup.sh 1148587 <br/> ./bin/zkCli.sh 1148587 <br/> ./bin/zkEnv.sh 1148587 <br/> ./bin/zkServer.sh 1148587 <br/> ./build.xml 1148587 <br/> ./ivy.xml 1148587 <br/> ./src/contrib/build-contrib.xml 1148587 <br/> ./src/contrib/build.xml 1148587 <br/> ./src/contrib/zkpython/build.xml 1148587 <br/> ./src/contrib/zkpython/ivy.xml PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION <br/> ./src/contrib/zkpython/src/python/setup.py 1148587 <br/> ./src/packages/deb/init.d/zookeeper PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/conffile PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/control PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postrm PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/preinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/prerm PRE-CREATION <br/> ./src/packages/rpm/init.d/zookeeper PRE-CREATION <br/> ./src/packages/rpm/spec/zookeeper.spec PRE-CREATION <br/> ./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION <br/> ./src/packages/update-zookeeper-env.sh PRE-CREATION <br/> ./src/recipes/build-recipes.xml 1148587 <br/> ./src/recipes/build.xml 1148587 <br/> ./src/recipes/lock/build.xml 1148587 <br/> ./src/recipes/queue/build.xml 1148587 </p> <p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Patrick</p> </comment>
<comment id="13068818" author="jiraposter@reviews.apache.org" created="Thu, 21 Jul 2011 06:02:57 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1149" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1149</a><br/> -----------------------------------------------------------</p> <p>I ran "ant deb" successfully, although I have not yet tried to install it. I noticed a couple issues with the generated package.</p> <p>shouldn't /etc/zookeeper contain zoo.cfg?</p> <p>drwxr-xr-x 0/0 0 2011-07-20 22:41 ./etc/<br/> drwxr-xr-x 0/0 0 2011-07-20 22:41 ./etc/zookeeper/<br/> <del>rw-r</del><del>r</del>- 0/0 535 2011-07-20 22:41 ./etc/zookeeper/configuration.xsl<br/> <del>rw-r</del><del>r</del>- 0/0 2161 2011-07-20 22:41 ./etc/zookeeper/log4j.properties<br/> <del>rw-r</del><del>r</del>- 0/0 447 2011-07-20 22:41 ./etc/zookeeper/zoo_sample.cfg</p> <p>shouldn't we be creating (if doesn't exist) the /var/lib/zookeeper directory? ZK does this currently, however I'm planning to file a bug for this - really we shouldn't come up if we can't find this directory (handles case of misconfiguration - we stop rather than start with an empty data hierarchy)</p> <p>Can you add some documentation? Nothing fancy, perhaps a README_packaging.txt at the toplevel that describes the currently supported packages, some basic information about them, how to build "ant deb" etc..., additional requirements to build, etc... something basic to help out someone trying to build the packages.</p> <p>./src/packages/deb/zookeeper.control/control<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2380" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2380</a>gt;</p> <p> ZooKeeper only supports sun jdk/jre, not openjdk</p> <ul class="alternate" type="square"> <li>Patrick</li> </ul> <p>On 2011-07-21 05:31:05, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-21 05:31:05)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1148587 </p></blockquote> <blockquote><p>./build.xml 1148587 </p></blockquote> <blockquote><p>./ivy.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1148587 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1148587 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13069131" author="jiraposter@reviews.apache.org" created="Thu, 21 Jul 2011 18:56:58 +0000"> <blockquote><p>On 2011-07-20 18:00:29, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/templates/conf/zoo.cfg, lines 1-12</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1/?file=26364#file26364line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1/?file=26364#file26364line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; no longer needed?</p></blockquote> <p>Yes</p> <blockquote><p>On 2011-07-20 18:00:29, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./build.xml, lines 750-754</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1-2/?file=26346#file26346line750" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1-2/?file=26346#file26346line750</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; yes, much nicer.</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; we should add building pkgs as a job on jenkins - to verify we don't break this/other things. (would you mind filing a jira?)</p></blockquote> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-1129" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-1129</a> filed.</p> <blockquote><p>On 2011-07-20 18:00:29, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/contrib/zkpython/ivy.xml, line 24</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/1-2/?file=26351#file26351line24" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/1-2/?file=26351#file26351line24</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; zookeeper?</p></blockquote> <p>Fixed in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-7.patch</p> <blockquote><p>On 2011-07-20 18:00:29, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./build.xml, line 905</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/2/?file=26497#file26497line905" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/2/?file=26497#file26497line905</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; don't you mean to have a dependency on package-native here rather than compile-native?</p></blockquote> <p>Good catch. Fixed in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-7.patch.</p> <ul class="alternate" type="square"> <li>Eric</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1140" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1140</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-21 05:31:05, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-21 05:31:05)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1148587 </p></blockquote> <blockquote><p>./build.xml 1148587 </p></blockquote> <blockquote><p>./ivy.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1148587 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1148587 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13069273" author="eyang" created="Thu, 21 Jul 2011 23:02:52 +0000"><p>Updated README_packaging.txt, and fix start up script for running ZooKeeper in Debian flavor of Linux.</p></comment>
<comment id="13069357" author="hadoopqa" created="Fri, 22 Jul 2011 02:17:20 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12487370/ZOOKEEPER-999-8.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12487370/ZOOKEEPER-999-8.patch</a><br/> against trunk revision 1148553.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 32 release audit warnings (more than the trunk's current 24 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/407//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/407//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/407//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/407//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/407//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/407//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/407//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/407//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13069666" author="jiraposter@reviews.apache.org" created="Fri, 22 Jul 2011 18:24:57 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-07-22 18:24:20.565434)</p> <p>Review request for zookeeper and Mahadev Konar.</p> <p>Changes<br/> -------</p> <p>update 8 from eric</p> <p>Summary<br/> -------</p> <p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p> <p>Diffs (updated)</p> <hr /> <p> ./README_packaging.txt PRE-CREATION <br/> ./bin/zkCleanup.sh 1148587 <br/> ./bin/zkCli.sh 1148587 <br/> ./bin/zkEnv.sh 1148587 <br/> ./bin/zkServer.sh 1148587 <br/> ./build.xml 1148587 <br/> ./ivy.xml 1148587 <br/> ./src/contrib/build-contrib.xml 1148587 <br/> ./src/contrib/build.xml 1148587 <br/> ./src/contrib/zkpython/build.xml 1148587 <br/> ./src/contrib/zkpython/ivy.xml PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION <br/> ./src/contrib/zkpython/src/python/setup.py 1148587 <br/> ./src/packages/deb/init.d/zookeeper PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/conffile PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/control PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postrm PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/preinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/prerm PRE-CREATION <br/> ./src/packages/rpm/init.d/zookeeper PRE-CREATION <br/> ./src/packages/rpm/spec/zookeeper.spec PRE-CREATION <br/> ./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION <br/> ./src/packages/update-zookeeper-env.sh PRE-CREATION <br/> ./src/recipes/build-recipes.xml 1148587 <br/> ./src/recipes/build.xml 1148587 <br/> ./src/recipes/lock/build.xml 1148587 <br/> ./src/recipes/queue/build.xml 1148587 </p> <p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Patrick</p> </comment>
<comment id="13069672" author="phunt" created="Fri, 22 Jul 2011 18:50:31 +0000"><p>See my updated review - issues installing/using the package under ubuntu.</p></comment>
<comment id="13069674" author="jiraposter@reviews.apache.org" created="Fri, 22 Jul 2011 18:50:58 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1169" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1169</a><br/> -----------------------------------------------------------</p> <p>The packaging code itself looks pretty good now. I've moved on to verifying the installation, however I see issues installing the deb on a clean ubuntu 10.10. Can you try generating the packages, install them and work through these? (ie test on ubuntu and rhel/centos).</p> <p>1) the following during install:</p> <p>Setting up zookeeper (3.4.0) ...<br/> ln: creating symbolic link `/usr/etc/zookeeper': No such file or directory</p> <p>2) I'm unable to start the server, seems like number of issues: a) why /usr/sbin/../etc/zookeeper for config, should just be /etc/zookeeper no? b) permission issues, notice I am running this as sudo.</p> <p>sudo /etc/init.d/zookeeper start</p> <ul> <li>Starting Apache ZooKeeper server zookeeper JMX enabled by default<br/> Using config: /usr/sbin/../etc/zookeeper/zoo.cfg<br/> grep: /usr/sbin/../etc/zookeeper/zoo.cfg: No such file or directory<br/> mkdir: cannot create directory `': No such file or directory<br/> Starting zookeeper ... /usr/bin/../sbin/zkServer.sh: line 109: /zookeeper_server.pid: Permission denied<br/> FAILED TO WRITE PID<br/> /usr/bin/../sbin/zkServer.sh: line 105: ./zookeeper.out: Permission denied<br/> <span class="error">#91;fail#93;</span></li> </ul> <p>./src/packages/deb/zookeeper.control/control<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2429" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2429</a>gt;</p> <p> should we depend on either the jre or the jdk?</p> <p>./README_packaging.txt<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2435" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2435</a>gt;</p> <p> Nice!</p> <p> Would be nice to add - when I build where are the generated deb/rpm files placed?</p> <p> Are there any requirements for building? (I don't think so, but I'm not sure)</p> <p>./README_packaging.txt<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2437" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2437</a>gt;</p> <p> It's great to document the source layout, could we also provide some detail on where things are placed on the install machine? (high level is fine).</p> <p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2431" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2431</a>gt;</p> <p> missing license - is there a way to add comments here or no?</p> <p>./src/packages/deb/zookeeper.control/conffile<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2432" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2432</a>gt;</p> <p> license?</p> <p>./src/packages/templates/conf/zookeeper-env.sh<br/> lt;<a href="https://reviews.apache.org/r/1143/#comment2433" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#comment2433</a>gt;</p> <p> need license header here.</p> <ul class="alternate" type="square"> <li>Patrick</li> </ul> <p>On 2011-07-22 18:24:20, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-22 18:24:20)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./README_packaging.txt PRE-CREATION </p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1148587 </p></blockquote> <blockquote><p>./build.xml 1148587 </p></blockquote> <blockquote><p>./ivy.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1148587 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1148587 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13069738" author="jiraposter@reviews.apache.org" created="Fri, 22 Jul 2011 20:58:58 +0000"> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; The packaging code itself looks pretty good now. I've moved on to verifying the installation, however I see issues installing the deb on a clean ubuntu 10.10. Can you try generating the packages, install them and work through these? (ie test on ubuntu and rhel/centos).</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; 1) the following during install:</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; Setting up zookeeper (3.4.0) ...</p></blockquote> <blockquote><p>gt; ln: creating symbolic link `/usr/etc/zookeeper': No such file or directory</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; 2) I'm unable to start the server, seems like number of issues: a) why /usr/sbin/../etc/zookeeper for config, should just be /etc/zookeeper no? b) permission issues, notice I am running this as sudo.</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; sudo /etc/init.d/zookeeper start</p></blockquote> <blockquote><p>gt; * Starting Apache ZooKeeper server zookeeper JMX enabled by default</p></blockquote> <blockquote><p>gt; Using config: /usr/sbin/../etc/zookeeper/zoo.cfg</p></blockquote> <blockquote><p>gt; grep: /usr/sbin/../etc/zookeeper/zoo.cfg: No such file or directory</p></blockquote> <blockquote><p>gt; mkdir: cannot create directory `': No such file or directory</p></blockquote> <blockquote><p>gt; Starting zookeeper ... /usr/bin/../sbin/zkServer.sh: line 109: /zookeeper_server.pid: Permission denied</p></blockquote> <blockquote><p>gt; FAILED TO WRITE PID</p></blockquote> <blockquote><p>gt; /usr/bin/../sbin/zkServer.sh: line 105: ./zookeeper.out: Permission denied</p></blockquote> <blockquote><p>gt; <span class="error">#91;fail#93;</span></p></blockquote> <blockquote><p>gt;</p></blockquote> <p>1,2) My mistake, it should make /usr/etc and symlink /usr/etc/zookeeper to /etc/zookeeper. On my test machines (RHEL, Ubuntu), I have Hadoop installed, which was making /usr/etc. That was why it worked only on my machine. I will correct this mistake.</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/deb/zookeeper.control/control, line 6</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/3-4/?file=26615#file26615line6" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/3-4/?file=26615#file26615line6</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; should we depend on either the jre or the jdk?</p></blockquote> <p>I have no problem using ZooKeeper with only JRE installed.</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./README_packaging.txt, line 1</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/4/?file=26874#file26874line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/4/?file=26874#file26874line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; Nice!</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; Would be nice to add - when I build where are the generated deb/rpm files placed?</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; Are there any requirements for building? (I don't think so, but I'm not sure)</p></blockquote> <p>cppunit, and python-setuptools are required. Will include those in README_packaging.txt.</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/contrib/zkpython/src/packages/deb/zkpython.control/control, line 1</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/4/?file=26885#file26885line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/4/?file=26885#file26885line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; missing license - is there a way to add comments here or no?</p></blockquote> <p>Will do.</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/deb/zookeeper.control/conffile, line 1</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/4/?file=26889#file26889line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/4/?file=26889#file26889line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; license?</p></blockquote> <p>Will do.</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/templates/conf/zookeeper-env.sh, line 1</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/4/?file=26897#file26897line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/4/?file=26897#file26897line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; need license header here.</p></blockquote> <p>Will do.</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./README_packaging.txt, line 9</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/4/?file=26874#file26874line9" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/4/?file=26874#file26874line9</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; It's great to document the source layout, could we also provide some detail on where things are placed on the install machine? (high level is fine).</p></blockquote> <p>Included in the README_packaging.txt.</p> <ul class="alternate" type="square"> <li>Eric</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1169" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1169</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-22 18:24:20, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-22 18:24:20)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./README_packaging.txt PRE-CREATION </p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1148587 </p></blockquote> <blockquote><p>./build.xml 1148587 </p></blockquote> <blockquote><p>./ivy.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1148587 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1148587 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13069741" author="eyang" created="Fri, 22 Jul 2011 21:01:23 +0000"><ul class="alternate" type="square"> <li>Updated license.</li> <li>Updated document for install file layout.</li> <li>Ensure /usr/etc/zookeeper made correctly.</li> </ul> </comment>
<comment id="13069814" author="jiraposter@reviews.apache.org" created="Fri, 22 Jul 2011 22:27:10 +0000"> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; The packaging code itself looks pretty good now. I've moved on to verifying the installation, however I see issues installing the deb on a clean ubuntu 10.10. Can you try generating the packages, install them and work through these? (ie test on ubuntu and rhel/centos).</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; 1) the following during install:</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; Setting up zookeeper (3.4.0) ...</p></blockquote> <blockquote><p>gt; ln: creating symbolic link `/usr/etc/zookeeper': No such file or directory</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; 2) I'm unable to start the server, seems like number of issues: a) why /usr/sbin/../etc/zookeeper for config, should just be /etc/zookeeper no? b) permission issues, notice I am running this as sudo.</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; sudo /etc/init.d/zookeeper start</p></blockquote> <blockquote><p>gt; * Starting Apache ZooKeeper server zookeeper JMX enabled by default</p></blockquote> <blockquote><p>gt; Using config: /usr/sbin/../etc/zookeeper/zoo.cfg</p></blockquote> <blockquote><p>gt; grep: /usr/sbin/../etc/zookeeper/zoo.cfg: No such file or directory</p></blockquote> <blockquote><p>gt; mkdir: cannot create directory `': No such file or directory</p></blockquote> <blockquote><p>gt; Starting zookeeper ... /usr/bin/../sbin/zkServer.sh: line 109: /zookeeper_server.pid: Permission denied</p></blockquote> <blockquote><p>gt; FAILED TO WRITE PID</p></blockquote> <blockquote><p>gt; /usr/bin/../sbin/zkServer.sh: line 105: ./zookeeper.out: Permission denied</p></blockquote> <blockquote><p>gt; <span class="error">#91;fail#93;</span></p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>1,2) My mistake, it should make /usr/etc and symlink /usr/etc/zookeeper to /etc/zookeeper. On my test machines (RHEL, Ubuntu), I have Hadoop installed, which was making /usr/etc. That was why it worked only on my machine. I will correct this mistake.</p></blockquote> <p>you might also want to specify the zk conf directory so that it shows up as /etc/zookeeper/zoo.cfg on the cmdline. (no worries)</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/deb/zookeeper.control/control, line 6</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/3-4/?file=26615#file26615line6" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/3-4/?file=26615#file26615line6</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; should we depend on either the jre or the jdk?</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>I have no problem using ZooKeeper with only JRE installed.</p></blockquote> <p>yes, that's fine, my point is that someone else may only have the jdk installed, shouldn't they be able to run w/o installing jre (on ubuntu at least there is no dependency btw jre/jdk afaict).</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./README_packaging.txt, line 1</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/4/?file=26874#file26874line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/4/?file=26874#file26874line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; Nice!</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; Would be nice to add - when I build where are the generated deb/rpm files placed?</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; Are there any requirements for building? (I don't think so, but I'm not sure)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>cppunit, and python-setuptools are required. Will include those in README_packaging.txt.</p></blockquote> <p>well those are required to build zk itself. you probably shouldn't add that, I was just thinking if anything pkging related was required.</p> <ul class="alternate" type="square"> <li>Patrick</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1169" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1169</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-22 18:24:20, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-22 18:24:20)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./README_packaging.txt PRE-CREATION </p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1148587 </p></blockquote> <blockquote><p>./build.xml 1148587 </p></blockquote> <blockquote><p>./ivy.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1148587 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1148587 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13070568" author="jiraposter@reviews.apache.org" created="Mon, 25 Jul 2011 16:02:10 +0000"> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/contrib/zkpython/src/packages/deb/zkpython.control/control, line 1</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/4/?file=26885#file26885line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/4/?file=26885#file26885line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; missing license - is there a way to add comments here or no?</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>Will do.</p></blockquote> <p>I did, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-9.patch shows the license, but for some reason review board isn't picking up the additions.</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./README_packaging.txt, line 1</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/4/?file=26874#file26874line1" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/4/?file=26874#file26874line1</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; Nice!</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; Would be nice to add - when I build where are the generated deb/rpm files placed?</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; Are there any requirements for building? (I don't think so, but I'm not sure)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>cppunit, and python-setuptools are required. Will include those in README_packaging.txt.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick Hunt wrote:</p></blockquote> <blockquote><p>well those are required to build zk itself. you probably shouldn't add that, I was just thinking if anything pkging related was required.</p></blockquote> <p>For rpm, it will require RHEL or CentOS because it depends on rpmbuild. Debian build is base on java plugin, hence it can build on both RHEL or Ubuntu.</p> <blockquote><p>On 2011-07-22 18:50:04, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; ./src/packages/deb/zookeeper.control/control, line 6</p></blockquote> <blockquote><p>gt; lt;<a href="https://reviews.apache.org/r/1143/diff/3-4/?file=26615#file26615line6" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff/3-4/?file=26615#file26615line6</a>gt;</p></blockquote> <blockquote><p>gt;</p></blockquote> <blockquote><p>gt; should we depend on either the jre or the jdk?</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Eric Yang wrote:</p></blockquote> <blockquote><p>I have no problem using ZooKeeper with only JRE installed.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick Hunt wrote:</p></blockquote> <blockquote><p>yes, that's fine, my point is that someone else may only have the jdk installed, shouldn't they be able to run w/o installing jre (on ubuntu at least there is no dependency btw jre/jdk afaict).</p></blockquote> <p>I just tested installing sun-java6-jdk without jre on Ubuntu 11.04. It doesn't let me install. I think the dependency is right.</p> <ul class="alternate" type="square"> <li>Eric</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1169" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1169</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-22 18:24:20, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-22 18:24:20)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./README_packaging.txt PRE-CREATION </p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1148587 </p></blockquote> <blockquote><p>./build.xml 1148587 </p></blockquote> <blockquote><p>./ivy.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1148587 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1148587 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13070569" author="jiraposter@reviews.apache.org" created="Mon, 25 Jul 2011 16:04:09 +0000"> <blockquote><p>On 2011-07-21 06:02:33, Patrick Hunt wrote:</p></blockquote> <blockquote><p>gt; I ran "ant deb" successfully, although I have not yet tried to install it. I noticed a couple issues with the generated package.</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; shouldn't /etc/zookeeper contain zoo.cfg?</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; drwxr-xr-x 0/0 0 2011-07-20 22:41 ./etc/</p></blockquote> <blockquote><p>gt; drwxr-xr-x 0/0 0 2011-07-20 22:41 ./etc/zookeeper/</p></blockquote> <blockquote><p>gt; <del>rw-r</del><del>r</del>- 0/0 535 2011-07-20 22:41 ./etc/zookeeper/configuration.xsl</p></blockquote> <blockquote><p>gt; <del>rw-r</del><del>r</del>- 0/0 2161 2011-07-20 22:41 ./etc/zookeeper/log4j.properties</p></blockquote> <blockquote><p>gt; <del>rw-r</del><del>r</del>- 0/0 447 2011-07-20 22:41 ./etc/zookeeper/zoo_sample.cfg</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; shouldn't we be creating (if doesn't exist) the /var/lib/zookeeper directory? ZK does this currently, however I'm planning to file a bug for this - really we shouldn't come up if we can't find this directory (handles case of misconfiguration - we stop rather than start with an empty data hierarchy)</p></blockquote> <blockquote><p>gt; </p></blockquote> <blockquote><p>gt; Can you add some documentation? Nothing fancy, perhaps a README_packaging.txt at the toplevel that describes the currently supported packages, some basic information about them, how to build "ant deb" etc..., additional requirements to build, etc... something basic to help out someone trying to build the packages.</p></blockquote> <p>The system should generate zoo.cfg, if it doesn't exist. It looks like a bug. I will look into it. I will add README_packaging.txt in the next patch. Same for sun jdk.</p> <ul class="alternate" type="square"> <li>Eric</li> </ul> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/#review1149" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/#review1149</a><br/> -----------------------------------------------------------</p> <p>On 2011-07-22 18:24:20, Patrick Hunt wrote:</p> <blockquote><p></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p>This is an automatically generated e-mail. To reply, visit:</p></blockquote> <blockquote><p><a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a></p></blockquote> <blockquote><p>-----------------------------------------------------------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>(Updated 2011-07-22 18:24:20)</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Review request for zookeeper and Mahadev Konar.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Summary</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.</p></blockquote> <blockquote><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diffs</p></blockquote> <blockquote><p>-----</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>./README_packaging.txt PRE-CREATION </p></blockquote> <blockquote><p>./bin/zkCleanup.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkCli.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkEnv.sh 1148587 </p></blockquote> <blockquote><p>./bin/zkServer.sh 1148587 </p></blockquote> <blockquote><p>./build.xml 1148587 </p></blockquote> <blockquote><p>./ivy.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build-contrib.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/build.xml 1148587 </p></blockquote> <blockquote><p>./src/contrib/zkpython/ivy.xml PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/contrib/zkpython/src/python/setup.py 1148587 </p></blockquote> <blockquote><p>./src/packages/deb/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/conffile PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/control PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/postrm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/preinst PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/deb/zookeeper.control/prerm PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/init.d/zookeeper PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/rpm/spec/zookeeper.spec PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/packages/update-zookeeper-env.sh PRE-CREATION </p></blockquote> <blockquote><p>./src/recipes/build-recipes.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/lock/build.xml 1148587 </p></blockquote> <blockquote><p>./src/recipes/queue/build.xml 1148587 </p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Testing</p></blockquote> <blockquote><p>-------</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Thanks,</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p>Patrick</p></blockquote> <blockquote><p></p></blockquote> <blockquote><p></p></blockquote> </comment>
<comment id="13070963" author="hadoopqa" created="Tue, 26 Jul 2011 06:01:45 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12487479/ZOOKEEPER-999-9.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12487479/ZOOKEEPER-999-9.patch</a><br/> against trunk revision 1150937.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/411//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/411//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13071178" author="eyang" created="Tue, 26 Jul 2011 15:58:33 +0000"><p>Sync up with trunk.</p></comment>
<comment id="13071198" author="hadoopqa" created="Tue, 26 Jul 2011 16:22:18 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12487858/ZOOKEEPER-999-10.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12487858/ZOOKEEPER-999-10.patch</a><br/> against trunk revision 1150937.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> -1 release audit. The applied patch generated 28 release audit warnings (more than the trunk's current 24 warnings).</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/412//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/412//testReport/</a><br/> Release audit warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/412//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/412//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/412//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/412//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/412//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/412//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13071206" author="eyang" created="Tue, 26 Jul 2011 16:30:18 +0000"><p>Core test failed does not seem to be related with this patch.</p></comment>
<comment id="13071804" author="mahadev" created="Wed, 27 Jul 2011 15:30:01 +0000"><p>Eric, can you please resubmit?</p></comment>
<comment id="13071957" author="eyang" created="Wed, 27 Jul 2011 20:02:42 +0000"><p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-10.patch is in sync with trunk.</p></comment>
<comment id="13072221" author="jiraposter@reviews.apache.org" created="Thu, 28 Jul 2011 07:15:09 +0000"> <p>-----------------------------------------------------------<br/> This is an automatically generated e-mail. To reply, visit:<br/> <a href="https://reviews.apache.org/r/1143/" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/</a><br/> -----------------------------------------------------------</p> <p>(Updated 2011-07-28 07:13:52.220703)</p> <p>Review request for zookeeper and Mahadev Konar.</p> <p>Changes<br/> -------</p> <p>update 10 from eric</p> <p>Summary<br/> -------</p> <p>This goal of this ticket is to generate a set of RPM/debian package which integrate well with RPM sets created by <a href="https://issues.apache.org/jira/browse/HADOOP-6255" title="Create an rpm integration project" class="issue-link" data-issue-key="HADOOP-6255"><del>HADOOP-6255</del></a>.</p> <p>This addresses bug <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>.<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-999</a></p> <p>Diffs (updated)</p> <hr /> <p> ./README_packaging.txt PRE-CREATION <br/> ./bin/zkCleanup.sh 1151144 <br/> ./bin/zkCli.sh 1151144 <br/> ./bin/zkEnv.sh 1151144 <br/> ./bin/zkServer.sh 1151144 <br/> ./build.xml 1151144 <br/> ./ivy.xml 1151144 <br/> ./src/contrib/build-contrib.xml 1151144 <br/> ./src/contrib/build.xml 1151144 <br/> ./src/contrib/zkpython/build.xml 1151144 <br/> ./src/contrib/zkpython/ivy.xml PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/deb/zkpython.control/control PRE-CREATION <br/> ./src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec PRE-CREATION <br/> ./src/contrib/zkpython/src/python/setup.py 1151144 <br/> ./src/packages/deb/init.d/zookeeper PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/conffile PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/control PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/postrm PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/preinst PRE-CREATION <br/> ./src/packages/deb/zookeeper.control/prerm PRE-CREATION <br/> ./src/packages/rpm/init.d/zookeeper PRE-CREATION <br/> ./src/packages/rpm/spec/zookeeper.spec PRE-CREATION <br/> ./src/packages/templates/conf/zookeeper-env.sh PRE-CREATION <br/> ./src/packages/update-zookeeper-env.sh PRE-CREATION <br/> ./src/recipes/build-recipes.xml 1151144 <br/> ./src/recipes/build.xml 1151144 <br/> ./src/recipes/lock/build.xml 1151144 <br/> ./src/recipes/queue/build.xml 1151144 </p> <p>Diff: <a href="https://reviews.apache.org/r/1143/diff" class="external-link" target="_blank" rel="nofollow noopener">https://reviews.apache.org/r/1143/diff</a></p> <p>Testing<br/> -------</p> <p>Thanks,</p> <p>Patrick</p> </comment>
<comment id="13082905" author="hadoopqa" created="Thu, 11 Aug 2011 04:31:56 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12487858/ZOOKEEPER-999-10.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12487858/ZOOKEEPER-999-10.patch</a><br/> against trunk revision 1152141.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/443//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/443//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/443//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/443//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/443//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/443//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13082937" author="eyang" created="Thu, 11 Aug 2011 05:37:54 +0000"><p>Previous pre-commit build compiled fine, but the same patch did not build properly in the second trigger. It looks like a build machine issue. Resubmit the patch to build again.</p></comment>
<comment id="13082938" author="eyang" created="Thu, 11 Aug 2011 05:38:14 +0000"><p>Test patch-10 again.</p></comment>
<comment id="13082948" author="hadoopqa" created="Thu, 11 Aug 2011 06:03:58 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12487858/ZOOKEEPER-999-10.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12487858/ZOOKEEPER-999-10.patch</a><br/> against trunk revision 1152141.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> -1 javac. The patch appears to cause tar ant target to fail.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/450//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/450//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/450//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/450//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/450//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/450//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13082949" author="mahadev" created="Thu, 11 Aug 2011 06:11:46 +0000"><p>Eric/Pat,<br/> Is this ready to go in? </p></comment>
<comment id="13083211" author="eyang" created="Thu, 11 Aug 2011 16:33:25 +0000"><p>Jenkins doesn't have clover setup. Hence, the latest build failed on clover check. I am not sure why other builds passed, but they don't seem to be running clover for release audit.<br/> This patch is ready from my perspective.</p></comment>
<comment id="13083409" author="phunt" created="Thu, 11 Aug 2011 19:16:52 +0000"><p>zkpython is failing to build:<br/> <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/450/artifact/trunk/patchprocess/patchJavacWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/450/artifact/trunk/patchprocess/patchJavacWarnings.txt</a></p> <p> <span class="error">#91;exec#93;</span> src/c/zookeeper.c:19:20: error: Python.h: No such file or directory</p> <p>We need to get python dev re-installed on the hadoop machines.</p></comment>
<comment id="13083412" author="phunt" created="Thu, 11 Aug 2011 19:19:04 +0000"><p>Committed - thanks Eric!</p></comment>
<comment id="13083517" author="eyang" created="Thu, 11 Aug 2011 20:57:22 +0000"><p>Thank you Patrick.</p></comment>
<comment id="13083669" author="hudson" created="Thu, 11 Aug 2011 21:44:20 +0000"><p>Integrated in ZooKeeper-trunk #1262 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1262/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1262/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>. Create an package integration project (Eric Yang via phunt)</p> <p>phunt : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1156752" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1156752</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/README_packaging.txt</li> <li>/zookeeper/trunk/src/packages/templates/conf/zookeeper-env.sh</li> <li>/zookeeper/trunk/src/packages/templates/conf</li> <li>/zookeeper/trunk/bin/zkCleanup.sh</li> <li>/zookeeper/trunk/src/packages</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/postrm</li> <li>/zookeeper/trunk/src/packages/rpm/spec/zookeeper.spec</li> <li>/zookeeper/trunk/src/contrib/build.xml</li> <li>/zookeeper/trunk/bin/zkCli.sh</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/conffile</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/rpm</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/deb/zkpython.control</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/python/setup.py</li> <li>/zookeeper/trunk/src/packages/update-zookeeper-env.sh</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/postinst</li> <li>/zookeeper/trunk/src/contrib/build-contrib.xml</li> <li>/zookeeper/trunk/src/recipes/build.xml</li> <li>/zookeeper/trunk/src/recipes/queue/build.xml</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/deb/zkpython.control/control</li> <li>/zookeeper/trunk/src/packages/deb/init.d/zookeeper</li> <li>/zookeeper/trunk/bin/zkEnv.sh</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/rpm/spec</li> <li>/zookeeper/trunk/src/packages/deb/init.d</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/deb</li> <li>/zookeeper/trunk/src/contrib/zkpython/ivy.xml</li> <li>/zookeeper/trunk/src/contrib/zkpython/build.xml</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control</li> <li>/zookeeper/trunk/src/packages/rpm/spec</li> <li>/zookeeper/trunk/src/packages/rpm</li> <li>/zookeeper/trunk/ivy.xml</li> <li>/zookeeper/trunk/build.xml</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages</li> <li>/zookeeper/trunk/src/packages/rpm/init.d/zookeeper</li> <li>/zookeeper/trunk/src/recipes/build-recipes.xml</li> <li>/zookeeper/trunk/src/packages/templates</li> <li>/zookeeper/trunk/src/packages/rpm/init.d</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/control</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/prerm</li> <li>/zookeeper/trunk/src/recipes/lock/build.xml</li> <li>/zookeeper/trunk/src/packages/deb</li> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/bin/zkServer.sh</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/preinst</li> </ul> </comment>
<comment id="13083725" author="phunt" created="Thu, 11 Aug 2011 22:12:34 +0000"><p>I had to revert this - jenkins was failing because of the change to "package" target. We should not be building native code as part of package - rather we need to separate building native code into a target separate from "package". (package should only be java jars and source, etc..., but not machine compiled binaries).</p></comment>
<comment id="13083755" author="hudson" created="Thu, 11 Aug 2011 22:33:38 +0000"><p>Integrated in ZooKeeper-trunk #1263 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1263/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1263/</a>)<br/> Reverted <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>, small build issue on jenkins</p> <p>phunt : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1156845" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1156845</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/README_packaging.txt</li> <li>/zookeeper/trunk/src/contrib/zkpython/ivy.xml</li> <li>/zookeeper/trunk/src/contrib/zkpython/build.xml</li> <li>/zookeeper/trunk/src/packages</li> <li>/zookeeper/trunk/bin/zkCleanup.sh</li> <li>/zookeeper/trunk/ivy.xml</li> <li>/zookeeper/trunk/bin/zkCli.sh</li> <li>/zookeeper/trunk/src/contrib/build.xml</li> <li>/zookeeper/trunk/build.xml</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages</li> <li>/zookeeper/trunk/src/recipes/build-recipes.xml</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/python/setup.py</li> <li>/zookeeper/trunk/src/recipes/lock/build.xml</li> <li>/zookeeper/trunk/src/recipes/build.xml</li> <li>/zookeeper/trunk/src/contrib/build-contrib.xml</li> <li>/zookeeper/trunk/src/recipes/queue/build.xml</li> <li>/zookeeper/trunk/CHANGES.txt</li> <li>/zookeeper/trunk/bin/zkServer.sh</li> <li>/zookeeper/trunk/bin/zkEnv.sh</li> </ul> </comment>
<comment id="13084476" author="eyang" created="Fri, 12 Aug 2011 23:43:06 +0000"><p>Skip native build for "ant tar".</p></comment>
<comment id="13084483" author="hadoopqa" created="Sat, 13 Aug 2011 00:13:18 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12490306/ZOOKEEPER-999-11.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12490306/ZOOKEEPER-999-11.patch</a><br/> against trunk revision 1156845.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/455//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/455//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/455//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/455//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/455//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/455//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13087359" author="mahadev" created="Thu, 18 Aug 2011 22:42:12 +0000"><p>Eric, Looks like ant tar is still calling cpp-unit-configure? </p></comment>
<comment id="13087440" author="eyang" created="Fri, 19 Aug 2011 00:56:32 +0000"><p>Remove create-cppunit-configure dependency for tar, Sync up with trunk.</p></comment>
<comment id="13087443" author="eyang" created="Fri, 19 Aug 2011 01:02:27 +0000"><p>Trigger Jenkins to test again.</p></comment>
<comment id="13087451" author="hadoopqa" created="Fri, 19 Aug 2011 01:25:03 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12490901/ZOOKEEPER-999-12.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12490901/ZOOKEEPER-999-12.patch</a><br/> against trunk revision 1159432.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/466//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/466//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/466//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/466//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/466//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/466//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13092111" author="phunt" created="Fri, 26 Aug 2011 22:50:29 +0000"><p>Why was create-cppunit-configure removed as a dependency? We have that there originally so that people downloading the source artifact can easily run "configure" w/o needing the tools necessary to "autoreconf". We explicitly added that at some point in order to resolve problems users were seeing.</p> <p>I believe we need to add that back. (create-cppunit-configure as a dependency of package)</p></comment>
<comment id="13092163" author="eyang" created="Sat, 27 Aug 2011 01:46:27 +0000"><p>create-cppunit-configure was removed per Mahadev's request. The only delta between <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-11.patch and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-12.patch is create-cppunit-configure. Hence, this issue can still be resolved by <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-11.patch.</p></comment>
<comment id="13092952" author="eyang" created="Mon, 29 Aug 2011 16:20:49 +0000"><p>Upload <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-11.patch as <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>-13.patch.</p></comment>
<comment id="13092966" author="hadoopqa" created="Mon, 29 Aug 2011 16:44:30 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12492098/ZOOKEEPER-999-13.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12492098/ZOOKEEPER-999-13.patch</a><br/> against trunk revision 1162013.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/475//testReport/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/475//testReport/</a><br/> Findbugs warnings: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/475//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/475//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/475//console" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/475//console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="13093241" author="hudson" created="Mon, 29 Aug 2011 21:51:50 +0000"><p>Integrated in ZooKeeper-trunk #1287 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1287/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1287/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>. Create an package integration project</p> <p>phunt : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1163014" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1163014</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/README_packaging.txt</li> <li>/zookeeper/trunk/bin/zkCleanup.sh</li> <li>/zookeeper/trunk/bin/zkCli.sh</li> <li>/zookeeper/trunk/bin/zkEnv.sh</li> <li>/zookeeper/trunk/bin/zkServer.sh</li> <li>/zookeeper/trunk/build.xml</li> <li>/zookeeper/trunk/ivy.xml</li> <li>/zookeeper/trunk/src/contrib/build-contrib.xml</li> <li>/zookeeper/trunk/src/contrib/build.xml</li> <li>/zookeeper/trunk/src/contrib/zkpython/build.xml</li> <li>/zookeeper/trunk/src/contrib/zkpython/ivy.xml</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/deb</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/deb/zkpython.control</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/deb/zkpython.control/control</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/rpm</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/rpm/spec</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec</li> <li>/zookeeper/trunk/src/contrib/zkpython/src/python/setup.py</li> <li>/zookeeper/trunk/src/packages</li> <li>/zookeeper/trunk/src/packages/deb</li> <li>/zookeeper/trunk/src/packages/deb/init.d</li> <li>/zookeeper/trunk/src/packages/deb/init.d/zookeeper</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/conffile</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/control</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/postinst</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/postrm</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/preinst</li> <li>/zookeeper/trunk/src/packages/deb/zookeeper.control/prerm</li> <li>/zookeeper/trunk/src/packages/rpm</li> <li>/zookeeper/trunk/src/packages/rpm/init.d</li> <li>/zookeeper/trunk/src/packages/rpm/init.d/zookeeper</li> <li>/zookeeper/trunk/src/packages/rpm/spec</li> <li>/zookeeper/trunk/src/packages/rpm/spec/zookeeper.spec</li> <li>/zookeeper/trunk/src/packages/templates</li> <li>/zookeeper/trunk/src/packages/templates/conf</li> <li>/zookeeper/trunk/src/packages/templates/conf/zookeeper-env.sh</li> <li>/zookeeper/trunk/src/packages/update-zookeeper-env.sh</li> <li>/zookeeper/trunk/src/recipes/build-recipes.xml</li> <li>/zookeeper/trunk/src/recipes/build.xml</li> <li>/zookeeper/trunk/src/recipes/lock/build.xml</li> <li>/zookeeper/trunk/src/recipes/queue/build.xml</li> </ul> </comment>
<comment id="13093243" author="phunt" created="Mon, 29 Aug 2011 21:52:58 +0000"><p>I committed this to trunk, thanks Eric. (I also verified that trunk on jenkins is still building)</p></comment>
<comment id="13093281" author="eyang" created="Mon, 29 Aug 2011 22:46:23 +0000"><p>Thank you Patrick. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="13093645" author="hudson" created="Tue, 30 Aug 2011 10:55:32 +0000"><p>Integrated in ZooKeeper-trunk #1288 (See <a href="https://builds.apache.org/job/ZooKeeper-trunk/1288/" class="external-link" target="_blank" rel="nofollow noopener">https://builds.apache.org/job/ZooKeeper-trunk/1288/</a>)<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-999" title="Create an package integration project" class="issue-link" data-issue-key="ZOOKEEPER-999"><del>ZOOKEEPER-999</del></a>. Create an package integration project (Eric Yang via phunt)</p> <p>phunt : <a href="http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1163015" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewcvs.cgi/?root=Apache-SVNamp;view=revamp;rev=1163015</a><br/> Files : </p> <ul> <li>/zookeeper/trunk/CHANGES.txt</li> </ul> </comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12507693">ZOOKEEPER-1064</issuekey>
</issuelink>
<issuelink>
<issuekey id="12523411">ZOOKEEPER-1190</issuekey>
</issuelink>
</outwardlinks>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12435489">HADOOP-6255</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12476275" name="ZOOKEEPER-999-1.patch" size="65189" author="eyang" created="Wed, 13 Apr 2011 19:24:13 +0000"/>
<attachment id="12487858" name="ZOOKEEPER-999-10.patch" size="69127" author="eyang" created="Tue, 26 Jul 2011 15:58:33 +0000"/>
<attachment id="12490306" name="ZOOKEEPER-999-11.patch" size="68560" author="eyang" created="Fri, 12 Aug 2011 23:43:06 +0000"/>
<attachment id="12490901" name="ZOOKEEPER-999-12.patch" size="68951" author="eyang" created="Fri, 19 Aug 2011 00:56:32 +0000"/>
<attachment id="12492098" name="ZOOKEEPER-999-13.patch" size="68560" author="eyang" created="Mon, 29 Aug 2011 16:20:12 +0000"/>
<attachment id="12476360" name="ZOOKEEPER-999-2.patch" size="64855" author="eyang" created="Thu, 14 Apr 2011 17:55:53 +0000"/>
<attachment id="12483378" name="ZOOKEEPER-999-3.patch" size="60540" author="eyang" created="Wed, 22 Jun 2011 00:20:08 +0000"/>
<attachment id="12484668" name="ZOOKEEPER-999-4.patch" size="62085" author="eyang" created="Wed, 29 Jun 2011 17:56:05 +0000"/>
<attachment id="12487112" name="ZOOKEEPER-999-5.patch" size="63811" author="eyang" created="Wed, 20 Jul 2011 06:41:24 +0000"/>
<attachment id="12487183" name="ZOOKEEPER-999-6.patch" size="63346" author="eyang" created="Wed, 20 Jul 2011 17:01:22 +0000"/>
<attachment id="12487204" name="ZOOKEEPER-999-7.patch" size="63352" author="eyang" created="Wed, 20 Jul 2011 18:50:01 +0000"/>
<attachment id="12487370" name="ZOOKEEPER-999-8.patch" size="64853" author="eyang" created="Thu, 21 Jul 2011 23:02:52 +0000"/>
<attachment id="12487479" name="ZOOKEEPER-999-9.patch" size="69103" author="eyang" created="Fri, 22 Jul 2011 21:01:23 +0000"/>
<attachment id="12471598" name="ZOOKEEPER-999.patch" size="46249" author="eyang" created="Tue, 22 Feb 2011 05:26:06 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47517</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i062kv:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33349</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>Create zookeeper rpm and deb packages.</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-547] Sanity check in QuorumCnxn Manager and quorum communication port.</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-547</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>We need to put some sanity checks in QuorumCnxnManager and the other quorum port for rogue clients. Sometimes a clients might get misconfigured and they might send random characters on such ports. We need to make sure that such rogue clients do not bring down the clients and need to put in some sanity checks with respect to packet lengths and deserialization.</p></description>
<environment/>
<key id="12437652">ZOOKEEPER-547</key>
<summary>Sanity check in QuorumCnxn Manager and quorum communication port.</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="mahadev">Mahadev Konar</assignee>
<reporter username="mahadev">Mahadev Konar</reporter>
<labels> </labels>
<created>Thu, 8 Oct 2009 22:01:41 +0000</created>
<updated>Fri, 26 Mar 2010 17:25:02 +0000</updated>
<resolved>Tue, 17 Nov 2009 23:39:20 +0000</resolved>
<version>3.2.0</version>
<version>3.2.1</version>
<fixVersion>3.2.2</fixVersion>
<fixVersion>3.3.0</fixVersion>
<component>leaderElection</component>
<component>server</component>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="12763727" author="mahadev" created="Thu, 8 Oct 2009 22:08:24 +0000"><p>stack trace with such rogue packets:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">2009-10-08 19:47:35,063 - WARN [NIOServerCxn.Factory:2281:NIOServerCnxn@494] - Exception causing close of session 0x0 due to java.io.IOException: Len error -720899 2009-10-08 19:47:35,064 - INFO [NIOServerCxn.Factory:2281:NIOServerCnxn@833] - closing session:0x0 NIOServerCnxn: java.nio.channels.SocketChannel[connected local=/***********:2281 remote=/*******:33530] 2009-10-08 19:47:41,961 - ERROR [FollowerHandler-/*************:38326:FollowerHandler@415] - Unexpected exception causing shutdown <span class="code-keyword">while</span> sock still open java.io.IOException: Unreasonable length = -195059 at org.apache.jute.BinaryInputArchive.readBuffer(BinaryInputArchive.java:100) at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:68) at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:108) at org.apache.zookeeper.server.quorum.FollowerHandler.run(FollowerHandler.java:215) 2009-10-08 19:47:41,962 - WARN [FollowerHandler-/***********:38326:FollowerHandler@421] - ******* GOODBYE /***********:38326 ******** 2009-10-08 19:49:19,409 - WARN [<span class="code-object">Thread</span>-6:QuorumCnxManager$SendWorker@539] - Interrupted <span class="code-keyword">while</span> waiting <span class="code-keyword">for</span> message on queue java.lang.InterruptedException at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:1899) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1934) at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317) at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:533) 2009-10-08 19:49:19,410 - WARN [<span class="code-object">Thread</span>-6:QuorumCnxManager$SendWorker@554] - Send worker leaving thread 2009-10-08 19:49:19,418 - WARN [<span class="code-object">Thread</span>-7:QuorumCnxManager$RecvWorker@621] - Connection broken: java.nio.channels.AsynchronousCloseException at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:185) at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:263) at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:609) Exception in thread amp;quot;<span class="code-object">Thread</span>-9amp;quot; java.lang.OutOfMemoryError: Java heap space at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:605) </pre> </div></div></comment>
<comment id="12767920" author="mahadev" created="Tue, 20 Oct 2009 19:48:46 +0000"><p>a simple fix. We are already guarded on our client and followerhandler ports. This one gurads against the quurom ports. I did write a test case, but havent been able to get it working since we unfortunately do not use FLE in most of our testing. I will try and upload a test case within a day!</p></comment>
<comment id="12769488" author="mahadev" created="Fri, 23 Oct 2009 22:22:14 +0000"><p>added a testcase in QuorumpeerMainTest. </p></comment>
<comment id="12769506" author="hadoopqa" created="Fri, 23 Oct 2009 22:44:15 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12423075/ZOOKEEPER-547.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12423075/ZOOKEEPER-547.patch</a><br/> against trunk revision 828216.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/37/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/37/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/37/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/37/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/37/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/37/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12769518" author="mahadev" created="Fri, 23 Oct 2009 22:56:14 +0000"><p>a minor change in the test so that buff is set to 0 when writing out invalid packets.</p></comment>
<comment id="12769525" author="hadoopqa" created="Fri, 23 Oct 2009 23:11:01 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12423080/ZOOKEEPER-547.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12423080/ZOOKEEPER-547.patch</a><br/> against trunk revision 828216.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/38/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/38/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/38/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/38/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/38/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/38/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12773549" author="phunt" created="Wed, 4 Nov 2009 16:25:09 +0000"><p>Why did the unit tests fail?</p></comment>
<comment id="12773612" author="mahadev" created="Wed, 4 Nov 2009 19:13:28 +0000"><p>saw this in the logs - </p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">junit.framework.AssertionFailedError: fastleaderelection used at org.apache.zookeeper.server.quorum.QuorumPeerMainTest.testQuorumDefaults(QuorumPeerMainTest.java:354) </pre> </div></div> <p>Doesnt seem to be related to the patch but will have to take a closer look.</p></comment>
<comment id="12773634" author="fpj" created="Wed, 4 Nov 2009 20:19:06 +0000"><p>The log also says this:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">Exception in thread <span class="code-quote">"WorkerSender <span class="code-object">Thread</span>"</span> java.nio.channels.UnresolvedAddressException at sun.nio.ch.Net.checkAddress(Net.java:30) at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:487) at java.nio.channels.SocketChannel.open(SocketChannel.java:146) at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:323) at org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:302) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:323) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:296) at java.lang.<span class="code-object">Thread</span>.run(<span class="code-object">Thread</span>.java:619) </pre> </div></div></comment>
<comment id="12774458" author="phunt" created="Fri, 6 Nov 2009 22:34:14 +0000"><p>Let's give it another go and see, perhaps some hiccup on h8</p></comment>
<comment id="12774476" author="hadoopqa" created="Fri, 6 Nov 2009 23:05:05 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12423080/ZOOKEEPER-547.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12423080/ZOOKEEPER-547.patch</a><br/> against trunk revision 833559.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/53/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/53/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/53/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/53/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/53/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/53/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12774482" author="fpj" created="Fri, 6 Nov 2009 23:17:10 +0000"><p>Same problem as before:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">Exception in thread <span class="code-quote">"WorkerSender <span class="code-object">Thread</span>"</span> java.nio.channels.UnresolvedAddressException at sun.nio.ch.Net.checkAddress(Net.java:30) at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:487) at java.nio.channels.SocketChannel.open(SocketChannel.java:146) at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:330) at org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:303) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:323) at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:296) at java.lang.<span class="code-object">Thread</span>.run(<span class="code-object">Thread</span>.java:619) </pre> </div></div></comment>
<comment id="12778631" author="mahadev" created="Mon, 16 Nov 2009 23:07:41 +0000"><p>this patch fixes the test case to pass.</p></comment>
<comment id="12778663" author="hadoopqa" created="Tue, 17 Nov 2009 00:11:19 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12425168/ZOOKEEPER-547.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12425168/ZOOKEEPER-547.patch</a><br/> against trunk revision 835618.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/66/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/66/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/66/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/66/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/66/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/66/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12778975" author="breed" created="Tue, 17 Nov 2009 16:33:36 +0000"><p>+1 looks good.</p></comment>
<comment id="12779074" author="fpj" created="Tue, 17 Nov 2009 19:33:10 +0000"><p>+1</p></comment>
<comment id="12779204" author="breed" created="Tue, 17 Nov 2009 23:39:20 +0000"><p>Committed revision 881623.</p></comment>
<comment id="12779236" author="breed" created="Wed, 18 Nov 2009 01:04:40 +0000"><p>Committed revision 881641. (for branch 3.2.2) i had to pull in src/java/test/org/apache/zookeeper/PortAssignment.java<br/> from trunk.</p></comment>
<comment id="12779405" author="hudson" created="Wed, 18 Nov 2009 10:56:02 +0000"><p>Integrated in ZooKeeper-trunk #543 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/543/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/543/</a>)<br/> . Sanity check in QuorumCnxn Manager and quorum communication port.</p></comment>
</comments>
<attachments>
<attachment id="12425168" name="ZOOKEEPER-547.patch" size="5335" author="mahadev" created="Mon, 16 Nov 2009 23:07:41 +0000"/>
<attachment id="12423080" name="ZOOKEEPER-547.patch" size="4194" author="mahadev" created="Fri, 23 Oct 2009 22:56:14 +0000"/>
<attachment id="12423075" name="ZOOKEEPER-547.patch" size="4140" author="mahadev" created="Fri, 23 Oct 2009 22:22:14 +0000"/>
<attachment id="12422711" name="ZOOKEEPER-547.patch" size="1180" author="mahadev" created="Tue, 20 Oct 2009 19:48:46 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47739</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i060h3:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33008</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-541] zkpython limited to 256 handles</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-541</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>zkpython is currently limited to a max of 256 total handles - not 256 open handles, but rather 256 total handles created<br/> over the lifetime of the python application.</p> <p>In general this isn't a real issue, however in the case of a long lived application which polls the cluster periodically (closing<br/> the session btw calls) this is an issue.</p> <p>it would be great if the slots could be reused? or perhaps a more complex structure, such as a linked list, which would allow<br/> dynamic growth/shrinkage of the handle list.</p> <p>Also see <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-540" title="zkpython needs better tracking of handle validity" class="issue-link" data-issue-key="ZOOKEEPER-540"><del>ZOOKEEPER-540</del></a></p></description>
<environment/>
<key id="12437332">ZOOKEEPER-541</key>
<summary>zkpython limited to 256 handles</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="henryr">Henry Robinson</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Tue, 6 Oct 2009 00:04:47 +0000</created>
<updated>Fri, 26 Mar 2010 17:25:01 +0000</updated>
<resolved>Tue, 13 Oct 2009 23:14:58 +0000</resolved>
<version>3.2.1</version>
<fixVersion>3.2.2</fixVersion>
<fixVersion>3.3.0</fixVersion>
<component>contrib-bindings</component>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="12762800" author="henryr" created="Tue, 6 Oct 2009 22:01:07 +0000"><p>This patch ups the limit of concurrently active connections to 32768, and allocates these handles dynamically in increasing powers of two.</p> <p>Handles are re-used when they are correctly closed. This involves an O<img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.png" height="16" width="16" align="absmiddle" alt="" border="0"/> scan of the handle array, but I think this is preferable to the overhead of managing linked lists with O(1) lookup. </p> <p>Tests are included.</p> </comment>
<comment id="12762834" author="hadoopqa" created="Wed, 7 Oct 2009 01:19:11 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12421470/ZOOKEEPER-541.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12421470/ZOOKEEPER-541.patch</a><br/> against trunk revision 822065.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/1/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/1/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12762839" author="henryr" created="Wed, 7 Oct 2009 01:40:14 +0000"><p>This patch requires <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-510" title="zkpython lumps all exceptions as IOError, needs specialized exceptions for KeeperException types" class="issue-link" data-issue-key="ZOOKEEPER-510"><del>ZOOKEEPER-510</del></a> to be committed. </p></comment>
<comment id="12763773" author="henryr" created="Fri, 9 Oct 2009 00:56:10 +0000"><p>Restarting Hudson now that <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-510" title="zkpython lumps all exceptions as IOError, needs specialized exceptions for KeeperException types" class="issue-link" data-issue-key="ZOOKEEPER-510"><del>ZOOKEEPER-510</del></a> has gone in.</p></comment>
<comment id="12763838" author="phunt" created="Fri, 9 Oct 2009 04:46:28 +0000"><p>Henry, you want to make this "patch available", not "in progress". I seem to be locked out of doing that otw I would fix it.</p></comment>
<comment id="12765001" author="hadoopqa" created="Tue, 13 Oct 2009 08:28:50 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12421470/ZOOKEEPER-541.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12421470/ZOOKEEPER-541.patch</a><br/> against trunk revision 823371.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/2/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/2/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/2/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/2/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/2/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/2/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12765301" author="phunt" created="Tue, 13 Oct 2009 23:14:58 +0000"><p>+1 Looks good. Tests look good to me as well.</p></comment>
<comment id="12765510" author="hudson" created="Wed, 14 Oct 2009 10:57:59 +0000"><p>Integrated in ZooKeeper-trunk #497 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/497/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/497/</a>)<br/> . zkpython limited to 256 handles</p></comment>
</comments>
<issuelinks>
<issuelinktype id="12310010">
<name>Incorporates</name>
<outwardlinks description="incorporates">
<issuelink>
<issuekey id="12437077">ZOOKEEPER-540</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12421470" name="ZOOKEEPER-541.patch" size="7951" author="henryr" created="Tue, 6 Oct 2009 22:01:06 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47743</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i060hj:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33010</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-529] Use Ivy to pull dependencies and also generate pom</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-529</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Integrate Ivy into the build. Generate Pom and signed jars to allow zk jars to be officially deployed to a maven repo.</p></description>
<environment/>
<key id="12436110">ZOOKEEPER-529</key>
<summary>Use Ivy to pull dependencies and also generate pom</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Fri, 18 Sep 2009 22:23:17 +0000</created>
<updated>Fri, 26 Mar 2010 17:25:00 +0000</updated>
<resolved>Tue, 22 Sep 2009 23:00:49 +0000</resolved>
<fixVersion>3.3.0</fixVersion>
<component>build</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12757496" author="phunt" created="Fri, 18 Sep 2009 22:42:33 +0000"><p>this patch:</p> <p>1) adds ivy support<br/> 2) removes src/java/lib/*.jar from svn, these jars are now d/l automatically by ivy at build time<br/> 3) log4j/jline are included in the rel package, but not things like junit (which will be d/l by ivy if tests run on package)<br/> 4) remove legacy zookeeper-dev.jar in favor of a single, std, zookeeper-lt;versiongt;.jar in build directory<br/> 5) bit of housecleaning on build.xml</p> <p>also:</p> <p>a) pom file is now generated, by ivy, for zookeeper jar, included in release package<br/> b) checksums are generated for zk jar - they are included in release archive, allowing us to deploy release to maven repo</p> <p>contrib builds have <em>not</em> been moved to ivy (same as before)</p></comment>
<comment id="12757503" author="hadoopqa" created="Fri, 18 Sep 2009 23:05:31 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12420095/ZOOKEEPER-529.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12420095/ZOOKEEPER-529.patch</a><br/> against trunk revision 815574.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 25 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> -1 findbugs. The patch appears to cause Findbugs to fail.</p> <p> -1 release audit. The applied patch generated 181 release audit warnings (more than the trunk's current 176 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/8/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/8/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/8/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/8/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/8/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/8/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12757508" author="phunt" created="Fri, 18 Sep 2009 23:13:32 +0000"><p>a couple small changes, otw same as last patch:</p> <p>1) fix notice text to be in line with apache current requirement for NOTICE.txt<br/> 2) ivy jar was being copied into src/java/lib in package, now excluded.</p> <p>also, forgot to note: as part of defining ivy.xml I've moved us to junit 4.7 (was 4.4, 4.6 was approved as <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-476" title="upgrade junit library from 4.4 to 4.6" class="issue-link" data-issue-key="ZOOKEEPER-476"><del>ZOOKEEPER-476</del></a> but I will close that as it's superseded by this.)</p></comment>
<comment id="12757561" author="phunt" created="Sat, 19 Sep 2009 00:38:39 +0000"><p>same as previous patch except fixed findbugs.</p></comment>
<comment id="12757598" author="hadoopqa" created="Sat, 19 Sep 2009 02:01:04 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12420112/ZOOKEEPER-529.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12420112/ZOOKEEPER-529.patch</a><br/> against trunk revision 815574.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 25 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 181 release audit warnings (more than the trunk's current 176 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/10/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/10/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/10/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/10/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/10/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/10/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/10/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/10/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12757623" author="phunt" created="Sat, 19 Sep 2009 04:05:39 +0000"><p>the release audit warning increase is just due to adding pom file and checksum files.</p> <p>Please review and commit this asap.</p></comment>
<comment id="12758145" author="mahadev" created="Tue, 22 Sep 2009 06:35:27 +0000"><p>this is great... will make our build really clean #8211; some comments/questions:</p> <ul class="alternate" type="square"> <li>I see changes to</li> </ul> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">--- src/recipes/lock/src/c/tests/zkServer.sh --- src/contrib/zkpython/src/test/zkServer.sh </pre> </div></div> <p> Doesnt src/c/tests/zkServer.sh need changes? We should combine all these files into one, but that is another jira.</p> <ul class="alternate" type="square"> <li>also, I ran the tests twice and it succeded but it left a process running on my machine after the tests were done running <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">java -cp :../../..<span class="code-comment">//build/classes:../../..//conf:../../..//build/lib/jline-0.9.94.jar:../../..//build/lib/log4j-1.2.15.jar:../../..//src/java/lib/ivy-2.1.0-rc2.jar:../../..//src/java/lib/jline-0.9.94.jar:../../..//src/java/lib/junit-4.4.jar:../../..//src/java/lib/log4j-1.2.15.jar org.apache.zookeeper.server.ZooKeeperServerMain 22182 /tmp/zkdata</span> </pre> </div></div> <p> Am not sure that if I accidentally might have killed something or not (both times). Ill re verify this. Do you see any such problem?</p></li> </ul> <p>Other than that the patch looks good to go... sorry about the delay in reviewing... </p></comment>
<comment id="12758437" author="phunt" created="Tue, 22 Sep 2009 21:07:01 +0000"><p>There are changes to 4 zkServer.sh files, one of which is in c tests (perhaps you missed it, check the patch file)</p> <p>I did notice that zkPython zkServer.sh doesn't have any "stop" code, so I suspect that's the issue.</p> <p>I suggest you enter a couple jiras, one on zkPython and another that we should clean up this proliferation of zkServer.sh files.</p> <p>Please commit this asap.</p></comment>
<comment id="12758455" author="mahadev" created="Tue, 22 Sep 2009 21:41:22 +0000"><p>good.... I dont know how I missed the first one.... you might be right on the second one... We can fix that in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-414" title="zkServer.sh is duplicated in a couple of places" class="issue-link" data-issue-key="ZOOKEEPER-414">ZOOKEEPER-414</a>. <br/> ill commit this.</p></comment>
<comment id="12758470" author="mahadev" created="Tue, 22 Sep 2009 23:00:48 +0000"><p>I just committed this. thanks pat.</p></comment>
<comment id="12759220" author="hudson" created="Thu, 24 Sep 2009 19:27:36 +0000"><p>Integrated in ZooKeeper-trunk #477 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/477/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/477/</a>)</p> </comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12408698">ZOOKEEPER-224</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12420112" name="ZOOKEEPER-529.patch" size="45981" author="phunt" created="Sat, 19 Sep 2009 00:38:39 +0000"/>
<attachment id="12420104" name="ZOOKEEPER-529.patch" size="44774" author="phunt" created="Fri, 18 Sep 2009 23:13:32 +0000"/>
<attachment id="12420095" name="ZOOKEEPER-529.patch" size="44306" author="phunt" created="Fri, 18 Sep 2009 22:42:32 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47753</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0636v:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33448</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>using ivy for the build. Pulling all the dependent jars using ivy.</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-507] BookKeeper client re-write</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-507</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Error handling is far from ideal currently in the BookKeeper client.</p></description>
<environment/>
<key id="12433145">ZOOKEEPER-507</key>
<summary>BookKeeper client re-write</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="utkarsh">Utkarsh Srivastava</assignee>
<reporter username="fpj">Flavio Paiva Junqueira</reporter>
<labels> </labels>
<created>Sat, 15 Aug 2009 08:26:12 +0000</created>
<updated>Fri, 26 Mar 2010 17:25:00 +0000</updated>
<resolved>Tue, 26 Jan 2010 23:20:53 +0000</resolved>
<fixVersion>3.3.0</fixVersion>
<component>contrib-bookkeeper</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12768904" author="utkarsh" created="Thu, 22 Oct 2009 21:06:54 +0000"><p>A major rewrite of the bookkeeper client library</p></comment>
<comment id="12768918" author="utkarsh" created="Thu, 22 Oct 2009 21:25:31 +0000"><p>We've been using this modified version of bookkeeper for some time with good results in terms of both stability and performance. </p> <p>This patch incorporates a couple of major changes, so its better reviewed as a whole, rather than as a diff. </p> <p>The two major changes are:</p> <p>i) Rewrite of the client library to deal with error cases, and generally iron out a lot of bugs.<br/> ii) Enhancing the bookie server to deal with a large number of open ledgers by multiplexing them into a common number of files.</p> <p>An added dependency is netty, a jboss project for network i/o. Netty is under an Apache 2.0 license, and the jar can be grabbed from <br/> <a href="http://repository.jboss.com/maven2/org/jboss/netty/netty/3.1.2.GA/netty-3.1.2.GA.jar" class="external-link" target="_blank" rel="nofollow noopener">http://repository.jboss.com/maven2/org/jboss/netty/netty/3.1.2.GA/netty-3.1.2.GA.jar</a> </p></comment>
<comment id="12773639" author="fpj" created="Wed, 4 Nov 2009 21:03:34 +0000"><p>Sorry for the delay, I'll be reviewing this shortly.</p></comment>
<comment id="12774113" author="fpj" created="Thu, 5 Nov 2009 22:24:16 +0000"><p>One small comment at this point is that we have no lib folder under bookkeeper, and Pat tells me that putting under PROJECT_ROOT/src/java/lib is not ok. So, it doesn't compile without modifying build.xml. </p> <p>I see two options:</p> <ol> <li>We create a bookkeeper/src/java/lib folder and add the netty jar. In this case, we edit build.xml to set its classpath appropriately;</li> <li>We make it use ivy and fetch from a repository.</li> </ol> <p>Another point is that for the new bookie classes, I haven't seen javadocs or comments at all. I think it would be great to have some in there.</p> </comment>
<comment id="12774450" author="utkarsh" created="Fri, 6 Nov 2009 22:24:41 +0000"><p>Rewrite of bookkeeper client library</p></comment>
<comment id="12774451" author="utkarsh" created="Fri, 6 Nov 2009 22:26:18 +0000"><p>The new bookie classes are written by Ben. Ben, can you please add javadocs for those?</p></comment>
<comment id="12778650" author="hadoopqa" created="Mon, 16 Nov 2009 23:31:14 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12422953/ZOOKEEPER-507.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12422953/ZOOKEEPER-507.patch</a><br/> against trunk revision 835618.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 36 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/65/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/65/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/65/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/65/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/65/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/65/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12779258" author="hadoopqa" created="Wed, 18 Nov 2009 02:01:35 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12422953/ZOOKEEPER-507.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12422953/ZOOKEEPER-507.patch</a><br/> against trunk revision 881623.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 36 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/4/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/4/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/4/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/4/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/4/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/4/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12781779" author="mahadev" created="Tue, 24 Nov 2009 05:21:38 +0000"><p>ben,<br/> will you be adding javadocs to the classes?</p></comment>
<comment id="12781816" author="fpj" created="Tue, 24 Nov 2009 08:18:18 +0000"><p>We also need to split this patch into two. There are really two major issue being solved here: new client code and ledger aggregation support.</p></comment>
<comment id="12782047" author="breed" created="Tue, 24 Nov 2009 17:31:55 +0000"><p>waiting for ben to update the bookie doc</p></comment>
<comment id="12792524" author="fpj" created="Fri, 18 Dec 2009 16:42:52 +0000"><p>I have merged <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-486" title="Improve bookie performance for large number of ledgers" class="issue-link" data-issue-key="ZOOKEEPER-486"><del>ZOOKEEPER-486</del></a> back. It doesn't seem to make a lot of sense to separate these patches because they are not completely disjoint. Aside from having more folks reviewing this patch, we need to:</p> <ul> <li>Improve documentation (<a href="https://issues.apache.org/jira/browse/ZOOKEEPER-607" title="improve bookkeeper overview" class="issue-link" data-issue-key="ZOOKEEPER-607"><del>ZOOKEEPER-607</del></a>);</li> <li>Fetch netty jar through ivy (ZOOKEEPER-.633).</li> </ul> </comment>
<comment id="12792531" author="fpj" created="Fri, 18 Dec 2009 16:57:01 +0000"><p>I had the wrong file name in the previous upload, I'm just uploading the same file with its name corrected.</p></comment>
<comment id="12794817" author="fpj" created="Mon, 28 Dec 2009 14:40:29 +0000"><p>BookieFailureTest is failing intermittently after the last modifications. I'm attaching the test output showing where it is hanging.</p></comment>
<comment id="12794832" author="fpj" created="Mon, 28 Dec 2009 16:35:07 +0000"><p>BookieFailureTest is failing consistently now, after I re-introduced the tests to check the failure of each bookie. These tests are redundant, but they should help to pinpoint problems that arise when the position of the bookie in the ensemble matters. A disadvantage of re-introducing the tests is that they increase the total time needed to run the tests.</p> <p>About the test failure, it seems that the test hangs when we error out add keys, but I'm not completely sure. I need to look more deeply into the problem.</p> <p>I have also wrote and modified javadoc blocks for some of the client package classes. </p></comment>
<comment id="12795351" author="breed" created="Wed, 30 Dec 2009 16:58:24 +0000"><p>it turns out that the BookieFailureTest was failing due to a bug in netty. it appears to have been fixed at the end of september (see <a href="http://viewvc.jboss.org/cgi-bin/viewvc.cgi/netty/trunk/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java?view=log" class="external-link" target="_blank" rel="nofollow noopener">http://viewvc.jboss.org/cgi-bin/viewvc.cgi/netty/trunk/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java?view=log</a>) . the fix is in 3.1.5. Running with netty 3.1.5 allows all the tests to pass.</p></comment>
<comment id="12801639" author="utkarsh" created="Mon, 18 Jan 2010 01:14:14 +0000"><p>Added documentation to user-facing classes. Made all the remaining non-user-facing classes package public.</p></comment>
<comment id="12801644" author="hadoopqa" created="Mon, 18 Jan 2010 01:35:58 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12430595/ZOOKEEPER-507.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12430595/ZOOKEEPER-507.patch</a><br/> against trunk revision 899383.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 27 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/107/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/107/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/107/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/107/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/107/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/107/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12802222" author="fpj" created="Tue, 19 Jan 2010 12:19:33 +0000"><p>Utkarsh, This patch is broken. There is missing code, which you can actually see from the file size (compare to the previous patches). Could you upload a new complete patch?</p></comment>
<comment id="12802360" author="utkarsh" created="Tue, 19 Jan 2010 17:34:32 +0000"><p>Included all the new classes. Had forgot to svn add them earlier.</p></comment>
<comment id="12802379" author="hadoopqa" created="Tue, 19 Jan 2010 18:00:33 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12430774/ZOOKEEPER-507.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12430774/ZOOKEEPER-507.patch</a><br/> against trunk revision 899383.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 33 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 211 release audit warnings (more than the trunk's current 207 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/109/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/109/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/109/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/109/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/109/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/109/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/109/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/109/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12802389" author="fpj" created="Tue, 19 Jan 2010 18:09:51 +0000"><p>The following two classes are missing the license headers:</p> <ol> <li>BaseTestCase.java</li> <li>SyncCounter.java</li> </ol> </comment>
<comment id="12802404" author="utkarsh" created="Tue, 19 Jan 2010 18:32:20 +0000"><p>Fixed warnings, added 2 missing license headers</p></comment>
<comment id="12802432" author="hadoopqa" created="Tue, 19 Jan 2010 19:41:17 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12430779/ZOOKEEPER-507.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12430779/ZOOKEEPER-507.patch</a><br/> against trunk revision 899383.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 33 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/110/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/110/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/110/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/110/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/110/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/110/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12803538" author="mahadev" created="Thu, 21 Jan 2010 23:33:22 +0000"><p>lets try and get this in 3.3.</p></comment>
<comment id="12803544" author="mahadev" created="Thu, 21 Jan 2010 23:47:10 +0000"><p>utkarsh and ben,<br/> can you folks please update the jira saying </p> <ul class="alternate" type="square"> <li>what changes have been made - the basic design change</li> <li>what classes have been added and what is there purpose (better javadoc would help here)</li> <li>what user facing changes have been made</li> <li>are there forrest docs added for the user interface?</li> <li>also i took a cursory look, it seems some (very few) of the classes do not have any javadoc or very minimal. It would be really helpful for future and current development if javadoc is added to these classes</li> </ul> </comment>
<comment id="12803640" author="breed" created="Fri, 22 Jan 2010 08:49:40 +0000"><p>here are the main changes:</p> <p>1) changed to using netty for client requests<br/> 2) made recovery more reliable<br/> 3) multiplexed writes to handle a large number of concurrent ledgers being written to</p> <p>the user facing changes are minimal. our javadoc efforts have been with respect to user facing classes. the internal code is still a bit influx, so some of the internal or simple classes we have not put a lot of effort into documenting since they haven't really finalized.</p> <p>our main goal right now is to get the patch in since it is very large and hard to manage at this point.</p></comment>
<comment id="12804203" author="breed" created="Sun, 24 Jan 2010 07:41:12 +0000"><p>two extremely small fixes to make the tests patch:</p> <p>1) The syncThread was not being killed in the shutdown() method of Bookie<br/> 2) We need to add pending ops before calling connect() in PerChannelBookieConnection because in linux with local host the connect will return immediately.</p> <p>we really need to commit this thing. the patch has become extremely unwieldy!</p></comment>
<comment id="12804298" author="utkarsh" created="Sun, 24 Jan 2010 20:56:46 +0000"><p>Ben, could you explain the change in PerChannelBookieClient.java. As far as I could tell, you exchanged the order of </p> <ul class="alternate" type="square"> <li>initiating a connect, and</li> <li>adding operation to pendingops</li> </ul> <p>But since these are done under a lock, and the connect callback grabs the same lock, switching this order is immaterial. It shouldn't have fixed anything.</p></comment>
<comment id="12804569" author="breed" created="Mon, 25 Jan 2010 15:32:21 +0000"><p>yeah that is exactly what i thought, which is why it took me so long to fix. the problem is that the connect in the same thread. so if the connect succeeds right away, which happens with local host, the pendingops list gets processed. thus, you need to add to pendingops before calling connect.</p></comment>
<comment id="12804608" author="utkarsh" created="Mon, 25 Jan 2010 17:32:34 +0000"><p>Oh, you mean the connect callback gets called in the same thread? If so, yes I can see why that would not work. </p></comment>
<comment id="12805265" author="mahadev" created="Tue, 26 Jan 2010 23:06:02 +0000"><p>+1 ... ill go ahead and commit this. please make sure you add more java docs and forrest docs for bookkeeper. </p></comment>
<comment id="12805280" author="mahadev" created="Tue, 26 Jan 2010 23:20:52 +0000"><p>I just committed this. thanks utkarsh, ben and flavio.</p></comment>
<comment id="12805475" author="hudson" created="Wed, 27 Jan 2010 11:05:50 +0000"><p>Integrated in ZooKeeper-trunk #680 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/680/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/680/</a>)<br/> . BookKeeper client re-write (Utkarsh and ben via mahadev)</p></comment>
</comments>
<issuelinks>
<issuelinktype id="12310010">
<name>Incorporates</name>
<outwardlinks description="incorporates">
<issuelink>
<issuekey id="12432610">ZOOKEEPER-505</issuekey>
</issuelink>
<issuelink>
<issuekey id="12432460">ZOOKEEPER-502</issuekey>
</issuelink>
<issuelink>
<issuekey id="12432463">ZOOKEEPER-503</issuekey>
</issuelink>
<issuelink>
<issuekey id="12432546">ZOOKEEPER-504</issuekey>
</issuelink>
<issuelink>
<issuekey id="12430128">ZOOKEEPER-461</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12446707">BOOKKEEPER-691</issuekey>
</issuelink>
<issuelink>
<issuekey id="12442232">ZOOKEEPER-607</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12429015" name="BookieFailureTest-log-507.rtf" size="82999" author="fpj" created="Mon, 28 Dec 2009 14:40:29 +0000"/>
<attachment id="12431238" name="ZOOKEEPER-507.patch" size="528271" author="breed" created="Sun, 24 Jan 2010 07:41:12 +0000"/>
<attachment id="12430779" name="ZOOKEEPER-507.patch" size="528081" author="utkarsh" created="Tue, 19 Jan 2010 18:32:20 +0000"/>
<attachment id="12429017" name="ZOOKEEPER-507.patch" size="523659" author="fpj" created="Mon, 28 Dec 2009 16:35:07 +0000"/>
<attachment id="12428452" name="ZOOKEEPER-507.patch" size="522485" author="fpj" created="Fri, 18 Dec 2009 16:57:01 +0000"/>
<attachment id="12422953" name="ZOOKEEPER-507.patch" size="532136" author="utkarsh" created="Thu, 22 Oct 2009 21:06:54 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47763</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0637r:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33452</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>bookkeeper code rewrite with optimization on disk write scheduling and scheduling of ledger writes on the client side.</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-486] Improve bookie performance for large number of ledgers</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-486</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>If we write simultaneously to a large number of ledgers on a bookie, then performance drops significantly due to more seeks on the ledger device. In such cases, we should be clustering ledgers into files to reduce the number of seeks, and performing sequential writes on each file. Clustering ledgers will impact read performance, so we would to have a knob to control such a feature.</p> </description>
<environment/>
<key id="12431318">ZOOKEEPER-486</key>
<summary>Improve bookie performance for large number of ledgers</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="breed">Benjamin Reed</assignee>
<reporter username="fpj">Flavio Paiva Junqueira</reporter>
<labels> </labels>
<created>Fri, 24 Jul 2009 01:03:50 +0000</created>
<updated>Fri, 26 Mar 2010 17:24:55 +0000</updated>
<resolved>Sat, 13 Mar 2010 14:24:12 +0000</resolved>
<fixVersion>3.3.0</fixVersion>
<component>contrib-bookkeeper</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12768919" author="utkarsh" created="Thu, 22 Oct 2009 21:26:29 +0000"><p>Changes to handle this are included in the patch for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-507" title="BookKeeper client re-write" class="issue-link" data-issue-key="ZOOKEEPER-507"><del>ZOOKEEPER-507</del></a>.</p></comment>
<comment id="12784712" author="fpj" created="Wed, 2 Dec 2009 08:53:05 +0000"><p>Separated the bookie part of patch <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-507" title="BookKeeper client re-write" class="issue-link" data-issue-key="ZOOKEEPER-507"><del>ZOOKEEPER-507</del></a>. There is one test failing because a bookie is apparently failing to handle a missing ledger.</p></comment>
<comment id="12784717" author="fpj" created="Wed, 2 Dec 2009 08:57:27 +0000"><p>Here is the log output for the failing test:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>2009-12-02 09:46:22,952 - INFO - [main:BookieClientTest@198] - Starting no ledger test 2009-12-02 09:46:22,956 - INFO - [Thread-4:BookieClientTest$1@75] - Capacity 16, 0 2009-12-02 09:46:22,957 - INFO - [Thread-4:BookieClientTest$1@83] - Received 0 2009-12-02 09:46:23,001 - ERROR - [SyncThread:Bookie$LastLogMark@295] - Problems writing to /var/folders/iq/iqmyL+XiGjqE2AjRkKTe-E+++TI/-Tmp-/bookie2550661167481866393test/lastMark java.io.FileNotFoundException: /var/folders/iq/iqmyL+XiGjqE2AjRkKTe-E+++TI/-Tmp-/bookie2550661167481866393test/lastMark (No such file or directory) at java.io.FileOutputStream.open(Native Method) at java.io.FileOutputStream.lt;initgt;(FileOutputStream.java:179) at java.io.FileOutputStream.lt;initgt;(FileOutputStream.java:131) at org.apache.bookkeeper.bookie.Bookie$LastLogMark.rollLog(Bookie.java:290) at org.apache.bookkeeper.bookie.Bookie$SyncThread.run(Bookie.java:116) 2009-12-02 09:46:23,002 - FATAL - [Thread-3:Bookie@375] - Bookie thread exiting java.lang.InterruptedException at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:1899) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1934) at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:358) at org.apache.bookkeeper.bookie.Bookie.run(Bookie.java:341) </pre> </div></div> <p>and the assert statement that fails:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>Testcase: testNoLedger took 0.132 sec FAILED expected:lt;1gt; but was:lt;2gt; junit.framework.AssertionFailedError: expected:lt;1gt; but was:lt;2gt; at org.apache.bookkeeper.test.BookieClientTest.testNoLedger(BookieClientTest.java:204) </pre> </div></div> <p>It seems to me that the problem is that the bookie is not processing the FileNotFoundException properly. It should send a ENOLEDGER value back. </p></comment>
<comment id="12790256" author="breed" created="Mon, 14 Dec 2009 17:42:55 +0000"><p>fixed the check for no lodger in bookie.java</p></comment>
<comment id="12790266" author="hadoopqa" created="Mon, 14 Dec 2009 18:09:02 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12427942/ZOOKEEPER-486.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12427942/ZOOKEEPER-486.patch</a><br/> against trunk revision 889848.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 6 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/87/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/87/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/87/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/87/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/87/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/87/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12791012" author="breed" created="Tue, 15 Dec 2009 22:58:57 +0000"><p>added comments</p></comment>
<comment id="12791346" author="fpj" created="Wed, 16 Dec 2009 12:40:30 +0000"><p>Ben, this patch is broken. It is missing a few classes, like LedgerCache and LedgerEntryPage.</p></comment>
<comment id="12791628" author="breed" created="Wed, 16 Dec 2009 22:02:58 +0000"><p>added the missing files.</p></comment>
<comment id="12791651" author="breed" created="Wed, 16 Dec 2009 22:53:12 +0000"><p>the patch was rooted in bookkeeper rather than the top.</p></comment>
<comment id="12844885" author="fpj" created="Sat, 13 Mar 2010 14:24:12 +0000"><p>This issue has been fixed as part of the patch of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-507" title="BookKeeper client re-write" class="issue-link" data-issue-key="ZOOKEEPER-507"><del>ZOOKEEPER-507</del></a>.</p></comment>
</comments>
<attachments>
<attachment id="12428236" name="ZOOKEEPER-486.patch" size="102829" author="breed" created="Wed, 16 Dec 2009 22:53:12 +0000"/>
<attachment id="12428230" name="ZOOKEEPER-486.patch" size="101863" author="breed" created="Wed, 16 Dec 2009 22:02:58 +0000"/>
<attachment id="12428096" name="ZOOKEEPER-486.patch" size="64857" author="breed" created="Tue, 15 Dec 2009 22:58:57 +0000"/>
<attachment id="12427942" name="ZOOKEEPER-486.patch" size="94459" author="breed" created="Mon, 14 Dec 2009 17:42:55 +0000"/>
<attachment id="12426644" name="ZOOKEEPER-486.patch" size="93670" author="fpj" created="Wed, 2 Dec 2009 08:53:05 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47780</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i06393:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33458</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-436] Bookies should auto register to ZooKeeper</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-436</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>currently bookies have to be manually added to ZooKeeper to be used in a BookKeeper service. we should be able to just start up a bookkie, point it at ZooKeeper, and have it get auto integrated in.</p></description>
<environment/>
<key id="12427252">ZOOKEEPER-436</key>
<summary>Bookies should auto register to ZooKeeper</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="erwin.tam">Erwin Tam</assignee>
<reporter username="breed">Benjamin Reed</reporter>
<labels> </labels>
<created>Fri, 5 Jun 2009 21:12:37 +0000</created>
<updated>Fri, 26 Mar 2010 17:24:55 +0000</updated>
<resolved>Fri, 19 Mar 2010 17:13:33 +0000</resolved>
<fixVersion>3.3.0</fixVersion>
<component>contrib-bookkeeper</component>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="12846117" author="erwin.tam" created="Tue, 16 Mar 2010 20:56:10 +0000"><p>SVN Diff of two files modified for this Jira:<br/> BookieServer.java and Bookie.java</p></comment>
<comment id="12846122" author="erwin.tam" created="Tue, 16 Mar 2010 20:58:23 +0000"><p>Changes so the BookieServer's main method to create Bookie's will take in an additional parameter for the String of ZooKeeper servers (comma separated string of hostname:port). This is passed to the Bookie constructor which will invoke the ZK related client instantiation and creation of the ephemeral nodes for the Bookie Server being created.</p></comment>
<comment id="12846123" author="hadoopqa" created="Tue, 16 Mar 2010 21:03:51 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12438961/ZOOKEEPER-436.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12438961/ZOOKEEPER-436.patch</a><br/> against trunk revision 922759.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/25/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/25/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12846131" author="fpj" created="Tue, 16 Mar 2010 21:24:14 +0000"><p>Thanks for the patch, Erwin! The patch you've uploaded does not apply, though. Could you please re-generate the patch having the zookeeper project folder as the root? The current patch apparently has the bookkeeper folder as the root instead.</p></comment>
<comment id="12846134" author="erwin.tam" created="Tue, 16 Mar 2010 21:35:41 +0000"><p>Regenerating the patch from the ZooKeeper trunk instead of BookKeeper.</p></comment>
<comment id="12846154" author="hadoopqa" created="Tue, 16 Mar 2010 21:57:21 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12438969/ZOOKEEPER-436.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12438969/ZOOKEEPER-436.patch</a><br/> against trunk revision 923984.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/27/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/27/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/27/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/27/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/27/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/27/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12846171" author="breed" created="Tue, 16 Mar 2010 22:16:22 +0000"><p>excellent work erwin! you need to modify BaseTestCase in the BookKeeper tests and remove the creating of the znodes under /ledgers/available in setUp(). that will allow the tests to exercise your code.</p></comment>
<comment id="12846355" author="fpj" created="Wed, 17 Mar 2010 09:18:49 +0000"><p>Thanks for the new patch, Erwin. A couple of quick comments:</p> <ol> <li>There are several formatting changes in the patch unrelated to the issue, which is distracting;</li> <li>Although the patch applies, it does not compile. I get the following compilation error, which is not difficult to fix:</li> </ol> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> [javac] zookeeper-apache-436/src/contrib/bookkeeper/src/java/org/apache/bookkeeper/util/LocalBookKeeper.java:136: cannot find symbol [javac] symbol : constructor BookieServer(int,java.io.File,java.io.File[]) [javac] location: class org.apache.bookkeeper.proto.BookieServer [javac] bs[i] = new BookieServer(initialPort + i, tmpDirs[i], new File[]{tmpDirs[i]}); </pre> </div></div></comment>
<comment id="12846608" author="erwin.tam" created="Wed, 17 Mar 2010 21:51:51 +0000"><p>Updated patch making the changes to fix the unit tests. Also made the changes without making the formatting changes done before.</p></comment>
<comment id="12846823" author="fpj" created="Thu, 18 Mar 2010 10:15:30 +0000"><p>I updated Erwin's patch in the following way:</p> <ol> <li>The patch committed yesterday for <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-709" title="bookkeeper build failing with missing factory" class="issue-link" data-issue-key="ZOOKEEPER-709"><del>ZOOKEEPER-709</del></a> generated a conflict, so I fixed it;</li> <li>One of the tests was failing for me because we were not closing the zookeeper client object when shutting down a bookie. In general it shouldn't be a problem because the ephemeral znode goes away once the session expires, but in the case of testBookieRecovery, we shut down a bookie and re-start it right away, so there isn't enough time for expiration. Consequently, I have added a line to close the zk client object if zk is not null (it can be null if no server is passes as a parameter).</li> </ol> </comment>
<comment id="12846834" author="hadoopqa" created="Thu, 18 Mar 2010 10:42:54 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12439141/ZOOKEEPER-436.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12439141/ZOOKEEPER-436.patch</a><br/> against trunk revision 924655.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/141/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/141/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/141/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/141/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/141/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/141/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12846853" author="fpj" created="Thu, 18 Mar 2010 11:28:53 +0000"><p>+1 for me. It would be good if someone else could check the patch and commit it, though, since I've been the last one to update the patch.</p></comment>
<comment id="12846962" author="breed" created="Thu, 18 Mar 2010 15:49:41 +0000"><p>+1 great work</p></comment>
<comment id="12847007" author="erwin.tam" created="Thu, 18 Mar 2010 17:19:07 +0000"><p>Oops, I knew i'd miss something from porting over the changes made earlier. Yeah, doing the formatting changes does make doing a quick glance at svn diff hard. Had this change on the original version but missed it when porting changes over manually. Thanks for catching it!</p></comment>
<comment id="12847011" author="mahadev" created="Thu, 18 Mar 2010 17:29:48 +0000"><p>I still see tests fails.</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">estsuite: org.apache.bookkeeper.test.BookieClientTest Tests run: 2, Failures: 1, Errors: 0, Time elapsed: 0.664 sec ------------- Standard Output --------------- 2010-03-18 17:25:11,571 - WARN - [main:Bookie@212] - No ZK servers passed to Bookie constructor so BookKeeper clients won't know about <span class="code-keyword">this</span> server! 2010-03-18 17:25:11,603 - INFO - [main:LedgerCache@71] - openFileLimit is 900 2010-03-18 17:25:11,605 - INFO - [main:LedgerCache@77] - maxMemory = 517013504 2010-03-18 17:25:11,606 - INFO - [main:LedgerCache@81] - pageLimit is 21037 2010-03-18 17:25:11,609 - ERROR - [main:Bookie$LastLogMark@372] - Problems reading from /tmp/bookie9716test/lastMark (<span class="code-keyword">this</span> is okay <span class="code-keyword">if</span> it is the first time starting <span class="code-keyword">this</span> bookie 2010-03-18 17:25:11,864 - INFO - [New I/O client worker #1-1:PerChannelBookieClient$1@122] - Successfully connected to bookie: /127.0.0.1:13645 2010-03-18 17:25:11,893 - INFO - [New I/O client worker #1-1:PerChannelBookieClient@373] - Disconnected from bookie: /127.0.0.1:13645 2010-03-18 17:25:11,895 - ERROR - [pool-4-thread-1:PerChannelBookieClient$5@316] - Could not write request <span class="code-keyword">for</span> adding entry: 1 ledger-id: 1 bookie: /127.0.0.1:13645 2010-03-18 17:25:11,896 - ERROR - [pool-4-thread-1:PerChannelBookieClient$5@321] - Invoked callback method: 1 2010-03-18 17:25:12,071 - FATAL - [<span class="code-object">Thread</span>-0:Bookie@432] - Bookie thread exiting java.lang.InterruptedException at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1100) at java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312) at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:354) at org.apache.bookkeeper.bookie.Bookie.run(Bookie.java:398) 2010-03-18 17:25:12,087 - WARN - [main:Bookie@212] - No ZK servers passed to Bookie constructor so BookKeeper clients won't know about <span class="code-keyword">this</span> server! 2010-03-18 17:25:12,088 - ERROR - [main:Bookie$LastLogMark@372] - Problems reading from /tmp/bookie9717test/lastMark (<span class="code-keyword">this</span> is okay <span class="code-keyword">if</span> it is the first time starting <span class="code-keyword">this</span> bookie 2010-03-18 17:25:12,093 - INFO - [New I/O client worker #2-1:PerChannelBookieClient$1@122] - Successfully connected to bookie: /127.0.0.1:13645 2010-03-18 17:25:12,097 - INFO - [New I/O client worker #2-1:PerChannelBookieClient@373] - Disconnected from bookie: /127.0.0.1:13645 2010-03-18 17:25:12,097 - FATAL - [<span class="code-object">Thread</span>-2:Bookie@432] - Bookie thread exiting java.lang.InterruptedException at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:1863) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1898) at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:358) at org.apache.bookkeeper.bookie.Bookie.run(Bookie.java:398) ------------- ---------------- --------------- Testcase: testWriteGaps took 0.526 sec FAILED expected:lt;0gt; but was:lt;-13gt; junit.framework.AssertionFailedError: expected:lt;0gt; but was:lt;-13gt; at org.apache.bookkeeper.test.BookieClientTest.testWriteGaps(BookieClientTest.java:132) Testcase: testNoLedger took 0.107 sec </pre> </div></div></comment>
<comment id="12847028" author="fpj" created="Thu, 18 Mar 2010 17:57:42 +0000"><p>Removing double initialization of bookies.</p></comment>
<comment id="12847054" author="hadoopqa" created="Thu, 18 Mar 2010 18:30:04 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12439196/ZOOKEEPER-436.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12439196/ZOOKEEPER-436.patch</a><br/> against trunk revision 924655.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/142/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/142/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/142/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/142/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/142/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/142/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12847245" author="hadoopqa" created="Fri, 19 Mar 2010 06:44:43 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12439196/ZOOKEEPER-436.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12439196/ZOOKEEPER-436.patch</a><br/> against trunk revision 924942.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 12 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/32/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/32/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12847454" author="mahadev" created="Fri, 19 Mar 2010 17:13:33 +0000"><p>This has been committed in 3.3. Ben forgot to close it. thanks erwin and flavio!</p></comment>
<comment id="12847814" author="hudson" created="Sat, 20 Mar 2010 20:09:25 +0000"><p>Integrated in ZooKeeper-trunk #763 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/763/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/763/</a>)</p> </comment>
</comments>
<attachments>
<attachment id="12439196" name="ZOOKEEPER-436.patch" size="13885" author="fpj" created="Thu, 18 Mar 2010 17:57:42 +0000"/>
<attachment id="12439141" name="ZOOKEEPER-436.patch" size="13297" author="fpj" created="Thu, 18 Mar 2010 10:15:29 +0000"/>
<attachment id="12439084" name="ZOOKEEPER-436.patch" size="13716" author="erwin.tam" created="Wed, 17 Mar 2010 21:51:51 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47819</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i063bz:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33471</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-59] Synchronized block in NIOServerCnxn</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-59</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>There are two synchronized blocks locking on different objects, and to me they should be guarded by the same object. Here are the parts of the code I'm talking about:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>NIOServerCnxn.readRequest@444 ... synchronized (this) { outstandingRequests++; // check throttling if (zk.getInProcess() gt; factory.outstandingLimit) { disableRecv(); // following lines should not be needed since we are already // reading // } else { // enableRecv(); } } </pre> </div></div> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>NIOServerCnxn.sendResponse@740 ... synchronized (this.factory) { outstandingRequests--; // check throttling if (zk.getInProcess() lt; factory.outstandingLimit || outstandingRequests lt; 1) { sk.selector().wakeup(); enableRecv(); } } </pre> </div></div> <p>I think the second one is correct, and the first synchronized block should be guarded by "this.factory". </p> <p>This could be related to issue <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-57" title="Connection times out when idle" class="issue-link" data-issue-key="ZOOKEEPER-57"><del>ZOOKEEPER-57</del></a>, but I have no concrete indication that this is the case so far.</p></description>
<environment/>
<key id="12399265">ZOOKEEPER-59</key>
<summary>Synchronized block in NIOServerCnxn</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="fpj">Flavio Paiva Junqueira</assignee>
<reporter username="fpj">Flavio Paiva Junqueira</reporter>
<labels> </labels>
<created>Mon, 30 Jun 2008 11:20:15 +0000</created>
<updated>Fri, 26 Mar 2010 17:24:53 +0000</updated>
<resolved>Tue, 9 Mar 2010 02:01:14 +0000</resolved>
<fixVersion>3.3.0</fixVersion>
<component>server</component>
<due/>
<votes>0</votes>
<watches>4</watches>
<comments>
<comment id="12609206" author="fpj" created="Mon, 30 Jun 2008 11:48:22 +0000"><p>The following block might also have the wrong guard:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>NIOServerCnxn.doIO@379 synchronized (this) { if (outgoingBuffers.size() == 0) { if (!initialized amp;amp; (sk.interestOps() amp; SelectionKey.OP_READ) == 0) { throw new IOException("Responded to info probe"); } sk.interestOps(sk.interestOps() amp; (~SelectionKey.OP_WRITE)); } else { sk.interestOps(sk.interestOps() | SelectionKey.OP_WRITE); } } </pre> </div></div></comment>
<comment id="12609250" author="breed" created="Mon, 30 Jun 2008 15:06:50 +0000"><p>There are actually two things to guard here: the outstandingBuffers and the selector loop.</p> <p>In read request, we really just need:</p> <p> synchronized (this) </p> { outstandingRequests++; } <p>In sendResponse we need to synchronize on this for outstandingRequests and on factory for the selector:</p> <p> synchronized (this) </p> { outstandingRequests--; } <p> synchronized (this.factory) {<br/> // check throttling<br/> if (zk.getInProcess() lt; factory.outstandingLimit</p> <div class='table-wrap'> <table class='confluenceTable'><tbody> <tr> <th class='confluenceTh'> outstandingRequests lt; 1) { sk.selector().wakeup(); enableRecv(); } <p> }</p></th> </tr> </tbody></table> </div> <p>I don't think the synchronize block is needed in doIO. The SectionKey methods are supposed to be thread safe.</p> <p>I think you might have found something! If the outstandingRequests count gets messed up, bad things will happen including the server becoming unresponsive to a client.</p></comment>
<comment id="12611503" author="fpj" created="Tue, 8 Jul 2008 10:00:50 +0000"><p>Addresses the concurrency problems discussed.</p></comment>
<comment id="12611527" author="fpj" created="Tue, 8 Jul 2008 11:19:23 +0000"><p>It turns out that outstandingRequests is not the variable controlling the throttling, but ZooKeeperServer.requestsInProcess. It seems to me that we should do the increment before calling the first request processor in the following code block:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> if (validpacket) { firstProcessor.processRequest(si); if (cnxn != null) { incInProcess(); } } </pre> </div></div> <p>This is in ZooKeeperServer@870. </p></comment>
<comment id="12611723" author="mahadev" created="Tue, 8 Jul 2008 18:01:38 +0000"><p>the patch wasnt filed from trunk... just attaching a patch that is svn diffed from the trunk <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>.</p></comment>
<comment id="12611728" author="mahadev" created="Tue, 8 Jul 2008 18:12:27 +0000"><p>since outstandingrequests does nto control the enable and disable receive then this is just a patch to fix the counters right? This cannot be responsible for connection loss right?</p> <p>also #8211; just to understand the patch #8212; </p> <p>it makes three changes #8212; </p> <p>1) remove synchronized block around disable recv <br/> 2) consistent guard arnd incr/decr outstandingrequests<br/> 3) removed synchronization around sk ops in doIO() </p> <p>is that right?</p></comment>
<comment id="12611754" author="akornev" created="Tue, 8 Jul 2008 19:11:53 +0000"><p>I agree with Flavio's comment in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-59?focusedCommentId=12611527#action_12611527" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-59?focusedCommentId=12611527#action_12611527</a> : incInProcess() should be called prior to calling first request processor. </p> <p>Also, getInProcess() should be a synchronized method. Even better solution would be to make requestsInProcess an atomic integer: there is really no need to synchronize on the ZooKeeper instance to update/access the variable.</p> <p>Having said that, I don't think this will fix the the timeout problem. From what I saw in the server logs during my investigation of a similar incident was that the server was still receiving and processing client requests (in other words, the counters we're trying to fix here didn't cause throttling). The problem was that the responses weren't being sent to the client which was causing the client to timeout.</p></comment>
<comment id="12611796" author="fpj" created="Tue, 8 Jul 2008 21:02:09 +0000"><p>Mahadev, Thanks for fixing the patch. My eclipse still hasn't leaned how to generate diffs appropriately. Your assessment of the patch is right, and the observation on "outstandingRequests" seems correct to me.</p> <p>Andrew, I agree with you on getInProcess(). It is probably best to make it synchronized or simply to use an atomic integer for requestsInProcess. Now, on your description of the connection problem, I think this is an important observation because when I observed the problem, the log messages did not show the server receiving anything. Also, if the server receives and we don't disable sending, then either ping requests are not going through the pipeline of request processors (once it gets to FinalRequestProcessor, the server sends a response immediately) or sendResponse is not doing its job.</p> </comment>
<comment id="12616691" author="phunt" created="Thu, 24 Jul 2008 22:34:37 +0000"><p>Looks like patch _2 replaces _1? Canceling the patch for now. Please resubmit after addressing.</p> <p>See <a href="http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute" class="external-link" target="_blank" rel="nofollow noopener">http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute</a>, remember that we are replacing (re-attaching with the same name) the patch.</p></comment>
<comment id="12616981" author="fpj" created="Fri, 25 Jul 2008 18:06:13 +0000"><p>Deleting old patches, and adding a new one that addresses all discussed points.</p></comment>
<comment id="12616982" author="fpj" created="Fri, 25 Jul 2008 18:06:56 +0000"><p>Have done what Pat requested... <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="12618561" author="phunt" created="Wed, 30 Jul 2008 23:52:56 +0000"><p>Cancelling this patch due to test failure - the vm itself is crashing. Flavio, do the tests pass for you with this patch applied?</p> <p>I'm seeing the following after applying this patch - the mainline/HEAD code is testing fine. This is ubuntu with java 1.6.0_06.</p> <p>junit.run:<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.server.DeserializationPerfTest<br/> <span class="error">#91;junit#93;</span> Tests run: 8, Failures: 0, Errors: 0, Time elapsed: 15.073 sec<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.server.SerializationPerfTest<br/> <span class="error">#91;junit#93;</span> Tests run: 8, Failures: 0, Errors: 0, Time elapsed: 12.307 sec<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.server.ZooKeeperServerTest<br/> <span class="error">#91;junit#93;</span> Tests run: 3, Failures: 0, Errors: 0, Time elapsed: 0.141 sec<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.AsyncTest<br/> <span class="error">#91;junit#93;</span> Tests run: 2, Failures: 2, Errors: 0, Time elapsed: 108.481 sec<br/> <span class="error">#91;junit#93;</span> Test org.apache.zookeeper.test.AsyncTest FAILED<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.ClientTest<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.ClientTest<br/> <span class="error">#91;junit#93;</span> Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec<br/> <span class="error">#91;junit#93;</span> Test org.apache.zookeeper.test.ClientTest FAILED (crashed)<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.DataTreeTest<br/> <span class="error">#91;junit#93;</span> Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.15 sec<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.OOMTest<br/> <span class="error">#91;junit#93;</span> Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.022 sec<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.QuorumTest<br/> <span class="error">#91;junit#93;</span> Tests run: 5, Failures: 5, Errors: 0, Time elapsed: 201.057 sec<br/> <span class="error">#91;junit#93;</span> Test org.apache.zookeeper.test.QuorumTest FAILED<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.RecoveryTest<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.RecoveryTest<br/> <span class="error">#91;junit#93;</span> Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec<br/> <span class="error">#91;junit#93;</span> Test org.apache.zookeeper.test.RecoveryTest FAILED (crashed)<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.SessionTest<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.SessionTest<br/> <span class="error">#91;junit#93;</span> Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec<br/> <span class="error">#91;junit#93;</span> Test org.apache.zookeeper.test.SessionTest FAILED (crashed)<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.WatcherFuncTest<br/> <span class="error">#91;junit#93;</span> Running org.apache.zookeeper.test.WatcherFuncTest<br/> <span class="error">#91;junit#93;</span> Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec<br/> <span class="error">#91;junit#93;</span> Test org.apache.zookeeper.test.WatcherFuncTest FAILED (crashed)</p> <p>BUILD FAILED<br/> /home/phunt/dev/Workspaces/gitzk/build.xml:370: Tests failed!</p></comment>
<comment id="12618858" author="fpj" created="Thu, 31 Jul 2008 21:16:24 +0000"><p>New patch, AtomicInteger problem fixed. It now passes all tests, but AsyncTest. AsyncTest is failing even on trunk in my computer, though.</p></comment>
<comment id="12681129" author="phunt" created="Thu, 12 Mar 2009 01:17:14 +0000"><p>Whatever happened with this patch? Seems to have gotten dropped. re-investigate for 3.2</p></comment>
<comment id="12763567" author="phunt" created="Thu, 8 Oct 2009 17:11:32 +0000"><p>Hi Flavio, what's the status of this patch?</p></comment>
<comment id="12800933" author="mahadev" created="Fri, 15 Jan 2010 21:59:49 +0000"><p>flavio, will you be updating this patch?</p></comment>
<comment id="12840381" author="fpj" created="Tue, 2 Mar 2010 23:25:13 +0000"><p>I have updated the patch in the following way:</p> <ul> <li>I have changed synchronization blocks to reflect the discussion of this issue. In the trunk code, there is at least one instance increment outstandingRequests that is not synchronized with "this". I have also tried to make sure that all necessary blocks of code that update the SelectionKey are synchronized with factory.</li> <li>I have not included the change of ZooKeeperServer that corresponds to making requestsInProcess an AtomicInteger. This is really a minor change, and not strictly necessary.</li> </ul> <p>Ben made this comment that the methods of SelectionKey are thread-safe. However, I believe the synchronization blocks are there to make the block of code atomic, and not because of the individual calls. As mentioned above, I have tried to make sure that all blocks are properly synchronized. I'm not exactly sure, though, why some of the blocks related to SelectionKey operations are synchronized. I have the impression that they have been introduced conservatively, but I would appreciate if someone with an opinion could shed some light here.</p></comment>
<comment id="12840464" author="hadoopqa" created="Wed, 3 Mar 2010 05:05:00 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12437656/ZOOKEEPER-59.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12437656/ZOOKEEPER-59.patch</a><br/> against trunk revision 915956.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/125/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12840565" author="fpj" created="Wed, 3 Mar 2010 10:23:51 +0000"><p>This patch fixes some synchronization blocks on NIOServerCnxn, and I believe it doesn't require a test, since it is not coming from the observation of bug during a run. I also think that reproducing an interleaving that can generate a problem would be extremely difficult, so my I suggest we don't have a test for it.</p> <p>Regarding the core test that failed, it is unrelated to this issue, and I have opened a separate jira for it <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-684" title="Race in LENonTerminateTest" class="issue-link" data-issue-key="ZOOKEEPER-684"><del>ZOOKEEPER-684</del></a>.</p></comment>
<comment id="12840566" author="fpj" created="Wed, 3 Mar 2010 10:24:14 +0000"><p>Retrying Hudson.</p></comment>
<comment id="12840735" author="breed" created="Wed, 3 Mar 2010 17:09:37 +0000"><p>i like how you removed the nested locking, but it looks like you missed an opportunity in the last block. don't you really want to </p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>synchronized(this) {outstandingRequests--;} </pre> </div></div> <p>so that you aren't locking this and this.factory?</p></comment>
<comment id="12840800" author="fpj" created="Wed, 3 Mar 2010 18:59:18 +0000"><p>Good point, Ben. I haven't done it because of the predicate:</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>outstandingRequests lt; 1 </pre> </div></div> <p>in that block.</p></comment>
<comment id="12842186" author="hadoopqa" created="Sat, 6 Mar 2010 05:07:38 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12437656/ZOOKEEPER-59.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12437656/ZOOKEEPER-59.patch</a><br/> against trunk revision 919640.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/131/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12842248" author="fpj" created="Sat, 6 Mar 2010 11:59:30 +0000"><p>As I already mentioned above, I don't think it requires a test. Ben, could you please check my previous post to see if you agree?</p></comment>
<comment id="12842281" author="breed" created="Sat, 6 Mar 2010 17:04:02 +0000"><p>ah yes, i see what you mean, but i think i would prefer a outstandingRequests that might be stale to a possible deadlock.</p> <p>i agree that this doesn't need a test. this is a latent bug that is hard to be reproduced and a test would be very specific to the implementation of the bug.</p></comment>
<comment id="12842397" author="fpj" created="Sun, 7 Mar 2010 10:43:58 +0000"><p>Updating patch according to Ben's comment.</p></comment>
<comment id="12842403" author="hadoopqa" created="Sun, 7 Mar 2010 11:08:17 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12438130/ZOOKEEPER-59.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12438130/ZOOKEEPER-59.patch</a><br/> against trunk revision 919706.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/135/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12842850" author="breed" created="Mon, 8 Mar 2010 23:51:09 +0000"><p>+1 looks good</p></comment>
<comment id="12842877" author="mahadev" created="Tue, 9 Mar 2010 02:01:14 +0000"><p>I just committed this. thanks flavio.</p></comment>
<comment id="12845184" author="tlipcon" created="Mon, 15 Mar 2010 05:04:51 +0000"><p>Running jcarder on ZK 3.2.2 uncovers the deadlock in this picture. Is this patch likely to fix this problem for future versions, or is it something different?</p></comment>
<comment id="12845343" author="fpj" created="Mon, 15 Mar 2010 15:03:46 +0000"><p>Great catch, Todd! The issue you're pointing out seems fixed to me in trunk (future 3.3.0 release). I was comparing 3.2.2 code and trunk, and in readLength, when processing four letter words, we are now only cloning cnxns inside the synchronized block that locks cnxns, so we don't have a nested synchronized block for factory. I think it would be cool to check it again on our trunk code, though. </p></comment>
</comments>
<attachments>
<attachment id="12438130" name="ZOOKEEPER-59.patch" size="3605" author="fpj" created="Sun, 7 Mar 2010 10:44:27 +0000"/>
<attachment id="12437656" name="ZOOKEEPER-59.patch" size="3954" author="fpj" created="Tue, 2 Mar 2010 23:25:13 +0000"/>
<attachment id="12387315" name="ZOOKEEPER-59.patch" size="5216" author="fpj" created="Thu, 31 Jul 2008 21:17:56 +0000"/>
<attachment id="12438785" name="zk-deadlock.png" size="24678" author="tlipcon" created="Mon, 15 Mar 2010 05:04:51 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>48080</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i061xr:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33245</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>not a blocker for 3.2, moving to 3.3</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-713] zookeeper fails to start - broken snapshot?</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-713</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Hi guys,</p> <p>The following is not a bug report but rather a question - but as I am attaching large files I am posting it here rather than on mailinglist.</p> <p>Today we had major failure in our production environment. Machines in zookeeper cluster gone wild and all clients got disconnected.<br/> We tried to restart whole zookeeper cluster but cluster got stuck in leader election phase.</p> <p>Calling stat command on any machine in the cluster resulted in 'ZooKeeperServer not running' message<br/> In one of logs I noticed 'Invalid snapshot' message which disturbed me a bit.</p> <p>We did not manage to make cluster work again with data. We deleted all version-2 directories on all nodes and then cluster started up without problems.<br/> Is it possible that snapshot/log data got corrupted in a way which made cluster unable to start?<br/> Fortunately we could rebuild data we store in zookeeper as we use it only for locks and most of nodes is ephemeral.</p> <p>I am attaching contents of version-2 directory from all nodes and server logs.<br/> Source problem occurred some time before 15. First cluster restart happened at 15:03.<br/> At some point later we experimented with deleting version-2 directory so I would not look at following restart because they can be misleading due to our actions.</p> <p>I am also attaching zoo.cfg. Maybe something is wrong at this place. <br/> As I know look into logs i see read timeout during initialization phase after 20secs (initLimit=10, tickTime=2000).<br/> Maybe all I have to do is increase one or other. which one? Are there any downsides of increasing tickTime.</p> <p>Best regards, Łukasz Osipiuk</p> <p>PS. due to attachment size limit I used split. to untar use <br/> cat nodeX-version-2.tgz-* |tar -xz</p></description>
<environment><p>debian lenny; ia64; xen virtualization</p></environment>
<key id="12459532">ZOOKEEPER-713</key>
<summary>zookeeper fails to start - broken snapshot?</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="6">Invalid</resolution>
<assignee username="-1">Unassigned</assignee>
<reporter username="losipiuk">Lukasz Osipiuk</reporter>
<labels> </labels>
<created>Thu, 18 Mar 2010 15:53:19 +0000</created>
<updated>Fri, 26 Mar 2010 17:20:46 +0000</updated>
<resolved>Thu, 18 Mar 2010 17:41:28 +0000</resolved>
<version>3.2.2</version>
<due/>
<votes>0</votes>
<watches>0</watches>
<comments>
<comment id="12846976" author="breed" created="Thu, 18 Mar 2010 16:23:08 +0000"><p>hey, just for a sanity check: you aren't running out of disk space are you?</p></comment>
<comment id="12846990" author="losipiuk" created="Thu, 18 Mar 2010 16:43:45 +0000"><p>Nope - we have plenty of free space</p></comment>
<comment id="12847013" author="breed" created="Thu, 18 Mar 2010 17:40:19 +0000"><p>lukasz thank you for reporting this problem and providing the details. we analyzed your logs and found the following problems:</p> <p>1) you are getting an OutOfMemoryError during the snapshot. that is why you are getting the invalid snapshot file. it turns out that the invalid file isn't really a problem since we can just use an older snapshot to recover from, but this may indicate that you are running very close to the limit and spending a lot of time in the GC. (this may aggravate the next issue.)</p> <p>2) the initLimit and ticktime in zoo.cfg may too low. how much data is stored in zookeeper? look at the snapshot filesize, you need to be able to transmit the snapshot within the initLimit*ticktime. as an experiment try scping the snapshots between the different servers and see how long it takes. ticktime should be increased on wan connections. you might try doubling the ticktime and initLimit. (if you really are overloading the GC it is going to be slowing things down.)</p> <p>3) we also noticed that it is taking a long time to read and write snapshots (~17 and ~40 seconds in some cases). do you have other things contending with the disk? this is going to affect how long it takes for the leader to respond to a client, and thus the initLimit.</p> <p>4) we noticed that the jvm version you are using is pretty old. you may try upgrading to the latest version, especially since you are using 64-bit linux.</p> <p>5) finally, it appears you are running under xen. some people have had issues running in virtualized environments. the main problems being memory and disk contention. if java ever starts swapping, the GC can hang the process while pages go on an off the disk for reference checking. disk contention will also slow down recovery and logging to disk during write operations.</p> <p>we are opening a jira, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-714" title="snapshotting doesn#39;t handle runtime exceptions (like out of memory) well" class="issue-link" data-issue-key="ZOOKEEPER-714">ZOOKEEPER-714</a>, related to 1) since we really should exit on OutOfMemoryErrors. in your specific case we recovered, but in general it doesn't seem wise to continue execution once you have gotten an OutOfMemoryError.</p></comment>
<comment id="12847014" author="breed" created="Thu, 18 Mar 2010 17:43:17 +0000"><p>btw, for 1) you may want to increase the amount of heap space assigned to avoid the OutOfMemory exception. (keep in mind the issues in 5). even without xen you still need to make sure that the amount of memory allocated to the JVM is less than physical memory.)</p></comment>
<comment id="12847016" author="phunt" created="Thu, 18 Mar 2010 17:44:42 +0000"><p>linking to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-715" title="add better reporting for initLimit being reached" class="issue-link" data-issue-key="ZOOKEEPER-715">ZOOKEEPER-715</a> - improve logging for initLimit being reached.</p></comment>
<comment id="12847019" author="phunt" created="Thu, 18 Mar 2010 17:46:19 +0000"><p>also see the troubleshooting page <a href="http://bit.ly/5WwS44" class="external-link" target="_blank" rel="nofollow noopener">http://bit.ly/5WwS44</a> for details on issues ppl have faced in the past that might help you</p></comment>
<comment id="12847124" author="losipiuk" created="Thu, 18 Mar 2010 21:37:50 +0000"><p>Thanks for detailed answer.</p> <blockquote> <p>lukasz thank you for reporting this problem and providing the details. we analyzed your logs and found the following problems:</p> <p>1) you are getting an OutOfMemoryError during the snapshot. that is why you are getting the invalid snapshot file. it turns out that the invalid file isn't really a problem since we can just use an older snapshot to recover from, but this may indicate that you are running very close to the limit and spending a lot of time in the GC. (this may aggravate the next issue.)</p></blockquote> <p>It appears we did not adjust java heap size and we are running on 512M of memory. I will increase heap size tomorrow.</p> <blockquote> <p>2) the initLimit and ticktime in zoo.cfg may too low. how much data is stored in zookeeper? look at the snapshot filesize, you need to be able to transmit the snapshot within the initLimit*ticktime. as an experiment try scping the snapshots between the different servers and see how long it takes. ticktime should be increased on wan connections. you might try doubling the ticktime and initLimit. (if you really are overloading the GC it is going to be slowing things down.)</p></blockquote> <p>Our snapshot is quite small. At time problem occured i had around 11M. I checked with scp and copying takes much less than a second.<br/> I guess JVM was swapping (as it was running out of memory) caused delays with file transfer. What do you think? Is it possible?</p> <p>One more question - Is it normal that zookeeper consumed 0.5G of memory handling such small snapshot?</p> <blockquote> <p>3) we also noticed that it is taking a long time to read and write snapshots (~17 and ~40 seconds in some cases). do you have other things contending with the disk? this is going to affect how long it takes for the leader to respond to a client, and thus the initLimit.</p></blockquote> <p>Same as above - maybe memory limit was the problem. Anyway I will move zookeeper guests to xenhosts which does not have any disk intensive guests - to limit disc contention. Hope this helps. On xenhosts on which zookeeper is run some mysqls are run too. They are not very intensively used but it still good to fix it.</p> <blockquote> <p>4) we noticed that the jvm version you are using is pretty old. you may try upgrading to the latest version, especially since you are using 64-bit linux.</p></blockquote> <p>Well - debian stable and "up to date" does not work well together. I will consider building newer java deb package myself but I would rather <br/> treat is a last resort. Do you really think newer java version could help?</p></comment>
<comment id="12847156" author="phunt" created="Thu, 18 Mar 2010 23:14:13 +0000"><p>gt; I guess JVM was swapping (as it was running out of memory) caused delays with file transfer. What do you think? Is it possible?</p> <p>We did see cases in your logs where the init seemed to take very short amount of time, and some cases where it took a very long time. Could be this, could be virtualization, intermittent network problems? ... any sound possible.</p> <p>gt; One more question - Is it normal that zookeeper consumed 0.5G of memory handling such small snapshot?</p> <p>If you look at that troubleshooting page you'll see a link to the latency overview <a href="http://bit.ly/4ekN8G" class="external-link" target="_blank" rel="nofollow noopener">http://bit.ly/4ekN8G</a> Notice this used a heap size of 512m with 1.6.0_05 jvm. I was creating a large number of znodes and watches and it worked fine - with 20 client case I'm creating 200k znodes (20mb) and 1 million watches.</p> <p>I don't know what might be taking the memory in your case (not knowing the use cases, znode count, avg size, etc...) but you can get more insight using something like visualvm or jconsole. Try attaching to the running VM and take a look.</p> <p>gt; I will consider building newer java deb package myself but I would rather treat is a last resort. Do you really think newer java version could help?</p> <p>I wouldn't try that as a first option. It's something we noticed and wanted to mention in case it was easy to try.</p> <p>Do take a look at the troubleshooting page - adding some monitoring of the jvm might help to provide insight. Also monitoring of the parameters that ZooKeeper itself makes avail through the command port and JMX. Also some of the other issues there have been faced by more than one user and might be helpful.</p> </comment>
<comment id="12847251" author="phunt" created="Fri, 19 Mar 2010 07:21:14 +0000"><p>One other thing that I thought of. What are you using for client session timeout? You should probably go more on the 30sec timeout, rather than 5sec timeout given the timing that we're seeing on the server (such as 7 sec for session establishment). You can monitor the min/max/avg latency on your servers using the 'stat' command on the command port (4 letter word). Using this information you can get a good idea what would work (if latency exceeds the timeout then clients on that server would timeout) and tune appropriately.</p></comment>
<comment id="12847273" author="losipiuk" created="Fri, 19 Mar 2010 08:35:09 +0000"><p>We had timeout of 5 secs when this logs were written. I already increased it to 15 secs. Will if that is enough.</p></comment>
<comment id="12847407" author="phunt" created="Fri, 19 Mar 2010 15:49:19 +0000"><p>Given that you are addressing some of the other issues we identified 15 should be enough. 5 might even be enough once things are running more smoothly, you can get a better sense using the 'stat' command as I mentioned elsewhere.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12459544">ZOOKEEPER-714</issuekey>
</issuelink>
<issuelink>
<issuekey id="12459545">ZOOKEEPER-715</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12439176" name="node1-version-2.tgz-aa" size="9437184" author="losipiuk" created="Thu, 18 Mar 2010 16:02:48 +0000"/>
<attachment id="12439177" name="node1-version-2.tgz-ab" size="6515814" author="losipiuk" created="Thu, 18 Mar 2010 16:03:06 +0000"/>
<attachment id="12439173" name="node1-zookeeper.log.gz" size="218433" author="losipiuk" created="Thu, 18 Mar 2010 15:54:20 +0000"/>
<attachment id="12439180" name="node2-version-2.tgz-aa" size="9437184" author="losipiuk" created="Thu, 18 Mar 2010 16:05:47 +0000"/>
<attachment id="12439181" name="node2-version-2.tgz-ab" size="9437184" author="losipiuk" created="Thu, 18 Mar 2010 16:06:07 +0000"/>
<attachment id="12439182" name="node2-version-2.tgz-ac" size="5673819" author="losipiuk" created="Thu, 18 Mar 2010 16:07:19 +0000"/>
<attachment id="12439174" name="node2-zookeeper.log.gz" size="242242" author="losipiuk" created="Thu, 18 Mar 2010 15:54:20 +0000"/>
<attachment id="12439183" name="node3-version-2.tgz-aa" size="9437184" author="losipiuk" created="Thu, 18 Mar 2010 16:08:00 +0000"/>
<attachment id="12439184" name="node3-version-2.tgz-ab" size="9437184" author="losipiuk" created="Thu, 18 Mar 2010 16:08:23 +0000"/>
<attachment id="12439186" name="node3-version-2.tgz-ac" size="1834283" author="losipiuk" created="Thu, 18 Mar 2010 16:11:58 +0000"/>
<attachment id="12439175" name="node3-zookeeper.log.gz" size="196374" author="losipiuk" created="Thu, 18 Mar 2010 15:54:53 +0000"/>
<attachment id="12439172" name="zoo.cfg" size="523" author="losipiuk" created="Thu, 18 Mar 2010 15:54:20 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>214158</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05zuv:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32908</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-415] zookeeper c tests hang.</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-415</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>the c tests hang sometimes. </p></description>
<environment/>
<key id="12426054">ZOOKEEPER-415</key>
<summary>zookeeper c tests hang.</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="mahadev">Mahadev Konar</assignee>
<reporter username="mahadev">Mahadev Konar</reporter>
<labels> </labels>
<created>Thu, 21 May 2009 20:29:44 +0000</created>
<updated>Wed, 8 Jul 2009 20:24:04 +0000</updated>
<resolved>Fri, 22 May 2009 07:25:56 +0000</resolved>
<fixVersion>3.2.0</fixVersion>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="12711787" author="mahadev" created="Thu, 21 May 2009 20:33:42 +0000"><p>the stack traces are - </p> <ul class="alternate" type="square"> <li>thread 1 <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">0 0x0000003f41e075a5 in pthread_join () from /lib64/libpthread.so.0 #1 0x000000000044cef4 in pthread_join (t=1075841344, r=0x0) at zootestbuild/trunk/src/c/tests/PthreadMocks.cc:70 #2 0x00000000004591ce in adaptor_finish (zh=0x2aaaac0024d0) at zootestbuild/trunk/src/c/src/mt_adaptor.c:218 #3 0x000000000045066e in zookeeper_close (zh=0x2aaaac0024d0) at zootestbuild/trunk/src/c/src/zookeeper.c:1870 #4 0x000000000044856b in ~watchCtx (<span class="code-keyword">this</span>=0x7fff244a1290) at zootestbuild/trunk/src/c/tests/TestClient.cc:111 #5 0x0000000000448675 in Zookeeper_simpleSystem::testWatcherAutoResetWithLocal (<span class="code-keyword">this</span>=0x12450330) at zootestbuild/trunk/src/c/tests/TestClient.cc:671 #6 0x00000000004403d6 in CppUnit::TestCallerlt;Zookeeper_simpleSystemgt;::runTest (<span class="code-keyword">this</span>=0x12450350) at /usr/local/include/cppunit/TestCaller.h:166 #7 0x00002aaaaaaef2bf in CppUnit::TestCaseMethodFunctor::<span class="code-keyword">operator</span>() (<span class="code-keyword">this</span>=0x402009d0) at TestCase.cpp:32 #8 0x00002aaaaaadc664 in CppUnit::DefaultProtector::protect (<span class="code-keyword">this</span>=0x1244db80, functor=@0x402009d0, context=@0x7fff244a1680) at DefaultProtector.cpp:15 #9 0x00002aaaaaaeb049 in CppUnit::ProtectorChain::ProtectFunctor::<span class="code-keyword">operator</span>() (<span class="code-keyword">this</span>=0x402009d0) at ProtectorChain.cpp:20 #10 0x00002aaaaaaeac3f in CppUnit::ProtectorChain::protect (<span class="code-keyword">this</span>=0x1244d8c0, functor=@0x7fff244a16e0, context=@0x7fff244a1680) at ProtectorChain.cpp:77 #11 0x00002aaaaaafb964 in CppUnit::TestResult::protect (<span class="code-keyword">this</span>=0x7fff244a1a00, functor=@0x7fff244a16e0, test=0x31f3, shortDescription=@0x0) at TestResult.cpp:178 #12 0x00002aaaaaaeefb4 in CppUnit::TestCase::run (<span class="code-keyword">this</span>=0x12450350, result=0x7fff244a1a00) at TestCase.cpp:27 #13 0x00002aaaaaaef869 in CppUnit::TestComposite::doRunChildTests (<span class="code-keyword">this</span>=0x1244fb70, controller=0x7fff244a1a00) at TestComposite.cpp:64 #14 0x00002aaaaaaef776 in CppUnit::TestComposite::run (<span class="code-keyword">this</span>=0x1244fb70, result=0x7fff244a1a00) at TestComposite.cpp:23 #15 0x00002aaaaaaef869 in CppUnit::TestComposite::doRunChildTests (<span class="code-keyword">this</span>=0x1244e110, controller=0x7fff244a1a00) at TestComposite.cpp:64 #16 0x00002aaaaaaef776 in CppUnit::TestComposite::run (<span class="code-keyword">this</span>=0x1244e110, result=0x7fff244a1a00) at TestComposite.cpp:23 #17 0x00002aaaaaafb8da in CppUnit::TestResult::runTest (<span class="code-keyword">this</span>=0x7fff244a1a00, test=0x1244e0b0) at TestResult.cpp:145 #18 0x00002aaaaaaff705 in CppUnit::TestRunner::run (<span class="code-keyword">this</span>=0x402009d0, controller=@0x7fff244a1a00, testPath=@0x31f3) at TestRunner.cpp:96 #19 0x00000000004059e1 in main (argc=1, argv=0x7fff244a1bd8) at zootestbuild/trunk/src/c/tests/TestDriver.cc:91 </pre> </div></div></li> </ul> <ul class="alternate" type="square"> <li>thread 2</li> </ul> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">#0 0x0000003f41e0c878 in __lll_mutex_lock_wait () from /lib64/libpthread.so.0 #1 0x0000003f41e088a5 in _L_mutex_lock_107 () from /lib64/libpthread.so.0 #2 0x0000003f41e08333 in pthread_mutex_lock () from /lib64/libpthread.so.0 #3 0x000000000041096e in Mutex::acquire (<span class="code-keyword">this</span>=0x7fff244a1280) at zootestbuild/trunk/src/c/tests/ThreadingUtil.cc:40 #4 0x0000000000442121 in watchCtx::putEvent (<span class="code-keyword">this</span>=0x7fff244a1260, evt=@0x401ffea0) at zootestbuild/trunk/src/c/tests/TestClient.cc:134 #5 0x00000000004421c3 in Zookeeper_simpleSystem::watcher (type=1, state=3, path=0x12459e80 <span class="code-quote">"/watchtest/child2"</span>, v=0x7fff244a1260) at zootestbuild/trunk/src/c/tests/TestClient.cc:181 #6 0x0000000000458338 in deliverWatchers (zh=0x2aaaac0024d0, type=1, state=3, path=0x12459e80 <span class="code-quote">"/watchtest/child2"</span>, list=0x12456ad8) at zootestbuild/trunk/src/c/src/zk_hashtable.c:270 #7 0x000000000040ca9e in __wrap_deliverWatchers (zh=0x2aaaac0024d0, type=1, state=3, path=0x12459e80 <span class="code-quote">"/watchtest/child2"</span>, list=0x12456ad8) at zootestbuild/trunk/src/c/tests/ZKMocks.cc:218 #8 0x0000000000450ab8 in process_completions (zh=0x2aaaac0024d0) at zootestbuild/trunk/src/c/src/zookeeper.c:1407 #9 0x0000000000458af1 in do_completion (v=lt;value optimized outgt;) at zootestbuild/trunk/src/c/src/mt_adaptor.c:332 #10 0x0000003f41e062e7 in start_thread () from /lib64/libpthread.so.0 #11 0x0000003f412ce3bd in clone () from /lib64/libc.so.6 </pre> </div></div> </comment>
<comment id="12711881" author="mahadev" created="Fri, 22 May 2009 00:31:08 +0000"><p>it turns out that we were facing a problem with the list.get() throwing an excpetion when the list is empty, whcih would result in lock not being released and the other thread waiting on the lock and never able to acquire it leading to tests hanging. for the soln.</p> <ul class="alternate" type="square"> <li>added wait for events before we ever call getEvents()</li> <li>added assertion in getEvent that would fail if there are no elements available.</li> </ul> </comment>
<comment id="12711923" author="hadoopqa" created="Fri, 22 May 2009 01:57:59 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12408761/ZOOKEEPER-415.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12408761/ZOOKEEPER-415.patch</a><br/> against trunk revision 777265.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/88/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/88/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/88/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/88/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/88/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/88/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12711974" author="phunt" created="Fri, 22 May 2009 07:25:56 +0000"><p>+1, thanks Mahadev<br/> Committed revision 777413.</p></comment>
<comment id="12712056" author="hudson" created="Fri, 22 May 2009 12:13:32 +0000"><p>Integrated in ZooKeeper-trunk #322 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/322/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/322/</a>)<br/> . zookeeper c tests hang.</p></comment>
</comments>
<attachments>
<attachment id="12408761" name="ZOOKEEPER-415.patch" size="1650" author="mahadev" created="Fri, 22 May 2009 00:31:08 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47835</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i060zj:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33091</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-411] Building zookeeper fails on RHEL 5 64 bit during test-cppunit</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-411</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p> <span class="error">#91;exec#93;</span> Zookeeper_simpleSystem::testAsyncWatcherAutoReset : assertion<br/> <span class="error">#91;exec#93;</span> <br/> <span class="error">#91;exec#93;</span> /grid/0/gs/gridre/hudson/workspace/zootestbuild/trunk/src/c/tests/TestClient.cc:499: Assertion: assertion failed <span class="error">#91;Expression: ctx.waitForDisconnected(zk)#93;</span><br/> <span class="error">#91;exec#93;</span> Failures !!!<br/> <span class="error">#91;exec#93;</span> Run: 32 Failure total: 1 Failures: 1 Errors: 0<br/> <span class="error">#91;exec#93;</span> make: *** <span class="error">#91;run-check#93;</span> Error 1</p></description>
<environment><p>RHEL5, 64bit </p></environment>
<key id="12425864">ZOOKEEPER-411</key>
<summary>Building zookeeper fails on RHEL 5 64 bit during test-cppunit</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="mahadev">Mahadev Konar</assignee>
<reporter username="ltucker">Lee Tucker</reporter>
<labels> </labels>
<created>Tue, 19 May 2009 22:39:10 +0000</created>
<updated>Wed, 8 Jul 2009 20:24:04 +0000</updated>
<resolved>Wed, 20 May 2009 22:41:43 +0000</resolved>
<fixVersion>3.2.0</fixVersion>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12711329" author="mahadev" created="Wed, 20 May 2009 20:40:56 +0000"><p>it turns out that the test was failing becasue the zookeeper server wasnt being shut down in the c tests. Loooks like fuser does not work as published on rhel 5. I wasted quite some time on trying to figure out why fuser wasnt working but didnt find an answer. So, I decided to just change the script to get the pid and for killing the server kill it with the pid already stored in the file from previous start.</p> <ul class="alternate" type="square"> <li>this patch changes the script to use pid instead of fuser.</li> </ul> <p>I tested it to see iit works on rhel 5 64 bit, ipv6 machine.</p></comment>
<comment id="12711331" author="breed" created="Wed, 20 May 2009 20:44:42 +0000"><p>you should remove the pid files.</p></comment>
<comment id="12711332" author="mahadev" created="Wed, 20 May 2009 20:46:26 +0000"><p>this patch also deletes the pid files once the process is killed.</p></comment>
<comment id="12711344" author="breed" created="Wed, 20 May 2009 21:00:38 +0000"><p>+1 looks good</p></comment>
<comment id="12711346" author="phunt" created="Wed, 20 May 2009 21:01:54 +0000"><p>Can you fix this in all locations in the source?</p> <p>src/c/tests/zkServer.sh<br/> 36:fuser -skn tcp 22181/tcp</p> <p>src/contrib/rest/src/test/zkServer.sh<br/> 36:fuser -skn tcp 22182/tcp</p> <p>src/contrib/zkpython/src/test/zkServer.sh<br/> 36:#fuser -skn tcp 22182/tcp</p> <p>src/recipes/lock/src/c/tests/zkServer.sh<br/> 32:fuser -skn tcp 22181/tcp</p> <p>also remove this (now unnecessary)</p> <p>build.xml<br/> 671: lt;property name="fuser.bin" value="/sbin"/gt;<br/> 675: lt;env key="PATH" path="${env.PATH};${c.src.dir};${fuser.bin};"/gt;</p> </comment>
<comment id="12711361" author="mahadev" created="Wed, 20 May 2009 21:27:07 +0000"><p>this patch removes the use of fuser from all the scripts also from the build file...</p> <p>pat can you review this? see if ant test passes on your machine.</p></comment>
<comment id="12711382" author="mahadev" created="Wed, 20 May 2009 21:57:53 +0000"><p>this patch removes usage of fuser in build.xml.</p></comment>
<comment id="12711401" author="phunt" created="Wed, 20 May 2009 22:41:43 +0000"><p>+1, thanks Mahadev<br/> Committed revision 776889.</p></comment>
<comment id="12711889" author="hudson" created="Fri, 22 May 2009 00:43:09 +0000"><p>Integrated in ZooKeeper-trunk #321 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/321/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/321/</a>)</p> </comment>
</comments>
<attachments>
<attachment id="12408629" name="ZOOKEEPER-411.patch" size="4215" author="mahadev" created="Wed, 20 May 2009 21:57:53 +0000"/>
<attachment id="12408626" name="ZOOKEEPER-411.patch" size="3952" author="mahadev" created="Wed, 20 May 2009 21:27:07 +0000"/>
<attachment id="12408616" name="ZOOKEEPER-411.patch" size="1382" author="mahadev" created="Wed, 20 May 2009 20:46:26 +0000"/>
<attachment id="12408615" name="ZOOKEEPER-411.patch" size="1327" author="mahadev" created="Wed, 20 May 2009 20:40:56 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47837</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i06107:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33094</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-410] address all findbugs warnings in client/server classes</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-410</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>trunk/src/java/main/org/apache/zookeeper/ClientCnxn.java<br/> trunk/src/java/main/org/apache/zookeeper/ZooKeeperMain.java<br/> trunk/src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java<br/> trunk/src/java/main/org/apache/zookeeper/server/SyncRequestProcessor.java<br/> trunk/src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java<br/> trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java<br/> trunk/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java</p></description>
<environment/>
<key id="12425749">ZOOKEEPER-410</key>
<summary>address all findbugs warnings in client/server classes</summary>
<type id="7" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21146avatarType=issuetype">Sub-task</type>
<parent id="12425743">ZOOKEEPER-406</parent>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Mon, 18 May 2009 18:16:00 +0000</created>
<updated>Wed, 8 Jul 2009 20:24:04 +0000</updated>
<resolved>Wed, 20 May 2009 18:48:18 +0000</resolved>
<fixVersion>3.2.0</fixVersion>
<due/>
<votes>0</votes>
<watches>0</watches>
<comments>
<comment id="12710638" author="phunt" created="Tue, 19 May 2009 06:39:48 +0000"><p>I added a few exclusions, with comment. In particular I think we should allow<br/> *Main classes (ie command line tools) to call system exit as necessary (from code<br/> in *Main)</p> <p>Please review the movement of start() calls in particular.</p> <p>Also carefully review the locking changes in nioservercnxn (which doesn't seem to silence<br/> findbugs, but it seems like it should)</p></comment>
<comment id="12711248" author="breed" created="Wed, 20 May 2009 17:35:40 +0000"><p>excellent job pat. my only problem with the patch is that in FinalRequestProcessor you have changed the behavior for the case where the expected xid is greater than the actual one seen. if the incoming xid is lower than expected you lose the outstanding change, which may be the next one in the pipe, which will result in another warning and skip, and so on.</p></comment>
<comment id="12711260" author="phunt" created="Wed, 20 May 2009 18:01:16 +0000"><p>Ben, I don't think that's the case re finalreqprocessor - I was pretty careful with that change, and I'm reviewing<br/> it now and I don't think anything changed. I moved the remove up a bit, but otw the behavior is unchanged.<br/> Can you take another look?</p></comment>
<comment id="12711268" author="breed" created="Wed, 20 May 2009 18:16:28 +0000"><p>+1 you're right. you didn't change the behavior. (i think there used to be a return in the if case, but that is a separate issue)</p></comment>
<comment id="12711289" author="breed" created="Wed, 20 May 2009 18:48:18 +0000"><p>Committed revision 776806.</p></comment>
<comment id="12711890" author="hudson" created="Fri, 22 May 2009 00:43:09 +0000"><p>Integrated in ZooKeeper-trunk #321 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/321/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/321/</a>)</p> </comment>
</comments>
<attachments>
<attachment id="12408446" name="ZOOKEEPER-410.patch" size="20748" author="phunt" created="Tue, 19 May 2009 06:39:48 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47838</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i063dr:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33479</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-344] doIO in NioServerCnxn: Exception causing close of session : cause is "read error"</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-344</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>I have been having a problem with zookeeper 3.0.1 and now with 3.1.0 where I see a lot of expired sessions. I am using a 16 node cluster which is all on the same local network. There is a single zookeeper instance (these are benchmarking runs).<br/> The problem appears to be correlated with either run time or system load.\</p> <p>Personally I think that it is system load because I have session session expired events under a Windows platform running zookeeper and the application (i.e., everthing is local) when the application load suddenly spikes. To me this suggests that the client is not able to renew (ping) the zookeeper service in a timely manner and is expired. But the log messages below with the "read error" suggest that maybe there is something else going on?</p> <p>Zookeeper Configuration<br/> #Wed Mar 18 12:41:05 GMT-05:00 2009<br/> clientPort=2181<br/> dataDir=/var/bigdata/benchmark/zookeeper/1<br/> syncLimit=2<br/> dataLogDir=/var/bigdata/benchmark/zookeeper/1<br/> tickTime=2000</p> <p>Some representative log messages are below.</p> <p>Client side messages (from our app)<br/> ERROR <span class="error">#91;main-EventThread#93;</span> com.bigdata.zookeeper.ZLockImpl$ZLockWatcher.process(ZLockImpl.java:400) 2009-03-18 13:35:40,335 - Session expired: WatchedEvent: Server state change. New state: Expired : zpath=/benchmark/jobs/com.bigdata.service.jini.benchmark.ThroughputMaster/test_1/client1160/locknode<br/> ERROR <span class="error">#91;main-EventThread#93;</span> com.bigdata.zookeeper.ZLockImpl$ZLockWatcher.process(ZLockImpl.java:400) 2009-03-18 13:35:40,335 - Session expired: WatchedEvent: Server state change. New state: Expired : zpath=/benchmark/jobs/com.bigdata.service.jini.benchmark.ThroughputMaster/test_1/client1356/locknode</p> <p>Server side messages:<br/> WARN <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:417) 2009-03-18 13:06:57,252 - Exception causing close of session 0x1201aac14300022 due to java.io.IOException: Read error<br/> WARN <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:417) 2009-03-18 13:06:58,198 - Exception causing close of session 0x1201aac1430000f due to java.io.IOException: Read error</p></description>
<environment><p>jdk1.6.0_07<br/> Linux blade2 2.6.27.7-134.fc10.x86_64 #1 SMP Mon Dec 1 22:21:35 EST 2008 x86_64 x86_64 x86_64 GNU/Linux</p></environment>
<key id="12417203">ZOOKEEPER-344</key>
<summary>doIO in NioServerCnxn: Exception causing close of session : cause is "read error"</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="6">Invalid</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="bthompson">bryan thompson</reporter>
<labels> </labels>
<created>Wed, 18 Mar 2009 18:45:48 +0000</created>
<updated>Wed, 8 Jul 2009 20:24:01 +0000</updated>
<resolved>Wed, 6 May 2009 17:04:50 +0000</resolved>
<version>3.1.0</version>
<fixVersion>3.2.0</fixVersion>
<component>java client</component>
<component>server</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12683158" author="mahadev" created="Wed, 18 Mar 2009 20:39:40 +0000"><div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre>ERROR [main-EventThread] com.bigdata.zookeeper.ZLockImpl$ZLockWatcher.process(ZLockImpl.java:400) 2009-03-18 13:35:40,335 - Session expired: WatchedEvent: Server state change. New state: Expired : zpath=/benchmark/jobs/com.bigdata.service.jini.benchmark.ThroughputMaster/test_1/client1160/locknode ERROR [main-EventThread] com.bigdata.zookeeper.ZLockImpl$ZLockWatcher.process(ZLockImpl.java:400) 2009-03-18 13:35:40,335 - Session expired: WatchedEvent: Server state change. New state: Expired : zpath=/benchmark/jobs/com.bigdata.service.jini.benchmark.ThroughputMaster/test_1/client1356/locknode </pre> </div></div> <p>can you post corresponding session id's with these ? </p> <p>and also the logs related to their session closing with the timestamps (on the server side).</p></comment>
<comment id="12683181" author="phunt" created="Wed, 18 Mar 2009 21:37:53 +0000"><p>Hi Bryan, you might also try looking at some of the statistics using the "stat" command:<br/> <a href="http://hadoop.apache.org/zookeeper/docs/current/zookeeperAdmin.html#sc_zkCommands" class="external-link" target="_blank" rel="nofollow noopener">http://hadoop.apache.org/zookeeper/docs/current/zookeeperAdmin.html#sc_zkCommands</a><br/> this will give you insight on the min/max/avg latency of requests. You could also use JMX if that works for you:<br/> <a href="http://hadoop.apache.org/zookeeper/docs/current/zookeeperJMX.html" class="external-link" target="_blank" rel="nofollow noopener">http://hadoop.apache.org/zookeeper/docs/current/zookeeperJMX.html</a></p> <p>What is the timeout value you are using for your ZK clients? If your max latency is exceeding your client<br/> timeouts then you will definitely see expirations.</p> <p>Secondly review this section, specifically related to tranaction log placement and jdk memory (swapping) issues:<br/> <a href="http://hadoop.apache.org/zookeeper/docs/current/zookeeperAdmin.html#sc_commonProblems" class="external-link" target="_blank" rel="nofollow noopener">http://hadoop.apache.org/zookeeper/docs/current/zookeeperAdmin.html#sc_commonProblems</a><br/> Either of these issues can cause performance to dip, and latencies to increase.</p> <p>This information, along with a bit more detail on your benchmark would help you/us identify what's causing<br/> these issues. Re your benchmark, how many operations/sec are you running? What's the read/write split?</p> <p>Your zk server is a single quad-core x86_64 cpu, correct?</p></comment>
<comment id="12683235" author="bthompson" created="Wed, 18 Mar 2009 23:34:45 +0000"><p>Let me clarify a few things based on the other comments:</p> <p>1. The sessionTimeout for the client was set to 20000.</p> <p>2. The zookeeper server is running on a host with very little total load (very little CPU utilization and very low disk write rates). There is only one disk available for the zookeeper transaction log. It is a SAS 10k spindle with a 16M cache.</p> <p>3. The zookeeper server process has 4G of RAM.</p> <p>4. The benchmark is not a zookeeper benchmark, but a database benchmark. Zookeeper is being used for distributed locks and master elections. There is relatively little activity for the zookeeper server.</p> <p>I will modify the logged message to record the zxid and report back some correlated events. </p> <p>I will also report the output of the stat command from the server for several times during the run / JXM, which I've enabled.</p></comment>
<comment id="12683236" author="bthompson" created="Wed, 18 Mar 2009 23:39:28 +0000"><p>I missed the question about the zk server. It is an 8 core (2 quad core Opterons) 4x512k cache, 2.3Ghz clock with 32G ram.</p></comment>
<comment id="12683327" author="phunt" created="Thu, 19 Mar 2009 05:06:50 +0000"><p>Bryan, that's good info. It doesn't sound like zk server latency is the issue then, you have an excess<br/> of cpu/memory based on the tests you are running, however it will be good to verify using jmx or the <br/> stat command.</p> <p>If you can run with DEBUG logging enabled (server and client) it might give you more insight. Also running<br/> at DEBUG level will cause the stack of the "read error" you are seeing to be printed to the server log (zk<br/> version 3.1). If you can share all/part of the logs please feel free to attach them to this JIRA.</p> <p>It's probably this code in server doIO though that's causing the server side "read error" exception you are seeing:</p> <p> int rc = sock.read(incomingBuffer);<br/> if (rc lt; 0) </p> { throw new IOException("Read error"); } <p>read returns "The number of bytes read, possibly zero, or -1 if the channel has reached end-of-stream"</p> <p>this indicates to me that the client has closed the connection.</p> <p>Also, looking at your logs the client log is from 13:35 while the server log is from 13:06, assuming that the <br/> clocks are even fairly close this is almost 30min difference, if true it's unlikely the events are correlated?</p> <p>My guess is that the client is closing the connection for some reason, but it would be interesting to see<br/> the debug logs (with clocks that are fairly close on server/client so it would be easier to correlate the log<br/> events).</p> <p>Hope this helps.</p></comment>
<comment id="12683447" author="bthompson" created="Thu, 19 Mar 2009 12:06:57 +0000"><p>Patrick, I did not try to coordinate the client and server logs but rather drew representative samples from each. As far as I can tell it is more of the same in both logs. However, I will correlate the events and the zxids and see if I can get that debug trace you suggested. -bryan</p></comment>
<comment id="12683596" author="phunt" created="Thu, 19 Mar 2009 20:17:04 +0000"><p>That's fine. I guess what I mean is that it would be interesting to see the debug logs<br/> for both the server and client at the time that the issue(s) start. We might get<br/> more insight into what is happening if we can do that.</p></comment>
<comment id="12694060" author="bthompson" created="Tue, 31 Mar 2009 10:46:43 +0000"><p>Here are some more stack traces with DEBUG on the server and the client for this issue. The configuration, etc. is the same. Logs were written onto an NFS share but the machines are synched with ntpd.</p> <p>There are two distinct periods reported here. One leads to a warning on the server but not to an expired session while the other issues the same warning on the server and leads to an expired session.</p> <p>Here is a "ping" for sessionid 0x120597b6137000b shortly before the warning.</p> <p>DEBUG <span class="error">#91;SyncThread:0#93;</span> org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:74) 2009-03-30 17:34:33,643 - Processing request:: sessionid:0x120597b6137000b type:ping cxid:0xfffffffffffffffe zxid:0xfffffffffffffffe txntype:unknown n/a<br/> DEBUG <span class="error">#91;SyncThread:0#93;</span> org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:137) 2009-03-30 17:34:33,643 - sessionid:0x120597b6137000b type:ping cxid:0xfffffffffffffffe zxid:0xfffffffffffffffe txntype:unknown n/a<br/> DEBUG <span class="error">#91;main-SendThread#93;</span> org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:548) 2009-03-30 17:34:33,643 - Got ping response for sessionid:0x120597b6137000b after 1ms</p> <p>Here is the "Exception causing close of session".</p> <p> WARN <span class="error">#91;main-SendThread#93;</span> org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:898) 2009-03-30 17:34:48,120 - Exception closing session 0x120597b6137000b to sun.nio.ch.SelectionKeyImpl@7eb1cc87<br/> java.io.IOException: TIMED OUT<br/> at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:837)<br/> WARN <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:417) 2009-03-30 17:34:48,166 - Exception causing close of session 0x120597b6137000b due to java.io.IOException: Read error<br/> DEBUG <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:420) 2009-03-30 17:34:48,166 - IOException stack trace<br/> java.io.IOException: Read error<br/> at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:295)<br/> at org.apache.zookeeper.server.NIOServerCnxn$Factory.run(NIOServerCnxn.java:162)<br/> INFO <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.close(NIOServerCnxn.java:752) 2009-03-30 17:34:48,172 - closing session:0x120597b6137000b NIOServerCnxn: java.nio.channels.SocketChannel<span class="error">#91;connected local=/192.168.6.21:2181 remote=/192.168.6.28:60720#93;</span></p> <p>And here is appears that the closed session was re-initialized? Perhaps closed != expired?</p> <p>INFO <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.finishSessionInit(NIOServerCnxn.java:881) 2009-03-30 17:34:50,111 - Finished init of 0x120597b6137000b valid:true<br/> INFO <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.readConnectRequest(NIOServerCnxn.java:531) 2009-03-30 17:34:50,111 - Renewing session 0x120597b6137000b<br/> DEBUG <span class="error">#91;SyncThread:0#93;</span> org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:74) 2009-03-30 17:34:50,112 - Processing request:: sessionid:0x120597b6137000b type:setWatches cxid:0xfffffffffffffff8 zxid:0xfffffffffffffffe txntype:unknown<br/> DEBUG <span class="error">#91;SyncThread:0#93;</span> org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:137) 2009-03-30 17:34:50,112 - sessionid:0x120597b6137000b type:setWatches cxid:0xfffffffffffffff8 zxid:0xfffffffffffffffe txntype:unknown<br/> DEBUG <span class="error">#91;SyncThread:0#93;</span> org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:74) 2009-03-30 17:34:50,121 - Processing request:: sessionid:0x120597b6137000b type:create cxid:0x8 zxid:0xb95 txntype:-1 n/a<br/> DEBUG <span class="error">#91;main-SendThread#93;</span> org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:610) 2009-03-30 17:34:50,126 - Reading reply sessionid:0x120597b6137000b, packet:: path:null finished:false header:: -8,101 replyHeader:: -8,2964,0 request:: 2964,v{},v</p> {'/benchmark/config/com.bigdata.service.jini.DataServer/logicalService0000000011/masterElection_INVALID} <p>,v{} response:: null</p> <p>------------------------------------------------------------</p> <p>Another trace that leads to an expired session:</p> <p>DEBUG <span class="error">#91;SyncThread:0#93;</span> org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:74) 2009-03-30 18:35:39,478 - Processing request:: sessionid:0x120597b61370008 type:ping cxid:0xfffffffffffffffe zxid:0xfffffffffffffffe txntype:unknown n/a<br/> DEBUG <span class="error">#91;SyncThread:0#93;</span> org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:137) 2009-03-30 18:35:39,478 - sessionid:0x120597b61370008 type:ping cxid:0xfffffffffffffffe zxid:0xfffffffffffffffe txntype:unknown n/a<br/> DEBUG <span class="error">#91;main-SendThread#93;</span> org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:548) 2009-03-30 18:35:39,478 - Got ping response for sessionid:0x120597b61370008 after 1ms</p> <p> WARN <span class="error">#91;main-SendThread#93;</span> org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:898) 2009-03-30 18:35:58,082 - Exception closing session 0x120597b61370008 to sun.nio.ch.SelectionKeyImpl@6e731a5b<br/> java.io.IOException: TIMED OUT<br/> at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:837)<br/> WARN <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:417) 2009-03-30 18:35:58,084 - Exception causing close of session 0x120597b61370008 due to java.io.IOException: Read error<br/> DEBUG <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:420) 2009-03-30 18:35:58,084 - IOException stack trace<br/> java.io.IOException: Read error<br/> at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:295)<br/> at org.apache.zookeeper.server.NIOServerCnxn$Factory.run(NIOServerCnxn.java:162)<br/> INFO <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.close(NIOServerCnxn.java:752) 2009-03-30 18:35:58,085 - closing session:0x120597b61370008 NIOServerCnxn: java.nio.channels.SocketChannel<span class="error">#91;connected local=/192.168.6.21:2181 remote=/192.168.6.34:58347#93;</span></p> <p> INFO <span class="error">#91;SessionTracker#93;</span> org.apache.zookeeper.server.SessionTrackerImpl.run(SessionTrackerImpl.java:132) 2009-03-30 18:36:00,000 - Expiring session 0x120597b61370008<br/> INFO <span class="error">#91;SessionTracker#93;</span> org.apache.zookeeper.server.ZooKeeperServer.expire(ZooKeeperServer.java:317) 2009-03-30 18:36:00,001 - Expiring session 0x120597b61370008<br/> INFO <span class="error">#91;ProcessThread:-1#93;</span> org.apache.zookeeper.server.PrepRequestProcessor.pRequest(PrepRequestProcessor.java:360) 2009-03-30 18:36:00,003 - Processed session termination request for id: 0x120597b61370008<br/> DEBUG <span class="error">#91;SyncThread:0#93;</span> org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:74) 2009-03-30 18:36:00,013 - Processing request:: sessionid:0x120597b61370008 type:closeSession cxid:0x0 zxid:0xbaf txntype:-11 n/a<br/> DEBUG <span class="error">#91;SyncThread:0#93;</span> org.apache.zookeeper.server.DataTree.killSession(DataTree.java:743) 2009-03-30 18:36:00,014 - Deleting ephemeral node /benchmark/config/com.bigdata.service.jini.DataServer/logicalService0000000005/masterElection/lock0000000000 for session 0x120597b61370008<br/> INFO <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.readConnectRequest(NIOServerCnxn.java:503) 2009-03-30 18:36:00,072 - Connected to /192.168.6.34:45222 lastZxid 2984<br/> INFO <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.finishSessionInit(NIOServerCnxn.java:881) 2009-03-30 18:36:00,073 - Finished init of 0x120597b61370008 valid:false<br/> INFO <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.readConnectRequest(NIOServerCnxn.java:531) 2009-03-30 18:36:00,073 - Renewing session 0x120597b61370008<br/> WARN <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:417) 2009-03-30 18:36:00,074 - Exception causing close of session 0x120597b61370008 due to java.io.IOException: closing<br/> DEBUG <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:420) 2009-03-30 18:36:00,074 - IOException stack trace<br/> java.io.IOException: closing<br/> at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:373)<br/> at org.apache.zookeeper.server.NIOServerCnxn$Factory.run(NIOServerCnxn.java:162)<br/> INFO <span class="error">#91;NIOServerCxn.Factory:2181#93;</span> org.apache.zookeeper.server.NIOServerCnxn.close(NIOServerCnxn.java:752) 2009-03-30 18:36:00,074 - closing session:0x120597b61370008 NIOServerCnxn: java.nio.channels.SocketChannel[connected local=/192.168.6.21:2181 remote=/192.168.6.34:4522\<br/> 2]</p> <p> INFO <span class="error">#91;main-SendThread#93;</span> org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:800) 2009-03-30 18:36:00,069 - Attempting connection to server blade2/192.168.6.21:2181<br/> INFO <span class="error">#91;main-SendThread#93;</span> org.apache.zookeeper.ClientCnxn$SendThread.primeConnection(ClientCnxn.java:716) 2009-03-30 18:36:00,070 - Priming connection to java.nio.channels.SocketChannel<span class="error">#91;connected local=/192.168.6.34:45222 remote=blade2/192.168.6.21:2181#93;</span><br/> INFO <span class="error">#91;main-SendThread#93;</span> org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:868) 2009-03-30 18:36:00,070 - Server connection successful<br/> WARN <span class="error">#91;main-SendThread#93;</span> org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:898) 2009-03-30 18:36:00,073 - Exception closing session 0x120597b61370008 to sun.nio.ch.SelectionKeyImpl@3d38013d<br/> java.io.IOException: Session Expired<br/> at org.apache.zookeeper.ClientCnxn$SendThread.readConnectResult(ClientCnxn.java:527)<br/> at org.apache.zookeeper.ClientCnxn$SendThread.doIO(ClientCnxn.java:640)<br/> at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:876)<br/> WARN <span class="error">#91;main-EventThread#93;</span> com.bigdata.service.jini.AbstractServer$1.process(AbstractServer.java:759) 2009-03-30 18:36:00,074 - Zookeeper session expired: cancelled master election task: com.bigdata.service.jini.AbstractServer$1@79b5334c<br/> ERROR <span class="error">#91;main-EventThread#93;</span> com.bigdata.zookeeper.ZLockImpl$ZLockWatcher.process(ZLockImpl.java:400) 2009-03-30 18:36:00,074 - Session expired: WatchedEvent: Server state change. New state: Expired : zxid=120597b61370008, zpath=/benchmark/config/com.bigdata.service.jini.DataServer/logicalService0000000005/masterElection<br/> WARN <span class="error">#91;com.bigdata.service.jini.JiniFederation.executorService1#93;</span> com.bigdata.zookeeper.ZLockImpl.unlock(ZLockImpl.java:1188) 2009-03-30 18:36:00,077 - Session expired: zpath=/benchmark/config/com.bigdata.service.jini.DataServer/logicalService0000000005/masterElection, child=lock0000000000 : org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired</p></comment>
<comment id="12694660" author="mahadev" created="Wed, 1 Apr 2009 18:16:24 +0000"><p>for the first trace, closed != expired is true. it seems like the client reconnected to the server and didnt expire in the first case.</p> <p>in the second case it did expire. </p> <p>You are on a windows machine right? and also its a single server ensemble? I dont usually use a windows box but I did notice once that creating a log file with size of 64MB initially took <br/> a lot of time (5-15 seconds and was repeatable) on my windows box with no other load . Just to give you background, zookeeper takes snaphots and has transaction logs. The transaction logs <br/> are created with an initialize size of 64MB so that we do not have to update the size of the file repeatedly. This operation did take a lot of time on my windows machine and this did cause huge<br/> latencies in my zookeeper clients and lots of timeouts and session expired. </p> <p>Ill take another look at your logs to see if i can find something that might explain the frequent session timeouts.</p></comment>
<comment id="12694673" author="bthompson" created="Wed, 1 Apr 2009 18:28:40 +0000"><p>It is a Linux platform, which I describe above. it is a standalone instance however rather than an ensemble.</p></comment>
<comment id="12694684" author="mahadev" created="Wed, 1 Apr 2009 18:45:01 +0000"><p>hmm... Can you create a sample test application that I could run on my machine and see if I reproduce this on my linux machines? </p></comment>
<comment id="12695136" author="bthompson" created="Thu, 2 Apr 2009 21:16:46 +0000"><p>I am not sure how to boil this down into a problem which can be run on a single machine. This is a distributed database benchmark. The problem shows up when the cluster is under load. How would I go about isolating that further outside of writing stress tests for zookeeper?</p> <p>If this is indeed a zookeeper bug and you have some idea of the possible issues involved, then perhaps you can suggest some additional instrumentation of zookeeper and I could run against a version with more instrumentation which might reveal something?</p> <p>Thanks,</p> <p>-bryan</p></comment>
<comment id="12695148" author="mahadev" created="Thu, 2 Apr 2009 22:09:23 +0000"><p>brayn,<br/> the one thing you can do is run with tracefile option in the config. Please take a look at<br/> <a href="http://hadoop.apache.org/zookeeper/docs/r3.1.1/zookeeperAdmin.html" class="external-link" target="_blank" rel="nofollow noopener">http://hadoop.apache.org/zookeeper/docs/r3.1.1/zookeeperAdmin.html</a> to see how to set up a tracefile. The tracefile has logs of all the transactions that go though the server and all <br/> the components of the server and helps in debugging problems such as these, where you can point out which transaction got delayed and at what time and sometimes can point out<br/> the reason why... </p></comment>
<comment id="12706402" author="bthompson" created="Wed, 6 May 2009 12:52:24 +0000"><p>Update: </p> <p>This issue is clearly linked to heavy utilization or swapping on the clients. I find that if I keep the clients from swapping that this error<br/> materializes relatively infrequently, and when it does materialize it is linked to a sudden increase in load. For example, the concurrent<br/> start of 100 clients on 14 machines will sometimes trigger this issue. I believe that the issue can be closed at this point with the note<br/> that swapping will cause expired connections. I also observe similar problems with jini / river, including cases where DGC (distributed<br/> garbage collection) appears to fail. All in all, it is my sense that Java processes must avoid swapping if they want to have not just timely<br/> but also reliable behavior.</p> <p>Thanks,</p> <p>-bryan</p></comment>
<comment id="12706517" author="phunt" created="Wed, 6 May 2009 17:03:51 +0000"><p>Bryan, thanks for the update, I have updated the troubleshooting page with your feedback:<br/> <a href="http://wiki.apache.org/hadoop/ZooKeeper/Troubleshooting" class="external-link" target="_blank" rel="nofollow noopener">http://wiki.apache.org/hadoop/ZooKeeper/Troubleshooting</a></p></comment>
<comment id="12706518" author="phunt" created="Wed, 6 May 2009 17:04:50 +0000"><p>Closing the issue, user tracked this down to client swapping issues.</p></comment>
</comments>
<attachments> </attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>214103</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0616v:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33124</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-320] call auth completion in free_completions()</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-320</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>If a client calls zoo_add_auth() with an invalid scheme (e.g., "foo") the ZooKeeper server will mark their session expired and close the connection. However, the C client has returned immediately after queuing the new auth data to be sent with a ZOK return code.</p> <p>If the client then waits for their auth completion function to be called, they can wait forever, as no session event is ever delivered to that completion function. All other completion functions are notified of session events by free_completions(), which is called by cleanup_bufs() in handle_error() in handle_socket_error_msg().</p> <p>In actual fact, what can happen (about 50% of the time, for me) is that the next call by the IO thread to flush_send_queue() calls send() from within send_buffer(), and receives a SIGPIPE signal during this send() call. Because the ZooKeeper C API is a library, it properly does not catch that signal. If the user's code is not catching that signal either, they experience an abort caused by an untrapped signal. If they are ignoring the signal #8211; which is common in context I'm working in, the Apache httpd server #8211; then flush_send_queue()'s error return code is EPIPE, which is logged by handle_socket_error_msg(), and all non-auth completion functions are notified of a session event. However, if the caller is waiting for their auth completion function, they wait forever while the IO thread tries repeatedly to reconnect and is rejected by the server as having an expired session.</p> <p>So, first of all, it would be useful to document in the C API portion of the programmer's guide that trapping or ignoring SIGPIPE is important, as this signal may be generated by the C API.</p> <p>Next, the two attached patches call the auth completion function, if any, in free_completions(), which fixes this problem for me. The second attached patch includes auth lock/unlock function, as per <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-319" title="add locking around auth info in zhandle_t" class="issue-link" data-issue-key="ZOOKEEPER-319"><del>ZOOKEEPER-319</del></a>.</p></description>
<environment/>
<key id="12415001">ZOOKEEPER-320</key>
<summary>call auth completion in free_completions()</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="cdarroch">Chris Darroch</assignee>
<reporter username="cdarroch">Chris Darroch</reporter>
<labels> </labels>
<created>Tue, 17 Feb 2009 22:48:01 +0000</created>
<updated>Wed, 8 Jul 2009 20:24:00 +0000</updated>
<resolved>Fri, 27 Feb 2009 20:05:19 +0000</resolved>
<version>3.0.0</version>
<version>3.0.1</version>
<version>3.1.0</version>
<fixVersion>3.1.1</fixVersion>
<fixVersion>3.2.0</fixVersion>
<component>c client</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12674385" author="cdarroch" created="Tue, 17 Feb 2009 22:50:36 +0000"><p>This patch does not include locking for the auth data, as per <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-319" title="add locking around auth info in zhandle_t" class="issue-link" data-issue-key="ZOOKEEPER-319"><del>ZOOKEEPER-319</del></a>.</p></comment>
<comment id="12674387" author="cdarroch" created="Tue, 17 Feb 2009 22:51:56 +0000"><p>This patch includes auth data locking as per <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-319" title="add locking around auth info in zhandle_t" class="issue-link" data-issue-key="ZOOKEEPER-319"><del>ZOOKEEPER-319</del></a>.</p></comment>
<comment id="12674452" author="cdarroch" created="Wed, 18 Feb 2009 04:57:09 +0000"><p>I should perhaps clarify that the reason one might want to unconditionally wait on the auth completion after calling zoo_add_auth() is so as to provide one's own sync version of that function. The various sync functions such as zoo_wget(), zoo_set2(), etc. are just wrappers of the async versions followed by an unconditional wait on the relevant completion. Similarly, in a context which must be exclusively sync-only, zoo_add_auth() needs to be followed by a wait on its completion.</p></comment>
<comment id="12674806" author="cdarroch" created="Wed, 18 Feb 2009 22:10:13 +0000"><p>This version avoids holding the auth lock while calling the user's auth completion function (which may run for a long time; we don't know).</p></comment>
<comment id="12676825" author="mahadev" created="Thu, 26 Feb 2009 00:22:07 +0000"><p>+1 for the second patch.</p></comment>
<comment id="12677143" author="cdarroch" created="Thu, 26 Feb 2009 21:18:29 +0000"><p>Updated with a NULL initialization as per the comment on <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-319" title="add locking around auth info in zhandle_t" class="issue-link" data-issue-key="ZOOKEEPER-319"><del>ZOOKEEPER-319</del></a>:</p> <p><a href="https://issues.apache.org/jira/browse/ZOOKEEPER-319#action_12676824" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-319#action_12676824</a></p> <p>Out of interest #8212; what compiler gives these errors? My gcc 4.1.2 with -Wall doesn't report any troubles.</p></comment>
<comment id="12677144" author="cdarroch" created="Thu, 26 Feb 2009 21:20:08 +0000"><p>Also, please note my suggestion that the docs mention the need to catch, ignore, or otherwise be aware of SIGPIPE signals.</p></comment>
<comment id="12677169" author="mahadev" created="Thu, 26 Feb 2009 23:15:57 +0000"><p>my compiler is gcc 3.4.4</p></comment>
<comment id="12677501" author="mahadev" created="Fri, 27 Feb 2009 20:05:19 +0000"><p>I just committed this. Thanks chris.</p></comment>
<comment id="12677686" author="hudson" created="Sat, 28 Feb 2009 15:15:49 +0000"><p>Integrated in ZooKeeper-trunk #243 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/243/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/243/</a>)<br/> . call auth completion in free_completions(). (chris darroch via mahadev)</p></comment>
</comments>
<attachments>
<attachment id="12401068" name="ZOOKEEPER-320-319.patch" size="818" author="cdarroch" created="Thu, 26 Feb 2009 21:18:28 +0000"/>
<attachment id="12400456" name="ZOOKEEPER-320-319.patch" size="811" author="cdarroch" created="Wed, 18 Feb 2009 22:10:13 +0000"/>
<attachment id="12400360" name="ZOOKEEPER-320.patch" size="435" author="cdarroch" created="Tue, 17 Feb 2009 22:50:36 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47902</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i06193:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33134</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-319] add locking around auth info in zhandle_t</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-319</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Looking over the zookeeper.c code it appears to me that the zoo_add_auth() function may be called at any time by the user in their "main" thread. This function alters the elements of the auth_info structure in the zhandle_t structure.</p> <p>Meanwhile, the IO thread may read those elements at any time in such functions as send_auth_info() and auth_completion_func(). It seems important, then, to add a lock which prevents data being read by the IO thread while only partially changed by the user's thread. The attached patch add such a lock.</p></description>
<environment/>
<key id="12414999">ZOOKEEPER-319</key>
<summary>add locking around auth info in zhandle_t</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="cdarroch">Chris Darroch</assignee>
<reporter username="cdarroch">Chris Darroch</reporter>
<labels> </labels>
<created>Tue, 17 Feb 2009 22:32:27 +0000</created>
<updated>Wed, 8 Jul 2009 20:24:00 +0000</updated>
<resolved>Fri, 27 Feb 2009 19:49:16 +0000</resolved>
<version>3.0.0</version>
<version>3.0.1</version>
<version>3.1.0</version>
<fixVersion>3.1.1</fixVersion>
<fixVersion>3.2.0</fixVersion>
<component>c client</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12674805" author="cdarroch" created="Wed, 18 Feb 2009 22:07:57 +0000"><p>This version avoids holding the auth lock while calling the user's auth completion function (which may run for a long time; we don't know).</p></comment>
<comment id="12676824" author="mahadev" created="Thu, 26 Feb 2009 00:20:38 +0000"><p>just a minor modification. my compiler fails on compiliing <br/> consta char* auth_data without initialization.</p> <p>+1 to the patch.</p> <p>one minor nit #8211; </p> <ul class="alternate" type="square"> <li>we have some logging in auth_completion_func() in zookeeper.c</li> </ul> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> zoo_lock_auth(zh); if(rc!=0){ LOG_ERROR(("Authentication scheme %s failed. Connection closed.", zh-gt;auth.scheme)); zh-gt;state=ZOO_AUTH_FAILED_STATE; }else{ zh-gt;auth.state=1; // active LOG_INFO(("Authentication scheme %s succeeded", zh-gt;auth.scheme)); } if (zh-gt;auth.completion) { auth_completion = zh-gt;auth.completion; auth_data = zh-gt;auth.data; zh-gt;auth.completion=0; } zoo_unlock_auth(zh); </pre> </div></div> <p>Should we get rid of logging within the lock?</p></comment>
<comment id="12677142" author="cdarroch" created="Thu, 26 Feb 2009 21:12:56 +0000"><p>Good points #8211; see if this suits.</p></comment>
<comment id="12677497" author="mahadev" created="Fri, 27 Feb 2009 19:49:16 +0000"><p>I just committed this. thanks chris.</p></comment>
<comment id="12677685" author="hudson" created="Sat, 28 Feb 2009 15:15:49 +0000"><p>Integrated in ZooKeeper-trunk #243 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/243/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/243/</a>)<br/> . add locking around auth info in zhandle_t. (chris darroch via mahadev)</p></comment>
</comments>
<attachments>
<attachment id="12401067" name="ZOOKEEPER-319.patch" size="5393" author="cdarroch" created="Thu, 26 Feb 2009 21:12:56 +0000"/>
<attachment id="12400979" name="ZOOKEEPER-319.patch" size="5223" author="mahadev" created="Thu, 26 Feb 2009 00:20:38 +0000"/>
<attachment id="12400454" name="ZOOKEEPER-319.patch" size="5216" author="cdarroch" created="Wed, 18 Feb 2009 22:07:57 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47903</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0619b:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33135</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-78] added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-78</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Here's a patch which adds a little WriteLock helper class for performing leader elections or creating exclusive locks in some directory znode. Note its an early cut; am sure we can improve it over time. The aim is to avoid folks having to use the low level ZK stuff but provide a simpler high level abstraction.</p></description>
<environment/>
<key id="12400486">ZOOKEEPER-78</key>
<summary>added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation</summary>
<type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21141avatarType=issuetype">New Feature</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="mahadev">Mahadev Konar</assignee>
<reporter username="jstrachan">James Strachan</reporter>
<labels> </labels>
<created>Thu, 17 Jul 2008 15:35:42 +0000</created>
<updated>Wed, 8 Jul 2009 20:23:56 +0000</updated>
<resolved>Thu, 23 Apr 2009 21:41:38 +0000</resolved>
<version>3.0.0</version>
<fixVersion>3.2.0</fixVersion>
<component>java client</component>
<due/>
<votes>1</votes>
<watches>2</watches>
<comments>
<comment id="12614449" author="mahadev" created="Thu, 17 Jul 2008 17:18:08 +0000"><p>assiging this to james since he is working on this.</p></comment>
<comment id="12614461" author="phunt" created="Thu, 17 Jul 2008 17:41:18 +0000"><p>We should document the leader election on the recipes page first.</p></comment>
<comment id="12614548" author="fpj" created="Thu, 17 Jul 2008 22:20:41 +0000"><p>This is a nice implementation, James. Good job! My two comments are:</p> <p>1- It might be a good idea to throw the exceptions instead of trying to catch them and retry. You will end up with a cleaner code;<br/> 2- I'm not sure if it is necessary to add the log4j configuration. Is there a particular reason for including it or it is there by accident?</p> </comment>
<comment id="12614703" author="jstrachan" created="Fri, 18 Jul 2008 11:51:57 +0000"><p>Thanks Flavio! </p> <p>Totally agreed on 1. Strictly speaking we should catch all exceptions and handle them properly (which may mean throwing some, or responding properly to others or whatever).</p> <p>One of the main reasons for the retry logic was to avoid errors like trying to create a znode that already exists or loosing connection to the ZK server etc - but we should go through all possible exceptions and handle them much cleaner.</p> <p>In particular we really need test cases that show the server closing and restarting during the process of acquiring the lock or after a lock owner has the lock etc. </p> <p>I figured I'd send a patch first and see if anyone else had a better implementation lying around - or knew a neater way to solve this - before I spent too much time getting it totally correct etc. </p> <p>For 2) I just added that so that when running the unit tests you could see INFO or DEBUG level logging etc (particularly when running in your IDE)</p></comment>
<comment id="12614726" author="jstrachan" created="Fri, 18 Jul 2008 13:41:01 +0000"><p>here's an updated patch which has better documentation and includes the recipe documentation linked to from the javadoc - but which could be used stand alone as well if required.</p> <p>I've also included the description from <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-79" title="Document jacob#39;s leader election on the wiki recipes page" class="issue-link" data-issue-key="ZOOKEEPER-79"><del>ZOOKEEPER-79</del></a> as well</p></comment>
<comment id="12614745" author="jstrachan" created="Fri, 18 Jul 2008 15:05:53 +0000"><p>Here is an improved version. </p> <ul> <li>we use more optimal comparison by using a ZNodeName object which caches the prefix amp; sequence number for ordering node names. We can also use this to order node names using different prefixes - maybe useful for read/write locks</li> <li>fixed a bug and enhanced the test case so that we now test that a leader is established; then when that leader fails another leader/owner is created</li> </ul> </comment>
<comment id="12614748" author="jstrachan" created="Fri, 18 Jul 2008 15:07:10 +0000"><p>BTW I just deleted the other 2 patches to avoid confusion; the latest patch includes the previous changes etc</p></comment>
<comment id="12615305" author="breed" created="Mon, 21 Jul 2008 16:53:02 +0000"><p>There is a bug in this block of code:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> <span class="code-keyword">while</span> (!closed.get() amp;amp; id == <span class="code-keyword">null</span>) { retryDelay(attempt++); <span class="code-keyword">try</span> { id = zookeeper.create(dir + <span class="code-quote">"/x-"</span>, data, acl, EPHEMERAL | SEQUENCE); idName = <span class="code-keyword">new</span> ZNodeName(id); <span class="code-keyword">if</span> (LOG.isDebugEnabled()) { LOG.debug(<span class="code-quote">"Created id: "</span> + id); } } <span class="code-keyword">catch</span> (KeeperException e) { LOG.warn(<span class="code-quote">"Caught: "</span> + e, e); } <span class="code-keyword">catch</span> (InterruptedException e) { LOG.warn(<span class="code-quote">"Caught: "</span> + e, e); } } </pre> </div></div> <p>zookeeper.create is not idempotent, so blindly retrying will land you into problems:</p> <p>1) You start the create, a connection error happens, the create completes but you don't get a response<br/> 2) You retry your create<br/> 3) You may end up waiting on the znode from step 1) which will not go away</p> <p>I've been thinking of easy ways of getting around this problem and the easiest seems to be constructing the name as x-identifier-sequenceNumber. You could use the hostname or the sessionid as the identifier. When you do the retry you have to do a getChildren() to see if there are any znodes with your identifier and then use that znode if it exists.</p></comment>
<comment id="12615618" author="jstrachan" created="Tue, 22 Jul 2008 13:17:00 +0000"><p>Great catch Benjamin! I've a working patch using your algorithm; am using x-sessionId-sequenceNumber and its working a treat (though its a tad hard to force ZK to fail mid-create <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. </p> <p>Am working on some unit tests to try out the server stopping/starting which I'll attach shortly once they're working a bit better...</p></comment>
<comment id="12615628" author="chirino" created="Tue, 22 Jul 2008 13:57:18 +0000"><p>If possible, it might be nice if the WriteLock implemented the <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/locks/Lock.html" class="external-link" target="_blank" rel="nofollow noopener">Lock</a> interface.</p></comment>
<comment id="12615737" author="jstrachan" created="Tue, 22 Jul 2008 19:00:13 +0000"><p>this modified patch includes an implementation of Benjamin's algorithm, using w-sessionId-sequenceNumber as a naming convention so that we can reuse files created for the same session if we get a connection failure.</p> <p>this patch also includes a unit test which tests out the WriteLock still working if we stop and start the server.</p> <p>also the code is refactored so that all the retry logic is in ProtocolSupport</p></comment>
<comment id="12615739" author="jstrachan" created="Tue, 22 Jul 2008 19:01:55 +0000"><p>this patch depends on the reconnect() method on ZooKeeper to deal with session expired exceptions</p></comment>
<comment id="12616118" author="jstrachan" created="Wed, 23 Jul 2008 15:27:45 +0000"><p>This patch no longer requires <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-84" title="provide a mechanism to reconnect a ZooKeeper if a client receives a SessionExpiredException" class="issue-link" data-issue-key="ZOOKEEPER-84"><del>ZOOKEEPER-84</del></a>, we now use a ZooKeeperFacade which wraps up the creation of the ZooKeeper instance and allows it to be replaced if a SessionExpiredException occurs.</p> <p>The test case works in the current patch. To get the test case to hang closing the 3rd client, just edit WriteLockTest and set the workAroundClosingLastZNodeFails field to a value of false. You will then get this stack dump when the test hangs (on OS X at least <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>...</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> [junit] <span class="code-quote">"main"</span> prio=5 tid=0x01001710 nid=0xb0801000 in <span class="code-object">Object</span>.wait() [0xb07ff000..0xb0800148] [junit] at java.lang.<span class="code-object">Object</span>.wait(Native Method) [junit] - waiting on lt;0x096105e0gt; (a org.apache.zookeeper.ClientCnxn$Packet) [junit] at java.lang.<span class="code-object">Object</span>.wait(<span class="code-object">Object</span>.java:474) [junit] at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:822) [junit] - locked lt;0x096105e0gt; (a org.apache.zookeeper.ClientCnxn$Packet) [junit] at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:329) [junit] - locked lt;0x0bd54108gt; (a org.apache.zookeeper.ZooKeeper) [junit] at org.apache.zookeeper.protocols.ZooKeeperFacade.close(ZooKeeperFacade.java:99) [junit] at org.apache.zookeeper.protocols.WriteLockTest.tearDown(WriteLockTest.java:146) [junit] at junit.framework.TestCase.runBare(TestCase.java:140) [junit] at junit.framework.TestResult$1.protect(TestResult.java:110) [junit] at junit.framework.TestResult.runProtected(TestResult.java:128) [junit] at junit.framework.TestResult.run(TestResult.java:113) [junit] at junit.framework.TestCase.run(TestCase.java:124) [junit] at junit.framework.TestSuite.runTest(TestSuite.java:232) [junit] at junit.framework.TestSuite.run(TestSuite.java:227) [junit] at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:81) [junit] at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:36) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:421) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:912) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:766) </pre> </div></div> <p>This could maybe just be an OS X based timing issue</p></comment>
<comment id="12616135" author="jstrachan" created="Wed, 23 Jul 2008 16:01:11 +0000"><p>Patch is now attached</p></comment>
<comment id="12616223" author="breed" created="Wed, 23 Jul 2008 19:01:44 +0000"><p>Fantastic work! I second Hiram's suggestion to implement the Lock interface. (You could probably throw unsupported exception for the condition method.) It would make your naming more symmetric anyway <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>I love the whenOwner field! Excellent idea. I think it would be good to allow it to be passed in the constructor.</p> <p>I have a problem with your use of the facade. Here is the problematic scenario: your application waits for a lock and once acquired becomes the master. This master thread services clients but more importantly updates stuff in ZooKeeper. If the session expires and reconnects automatically, it is very easy for your master thread to make changes without actually being a master using the new session. If you don't use the facade, things fail properly: the connection expires, the master is no longer the master in ZooKeeper, and (most importantly) the master thread cannot do any ZooKeeper operations with the ZooKeeper object.</p> <p>I realize the facade may seem convenient, but I think we need to encourage safe behavior especially with the first high level primitives and since yours will be the very first I'd like to make sure we get off to a safe start. (It's a great first example by the way!)</p></comment>
<comment id="12616391" author="jstrachan" created="Thu, 24 Jul 2008 09:03:45 +0000"><h3><a name="Movingpatchesforthisissuetosubversionforeasiertracking"></a>Moving patches for this issue to subversion for easier tracking</h3> <p><a href="http://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/zookeeper-protocols/" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/zookeeper-protocols/</a></p> <p>I've already submitted about five patches for this issue so far and I'm sure there's gonna be loads more coming. Developing higher level protocols is a much bigger job than I previously thought <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/wink.png" height="16" width="16" align="absmiddle" alt="" border="0"/> particularly with having tests for all the various failure scenarios and adding support for the various other higher level protocols.</p> <p>Its kinda time consuming creating loads of patches amp; attaching them to the same issue and deleting the old ones so its easy for commmitters to review - but more importantly, all the history of the many patches gets totally lost using the attach-patch-to-jira model - which also makes it harder for committers to watch progress on this issue.</p> <p>I've never done this before on any other Apache project - and this approach is <b>temporary</b> and only reserved for the single <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-78" title="added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation" class="issue-link" data-issue-key="ZOOKEEPER-78"><del>ZOOKEEPER-78</del></a> issue; but I've checked in this patch into an svn sandbox area at Apache that I have commit karma on and will continue to work on it there; so that all the history is preserved. I can then do many more frequent amp; smaller commits; any ZK committer can review and easily apply my patches whenever they feel like - and its gonna be much easier for anyone in the ZK community to track progress on this issue and see how the implementation has changed over time as some things work or I find better ways of solving the issue.</p> <p>This approach is totally temporary; its not an attempt to move the code outside of the ZK community or anything like that. At any point feel free to commit (actually just copy in svn which will keep all the history amp; commit comments etc) to the ZK trunk. You could even mirror the code to the ZK tree in sandbox/contrib area if you like - just like Hiram did to mirror the ZK code to the maven-patch example in the activemq sandbox.</p> <p>I'm hoping in a few weeks my hacking on this issue will near completion and we can permanently move the code back into the ZK tree; but in the meantime its trivial to reuse it where it is or mirror it into the ZK tree as folks in the ZK community see fit. Also if I ever earn committer karma on ZK I can just move it into some ZK contrib area myself <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <h3><a name="Buildingthecode"></a>Building the code</h3> <p>In terms of sandbox - I ended up reusing Hiram's sandbox area that shows the maven build working on ZK; as I prefer to use maven and it was then super easy for me to create a new maven module, zookeeper-protocols that just includes the source and test cases for the high level protocols.</p> <p>If you're new to maven and want to build it, I've checked in instructions here...<br/> <a href="https://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/BUILDING-maven.txt" class="external-link" target="_blank" rel="nofollow noopener">https://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/BUILDING-maven.txt</a></p> <p>Whenever we move this code back into the ZK trunk am sure we can hack an Ant build for it.</p></comment>
<comment id="12616413" author="jstrachan" created="Thu, 24 Jul 2008 09:19:05 +0000"><p>Thanks for the great comments Benjamin! Have already <a href="https://svn.apache.org/repos/asf/activemq/sandbox/zookeeper/zookeeper-protocols/src/main/java/org/apache/zookeeper/protocols/WriteLock.java" class="external-link" target="_blank" rel="nofollow noopener">added the constructor for you</a> <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>BTW I was pondering about switching the whenOwner from a Runnable to some kinda interface that invokes you when you become the leader/owner - or when you stop being the leader/owner. Something like </p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">public</span> <span class="code-keyword">interface</span> WhenOwnerListener { void whenOwner(); void whenNotOwner(); } </pre> </div></div> <p>Where only znodes that are the owner would be notified with the whenOwner() method; but then if a connection fails or session times out, they'd be notified with a call to whenNotOwner();</p> <p>Spookily - I'd set myself the target today to properly implement the watches so that WriteLock gets a notification of it no longer being the leader/owner when a connection fails (which normally auto-reconnects anyway right now in the base ZooKeeper). Then I was gonna add a notification mechanism so we could notify the leader/owner is no longer the leader/owner when the session expired exception occurs.</p> <p>So we're absolutely on the same page; once I'd grokked the proper watch code for dealing with normal connection failures amp; reconnects I was hoping to add something vaguely similar to the ZooKeeperFacade so that higher level protocols can be aware of both when ZooKeeper reconnects and when ZooKeeperFacade creates a whole new connection.</p> <p>Does that make sense? I totally understand your concerns at making sure the WriteLock and associated helper classes like ProtocolSupport/ZooKeeperFacade do the right thing - I want exactly the same thing <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> I'd just not yet had the chance to go through all the different failure conditions and scenarios and make sure they all work properly <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> </comment>
<comment id="12616416" author="jstrachan" created="Thu, 24 Jul 2008 09:33:23 +0000"><p>Just added the WhenOwnerListener interface : <a href="http://svn.apache.org/viewvc?view=revamp;revision=679325" class="external-link" target="_blank" rel="nofollow noopener">http://svn.apache.org/viewvc?view=revamp;revision=679325</a> I just need to figure out how to add notifications of loss of owner/leader status when the connection fails or the session expires etc.</p></comment>
<comment id="12616446" author="jstrachan" created="Thu, 24 Jul 2008 11:12:12 +0000"><p>Benjamin I added <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-89" title="invoke WhenOwnerListener.whenNotOwner() when the ZK connection fails" class="issue-link" data-issue-key="ZOOKEEPER-89"><del>ZOOKEEPER-89</del></a> and <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-90" title="invoke WhenOwnerListener.whenNotOwner() when the ZK session expires and the znode is the leader" class="issue-link" data-issue-key="ZOOKEEPER-90"><del>ZOOKEEPER-90</del></a> to track the dealing with loss of ownership/leader with connection reconnects and with session expiration. I've not been able to test out the latter yet; but I've tested the former and I think both are implemented now via the patch for <br/> <a href="http://svn.apache.org/viewvc?rev=679354amp;view=r" class="external-link" target="_blank" rel="nofollow noopener">ZOOKEEPER-90</a> and <a href="http://svn.apache.org/viewvc?rev=679341amp;view=rev" class="external-link" target="_blank" rel="nofollow noopener">ZOOKEEPER-89</a></p></comment>
<comment id="12616545" author="phunt" created="Thu, 24 Jul 2008 17:28:31 +0000"><p>Hi James #8211; I understand where you are coming from and we appreciate the effort, but regarding use of SVN for patch submission - I'm afraid this is not acceptable. Notice on the "attach patch" JIRA page that it has the " Grant license to ASF for inclusion in ASF works .... " option. This has to be checked for us to consider a patch for inclusion.</p> <p>Also consider that we have limited resources/time and need to follow the designated patch process in order to optimize around the limited set of core reviewers/commiters we have relative to the community at large.</p> <p>(if you think you've got it bad checkout some of the hadoop examples like: <a href="https://issues.apache.org/jira/browse/HADOOP-3412" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/HADOOP-3412</a>)</p> <p>What I'd suggest is that you "overwrite" the existing patch when submitting an update. If you upload a file with the same name the old version of the file <em>is</em> still available in the JIRA, and the new file will take it's place. (I need to update the wiki with this, just haven't gotten around to it - ok just added near the end of the "contributing your work section", thanks)</p> <p>A bit less important but wanted to mention the naming scheme defined on the following page (creating a patch section):<br/> <a href="http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute" class="external-link" target="_blank" rel="nofollow noopener">http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute</a><br/> ZOOKEEPER-#.patch<br/> This helps reviewers/committers keep all the patches straight. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="12616547" author="cutting" created="Thu, 24 Jul 2008 17:41:45 +0000"><p>The project's patch submission mechanism is not inflexible, but neither should it be changed unilaterally on an issue-by-issue basis. The currently acceptable mechanism is to attach patch files to Jira, generated by 'svn diff'. When files are renamed, a shell script should be provided that performs the renames, where the script is run before the patch is applied. If some find this awkward, then a separate discussion should be launched on the mailing list. Some projects are now, e.g., using 'git' to handle things like this, but this needs to be done carefully so that the entire community is included in the process. Fewer, simpler mechanisms generally include more people.</p></comment>
<comment id="12616567" author="chirino" created="Thu, 24 Jul 2008 18:27:08 +0000"><p>Hi Patrick,</p> <p>The "Notice on the "attach patch" JIRA page that it has the " Grant license to ASF for inclusion in ASF works .... " option. This has to be checked for us to consider a patch for inclusion. " is not accurate in this case.</p> <p>James and I are are both Apache committers and Members, and as such, when we commit code to the ASF repository a license is granted to the ASF. The jira feature is really only there to be able to accept code from folks who have not filed an ICLA with the ASF.</p> <p>Another way to view this development model is as if we were ZooKeeper committers who do not commit to trunk but which develop new features and bug fixes in development branches. This model of development is use extensively in projects who are adverse to destabilizing the trunk. They develop and test new features in a branch and then merge back once folks are happy with it.</p> <p>This model is also outlined at <a href="http://incubator.apache.org/learn/rules-for-revolutionaries.html" class="external-link" target="_blank" rel="nofollow noopener">Rules for Revolutionaries</a></p></comment>
<comment id="12616579" author="jstrachan" created="Thu, 24 Jul 2008 18:44:14 +0000"><p>Wow I confess to be being kinda surprised by that response <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> I didn't realise you guys were so attached to the exact svn command line used to apply a patch - I thought you'd welcome all contributions and that the svn commit history would be more useful to you, given the large amount of changes and complexity of the code and large number of comments already on this JIRA - rather than focus purely on a minor couple of keystrokes required apply the patch <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> </p> <p>FWIW I've attached about 5 patch files so far, with none of them being committed anywhere - then made about 7 patches since then in svn with history and I'm sure there'll be another 5 or so changes to go before this patch is done. </p> <p>Never mind - I'll happily comply with your strict patch acceptance policy. Give me a few weeks or so to completely finish the code and documentation and I'll submit a single big patch for all the work to this JIRA. If you want you can get all the history too with a trivial alternative svn command - but if that offends you, please forget I'm using a sandbox svn area to work on this (pretend I'm just saving it on my hard drive and please disregard the links I've added to some JIRAs to refer to parts of this patch in a simple way) and just use the single patch file I'll attach in a few weeks or so.</p></comment>
<comment id="12616591" author="nidaley" created="Thu, 24 Jul 2008 19:00:59 +0000"><blockquote> <p>Fewer, simpler mechanisms generally include more people.</p></blockquote> <p>+1. Let's stick with a process for now that all contributors can use, not just ASF committers.</p></comment>
<comment id="12616603" author="jstrachan" created="Thu, 24 Jul 2008 19:29:43 +0000"><blockquote> <p>Let's stick with a process for now that all contributors can use, not just ASF committers.</p></blockquote> <p>Huh? Everyone has access to ASF svn? Only committers can commit using either approach. I don't grok your point.</p></comment>
<comment id="12616624" author="cutting" created="Thu, 24 Jul 2008 20:12:24 +0000"><p>gt; Give me a few weeks or so to completely finish the code and documentation and I'll submit a single big patch for all the work to this JIRA.</p> <p>If you want to get more feedback as you go, please attach interim patches too, rather than just the final patch. That way folks who monitor the -dev mailing list will see the updates and can try them in the usual manner. We generally don't put things into the "Patch Available" state until the contributor believes that the patch is in a final form.</p> <p>gt; Everyone has access to ASF svn?</p> <p>I think all that Nigel meant was that not everyone can submit patches by naming an Apache svn revision since not everyone has commit access to Apache's svn. We try to use a uniform mechanism, the same for committers as non-committers. Committers generally have to do more work, not less, than other contributors, since every patch committed must be reviewed and accepted by a committer. Committing is a duty, not a privilege.</p></comment>
<comment id="12616641" author="cutting" created="Thu, 24 Jul 2008 20:32:37 +0000"><p>gt; FWIW I've attached about 5 patch files so far, with none of them being committed anywhere [ ...]</p> <p>Are they getting reviewed promptly? A primary job of committers is to keep the Patch Available queue short, by trying to review patches within a few days of their contribution, either committing them or rejecting them with a clear explanation. If the committers are unable to keep up with the contributors, then the project probably needs more committers. In this case, contributors should also do everything they can to make committers lives easier, so as not to further delay their patches.</p> <p>Contributors should be nominated to become committers when they've provided a series (e.g., 3+) non-trivial, high-quality patches, and demonstrated an ability to work peacefully with existing committers, following procedures, etc. If someone provides patches that apply cleanly, fix real user problems, include unit tests, and the contributor responds to criticism in a positive manner, then they should be nominated as a committer in short order. Then they can start reviewing and grooming new committers themselves!</p></comment>
<comment id="12616650" author="phunt" created="Thu, 24 Jul 2008 20:51:05 +0000"><p>I agree, we do need to do a better job on the reviews. In our defense: <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>1) we're trying to complete the migration from SF to Apache. good thing is it looks like we're pretty close to the end on that<br/> 2) there's a ZooKeeper workshop @yahoo on Monday, just so happens that all commiters are presenters.<br/> 3) the continual push to change the build/wiki/patchsubmission/etc... processes are pulling me off things like patch review in order to track down answers (cuz I'm new to Apache as well - thanks Doug/Owen!)</p></comment>
<comment id="12616656" author="phunt" created="Thu, 24 Jul 2008 21:02:55 +0000"><p>Per the comments here:<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12616579#action_12616579" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12616579#action_12616579</a><br/> and here:<br/> <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12616624#action_12616624" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12616624#action_12616624</a></p> <p>I'm moving the status from patch available to open.</p></comment>
<comment id="12616722" author="breed" created="Fri, 25 Jul 2008 00:26:30 +0000"><p>Can we focus on the issue at hand? This patch is almost done there is no reason for the meta physical discussions or even an external SVN. It's simple enough. The only thing that must be done is to remove the use of the ZooKeeperFacade and use the ZooKeeper object correctly. If you want to discuss why ZooKeeperFacade is a bad idea, lets open an issue to discuss there.</p> <p>I really like the idea of using the Lock interface, but changing aquire to lock() should be good enough.</p> <p>Lets get this thing committed so that we can move on.</p></comment>
<comment id="12619606" author="breed" created="Mon, 4 Aug 2008 17:38:55 +0000"><p>I've documented on the wiki at <a href="http://wiki.apache.org/hadoop/ZooKeeper/ErrorHandling" class="external-link" target="_blank" rel="nofollow noopener">http://wiki.apache.org/hadoop/ZooKeeper/ErrorHandling</a> why ZooKeeperFacade needs to be removed. Just use the ZooKeeper object. For this patch in particular it is very important not to use a facade.</p></comment>
<comment id="12675209" author="mahadev" created="Fri, 20 Feb 2009 01:30:39 +0000"><p>it would be great ot have this jira in 3.2. </p> <p>this patch removes the zookeeper facade, and makes it work with the current trunk. I have to still go through all the corner cases and see if they have been handled. Also, I need to implement the lock interface in writelock.</p> <p>comments are welcome... </p></comment>
<comment id="12675506" author="mahadev" created="Fri, 20 Feb 2009 23:17:56 +0000"><p>an updated patch. </p> <ul class="alternate" type="square"> <li>added acls to writelock</li> <li>removed ZookeeperTestSupport, used ClientBase insted of this new class</li> <li>made the package name org.apache.zookepeer.protocols.lock so that each protocol has its own direcotry</li> <li>moved the docs.html to pakcage.html</li> </ul> <p>it still does not impleement the lock interface of java. Ill add it in the next patch.</p></comment>
<comment id="12675792" author="tomwhite" created="Mon, 23 Feb 2009 07:17:53 +0000"><p>Mahadev,</p> <p>I'm glad this is being worked on again. Some comments:</p> <ul> <li>Not sure if a Runnable is right for whenOwner, as Runnable implementations are often one-shot and can't be re-run, whereas it looks like WriteLock can be locked and unlocked repeatedly (is this right?). There's also no way to tell when the lock has been released. Might be better to have a standard listener interface called LockListener, with lockAcquired and lockReleased methods. Writing an implementation to run a Runnable would be trivial.</li> <li>I worry a little about WriteLock implementing java.util.concurrent.locks.Lock, since Lock seems oriented to single-process programs. By making WriteLock a Lock we make it easy for programmers to drop it in to programs that use Lock, without having to think about distributed error recovery. For example, Lock#lock() cannot throw checked exceptions, so we would have to wrap KeeperException in an unchecked exception, which could too readily be ignored. Perhaps the answer is to make the method naming and semantics as close as possible, without actually implementing Lock proper? (I think this is similar to the discussion in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-104" title="KeptSet: a distributed data stucture backed by the children of a ZooKeeper node" class="issue-link" data-issue-key="ZOOKEEPER-104"><del>ZOOKEEPER-104</del></a>.)</li> <li>Lots of classes and methods are public when they don't need to be. Really only WriteLock should be public, with public methods lock(), unlock(), getDir() (better named as getLockPath() or similar?), getWhenOwner(), setWhenOwner() (or whatever replaces the last two).</li> </ul> </comment>
<comment id="12676802" author="mahadev" created="Wed, 25 Feb 2009 22:30:07 +0000"><p>sorry for my late response tom.. i havent had a real close look at the interfaces and methods in this patch myself, so thanks for reviewing.. I was mainly looking at the handling of zookeeper events.</p> <p>1) I think you are rught that we should probably have call back methods with lockacruired and lockreleeased methods. The current implementation is too restrictive.<br/> 2) I am with you on this one as well... I hadn't implemented the lock interface just because I had the same reservations as you.. I think for now we should just leave it as it is without implementing the lock interface and see what our users have to say.. <br/> 3) agreed.. </p> </comment>
<comment id="12680759" author="mahadev" created="Wed, 11 Mar 2009 05:08:18 +0000"><p>a new patch. I have changed the directory structure in this </p> <p>the code now is in<br/> <tt>root</tt>/src/recipes/lock/src/java/org/apache/zookepeer/recipes/lock/<br/> also the tests are in <br/> <tt>root</tt>/src/recipes/lock/test/org/apache/zookeeper/recipes/lock/</p> <p>the new directory structure allows us to have both the java and c implemention in the same parent directory strucure.</p> <p>src/recipes/lock/</p> <p>also -</p> <ul class="alternate" type="square"> <li>added a new interface Locklistener</li> <li>removed runnable to be a locklistener interface whose methods lockAcqured and lockReleased are called on a lock acquired and relase of a lock</li> <li>refactored some code</li> <li>deleted not required public methods.</li> <li>added build files for the recipes directory</li> <li>changed the tests to work with new api's</li> </ul> <p>i am implementing the recipes in c. Will have an updated patch up soon. comments are welcome.</p></comment>
<comment id="12680825" author="tomwhite" created="Wed, 11 Mar 2009 09:46:35 +0000"><p>gt; i am implementing the recipes in c.</p> <p>Should the C version go in a separate Jira issue and patch?</p></comment>
<comment id="12680933" author="mahadev" created="Wed, 11 Mar 2009 17:12:59 +0000"><p>dont know.. the jira says just talks abt the recipe, so is adequate for both java and c <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. .. I would like to have both in one jira so that everyone who wants to contribute to such zookeeeper recipes is encouraged to have both the java and c implementation, but I am open to creating a new jira for c. </p></comment>
<comment id="12680956" author="phunt" created="Wed, 11 Mar 2009 18:01:16 +0000"><p>I agree with Mahadev #8211; we want to encourage ppl to provide (interoperable) implementations for both c/java.</p> <p>However the JIRA should be updated to have both java and c client component listed.</p> <p>Should we add a new "recipe" component?</p></comment>
<comment id="12694343" author="mahadev" created="Wed, 1 Apr 2009 01:16:14 +0000"><p>this patch has the c library in it as well. <br/> Now I think of it, I probably should have done it in a seperate jira with subtasks as java and c libraries.</p> <ul class="alternate" type="square"> <li>added the c library with auto * files to create teh library</li> <li>added cpp unit testing for the c library</li> <li>similar to java interface, the c interface also allows a callback method to be called in case of lock being avquired and released.</li> <li>i will be cleaning up the patch (with some more docs and rmeocing unneccasry printf's and unused code).</li> </ul> <p>comments are welcome... </p></comment>
<comment id="12694345" author="mahadev" created="Wed, 1 Apr 2009 01:19:34 +0000"><p>reattaching the patch. had some problems with the earler version.</p></comment>
<comment id="12694348" author="mahadev" created="Wed, 1 Apr 2009 01:25:30 +0000"><p>make sure that you download the patch adn then view it. I tried opening up the patch in the browser and it fails. It thinks that the file is xml (not sure why.. ) and tried opening it as an xml file... </p></comment>
<comment id="12694793" author="cdarroch" created="Wed, 1 Apr 2009 22:24:52 +0000"><p>Just took a quick peek to see what would be either rework these in a ZooKeeper::Lock Perl module to go along with Net::ZooKeeper, or to expose the C version through Net::ZooKeeper. I may well be missing something after such a brief review, but in zoo_mutex_operation() I would be inclined to add some return value checks.</p> <p>For example, if zoo_create() here returns a failure code, I believe it's possible for the retbuf to contain whatever random data it had before the call. In that case, getName() might "succeed" if the data contains a '/' and return a string #8212; possibly one that doesn't happen to be null-terminated within the retbuf buffer.</p> <div class="preformatted panel" style="border-width: 1px;"><div class="preformattedContent panelContent"> <pre> char retbuf[len+20]; snprintf(buf, len, "%s/%s", path, prefix); ret = zoo_create(zh, buf, NULL, 0, mutex-gt;acl, ZOO_EPHEMERAL|ZOO_SEQUENCE, retbuf, (len+20)); mutex-gt;id = getName(retbuf); </pre> </div></div> <p>There are some calls to zoo_get_children(), etc., which I think might be usefully checked for failure return codes as well. Sorry not to provide a patch yet.</p></comment>
<comment id="12694841" author="mahadev" created="Thu, 2 Apr 2009 00:19:41 +0000"><p>thanks for your comments chris. You are right, the c version needs to do a better job on handling error cases. I still need to clean it up for that. Will update the patch. I probably think i spent most of the time fighting/learning auto*/libtools rather than coding the c api <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> ... </p></comment>
<comment id="12696310" author="mahadev" created="Tue, 7 Apr 2009 00:22:59 +0000"><ul class="alternate" type="square"> <li>cleaned up the code and added some mroe comments to the code.</li> <li>made the java api be lock and unlock compatible with java's lock api</li> </ul> <p>I still need to work on doing the right handling of session expiration and connectionloss everywhere in the code (both c and java)</p></comment>
<comment id="12696827" author="mahadev" created="Tue, 7 Apr 2009 23:47:07 +0000"><p>this patch takes care of all the error cases (please review in case i missed some) both in java and c.</p> </comment>
<comment id="12696986" author="hadoopqa" created="Wed, 8 Apr 2009 11:14:00 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12404904/ZOOKEEPER-78.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12404904/ZOOKEEPER-78.patch</a><br/> against trunk revision 762602.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 39 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 116 release audit warnings (more than the trunk's current 105 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/artifact/trunk/current/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/artifact/trunk/current/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/21/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12697127" author="phunt" created="Wed, 8 Apr 2009 18:00:46 +0000"><p>This first set of comments is relative to the structure/build/packaging (ie non-code) issues:</p> <p>I think the jar name should include "recipes"<br/> ie for locks: zookeeper-3.2.0-recipes-lock.jar<br/> how about a "superset" recipes/zookeeper-3.2.0-recipes.jar with all recipes included?<br/> users can choose which to use</p> <p>There seems to be an issue with recipes in release build - actually same issue with contrib:<br/> you cannot run "ant test" on lock recipe in the released tar file build using "ant tar"<br/> seems build.xml and build-recipes.xml are missing from tar file</p> <p>docs - I think it's ok not to have specific forrest docs inside locsk, but need:<br/> recipes/README.txt<br/> what is this code? what are requirements for authors? (like interop btw c/java for particular impl)<br/> also req that recipe be documented in recipes documentation in forrest<br/> describe and point to forrest docs in docs/... (should put link to live h.a.o doc as well)<br/> is there some high level bit of informatin that you want to convey to authors re how components<br/> should be designed (in particular session mgmt, error handling, logging, etc...) this is a good place to put<br/> recipes/lock/README.txt<br/> describe and point to forrest docs in docs/... (should put link to live h.a.o doc as well)<br/> pointer to javadoc (ie live h.a.o site)?</p> <p>are the forrest recipe docs up to date relative to impl for locks? which lock in particular from docs.<br/> any deviation(s), any specific impl detail that's important, configurability?<br/> might be good to update the forrest recipe docs to point to this jar/code for implementation<br/> ie let users know that they can get this from the release in recipes/locks (they don't need to impl)</p> <p>how do we verify interop?<br/> great job adding tests! but they seem to be tests for c, tests for java, but not interop.<br/> this seems pretty important. We want to document in recipes/readme that authors in particular<br/> should code for c/java to interop for any one particular recipe instance. also that recipes can <br/> co-exists in user space (ie placement of nodes, etc...)<br/> Might be good enough to add a new JIRA for this, but need to impl this asap.</p> <p>You've done a great job, but I'm holding this jira to a higher standard since ppl who implement further<br/> recipes will use your lock implementation as a "blueprint". <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> </comment>
<comment id="12697150" author="mahadev" created="Wed, 8 Apr 2009 18:58:07 +0000"><p>i attached header files to package.html<br/> makefile.am<br/> configure.ac</p> <p>adn the others have diffierenct headers which are not apache but can be included in the codebase.</p></comment>
<comment id="12697277" author="phunt" created="Wed, 8 Apr 2009 22:51:16 +0000"><p>These comments are relative to the java code:</p> <p>cleanup imports</p> <p>writelocktest indentation problem line 87</p> <p>do we want to talk about leaderelection in locks, or just implement another le in recipes (small wrapper)?</p> <p>znodename.java - log failure in exception handlers</p> <p>protocolsupport retrydelay eats interrupt, ie lock cannot be interrupted</p> <p>shouldn't writelock.lock throw connectionloss if closed?<br/> the javadoc is not clear - what happens in the "later" case? does this block? what happens if expired or discon? etc...</p> <p>line 148 of writelock<br/> long sessionId = zookeeper.getSessionId();<br/> what ensures that sessionid you get back is valid? (ie non-zero)<br/> This is pretty large anony class - why not have a specific static class definition?<br/> Plus all in one method rather than broken out (even indentation is deep)<br/> Would be easier to maintain if broken into several methods</p> <p>writelock line 208<br/> try </p> { lock(); } <p> catch (Exception e) </p> { LOG.warn("Failed to acquire lock: " + e, e); } <p>what happens if lock returns false (isclosed for example)?</p> <p>Some of these classes look reusable (prot/name/op) - should they be in this recipe or elsewhere?<br/> If we want to enable additional recipes to be easily added based on the work you've done (blueprint)<br/> we should try to make these easily reusable.</p> </comment>
<comment id="12697343" author="phunt" created="Thu, 9 Apr 2009 00:14:39 +0000"><p>comments on the c code:</p> <p>the api methods are named with prefix zoo_mutex_*<br/> seems to me it would be better to name them zoo_recipe_lock_* as prefix<br/> this specifies that it's a recipe, in particular that it's implementing the "lock" recipe<br/> We would expect (and should document in src/recipe/readme) that c api methods<br/> should be named in this fashion, ie zoo_recipe_lt;recipenamegt;_*<br/> otw the c global namespace is going to cause problems down the line<br/> also easier for users to identify the recipe to which a particular method call pertains</p> <p>it's good to commit the configure scripts (see hadoop c code for which files)<br/> this was lesson learned for cbinding amp; zkfuse, makes it easier for users to build<br/> ensure binary flag set in tar package for executable scripts</p> <p>would be nice to have a readme to orient the new user in src/c<br/> include how to build (easier if configure script is here)</p> <p>out of the box the patch fails to run-check<br/> Running Zookeeper_locktest::testlocksh: ./tests/zkServer.sh: Permission denied<br/> sh: ./tests/zkServer.sh: Permission denied<br/> : assertion : assertion<br/> be sure to set the exec flag when committing zkServer to svn.</p> <p>in tests might want to use localhost rather than 127.0.0.1 (if ipv6 only host? or does ipv6 handle that?)</p> <p>sleep(30) in test is unfortunate - it artificially inflates the test time. having short test time is a win<br/> any chance you can actively poll rather than just sleeping? something reusable by other recipes would be grt</p> <p>I don't see any logging in zoo_lock.c, I think we should log at least the error conditions, also things like<br/> loop retry at debug level. also operation is pretty complex, some logging in there would help.</p> <p>also some similar comments as java - for example getting client_id in operation, this may be invalid<br/> if the session is not established?</p> <p>the api says:</p> <ul> <li>\return the return code.<br/> for many of the methods. what does this mean?</li> </ul> </comment>
<comment id="12697346" author="phunt" created="Thu, 9 Apr 2009 00:20:22 +0000"><p>running doxygen-doc doesn't result in any c-docs being generated (html).</p> <p>Also the version is wrong in .ac file - should be 3.2.0 not 2.2.0<br/> which reminds me - yet another place we need ot update during a release... we should<br/> really try to figure out how to centralize this (perhaps Giri knows?) otw it's an increasing<br/> pain/error point during releases. (not this jira responsible though)</p></comment>
<comment id="12697683" author="breed" created="Thu, 9 Apr 2009 22:58:14 +0000"><p>wow nice work. it's nice to have someone that knows automake again!</p> <p>some comments:</p> <p>in unlock, we shouldn't call the callback if the unlock had an error should we?</p> <p>in zope.execute() how would id be null in the 2nd if block?</p> <p>Collections.sort() would simplify your sorting wouldn't it?</p> <p>if exists() fails when trying to grab the lock, you need to get a new child list and retry.</p> <p>for both C and java, shouldn't the lock and unlock be synchronized?</p> <p>in zoo_mutex_lock you always nano_sleep. wouldn't it be better to only nano_sleep if you have to retry?</p> <p>i think the logic for checking for a previous create with getChildren and create should be implemented the same in C and java.</p> <p>with regard to that last comment: currently we do a getChildren() see if a previous create suceeded and then do a create(). one problem with this is that a previously issued create may still be in flight. i think it would be better and simpler to keep doing create until you succeed; do a getChildren(); delete any duplicates.</p></comment>
<comment id="12697699" author="mahadev" created="Fri, 10 Apr 2009 00:57:08 +0000"><p>thanks for looking at it ben and pat... i am fixing most of the stuff you guys mentioned except for the following #8211; </p> <ul class="alternate" type="square"> <li>the zookeeper c client methods -<br/> pat's idea does make sense for namespace conventions. But zoo_recipes_lock_methodname seems too long. I recommend we use zoo_recipename_methodname().. which is a little mroe convenient thatn the older one.</li> </ul> <p>there are others I will prefer opening a jira later to fix it.. (like interperability of c and java code).. i would like this patch to get committed as soon as possible. maintaing such a huge patch is a lot of work... </p></comment>
<comment id="12698004" author="mahadev" created="Fri, 10 Apr 2009 22:47:56 +0000"><p>this patch should fix most of the issues raised by pat and ben.<br/> you will have to do the following before you can apply the patch #8211; </p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">svn move src/c/src/zk_log.h src/c/include/zk_log.h </pre> </div></div> <p>the include file is necessary to use LOG_* macros.</p> <p> ill just list out what I have fixed in this patch.. </p> <ul class="alternate" type="square"> <li>improved the docs for recipes amd recipes/lock. both of them have a README.txt. the recipes one lists out how to create new recipes and conventions to follow.</li> <li>changed the c libary method names to follow the convention</li> <li>renamed the jar file to be zookeeper-version-recipes-name.jar</li> <li>for interop I will open another jira</li> <li>also we should commit the configure generated after running autoconf. I didnt attach it to the patch since it makes it huge.</li> <li>cleaned up imports</li> <li>modularized the java code</li> <li>i have left the sleep 30 in the c tests. I will open a jira to fix it later.</li> <li>i have added logging to the c code.</li> <li>improved the javadocs and c doxygen comments to make the return values clearer</li> <li>chanegd the version in configure.ac</li> <li>the doxygen docs should work now</li> <li>added synchronized for the lock methods both in c and java</li> <li>fixed to sleep only on a retyr</li> </ul> <p>I think i might have addressed most of the review issues, but please take a look and see if anything still remains. comments are welcome.</p></comment>
<comment id="12698586" author="phunt" created="Mon, 13 Apr 2009 23:16:13 +0000"><p>zk_log.h is moved, however Makefile.am has not been updated.<br/> be sure to include it in pkginclude_HEADERS</p> <p>I'd rather that the include name be "zookeeper_log.h" to be consistent with with the existing files.<br/> (granted some of the files are mis-named, like recordio.h, but we should fix that in 4.0)</p></comment>
<comment id="12700311" author="mahadev" created="Fri, 17 Apr 2009 20:13:44 +0000"><p>this patch addresses pat's concern.<br/> also </p> <ul class="alternate" type="square"> <li>modularized the c code methods a little more so that its more readable</li> <li>changed the return codes and relevant doxygen comments to be in line with c libraries (like 0 for success and not zero for failure).</li> <li>the zk_log.h needs to be moved to src/c/include as I had mentioned earlier.</li> </ul> </comment>
<comment id="12700312" author="mahadev" created="Fri, 17 Apr 2009 20:14:21 +0000"><p>running through hudson</p></comment>
<comment id="12700644" author="hadoopqa" created="Mon, 20 Apr 2009 04:26:51 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12405803/ZOOKEEPER-78.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12405803/ZOOKEEPER-78.patch</a><br/> against trunk revision 766160.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 39 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 111 release audit warnings (more than the trunk's current 105 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/artifact/trunk/current/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/artifact/trunk/current/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/41/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12700668" author="mahadev" created="Mon, 20 Apr 2009 06:44:35 +0000"><p>-1 for release audit is expected because some files are checked in with non apache headers (but are compatible with apache).</p></comment>
<comment id="12701685" author="fpj" created="Wed, 22 Apr 2009 21:16:01 +0000"><p>+1, it looks good to me.</p></comment>
<comment id="12702027" author="phunt" created="Thu, 23 Apr 2009 17:49:41 +0000"><p>I'd like to commit this asap - just waiting on the change to name the log file "zookeeper_log.h" when it's<br/> moved into the public include directory.</p> <p>see my comment: <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12698586amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12698586" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12698586amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12698586</a></p></comment>
<comment id="12702054" author="mahadev" created="Thu, 23 Apr 2009 18:47:33 +0000"><p>this patch should the fix the zk_log.h issue.</p> <p>thanks for pointing it out pat.</p></comment>
<comment id="12702122" author="phunt" created="Thu, 23 Apr 2009 21:41:38 +0000"><p>Committed revision 768067.</p> <p>Thanks Mahadev!</p></comment>
<comment id="12702208" author="hadoopqa" created="Fri, 24 Apr 2009 01:53:37 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12406269/ZOOKEEPER-78.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12406269/ZOOKEEPER-78.patch</a><br/> against trunk revision 768067.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 42 new or modified tests.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/48/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/48/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12702420" author="hudson" created="Fri, 24 Apr 2009 15:51:58 +0000"><p>Integrated in ZooKeeper-trunk #289 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/289/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/289/</a>)<br/> . added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10032">
<name>Blocker</name>
<inwardlinks description="is blocked by">
<issuelink>
<issuekey id="12400498">ZOOKEEPER-79</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12406269" name="ZOOKEEPER-78.patch" size="187403" author="mahadev" created="Thu, 23 Apr 2009 18:47:33 +0000"/>
<attachment id="12405803" name="ZOOKEEPER-78.patch" size="185143" author="mahadev" created="Fri, 17 Apr 2009 20:13:44 +0000"/>
<attachment id="12405203" name="ZOOKEEPER-78.patch" size="183460" author="mahadev" created="Fri, 10 Apr 2009 22:47:56 +0000"/>
<attachment id="12404995" name="ZOOKEEPER-78.patch" size="180567" author="mahadev" created="Wed, 8 Apr 2009 18:58:07 +0000"/>
<attachment id="12404904" name="ZOOKEEPER-78.patch" size="178177" author="mahadev" created="Tue, 7 Apr 2009 23:47:07 +0000"/>
<attachment id="12404785" name="ZOOKEEPER-78.patch" size="176761" author="mahadev" created="Tue, 7 Apr 2009 00:22:59 +0000"/>
<attachment id="12404295" name="ZOOKEEPER-78.patch" size="175972" author="mahadev" created="Wed, 1 Apr 2009 01:19:34 +0000"/>
<attachment id="12401895" name="ZOOKEEPER-78.patch" size="49956" author="mahadev" created="Wed, 11 Mar 2009 05:08:18 +0000"/>
<attachment id="12400636" name="ZOOKEEPER-78.patch" size="34365" author="mahadev" created="Fri, 20 Feb 2009 23:17:56 +0000"/>
<attachment id="12400563" name="ZOOKEEPER-78.patch" size="36873" author="mahadev" created="Fri, 20 Feb 2009 01:30:38 +0000"/>
<attachment id="12386649" name="patch_with_including_Benjamin's_fix.patch" size="38132" author="jstrachan" created="Tue, 22 Jul 2008 19:00:13 +0000"/>
<attachment id="12386733" name="using_zookeeper_facade.patch" size="46962" author="jstrachan" created="Wed, 23 Jul 2008 15:27:45 +0000"/>
</attachments>
<subtasks>
<subtask id="12400901">ZOOKEEPER-88</subtask>
<subtask id="12400902">ZOOKEEPER-89</subtask>
<subtask id="12400903">ZOOKEEPER-90</subtask>
<subtask id="12400907">ZOOKEEPER-91</subtask>
<subtask id="12400908">ZOOKEEPER-92</subtask>
</subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>48066</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i06453:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33602</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-231] Quotas in zookeeper</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-231</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>creating quota's in zookeeper so that a runaway application does not bring down the zookeeper cluster.</p></description>
<environment/>
<key id="12409025">ZOOKEEPER-231</key>
<summary>Quotas in zookeeper</summary>
<type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21141avatarType=issuetype">New Feature</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="mahadev">Mahadev Konar</assignee>
<reporter username="mahadev">Mahadev Konar</reporter>
<labels> </labels>
<created>Fri, 21 Nov 2008 21:13:13 +0000</created>
<updated>Fri, 13 Feb 2009 21:18:50 +0000</updated>
<resolved>Tue, 3 Feb 2009 05:26:51 +0000</resolved>
<version>3.0.0</version>
<fixVersion>3.1.0</fixVersion>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12649797" author="mahadev" created="Fri, 21 Nov 2008 21:14:21 +0000"><p>I will put up a proposal shortly ... </p></comment>
<comment id="12650406" author="mahadev" created="Tue, 25 Nov 2008 00:19:46 +0000"><p>here is a proposal for quotas #8211; </p> <p>The goal:</p> <ul class="alternate" type="square"> <li>prevent run away processes or applications bringing down the service.</li> <li>providing admins to look at usage and being able to monitor proactively</li> </ul> <p>What kind of quoata would we have</p> <ul class="alternate" type="square"> <li>namespace quotas</li> <li>bytes quota</li> </ul> <p>Proposal:</p> <ul class="alternate" type="square"> <li>Reserve the node /zookeeper for zookeeper stats and zookeeper data management.</li> <li>reserve /zookeeper/quota/ for quota related data structures</li> </ul> <p>The proposal is to have subtree based quotas for the number of bytes and number of nodes as well.<br/> The monitoring of quotas and stats should be availabe through the command port <br/> and through zookeeper itself via the /zookeeper node.</p> <p>The proposal is to have something like <br/> /zookeeper/quota/path/limits/size<br/> /zookeeper/quota/path/usage/size<br/> /zookeeper/quota/path/limits/count<br/> /zookeeper/quota/path/usage/count</p> <p>limits are the stored values that signify the limit for a subtree path<br/> and usage denote the actual usage of the subtree in terms of bytes or count or number of writes/reads.</p></comment>
<comment id="12650679" author="aw" created="Tue, 25 Nov 2008 18:54:55 +0000"><p>so we eat sizeof(path)x8 to set quotas? isn't that excessive? also seems overly difficult to administer.</p></comment>
<comment id="12650708" author="ksankar" created="Tue, 25 Nov 2008 19:57:59 +0000"><p>Couple of points:<br/> a) We could set the <b>total</b> bytes used by one client. If it is a runaway process, sooner or later it will exceed the limit anway<br/> b)How would we handle the identity ? Do we assume a secure environment or a hostile one ? Reason being, if someone wants to expose ZooKeeper as an internet service, wat kind of safeguards do we need ? Secure identity mechanisms ? </p></comment>
<comment id="12650709" author="ksankar" created="Tue, 25 Nov 2008 20:03:25 +0000"><p>Sorry for the second comment.<br/> I suddenly realized, what Mahadev is proposing is a per path quota and not a per client quota. SO when a path exceeds a limit, we just prune the path. A runaway client most probably will again fillup the path and we prune again.<br/> May be we should have a per client model /zookeeper/quota/lt;ipAddressgt;/usage. ust accumulate the siz of all artifacts the client stores with ZooKeeper. Of course, when the limit exceeds, we would have to deny storage for that client and this has the potential for DOS.</p></comment>
<comment id="12650727" author="mahadev" created="Tue, 25 Nov 2008 20:38:19 +0000"><p>in response to allen's comments:</p> <p>we expect that the admin's will have some common subtree for users/apps<br/> something like /apps/app1 #8211; </p> <p>so in that case it would just add one node for a new user and in zookeeepr 1 node corresponds to 100 bytes or so.</p> <p>so usage should not be a problem.</p> <p>also regarding administration, we will expose the setting and getting of these quotas using jmx and will have command line tools to do that and get stats. </p> <p>@krishna's comments:</p> <p>it would a huge overhead to track usage/stats per client since the clients are usually distributed and of the ordeor of thousands.<br/> does that make sense?</p></comment>
<comment id="12650731" author="phunt" created="Tue, 25 Nov 2008 20:55:39 +0000"><p>Another issue with perclient tracking - what if an IP is running multiple clients (within or across processes). It seems to me that having quotas based on subtrees (application/service) make much more sense.</p> <p>/app/app1 10mb<br/> /app/app2/service1 10mb<br/> /app/app2/service2 10mb<br/> /app/app3 30mb<br/> etc...</p> <p>Regardless of the number of clients i've limited a particular service/application to a set space.</p></comment>
<comment id="12650736" author="ksankar" created="Tue, 25 Nov 2008 21:10:19 +0000"><p>@Mahadev:<br/> I thought there would be much more trees than clients. So if tracking per client is high overhead, wouldn't that apply to the trees ? What is the normal arit between clients/trees ? Again we are talking about clients that store something not the ones that refer to the nodes<br/> @Patrick<br/> Application/Service makes sense, but how would we reliably know the app name and also deal efficiently with duplicates ?</p></comment>
<comment id="12650742" author="mahadev" created="Tue, 25 Nov 2008 21:30:03 +0000"><p>@krishna:<br/> a distributed application say A1 might have thousands of clients of Zookeeper. So, the idea is that the admins assign /apps/a1 for application A1 (set them up with proper acls so that only A1 is able to access it). </p> <p>also for reliably knowing the app name we would have some kind of authorization for a client to identify itself as a part of some application. initially it could just be something like <br/> instantiating a zookeeper-client with an application name. (no security).</p></comment>
<comment id="12650743" author="phunt" created="Tue, 25 Nov 2008 21:32:07 +0000"><p>@Krishna: the paths I specified are zk subtree path specs.</p> <p>I should have been more clear: /app/app1 corresponds to the /app/app1 znode subtree w/in ZK namespace. To take my example further you might have:</p> <p>/app/app1/cluster1/members/...<br/> /app/app1/cluster1/leader<br/> /app/app1/cluster2/members/...<br/> /app/app1/cluster2/leader</p> <p>where members is storing the hosts amp; ports of the members of cluster1, for app1, etc... and leader is storing the leader node for the cluster (this is but one simple example).</p> <p>The ZK ACLs feature could be used to lock down a particular acl id to particular subtree(s).<br/> <a href="http://hadoop.apache.org/zookeeper/docs/r3.0.0/zookeeperProgrammers.html#sc_ZooKeeperAccessControl" class="external-link" target="_blank" rel="nofollow noopener">http://hadoop.apache.org/zookeeper/docs/r3.0.0/zookeeperProgrammers.html#sc_ZooKeeperAccessControl</a></p> <p>So in this case you might have acl ids for app1, app2 and app3, each only able to access it's particular corresponding subtree of znodes, where each of those trees has some associated quota.</p> <p>Does that help?</p> </comment>
<comment id="12650801" author="phunt" created="Tue, 25 Nov 2008 23:53:57 +0000"><p>Adding a link to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-119" title="Reserve quot;.zookeeperquot; node for server use." class="issue-link" data-issue-key="ZOOKEEPER-119">ZOOKEEPER-119</a></p> <p>Originally we talked about using /.zookeeper rather than /zookeeper, have we changed our minds on whether that's a good idea or not?</p></comment>
<comment id="12652443" author="ksankar" created="Tue, 2 Dec 2008 18:10:19 +0000"><p>@Patrick,<br/> Yep, that helps. But raises another question ;o). </p> <p>RE:acl id, woud it be a good idea to get couple more double clicks and granularities ? Eggt; app and some sort of id at the next level. May be app is sufficient. For now, looks like our least count is ip, but there are more smaller leaf units than that, like app.</p> <p>Cheers<br/> lt;k/gt;</p></comment>
<comment id="12652526" author="mahadev" created="Tue, 2 Dec 2008 21:45:20 +0000"><p>@krishna<br/> zookeeper has a pluggalbe authorization system. So in case you want to use ip as the granularities instead of an app, then you can create an authorization system with </p> <p>id = ipaddress.<br/> scheme=ipscheme</p> <p>which classifies the ipaddesses into one of the subnet ids? ... we already have one such auth system using subnet authorization in <br/> src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java </p> </comment>
<comment id="12661754" author="mahadev" created="Wed, 7 Jan 2009 22:40:22 +0000"><p>here is a preliminary patch for qutoa's. This is not fully complete #8211; lacking tests, documentation and a few minor features, which I will be adding shortly. The design is based on whats discussed above. COmments are welcome.</p></comment>
<comment id="12663639" author="mahadev" created="Wed, 14 Jan 2009 06:19:18 +0000"><p>here is a more recent patch (needs testing). it does not include tests and docs #8211; will be adding them. </p></comment>
<comment id="12664762" author="mahadev" created="Sat, 17 Jan 2009 00:57:02 +0000"><p>updated patch ... shaked out some bugs... still needs tests and documentation... please review the code.... ill be making some changes .... but not drastic ones... the one thing to keep in mind is htat the current code forbids setting of quota if a path "does not" already exist (just an easier implementation choice) ... I will be changing that to setting of quota only if a path exists.</p></comment>
<comment id="12665674" author="mahadev" created="Wed, 21 Jan 2009 01:26:52 +0000"><p>this patch includes a test and documentation. The only thing I have to change is to allow setting quota only for paths athat exist. I will be adding more tests and more documentation. I will make it patch available to get early feedback.. </p></comment>
<comment id="12666008" author="mahadev" created="Wed, 21 Jan 2009 23:54:38 +0000"><p>fixed a bug that i found while debugging...</p></comment>
<comment id="12666675" author="mahadev" created="Fri, 23 Jan 2009 19:56:49 +0000"><p>Here is the latest patch. THis patch has the following #8211; </p> <ul class="alternate" type="square"> <li>quota can be set via the commadn line using setQuota -n|-b path</li> <li>quota can be deleted via the commandline using delQuota <span class="error">#91;-n|-b#93;</span> path</li> <li>setting quota for a node that does not exist will throw an exception</li> <li>setting quota for a node that has an ancestor or a descendant that has a quota cannot be set</li> <li>includes a simeple test case #8211; their are lot of corner cases. I am still trying to add more</li> <li>includes documentation (please review the documentation to see if you understand how to use quotas)</li> <li>their are a lot of corner cases #8212; feel free to test them and mention it on the jira #8211; i will tru and write a test case for that.</li> </ul> </comment>
<comment id="12666693" author="mahadev" created="Fri, 23 Jan 2009 20:42:14 +0000"><p>forogt to mention- </p> <ul class="alternate" type="square"> <li>to list the quota limit and usage use listquota path</li> </ul> </comment>
<comment id="12666937" author="fpj" created="Sat, 24 Jan 2009 14:39:24 +0000"><p>This might be a naive question, but what happens if I create a znode with x bytes, and I try to set a quota for "x' lt; x"? My guess is that the setQuota operation will fail. If this is correct, then the semantics is a little awkward because the service doesn't allow me to set a quota for a given znode that might be using too much space. </p> <p>Along the same lines, why not enabling to set quotas for nodes that do not exist? Because the create call enables a client to add data to a new node, it might be desirable to set a quota before creating the node. </p> <p>I was also wondering about performance. Do you have an idea if this quota scheme will affect our throughput performance?</p></comment>
<comment id="12667509" author="mahadev" created="Tue, 27 Jan 2009 00:08:39 +0000"><p>added a junit test to run with QUorum for quotas.</p></comment>
<comment id="12668169" author="mahadev" created="Wed, 28 Jan 2009 21:23:17 +0000"><p>Refactored the QuorumTest to create a quorumBase class like clientbase. Had to make some changes in the testcases to get it to working after the refactoring.</p></comment>
<comment id="12669128" author="phunt" created="Sat, 31 Jan 2009 02:21:26 +0000"><p>there are a number of issues I found, I have an updated patch in progress</p></comment>
<comment id="12669152" author="phunt" created="Sat, 31 Jan 2009 05:35:59 +0000"><p>addressed a few issues in the patch:</p> <p>1) updated to apply against latest svn with no rejects<br/> 2) fixed handling of parent quota checking - was failing due<br/> to / char being at end of path - now checked by client and server code<br/> 3) fixed forrest docs for site/index page<br/> 4) cleaned up some imports<br/> 5) some spelling issues<br/> 6) added eof newlines to some files that were missing<br/> 7) @Override on interface method caused compilation to fail on 1.5 - removed</p></comment>
<comment id="12669745" author="fpj" created="Mon, 2 Feb 2009 21:38:04 +0000"><p>+1. It looks good to me, it compiles without problems, and tests run fine.</p></comment>
<comment id="12669879" author="mahadev" created="Tue, 3 Feb 2009 05:26:51 +0000"><p>I just committed this.</p></comment>
<comment id="12669929" author="hudson" created="Tue, 3 Feb 2009 11:45:55 +0000"><p>Integrated in ZooKeeper-trunk #218 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/218/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/218/</a>)<br/> . Committing updated docs.<br/> . Committing updated docs.<br/> . Quotas in ZooKeeper. (mahadev)</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12402147">ZOOKEEPER-119</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12399198" name="ZOOKEEPER-231.patch" size="77861" author="phunt" created="Sat, 31 Jan 2009 05:35:59 +0000"/>
<attachment id="12398930" name="ZOOKEEPER-231.patch" size="75113" author="mahadev" created="Wed, 28 Jan 2009 21:23:17 +0000"/>
<attachment id="12398782" name="ZOOKEEPER-231.patch" size="70711" author="mahadev" created="Tue, 27 Jan 2009 00:08:38 +0000"/>
<attachment id="12398600" name="ZOOKEEPER-231.patch" size="57742" author="mahadev" created="Fri, 23 Jan 2009 19:56:49 +0000"/>
<attachment id="12398440" name="ZOOKEEPER-231.patch" size="55758" author="mahadev" created="Wed, 21 Jan 2009 23:54:38 +0000"/>
<attachment id="12398359" name="ZOOKEEPER-231.patch" size="55638" author="mahadev" created="Wed, 21 Jan 2009 01:26:52 +0000"/>
<attachment id="12398128" name="ZOOKEEPER-231.patch" size="46386" author="mahadev" created="Sat, 17 Jan 2009 00:57:02 +0000"/>
<attachment id="12397861" name="ZOOKEEPER-231.patch" size="45213" author="mahadev" created="Wed, 14 Jan 2009 06:19:18 +0000"/>
<attachment id="12397338" name="ZOOKEEPER-231.patch" size="33693" author="mahadev" created="Wed, 7 Jan 2009 22:40:22 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47961</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i063sv:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33547</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-79] Document jacob's leader election on the wiki recipes page</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-79</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>The following discussion occurred on the zookeeper-user list. We need to formalize this recipe and document on the wiki recipes page:</p> <p>---------------------from jacob ----------------<br/> Avinash</p> <p>The following protocol will help you fix the observed misbehavior. As Flavio points out, you cannot rely on the order of nodes in getChildren, you must use an intrinsic property of each node to determine who is the leader. The protocol devised by Runping Qi and described here will do that.</p> <p>First of all, when you create child nodes of the node that holds the leadership bids, you must create them with the EPHEMERAL and SEQUENCE flag. ZooKeeper guarantees to give you an ephemeral node named uniquely and with a sequence number larger by at least one than any previously created node in the sequence. You provide a prefix, like "L_" or your own choice, and ZooKeeper creates nodes named "L_23", "L_24", etc. The sequence number starts at 0 and increases monotonously.</p> <p>Once you've placed your leadership bid, you search backwards from the sequence number of <b>your</b> node to see if there are any preceding (in terms of the sequence number) nodes. When you find one, you place a watch on it and wait for it to disappear. When you get the watch notification, you search again, until you do not find a preceding node, then you know you're the leader. This protocol guarantees that there is at any time only one node that thinks it is the leader. But it does not disseminate information about who is the leader. If you want everyone to know who is the leader, you can have an additional Znode whose value is the name of the current leader (or some identifying information on how to contact the leader, etc.). Note that this cannot be done atomically, so by the time other nodes find out who the leader is, the leadership may already have passed on to a different node.</p> <p>Flavio</p> <p>Might it make sense to provide a standardized implementation of leader election in the library code in Java?</p> <p>--Jacob</p> <p>From: zookeeper-user-bounces@lists.sourceforge.net <span class="nobr"><a href="mailto:zookeeper-user-bounces@lists.sourceforge.net" class="external-link" target="_blank" rel="nofollow noopener">zookeeper-user-bounces@lists.sourceforge.net<sup><img class="rendericon" src="https://issues.apache.org/jira/images/icons/mail_small.gif" height="12" width="13" align="absmiddle" alt="" border="0"/></sup></a></span> On Behalf Of Flavio Junqueira<br/> Sent: Friday, July 11, 2008 1:02 AM<br/> To: zookeeper-user@lists.sourceforge.net<br/> Cc: zookeeper-user@hadoop.apache.org<br/> Subject: Re: <span class="error">#91;Zookeeper-user#93;</span> Leader election</p> <p>Hi Avinash, getChildren returns a list in lexicographic order, so if you are updating the children of the election node concurrently, then you may get a different first node with different clients. If you are using the sequence flag to create nodes, then you may consider stripping the prefix of the node name and using the sufix value to determine order.</p> <p>Hope it helps.</p> <p>-Flavio</p> <p>----- Original Message ----<br/> From: Avinash Lakshman lt;avinash.lakshman@gmail.comgt;<br/> To: zookeeper-user@lists.sourceforge.net<br/> Sent: Friday, July 11, 2008 7:20:06 AM<br/> Subject: <span class="error">#91;Zookeeper-user#93;</span> Leader election</p> <p>Hi</p> <p>I am trying to elect leader among 50 nodes. There is always one odd guy who seems to think that someone else distinct from what some other nodes see as leader. Could someone please tell me what is wrong with the following code for leader election:</p> <p>public void electLeader()<br/> { <br/> ZooKeeper zk = StorageService.instance().getZooKeeperHandle();<br/> String path = "/Leader";<br/> try<br/> {<br/> String createPath = path + "/L-"; <br/> LeaderElector.createLock_.lock();<br/> while( true )<br/> {<br/> /* Get all znodes under the Leader znode */<br/> Listlt;Stringgt; values = zk.getChildren(path, false);<br/> /*</p> <ul> <li>Get the first znode and if it is the</li> <li>pathCreated created above then the data</li> <li>in that znode is the leader's identity.<br/> */<br/> if ( leader_ == null ) { leader_ = new AtomicReferencelt;EndPointgt;( EndPoint.fromBytes( zk.getData(path + "/" + values.get(0), false, null) ) ); } <p> else</p> { leader_.set( EndPoint.fromBytes( zk.getData(path + "/" + values .get(0), false, null) ) ); /* Disseminate the state as to who the leader is. */ onLeaderElection(); } <p> logger_.debug("Elected leader is " + leader_ + " @ znode " + ( path + "/" + values.get(0) ) ); <br/> Collections.sort(values);<br/> /* We need only the last portion of this znode */<br/> String[] peices = pathCreated_.split("/");<br/> int index = Collections.binarySearch(values, peices<span class="error">#91;peices.length - 1#93;</span>); <br/> if ( index gt; 0 )</p> <div class="error"><span class="error">Unknown macro: { String pathToCheck = path + quot;/quot; + values.get(index - 1); Stat stat = zk.exists(pathToCheck, true); if ( stat != null ) { logger_.debug("Awaiting my turn ..."); condition_.await(); logger_.debug("Checking to see if leader is around ..."); } }</span> </div> <p> else</p> { break; } <p> }<br/> }<br/> catch ( InterruptedException ex )</p> { logger_.warn(LogUtil.throwableToString(ex)); }<br/> catch ( KeeperException ex )<br/> { logger_.warn(LogUtil.throwableToString(ex)); } <p> finally</p> { LeaderElector.createLock_.unlock(); } <p> }<br/> }</p></li> </ul> <p>Thanks<br/> Avinash</p> <p>-------------------------------------------------------------------------<br/> Sponsored by: SourceForge.net Community Choice Awards: VOTE NOW!<br/> Studies have shown that voting for your favorite open source project,<br/> along with a healthy diet, reduces your potential for chronic lameness<br/> and boredom. Vote Now at <a href="http://www.sourceforge.net/community/cca08" class="external-link" target="_blank" rel="nofollow noopener">http://www.sourceforge.net/community/cca08</a></p> <p>_______________________________________________<br/> Zookeeper-user mailing list<br/> Zookeeper-user@lists.sourceforge.net<br/> <a href="https://lists.sourceforge.net/lists/listinfo/zookeeper-user" class="external-link" target="_blank" rel="nofollow noopener">https://lists.sourceforge.net/lists/listinfo/zookeeper-user</a></p></description>
<environment/>
<key id="12400498">ZOOKEEPER-79</key>
<summary>Document jacob's leader election on the wiki recipes page</summary>
<type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21141avatarType=issuetype">New Feature</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="fpj">Flavio Paiva Junqueira</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Thu, 17 Jul 2008 16:43:35 +0000</created>
<updated>Sun, 26 Oct 2008 01:10:41 +0000</updated>
<resolved>Fri, 26 Sep 2008 17:41:14 +0000</resolved>
<version>3.0.0</version>
<fixVersion>3.0.0</fixVersion>
<component>documentation</component>
<due/>
<votes>0</votes>
<watches>0</watches>
<comments>
<comment id="12614431" author="jstrachan" created="Thu, 17 Jul 2008 16:47:24 +0000"><p>BTW <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-78" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/ZOOKEEPER-78</a> contains a patch of just that <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="12614435" author="phunt" created="Thu, 17 Jul 2008 16:59:46 +0000"><p>I know, your submission (78) is what kicked me in the but to add this. <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> Should have done it a while ago.</p> <p>I'm also initiating some discussion on the list (email) relative to 78. I also plan to create a Jira for user contrib recipe discussion/decision.. more on that soon.</p> <p>How closely does your implementation match what Jacob has documented? Are you interested to take on this JIRA as well #8211; ie you document the election protocol outlined by Jacob on the wiki?<br/> <a href="http://wiki.apache.org/hadoop/ZooKeeper/ZooKeeperRecipes" class="external-link" target="_blank" rel="nofollow noopener">http://wiki.apache.org/hadoop/ZooKeeper/ZooKeeperRecipes</a></p></comment>
<comment id="12614448" author="jstrachan" created="Thu, 17 Jul 2008 17:14:37 +0000"><p>Ah cool <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> Was just checking we were not about to do the same thing separate <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>.</p> <p>I've basically followed the same algorithm from the wiki recipe - and the same one described in the ZooKeeper tutorial...<br/> <a href="http://developer.yahoo.com/blogs/hadoop/2008/03/intro-to-zookeeper-video.html" class="external-link" target="_blank" rel="nofollow noopener">http://developer.yahoo.com/blogs/hadoop/2008/03/intro-to-zookeeper-video.html</a></p> <p>So AFAIK yes its the same</p> </comment>
<comment id="12614463" author="phunt" created="Thu, 17 Jul 2008 17:42:19 +0000"><p>part of the process outlined in <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-80" title="Document process for client recipe contributions" class="issue-link" data-issue-key="ZOOKEEPER-80">ZOOKEEPER-80</a></p></comment>
<comment id="12614556" author="fpj" created="Thu, 17 Jul 2008 22:35:09 +0000"><p>This idea of having clients watching on different nodes when waiting for application events is crucial to avoid the herd effect, and it has applications other than leader election. Ben and I, for example, used a similar idea to implement barriers. With a barrier, clients need to wait until all other clients are done with their part of a computation, and we can use the existence of a znode to express the fact that a particular client hasn't finished.</p> </comment>
<comment id="12614558" author="fpj" created="Thu, 17 Jul 2008 22:40:25 +0000"><p>And, I like Jacob's suggestion. As recipes are an important of ZooKeeper, we might as well have a library of primitives that can serve at least as examples for application developers.</p></comment>
<comment id="12615468" author="phunt" created="Mon, 21 Jul 2008 23:21:37 +0000"><p>Assigning to Flavio to document this recipe.</p></comment>
<comment id="12616257" author="fpj" created="Wed, 23 Jul 2008 20:55:13 +0000"><p>I have added a description to the wiki. Comments are definitely welcome.</p></comment>
<comment id="12634943" author="fpj" created="Fri, 26 Sep 2008 17:41:14 +0000"><p>Added the description to the documentation: <a href="http://hadoop.apache.org/zookeeper/docs/current/recipes.html" class="external-link" target="_blank" rel="nofollow noopener">http://hadoop.apache.org/zookeeper/docs/current/recipes.html</a></p></comment>
<comment id="12642703" author="phunt" created="Sun, 26 Oct 2008 01:10:41 +0000"><p>3.0.0 has been released, closing issues.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10032">
<name>Blocker</name>
<outwardlinks description="blocks">
<issuelink>
<issuekey id="12400486">ZOOKEEPER-78</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12400500">ZOOKEEPER-80</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments> </attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>48065</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0644v:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33601</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-63] Race condition in client close() operation</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-63</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>There is a race condition in the java close operation on ZooKeeper.java.</p> <p>Client is sending a disconnect request to the server. Server will close any open connections with the client when it receives this. If the client has not yet shutdown it's subthreads (event/send threads for example) these threads may consider the condition an error. We see this alot in the tests where the clients output error logs because they are unaware that a disconnection has been requested by the client.</p> <p>Ben mentioned: perhaps we just have to change state to closed (on client) before sending disconnect request.</p></description>
<environment/>
<key id="12399322">ZOOKEEPER-63</key>
<summary>Race condition in client close() operation</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Mon, 30 Jun 2008 22:08:36 +0000</created>
<updated>Sun, 26 Oct 2008 01:10:40 +0000</updated>
<resolved>Wed, 27 Aug 2008 23:39:25 +0000</resolved>
<version>3.0.0</version>
<fixVersion>3.0.0</fixVersion>
<component>java client</component>
<due/>
<votes>0</votes>
<watches>3</watches>
<comments>
<comment id="12616136" author="jstrachan" created="Wed, 23 Jul 2008 16:04:33 +0000"><p>I wonder if I've seen this too - I can reliably get a hung test when trying to close a client (though the server is still up at the point if the hang).</p> <p>I'm thinking the close() method should not wait() forever on the disconnect packet, just a closeTimeout length - say a few seconds. Afterall blocking and forcing a reconnect just to redeliver the disconnect packet seems a bit silly - when the server has to deal with clients which just have their sockets fail anyway <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p></comment>
<comment id="12616151" author="jstrachan" created="Wed, 23 Jul 2008 16:35:53 +0000"><p>BTW here's the hang I seem to be able to get quite easily using the test case WriteLockTest in the <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-78" title="added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation" class="issue-link" data-issue-key="ZOOKEEPER-78"><del>ZOOKEEPER-78</del></a> patch (you need to set workAroundClosingLastZNodeFails to false to make it hang)</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> [junit] <span class="code-quote">"main"</span> prio=5 tid=0x01001710 nid=0xb0801000 in <span class="code-object">Object</span>.wait() [0xb07ff000..0xb0800148] [junit] at java.lang.<span class="code-object">Object</span>.wait(Native Method) [junit] - waiting on lt;0x096105e0gt; (a org.apache.zookeeper.ClientCnxn$Packet) [junit] at java.lang.<span class="code-object">Object</span>.wait(<span class="code-object">Object</span>.java:474) [junit] at org.apache.zookeeper.ClientCnxn.submitRequest(ClientCnxn.java:822) [junit] - locked lt;0x096105e0gt; (a org.apache.zookeeper.ClientCnxn$Packet) [junit] at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:329) [junit] - locked lt;0x0bd54108gt; (a org.apache.zookeeper.ZooKeeper) [junit] at org.apache.zookeeper.protocols.ZooKeeperFacade.close(ZooKeeperFacade.java:99) [junit] at org.apache.zookeeper.protocols.WriteLockTest.tearDown(WriteLockTest.java:146) [junit] at junit.framework.TestCase.runBare(TestCase.java:140) [junit] at junit.framework.TestResult$1.protect(TestResult.java:110) [junit] at junit.framework.TestResult.runProtected(TestResult.java:128) [junit] at junit.framework.TestResult.run(TestResult.java:113) [junit] at junit.framework.TestCase.run(TestCase.java:124) [junit] at junit.framework.TestSuite.runTest(TestSuite.java:232) [junit] at junit.framework.TestSuite.run(TestSuite.java:227) [junit] at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:81) [junit] at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:36) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:421) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:912) [junit] at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:766) </pre> </div></div></comment>
<comment id="12616156" author="jstrachan" created="Wed, 23 Jul 2008 16:48:36 +0000"><p>about to attach a patch</p></comment>
<comment id="12616159" author="jstrachan" created="Wed, 23 Jul 2008 16:50:30 +0000"><p>This patch avoids the close() method blocking forever. It waits just once, up to the closeTimeout so if the socket is blocked or some other strangeness is going on, the calling thread will only wait up to the timeout (which defaults to 2 seconds).</p> <p>BTW this patch fixes the hang I was having in the test case to <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-78" title="added a high level protocol/feature - for easy Leader Election or exclusive Write Lock creation" class="issue-link" data-issue-key="ZOOKEEPER-78"><del>ZOOKEEPER-78</del></a></p></comment>
<comment id="12616219" author="phunt" created="Wed, 23 Jul 2008 18:48:43 +0000"><p>Correct me if I'm wrong but I don't believe this "fixes" anything, it merely ignores the problem. </p> <p>1) there is still the stated race condition<br/> 2) what is causing the underlying hang? this should not be happening and needs to be addressed directly, may even be related to item 1</p> <p>3) if the timeout is reached a warning should be issued in the log</p> <p>My current vote is -1 </p></comment>
<comment id="12616426" author="jstrachan" created="Thu, 24 Jul 2008 10:00:51 +0000"><p>So this patch does not attempt to fix the race condition problem, apologies if I gave that impression <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/></p> <p>What it does do though is act as a workaround so that if a client is not able to properly send a disconnect packet to the server for <b>any reason at all</b> such as</p> <ul> <li>a hung socket (which can be quite common)</li> <li>no servers available</li> <li>a race condition in the ZK client code of some kind (which we definitely have now)</li> </ul> <p>to not hang the client application forever - as its trying to close and shut down anyway <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. So its a side benefit that it acts as a band aid until someone fixes all the possible race conditions and potential socket hangs.</p> <p>Let me put it another way. Given that the client is closing; is it really correct to leave it potentially hanging around forever just because it cannot be sure if the disconnect packet was received and properly processed by the server? If the socket is dead before the call to close(), is it really correct to block until a connection can be re-established, just so it can be properly closed - when the code will effectively close the hung socket without sending a disconnect packet anyway <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> ? </p> <p>The server has to detect and timeout failed sessions; whether it receives an explicit disconnect packet or not (as a process could just hang). So do we really need to be super strict on the client side, forcing clients to block when trying to shut down if they can't do so cleanly within some time period?</p> <p>I totally agree that we should fix the race condition though <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>. I just wanted a work around to avoid my ZK test cases hanging forever due to the race condition <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/> </p></comment>
<comment id="12616643" author="phunt" created="Thu, 24 Jul 2008 20:34:23 +0000"><p>I agree with your comments, in addition the patch should address:</p> <p>1) there is still the stated race condition<br/> 2) what is causing the underlying hang? this should not be happening and needs to be addressed directly, may even be related to item 1</p> <p>3) if the timeout is reached a warning should be issued in the log</p></comment>
<comment id="12619041" author="breed" created="Fri, 1 Aug 2008 15:23:17 +0000"><p>-1 The submitRequest logic should not be duplicated. (It will cause maintenance problems futher down the line.) The original submitRequest should be changed to call submitRequest(h, request, response, watchRegistration, 0)</p></comment>
<comment id="12619050" author="breed" created="Fri, 1 Aug 2008 15:42:54 +0000"><p>I've fixed the patch to not duplicate the logic in submitRequest</p></comment>
<comment id="12619065" author="phunt" created="Fri, 1 Aug 2008 16:34:59 +0000"><p>-1 on the patch, still have the stated unresolved issues with this change:</p> <p>1) there is still the stated race condition<br/> 2) what is causing the underlying hang? this should not be happening and needs to be addressed directly, may even be related to item 1</p> <p>3) if the timeout is reached a warning should be issued in the log</p> <p>I suspect we should split this patch out to it's own jira and make it blocked by this, perhaps that would make it more clear.</p></comment>
<comment id="12619117" author="breed" created="Fri, 1 Aug 2008 20:29:35 +0000"><p>You are correct. The patch itself is good, but it does not fix the stated issue.</p></comment>
<comment id="12620386" author="phunt" created="Wed, 6 Aug 2008 19:12:06 +0000"><p>SessionTest testReuse test is intermittently failing seeming due to this issue. </p></comment>
<comment id="12620396" author="phunt" created="Wed, 6 Aug 2008 19:26:57 +0000"><p>Assigning to myself - I've cleaned up the tests as part of <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-111" title="significant cleanup of existing tests" class="issue-link" data-issue-key="ZOOKEEPER-111"><del>ZOOKEEPER-111</del></a> (this was blocking progress on this issue). I'll dig into this issue now.</p> <p>Looking at the code for zk close it seems to me that the issue is related to how the client send/event threads manage state. In particular these threads look "out/up" at the parent (zookeeper.state) rather than managing state internally and having operations for code (zk client) to make changes to that state. </p> <p>There is a race condition in the close where sendthread thinks that the connection is still open (not closed) and retries the server connection rather than shutting down.</p> <p>I will probably have to have significant changes to how send/event threads are managed - they need to manage their own internal state and take updates from zookeeper client.... we'll see.</p></comment>
<comment id="12625228" author="stuhood" created="Sun, 24 Aug 2008 22:58:30 +0000"><p>I believe this bug will eventually cause a client to run out of file handles if they connect and disconnect often enough, so it is a pretty serious issue.</p> <p>The attached modification to the ClientTest testcase causes it to fail by running out of file handles, and we are seeing this behaviour in our application.</p></comment>
<comment id="12625561" author="phunt" created="Tue, 26 Aug 2008 00:13:23 +0000"><p>Stu, thanks for the test! I'll update ClientTest to include this, pretty ugly.</p> <p>Just wondering, why are you frequently connecting/disconnecting a client? Could you establish a connection and keep it open for a long(er) period of time? Session establishment by a particular client is an expense that needs to be paid by all servers in a quorum, so minimizing will generally improve your overall zk cluster performance.</p></comment>
<comment id="12625619" author="stuhood" created="Tue, 26 Aug 2008 04:15:11 +0000"><p>We had a non-daemon thread that needed to have its own ephemerals, so we let it create its own connection/session. During one of our unit tests, the thread gets created a few hundred times, and we noticed the issue. In the real world, the work the thread will be performing will take a few order of magnitude longer, but we still would rather not leak any file handles =)</p> <p>We've modified our code to maintain a single connection for that thread: you're right about the session management. Thanks Patrick!</p></comment>
<comment id="12625877" author="phunt" created="Tue, 26 Aug 2008 21:29:20 +0000"><p>This patch:</p> <p>1) fixes the close race condition<br/> 2) fixes a resource issue where close operation was not causing the selector to be closed (leak)</p> <p>3) updated tests to look for resource leak testClientCleanup (thanks Stu)</p> <p>4) updated tests to better verify close operation successful</p> <p>The only real change is in ClientCnxn - setting a "closing" latch that keeps the send thread from re-establishing a broken connection #8211; but allows the client to continue communication with server (necessary to send the session disconnect message).</p></comment>
<comment id="12625880" author="phunt" created="Tue, 26 Aug 2008 21:32:19 +0000"><p>Stu, it turned out there were two problem here - the close race but also the client connection close was not closing the selector which was causing resources to leak. This patch fixes both.</p></comment>
<comment id="12625881" author="phunt" created="Tue, 26 Aug 2008 21:32:51 +0000"><p>Please review <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-63" title="Race condition in client close() operation" class="issue-link" data-issue-key="ZOOKEEPER-63"><del>ZOOKEEPER-63</del></a>.patch file and commit.</p></comment>
<comment id="12626359" author="breed" created="Wed, 27 Aug 2008 23:25:52 +0000"><p>+1 Great work Pat. I'll commit.</p></comment>
<comment id="12626367" author="breed" created="Wed, 27 Aug 2008 23:39:25 +0000"><p>Committed revision 689668. </p></comment>
<comment id="12626541" author="hudson" created="Thu, 28 Aug 2008 12:32:04 +0000"><p>Integrated in ZooKeeper-trunk #67 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/67/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/67/</a>)</p></comment>
<comment id="12631021" author="stuhood" created="Mon, 15 Sep 2008 13:33:20 +0000"><p>Great work Patrick! Thanks a bunch for looking into it.</p></comment>
<comment id="12631506" author="phunt" created="Tue, 16 Sep 2008 18:58:23 +0000"><p>Thank you for taking the time to report the issue. Regards.</p></comment>
<comment id="12642695" author="phunt" created="Sun, 26 Oct 2008 01:10:40 +0000"><p>3.0.0 has been released, closing issues.</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12403118">ZOOKEEPER-126</issuekey>
</issuelink>
</outwardlinks>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12400845">ZOOKEEPER-86</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12388953" name="ZOOKEEPER-63.patch" size="42242" author="phunt" created="Tue, 26 Aug 2008 21:29:20 +0000"/>
<attachment id="12388823" name="client-test-fail.diff" size="2242" author="stuhood" created="Sun, 24 Aug 2008 22:58:30 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>48076</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i061xj:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33244</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-766] forrest recipes docs don't mention the lock/queue recipe implementations available in the release</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-766</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Update the forrest recipes docs to point to the recipe implementations (where available).</p></description>
<environment/>
<key id="12463808">ZOOKEEPER-766</key>
<summary>forrest recipes docs don't mention the lock/queue recipe implementations available in the release</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Wed, 5 May 2010 19:04:27 +0000</created>
<updated>Wed, 23 Nov 2011 19:22:07 +0000</updated>
<resolved>Wed, 5 May 2010 22:51:25 +0000</resolved>
<fixVersion>3.3.1</fixVersion>
<fixVersion>3.4.0</fixVersion>
<component>documentation</component>
<component>recipes</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12864513" author="phunt" created="Wed, 5 May 2010 21:21:21 +0000"><p>update the forrest docs with ref to the queue/lock recipes implementation </p></comment>
<comment id="12864538" author="hadoopqa" created="Wed, 5 May 2010 21:48:29 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12443770/ZOOKEEPER-766.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12443770/ZOOKEEPER-766.patch</a><br/> against trunk revision 941473.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +0 tests included. The patch appears to be a documentation patch that doesn't require tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/84/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/84/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/84/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/84/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/84/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/84/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12864540" author="mahadev" created="Wed, 5 May 2010 21:49:25 +0000"><p>+1 looks good.</p></comment>
<comment id="12864571" author="mahadev" created="Wed, 5 May 2010 22:51:25 +0000"><p>I just committed this. thanks pat.</p></comment>
</comments>
<attachments>
<attachment id="12443770" name="ZOOKEEPER-766.patch" size="1206" author="phunt" created="Wed, 5 May 2010 21:21:21 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47613</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i05zp3:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32882</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-610] cleanup final fields, esp those used for locking</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-610</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>There are a number of places where we have non-final fields that could (should) be declared as final.</p></description>
<environment/>
<key id="12442422">ZOOKEEPER-610</key>
<summary>cleanup final fields, esp those used for locking</summary>
<type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21133avatarType=issuetype">Bug</type>
<priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="phunt">Patrick D. Hunt</assignee>
<reporter username="phunt">Patrick D. Hunt</reporter>
<labels> </labels>
<created>Fri, 4 Dec 2009 06:50:58 +0000</created>
<updated>Fri, 26 Mar 2010 17:25:08 +0000</updated>
<resolved>Fri, 11 Dec 2009 22:57:06 +0000</resolved>
<fixVersion>3.3.0</fixVersion>
<component>java client</component>
<component>server</component>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="12789457" author="henryr" created="Fri, 11 Dec 2009 18:59:04 +0000"><p>Cancelling the patch in order to kick hudson.</p></comment>
<comment id="12789458" author="henryr" created="Fri, 11 Dec 2009 19:00:00 +0000"><p>Resubmitting to push through hudsonqabot. </p></comment>
<comment id="12789487" author="hadoopqa" created="Fri, 11 Dec 2009 19:40:52 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12426874/ZOOKEEPER-610.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12426874/ZOOKEEPER-610.patch</a><br/> against trunk revision 888216.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/23/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/23/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/23/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/23/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/23/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/23/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12789578" author="henryr" created="Fri, 11 Dec 2009 22:20:32 +0000"><p>+1 from me, tests don't need to be included as there are no functional changes (compiler would pick up any problems). We are a bit inconsistent about when we initialise inline in the class, and when we initialise in the constructor, but that's not for this patch to fix. </p> <p>Will (attempt to) commit shortly. </p> </comment>
<comment id="12789593" author="henryr" created="Fri, 11 Dec 2009 22:57:06 +0000"><p>I just committed this (svn revision 889843). Thanks Patrick!</p></comment>
</comments>
<attachments>
<attachment id="12426874" name="ZOOKEEPER-610.patch" size="11888" author="phunt" created="Fri, 4 Dec 2009 06:52:09 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47696</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0608n:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>32970</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-555] Add stat information to GetChildrenResponse</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-555</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>GetChildren() is the only non-create/delete API which does not include the node stat information. I propose that the definition of GetChildren() should be:</p> <p> class GetChildrenResponse </p> { vectorlt;ustringgt; children; org.apache.zookeeper.data.Stat stat; } <p>There is a trivial fix to the server (FinalRequestProcessor.java): rsp = new GetChildrenResponse(children, stat);</p> <p>And something similar to the client library.</p></description>
<environment/>
<key id="12438192">ZOOKEEPER-555</key>
<summary>Add stat information to GetChildrenResponse</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="arnimarj">Árni Már Jónsson</assignee>
<reporter username="arnimarj">Árni Már Jónsson</reporter>
<labels> </labels>
<created>Thu, 15 Oct 2009 10:58:29 +0000</created>
<updated>Fri, 26 Mar 2010 17:25:02 +0000</updated>
<resolved>Fri, 30 Oct 2009 23:09:56 +0000</resolved>
<version>3.3.0</version>
<fixVersion>3.3.0</fixVersion>
<component>c client</component>
<component>contrib-bindings</component>
<component>java client</component>
<component>server</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12766085" author="arnimarj" created="Thu, 15 Oct 2009 15:09:15 +0000"><p>Patch for server part (simple), and C client library (complicated).</p> <p>Tested this using the Python bindings (I have a separate patch for those if there is interest).</p></comment>
<comment id="12766086" author="arnimarj" created="Thu, 15 Oct 2009 15:09:55 +0000"><p>getchildren stat patch</p></comment>
<comment id="12766087" author="hadoopqa" created="Thu, 15 Oct 2009 15:12:33 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12422239/getchildren_stat.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12422239/getchildren_stat.patch</a><br/> against trunk revision 824981.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> -1 tests included. The patch doesn't appear to include any new or modified tests.<br/> Please justify why no tests are needed for this patch.</p> <p> -1 patch. The patch command could not apply the patch.</p> <p>Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/27/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/27/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12766118" author="phunt" created="Thu, 15 Oct 2009 16:45:22 +0000"><p>I think this is a reasonable thing to add. Could you explain the use case where this is necessary?</p> <p>However there are some issues with the patch that need to be addressed:</p> <p>1) we require all changes in minor/fix releases to be b/w compatible and generally we try to do non-b/w compatible <br/> changes very infrequently. When you are running a highly available/reliable service you don't want to have to tell<br/> ppl "shutdown amp; upgrade all of your servers and clients when you upgrade to this version". The changes<br/> as currently implemented change both the API and wire protocol for existing functionality, this is not<br/> something we can accept.</p> <p>However, a simple workaround would be to add a new protocol (jute) type, and additional functions/callbacks<br/> to support getting children including the stat. Take a look at zoo_set2 in the c source, this is an example where<br/> simliar issue has happened before (although in that case jute had the stat, we just weren't providing it to<br/> the user as part of the api for zoo_set, so zoo_set2 was added). So *get_children2(... in the C case and<br/> probably just overload getChildren in java to have additional Stat param tacked onto the end.</p> <p>2) there need to be tests included in the patch that verify this functionality</p> <p>3) no tabs in the source, spaces only for indentation</p> <p><b>Note to reviewer</b>: ensure that the implementation ensures that the version fields in the stat correspond to<br/> the child list returned (ie they are the same version, this is important if ppl start using the cversion <br/> correlated with the child list itself)</p> </comment>
<comment id="12766127" author="arnimarj" created="Thu, 15 Oct 2009 17:13:32 +0000"><p>Hi,</p> <p>Thank you for the advice.</p> <p>The use case I'm interested involves leader election. I have a set servers, 1 master and multiple slaves. Each server publishes an ephemeral sequence child znode into a commonly known znode, of the form host:port. The first node (sorted on the sequence number) is considered to be the master. The servers only publish their existence, and are generally not aware of each other.</p> <p>Clients are responsible for notifying the servers if they are master, or if they are slaves, and if so who is the master. They do this when they first read the child list, and each time the child list changes. The notifications are idempotent, but if e.g. the list changes 2 times, and one client is able to notify the servers of both version before some other client sees them, the servers will have their status changes 4 times instead of 2. Worst case is N x #clients, for N changes, instead of N.</p> <p>I'd like to keep the cost of these as small as possible. One way is to include the child list version number with the notification, and have the server only accept it, if the version is larger than one seen before.</p> <p>I'll prepare a new patch which fits your requirements.</p></comment>
<comment id="12766154" author="phunt" created="Thu, 15 Oct 2009 18:19:24 +0000"><p>That sounds reasonable. </p> <p>Alternately, might you use the sequence numbers themselves to ascertain the "version"?</p> <p>I was thinking something like: you have a child list with seq numbers</p> <p>version = x,y where x is count, y is last seq number</p> <p>1 2 3 =gt; version is 3,3<br/> znode 2 drops<br/> 1 3 =gt; version is 2,3<br/> a new znode is added<br/> 1 3 4 =gt; version is 3,4</p> <p>so the server would see 3,3 2,3 3,3 2,3 in your example</p> <p>x,y where x can only decrease as time increases unless y increases. therefore the second 3,3 2,3 would be ignored (ie old version)</p></comment>
<comment id="12766336" author="arnimarj" created="Fri, 16 Oct 2009 00:00:09 +0000"><p>That's clever. The 2-tuple (y, -x) would give a total version order. Cool things those sequence nodes.</p> <p>I'll see tomorrow if I'm still motivated to finish the patch.</p> <p>Thanks.</p></comment>
<comment id="12766358" author="mahadev" created="Fri, 16 Oct 2009 00:55:56 +0000"><p>was just reading through this ... very clever solution pat! .... </p></comment>
<comment id="12766383" author="phunt" created="Fri, 16 Oct 2009 02:36:45 +0000"><p>I continue to be impressed by the power of just the few primitives/guarantees that we provide.</p> <p>That said,I consider my solution a bit of a hack (not necessarily bad, just not optimal), really <br/> Arni's solution is the correct one, we should provide the ability to get the stat as part of the <br/> get_children. However this (stat) won't be generally available till 3.3 even assuming Arni completes<br/> it (please!) and this other alternative might be a good enough solution in the mean time.</p></comment>
<comment id="12766614" author="mahadev" created="Fri, 16 Oct 2009 17:21:30 +0000"><p>agreed. I do think the Stat information with getChidren info provides more and useful information which can be used for total ordering of getChildren requests!</p></comment>
<comment id="12767786" author="arnimarj" created="Tue, 20 Oct 2009 12:10:21 +0000"><p>A patch which adds a second getChildren() function, which in addition to children, returns the parent stat.</p> <p>The main additions are these:</p> <ul> <li>There is a new C callback, strings_stat_completion_t</li> <li>There are 4 new C API calls: zoo_aget_children2(), zoo_awget_children(), zoo_get_children2(), zoo_wget_children2()</li> <li>The C client now supports the "ls2" command</li> <li>The C test client has a new test, testGetChildren2()</li> <li>There is a new Java API callback: Children2Callback()</li> <li>There are 2 new message: GetChildren2Request(), GetChildren2Response()</li> <li>There is a new structgt; StringsAndStat, which is the unit of data transfer in the C/Java API.</li> <li>There are 4 new Java API calls</li> <li>There are new tests, and test modifications to the Java unit-tests. The modifications are corresponding calls to getChildren2() alongside a getChildren() call, the return values of which are then compared. There is a new class under the AsyncOps tests, which is mostly equivalent to the getChildren()-calling class. And there is a new testgt; GetChildren2Test.java, which is very similar to the exists() test.</li> </ul> </comment>
<comment id="12767810" author="hadoopqa" created="Tue, 20 Oct 2009 13:45:05 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12422675/ZOOKEEPER-555.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12422675/ZOOKEEPER-555.patch</a><br/> against trunk revision 826787.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 29 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 183 release audit warnings (more than the trunk's current 179 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/28/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/28/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/28/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/28/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/28/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/28/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/28/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/28/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12767913" author="phunt" created="Tue, 20 Oct 2009 19:12:33 +0000"><p>Nice, thanks. I'll review and look at the hadoopqa failure and will attempt to address it myself.</p></comment>
<comment id="12768004" author="phunt" created="Tue, 20 Oct 2009 23:15:54 +0000"><p>This is Arni's patch with the following changes:</p> <p>1) resolved findbugs issues (on my system at least)<br/> 2) fixed the "ls2" command in the Java CLI<br/> 3) minor changes to the c/java api docs<br/> 4) changed ZooDefs.OpCode.getChildren1 back to getChildren as this is a public<br/> interface (granted it shouldn't be used by outside code but it is public, safer to keep<br/> it the same name)</p> <p>5) I also removed the StringsAndStat jute type. Not that it was bad,<br/> but it wasn't used in the c code and it's not consistent with the current Java api (getData for<br/> example). As part of this I removed getChildren2 and overloaded getChildren with Stat param.<br/> Better? Worse? Comments?</p> <p>ps. I verified that filling in the stat and the child list is done under a node lock (would be good for<br/> any other reviewer to also check my check).</p></comment>
<comment id="12768009" author="hadoopqa" created="Tue, 20 Oct 2009 23:34:32 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12422748/ZOOKEEPER-555.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12422748/ZOOKEEPER-555.patch</a><br/> against trunk revision 826787.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 28 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/29/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/29/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/29/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/29/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/29/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/29/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12768022" author="phunt" created="Wed, 21 Oct 2009 00:06:05 +0000"><p>Same patch as previous except that I removed an unnecessary stat copy from original getChildren in finalrequestprocessor</p></comment>
<comment id="12768043" author="hadoopqa" created="Wed, 21 Oct 2009 01:10:23 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12422753/ZOOKEEPER-555.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12422753/ZOOKEEPER-555.patch</a><br/> against trunk revision 826787.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 28 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 182 release audit warnings (more than the trunk's current 181 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/30/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/30/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/30/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/30/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/30/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/30/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/30/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/30/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12768066" author="hadoopqa" created="Wed, 21 Oct 2009 04:00:58 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12422753/ZOOKEEPER-555.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12422753/ZOOKEEPER-555.patch</a><br/> against trunk revision 826787.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 28 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 182 release audit warnings (more than the trunk's current 181 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/31/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/31/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/31/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/31/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/31/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/31/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/31/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/31/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12768300" author="phunt" created="Wed, 21 Oct 2009 16:05:32 +0000"><p>I believe the release audit failure is just due to adding a new public field to OpCode.</p> <p>Mahadev please review and commit this asap.</p></comment>
<comment id="12772145" author="mahadev" created="Fri, 30 Oct 2009 22:46:36 +0000"><p>+1 this looks good... </p></comment>
<comment id="12772159" author="mahadev" created="Fri, 30 Oct 2009 23:09:35 +0000"><p>+1 this looks good... </p></comment>
<comment id="12772160" author="mahadev" created="Fri, 30 Oct 2009 23:09:56 +0000"><p>I just commmited this. thanks arni and pat.</p></comment>
<comment id="12772232" author="hudson" created="Sat, 31 Oct 2009 10:57:14 +0000"><p>Integrated in ZooKeeper-trunk #514 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/514/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/514/</a>)<br/> . Add stat information to GetChildrenResponse. (Arni Jonson and phunt via mahadev)</p></comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12439618">ZOOKEEPER-567</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12422753" name="ZOOKEEPER-555.patch" size="71556" author="phunt" created="Wed, 21 Oct 2009 00:06:05 +0000"/>
<attachment id="12422748" name="ZOOKEEPER-555.patch" size="66269" author="phunt" created="Tue, 20 Oct 2009 23:15:53 +0000"/>
<attachment id="12422675" name="ZOOKEEPER-555.patch" size="67358" author="arnimarj" created="Tue, 20 Oct 2009 12:10:20 +0000"/>
<attachment id="12422239" name="getchildren_stat.patch" size="11479" author="arnimarj" created="Thu, 15 Oct 2009 15:09:55 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47734</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10342">
<![CDATA[ Incompatible change ]]>
</customfieldvalue>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0635b:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33441</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
<customfieldname>Release Note</customfieldname>
<customfieldvalues>
<customfieldvalue>This change is backward incompatible with server versions prior to 3.3.0 given that the wire protocol has changed. However at the client API level this is a b/w compatible change (added new api methods).<br/> <br/> Changes required to have Stat returned with get_children().</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-550] Java Queue Recipe</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-550</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>This patch adds a recipe for creating a distributed queue with ZooKeeper similar to the WriteLock recipe and some sequential tests. This early attempt follows the Java BlockingQueue interface, though it doesn't implement it since I don't think there's a good reason for it to be Iterable. </p></description>
<environment/>
<key id="12437764">ZOOKEEPER-550</key>
<summary>Java Queue Recipe</summary>
<type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21141avatarType=issuetype">New Feature</type>
<priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="stevechy">Steven Cheng</assignee>
<reporter username="stevechy">Steven Cheng</reporter>
<labels> </labels>
<created>Fri, 9 Oct 2009 22:59:26 +0000</created>
<updated>Fri, 26 Mar 2010 17:25:02 +0000</updated>
<resolved>Thu, 12 Nov 2009 21:27:12 +0000</resolved>
<version>3.2.1</version>
<fixVersion>3.3.0</fixVersion>
<component>java client</component>
<due/>
<votes>0</votes>
<watches>2</watches>
<comments>
<comment id="12764502" author="henryr" created="Sun, 11 Oct 2009 18:29:52 +0000"><p>Looks good!</p> <p>In offer(...) - would it be better to catch the NoNodeException and create the root then, rather than requiring an RPC every time?</p> </comment>
<comment id="12764764" author="stevechy" created="Mon, 12 Oct 2009 17:38:58 +0000"><p>Thanks, great idea, I'll change it.</p></comment>
<comment id="12765373" author="hadoopqa" created="Wed, 14 Oct 2009 03:11:01 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12421903/ZOOKEEPER-550.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12421903/ZOOKEEPER-550.patch</a><br/> against trunk revision 824981.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 18 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/24/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/24/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/24/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/24/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/24/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/24/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12765650" author="phunt" created="Wed, 14 Oct 2009 17:15:26 +0000"><p>Canceling the patch for now, but I'm glad to see additional recipes being contributed!</p> <p>A few suggestions:</p> <p>1) we don't allow tabs in the source, please use spaces for indentation (eclipse can help with this)<br/> 2) please add a README.txt similar to what's available in the lock recipe. this is important to have, otw potential<br/> users won't know the details on how the queue is being implemented (semantics). The lock recipe essentially just<br/> points to the std recipe docs for example, you probably can do similar if your impl is based on the recipe doc.<br/> 3) we really want to maintain parity btw java and c, any chance you could implement the c recipe as well?</p> <p>Great to see tests!</p> <p>Mahadev, it would be good if you could review this give that you implemented the lock recipe.</p></comment>
<comment id="12765820" author="stevechy" created="Wed, 14 Oct 2009 23:54:53 +0000"><p>Changed tabs to spaces and added a README.txt which is a copy from the lock version but without reference to a C implementation.</p> <p>I'll get started on a C version, the C lock recipe is a nice base to start from. Should the C version be submitted under this JIRA as well?</p></comment>
<comment id="12765848" author="phunt" created="Thu, 15 Oct 2009 01:24:33 +0000"><p>I would submit both under this jira (java/c). Doesn't mean someone couldn't provide feedback on the java now though.</p></comment>
<comment id="12766388" author="mahadev" created="Fri, 16 Oct 2009 03:11:47 +0000"><p>steven,<br/> good to see this. The patch looks good. A few comments/nits</p> <ul class="alternate" type="square"> <li>the code DistributedQueue does not handle ZCONNECTIONLOSS for zookeeper operations. I am working on <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-22" title="Automatic request retries on connect failover" class="issue-link" data-issue-key="ZOOKEEPER-22">ZOOKEEPER-22</a> to eliminate CONNECTIONLOSS, so your code should work fine after <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-22" title="Automatic request retries on connect failover" class="issue-link" data-issue-key="ZOOKEEPER-22">ZOOKEEPER-22</a> is resolved. It is a lot of work to handle CONNECTIONLOSS and since <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-22" title="Automatic request retries on connect failover" class="issue-link" data-issue-key="ZOOKEEPER-22">ZOOKEEPER-22</a> is anyway slated for 3.3, it would be a waste of effort. So, I would suggest that put something like this in the README - "This recipe will work correctly only if <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-22" title="Automatic request retries on connect failover" class="issue-link" data-issue-key="ZOOKEEPER-22">ZOOKEEPER-22</a> is resolved", in case <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-22" title="Automatic request retries on connect failover" class="issue-link" data-issue-key="ZOOKEEPER-22">ZOOKEEPER-22</a> is not resolved by 3.3.</li> </ul> <ul class="alternate" type="square"> <li>the documentation in element() is misleading</li> </ul> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"> <span class="code-comment">//When we get all the children, we <span class="code-keyword">try</span> each as a possible head to remove. </span> <span class="code-comment">//By the time we <span class="code-keyword">try</span> all of them, there may be <span class="code-keyword">new</span> ones added. </span> <span class="code-comment">//Need to retry unless we see 0 children. </span> <span class="code-comment">//Otherwise we may <span class="code-keyword">throw</span> the exception even in the <span class="code-keyword">case</span> that the queue is never empty. </span> </pre> </div></div> <ul class="alternate" type="square"> <li>for remove() and take() why is it deleting all the children nodes? I think I might be misunderstanding but it seems they are both deleting all the child nodes?</li> </ul> <ul class="alternate" type="square"> <li>also the API should provide for creation of elements via zookeeper acl's. The constructor could take an argument as ACL's, which could be used if passed else the UNSAFE_ALL is fine.</li> </ul> </comment>
<comment id="12766720" author="stevechy" created="Fri, 16 Oct 2009 21:38:57 +0000"><p>Thank you for the feedback Mahadev:</p> <p>1) Updated the README.txt</p> <p>2) I'll revise it to make it more clear.</p> <p>3) A return is done after the delete in remove() and take(), only the client that deletes the node can return the data, all others will get a NoNodeException. If different exception is thrown then it will exit the method. </p> <p>The loop can only continue if NoNodeExceptions are thrown, these are only thrown when another client has remove()d or take()n the node.</p> <p>4) The current patch takes in an acl, I mostly copied this handling from the lock recipe, is there more handling I should add?</p> <p>I would like to integrate more of the common pieces of the lock recipe into the queue but I think I will leave this to later.</p></comment>
<comment id="12766749" author="mahadev" created="Fri, 16 Oct 2009 22:35:17 +0000"><blockquote><p>1) Updated the README.txt</p></blockquote> <p>are you sure you update the README? I could not find the content on ZCONNECTIONLOSS</p> <blockquote><p>4) The current patch takes in an acl, I mostly copied this handling from the lock recipe, is there more handling I should add?</p></blockquote> <p>that should be fine!</p></comment>
<comment id="12767104" author="stevechy" created="Sun, 18 Oct 2009 18:32:04 +0000"><blockquote><p>1) Sorry, didn't create a patch for the README since it was a small change, it is included in this patch with the comment revision.</p></blockquote> </comment>
<comment id="12768333" author="phunt" created="Wed, 21 Oct 2009 17:11:34 +0000"><p>this ready? what's hadoopqabot say, submitting.</p></comment>
<comment id="12768362" author="hadoopqa" created="Wed, 21 Oct 2009 18:44:29 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12422495/ZOOKEEPER-550.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12422495/ZOOKEEPER-550.patch</a><br/> against trunk revision 826787.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 18 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/35/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/35/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/35/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/35/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/35/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/35/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12768418" author="stevechy" created="Wed, 21 Oct 2009 20:14:33 +0000"><p>Java version seems good, still missing the C version that I'm working on.</p></comment>
<comment id="12768471" author="mahadev" created="Wed, 21 Oct 2009 21:30:52 +0000"><p>the java patch looks good.... </p></comment>
<comment id="12769728" author="stevechy" created="Sat, 24 Oct 2009 22:49:02 +0000"><p>Java and C queue recipe. Tests included pass. Please review.</p> <p>The autotools config was copied from the lock recipe, I think I changed all the right strings and added the right files to SVN.</p> <p>This also includes a small fix for the zkServer.sh in the lock recipe.</p></comment>
<comment id="12770382" author="hadoopqa" created="Tue, 27 Oct 2009 05:04:55 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12423133/ZOOKEEPER-550.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12423133/ZOOKEEPER-550.patch</a><br/> against trunk revision 828216.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 60 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 185 release audit warnings (more than the trunk's current 179 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/39/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/39/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/39/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/39/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/39/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/39/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/39/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/39/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12771510" author="mahadev" created="Thu, 29 Oct 2009 17:43:58 +0000"><div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java">struct zkr_lock_mutex { zhandle_t *zh; <span class="code-object">char</span> *path; struct ACL_vector *acl; <span class="code-object">char</span> *id; void *cbdata; zkr_lock_completion completion; pthread_mutex_t pmutex; <span class="code-object">int</span> isOwner; <span class="code-object">char</span>* ownerid; }; typedef struct zkr_lock_mutex zkr_lock_mutex_t; </pre> </div></div> <p>I see this in the zoo_queue.h and am compilation problems. Is the above needed or a mistake?</p></comment>
<comment id="12771513" author="mahadev" created="Thu, 29 Oct 2009 17:46:08 +0000"><p>cancelling patch to address the above.</p></comment>
<comment id="12771765" author="stevechy" created="Fri, 30 Oct 2009 04:11:15 +0000"><p>Sorry, missed that, fixed in this patch.</p></comment>
<comment id="12774470" author="hadoopqa" created="Fri, 6 Nov 2009 22:54:36 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12423657/ZOOKEEPER-550.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12423657/ZOOKEEPER-550.patch</a><br/> against trunk revision 833559.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 60 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 192 release audit warnings (more than the trunk's current 186 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/52/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/52/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/52/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/52/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/52/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/52/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/52/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/52/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12775317" author="stevechy" created="Tue, 10 Nov 2009 06:21:40 +0000"><p>Added threaded test cases to C and Java recipes, uncovered a few bugs in the Java version where too many methods were synchronized, and orderedChildren() needs to throw the NoNodeException so that take() works properly.</p></comment>
<comment id="12775327" author="hadoopqa" created="Tue, 10 Nov 2009 07:14:22 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12424442/ZOOKEEPER-550.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12424442/ZOOKEEPER-550.patch</a><br/> against trunk revision 833938.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 64 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 192 release audit warnings (more than the trunk's current 186 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/58/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/58/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/58/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/58/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/58/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/58/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/58/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/58/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12776368" author="mahadev" created="Wed, 11 Nov 2009 08:24:01 +0000"><p>the patch looks good but looks like both queue and lock recipe are currently broken with respect to running cpp unit tests for them. <br/> Steve, did you manage to run the c tests for anyone of them without installing zookeeper library?</p></comment>
<comment id="12776370" author="mahadev" created="Wed, 11 Nov 2009 08:24:49 +0000"><p>by "installing zookeeper library" I meant doing a make install and installing it in standard path of your system.</p></comment>
<comment id="12776770" author="stevechy" created="Thu, 12 Nov 2009 00:46:48 +0000"><p>Haven't done a make install yet with zookeeper so that part should be ok, I'll try applying the patch to a fresh checkout Mahadev.</p></comment>
<comment id="12776854" author="stevechy" created="Thu, 12 Nov 2009 05:37:47 +0000"><p>Just tried with a fresh checkout. The recipes depend on the libraries being in src/c which only happens if you run make in that directory. Also src/recipes/lock/src/c/tests/zkServer.sh does not have execute permissions on a fresh checkout, src/recipes/queue/src/c/tests/zkServer.sh also won't have permission because it's in a patch.</p> <p>What would be a good solution to the library issue? I noticed that the c client test builds to build/test/test-cppunit, the recipe tests could get the library from there instead of src/c?</p></comment>
<comment id="12777212" author="mahadev" created="Thu, 12 Nov 2009 21:23:05 +0000"><p>Minor changes to README.txt in src/recipes to explain how to run c tests in src/recipes/$recipename/src/c. I think just documenting it is fine. Ill commit this patch to the trunk.</p></comment>
<comment id="12777214" author="mahadev" created="Thu, 12 Nov 2009 21:27:12 +0000"><p>I just committed this. thanks steven. I changed the permissions on the scripts to be svn executable, so it should be fine now.</p></comment>
<comment id="12777231" author="phunt" created="Thu, 12 Nov 2009 21:57:58 +0000"><p>Good job. Great to see another recipe implemented as part of the release artifact, this will make our user's lives easier!</p></comment>
<comment id="12777878" author="hudson" created="Sat, 14 Nov 2009 10:55:34 +0000"><p>Integrated in ZooKeeper-trunk #536 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/536/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/536/</a>)</p> </comment>
</comments>
<attachments>
<attachment id="12424774" name="ZOOKEEPER-550.patch" size="172348" author="mahadev" created="Thu, 12 Nov 2009 21:23:05 +0000"/>
<attachment id="12424442" name="ZOOKEEPER-550.patch" size="171786" author="stevechy" created="Tue, 10 Nov 2009 06:21:40 +0000"/>
<attachment id="12423657" name="ZOOKEEPER-550.patch" size="162317" author="stevechy" created="Fri, 30 Oct 2009 04:11:15 +0000"/>
<attachment id="12423133" name="ZOOKEEPER-550.patch" size="162593" author="stevechy" created="Sat, 24 Oct 2009 22:49:01 +0000"/>
<attachment id="12422495" name="ZOOKEEPER-550.patch" size="24748" author="stevechy" created="Sun, 18 Oct 2009 18:32:04 +0000"/>
<attachment id="12422164" name="ZOOKEEPER-550.patch" size="24266" author="stevechy" created="Wed, 14 Oct 2009 23:54:53 +0000"/>
<attachment id="12421903" name="ZOOKEEPER-550.patch" size="20731" author="stevechy" created="Mon, 12 Oct 2009 21:00:43 +0000"/>
<attachment id="12421786" name="ZOOKEEPER-550.patch" size="20716" author="stevechy" created="Fri, 9 Oct 2009 23:00:22 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47737</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0635j:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33442</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-543] Tests for ZooKeeper examples</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-543</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>Initial attempt to create ZooKeeper tests based on the example code on the website. <br/> Current plan is to test features used in examples using ZooKeeper calls directly. Another approach would be to make more usable abstractions such as those in src/recipes and test those.</p> </description>
<environment/>
<key id="12437435">ZOOKEEPER-543</key>
<summary>Tests for ZooKeeper examples</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="stevechy">Steven Cheng</assignee>
<reporter username="stevechy">Steven Cheng</reporter>
<labels> </labels>
<created>Tue, 6 Oct 2009 20:32:12 +0000</created>
<updated>Fri, 26 Mar 2010 17:25:02 +0000</updated>
<resolved>Tue, 9 Mar 2010 02:09:39 +0000</resolved>
<version>3.3.0</version>
<fixVersion>3.3.0</fixVersion>
<component>tests</component>
<due/>
<votes>0</votes>
<watches>1</watches>
<comments>
<comment id="12762807" author="stevechy" created="Tue, 6 Oct 2009 22:35:48 +0000"><p>There's a bug in the node name processing, it tries to remove the full path from the string before parsing the id. The test still passes because of the 0 padding on the names. I'll fix this.</p></comment>
<comment id="12800976" author="hadoopqa" created="Fri, 15 Jan 2010 22:48:45 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12421475/ZOOKEEPER-543.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12421475/ZOOKEEPER-543.patch</a><br/> against trunk revision 899383.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> -1 release audit. The applied patch generated 208 release audit warnings (more than the trunk's current 207 warnings).</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/104/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/104/testReport/</a><br/> Release audit warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/104/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/104/artifact/trunk/patchprocess/releaseAuditDiffWarnings.txt</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/104/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/104/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/104/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/104/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12803110" author="mahadev" created="Thu, 21 Jan 2010 01:37:40 +0000"><p>steven,<br/> i am a little confused here. Is this the code that is testing something? Looks like you have a test for producer consumer classes? Dont we need to create an api (maybe copy from the examples in the docs) first and then test them? This could very well go into src/java/examples but am not sure what your code is trying to test. Can you be a little more specific? </p> </comment>
<comment id="12803111" author="mahadev" created="Thu, 21 Jan 2010 01:38:20 +0000"><p>waiting for steven to update the jira.</p></comment>
<comment id="12803574" author="stevechy" created="Fri, 22 Jan 2010 01:55:28 +0000"><p>Hi Mahadev, my original idea was to have small tests that tested the basic features needed to implement the examples without bringing in a full API.</p> <p>testQueue tests that creating nodes works properly, in a similar way that a queue would use them. </p> <p>testLock tests that create and delete work properly in a way that a lock would use them.</p> <p>At this point I think that the queue and lock recipes do a good job of covering these cases, so these tests are probably not needed. </p></comment>
<comment id="12803793" author="phunt" created="Fri, 22 Jan 2010 18:05:31 +0000"><p>I don't mind adding this, but aren't we testing this already in our tests? If not, wouldn't it be better to add these to existing/new test classes<br/> that are more geared to the specific functionality being tested, rather than to some example which may change over time? Or is the<br/> idea to point ppl to this "exampletest" class and therefore use it as a teaching aid, rather than just a test? Also, putting into say clienttest<br/> class would enable testing under both standalone amp; quorum (for example). I guess my point is, why specifically "exampletest", rather than<br/> just a test? Perhaps I'm just confused by the naming, again, I think the idea of adding more tests to cover things we don't already test<br/> is a good idea so don't want to dis-wade you in general.</p></comment>
<comment id="12805367" author="stevechy" created="Wed, 27 Jan 2010 05:57:16 +0000"><p>I took a look at ClientTest and testMultipleWatcherObjs seems to cover most of what the lock test does. There is a fair bit of overlap with testSequentialNodeNames and the queue test, but the queue test tests the data.</p> <p>I moved the queue test into ClientTest and changed it to make it more similar to testSequentialNodeNames in this patch.</p></comment>
<comment id="12805616" author="phunt" created="Wed, 27 Jan 2010 19:02:30 +0000"><p>Steven that's great. Do you want to take a shot at adding similar verification to the c tests as well? Or<br/> should we just consider this one as is? (meaning java only)</p></comment>
<comment id="12805743" author="stevechy" created="Thu, 28 Jan 2010 01:50:55 +0000"><p>Can do, shouldn't take too long I think.</p></comment>
<comment id="12806774" author="stevechy" created="Sun, 31 Jan 2010 02:11:18 +0000"><p>C and Java version of testSequentialNodeData.</p> <p>I found that almost all the tests in TestClient.cc need THREADED and this test also would not work without THREADED even though there's no reason it shouldn't. </p> <p>Is there a reason for this?</p></comment>
<comment id="12835971" author="phunt" created="Fri, 19 Feb 2010 21:48:22 +0000"><p>Steven, only reason I can think of is that the mocks are not setup to handle sequential?</p></comment>
<comment id="12836076" author="hadoopqa" created="Sat, 20 Feb 2010 01:09:35 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12431894/ZOOKEEPER-543.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12431894/ZOOKEEPER-543.patch</a><br/> against trunk revision 912052.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 8 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/118/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/118/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/118/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/118/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/118/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/118/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12842190" author="hadoopqa" created="Sat, 6 Mar 2010 05:29:01 +0000"><p>-1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12431894/ZOOKEEPER-543.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12431894/ZOOKEEPER-543.patch</a><br/> against trunk revision 919640.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 8 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> -1 core tests. The patch failed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/133/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/133/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/133/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/133/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/133/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/133/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12842212" author="stevechy" created="Sat, 6 Mar 2010 07:12:38 +0000"><p>Extra import was left in there for some reason.</p></comment>
<comment id="12842222" author="hadoopqa" created="Sat, 6 Mar 2010 08:36:21 +0000"><p>+1 overall. Here are the results of testing the latest attachment <br/> <a href="http://issues.apache.org/jira/secure/attachment/12438085/ZOOKEEPER-543.patch" class="external-link" rel="nofollow">http://issues.apache.org/jira/secure/attachment/12438085/ZOOKEEPER-543.patch</a><br/> against trunk revision 919706.</p> <p> +1 @author. The patch does not contain any @author tags.</p> <p> +1 tests included. The patch appears to include 3 new or modified tests.</p> <p> +1 javadoc. The javadoc tool did not generate any warning messages.</p> <p> +1 javac. The applied patch does not increase the total number of javac compiler warnings.</p> <p> +1 findbugs. The patch does not introduce any new Findbugs warnings.</p> <p> +1 release audit. The applied patch does not increase the total number of release audit warnings.</p> <p> +1 core tests. The patch passed core unit tests.</p> <p> +1 contrib tests. The patch passed contrib unit tests.</p> <p>Test results: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/79/testReport/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/79/testReport/</a><br/> Findbugs warnings: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/79/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/79/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html</a><br/> Console output: <a href="http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/79/console" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/79/console</a></p> <p>This message is automatically generated.</p></comment>
<comment id="12842878" author="mahadev" created="Tue, 9 Mar 2010 02:06:27 +0000"><p>+1 a nice to have test case!</p> </comment>
<comment id="12842880" author="mahadev" created="Tue, 9 Mar 2010 02:09:39 +0000"><p>I just committed this. thanks steven!</p></comment>
</comments>
<attachments>
<attachment id="12438085" name="ZOOKEEPER-543.patch" size="2345" author="stevechy" created="Sat, 6 Mar 2010 07:11:40 +0000"/>
<attachment id="12431894" name="ZOOKEEPER-543.patch" size="5467" author="stevechy" created="Sun, 31 Jan 2010 02:11:18 +0000"/>
<attachment id="12431526" name="ZOOKEEPER-543.patch" size="2641" author="stevechy" created="Wed, 27 Jan 2010 05:57:15 +0000"/>
<attachment id="12421475" name="ZOOKEEPER-543.patch" size="5104" author="stevechy" created="Wed, 7 Oct 2009 00:08:18 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>47741</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i0636f:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33446</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
<item>
<title>[ZOOKEEPER-44] DataTree does not use natural sort for getChildren</title>
<link>https://issues.apache.org/jira/browse/ZOOKEEPER-44</link>
<project id="12310801" key="ZOOKEEPER">ZooKeeper</project>
<description><p>DataTree.getChildren() performs Collection.sort() on the list of children before returning it, but Java's default comparator for Strings will sort 'lock-20' before 'lock-3' for instance. </p></description>
<environment/>
<key id="12398018">ZOOKEEPER-44</key>
<summary>DataTree does not use natural sort for getChildren</summary>
<type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmallavatarId=21140avatarType=issuetype">Improvement</type>
<priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
<status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
<statusCategory id="3" key="done" colorName="green"/>
<resolution id="1">Fixed</resolution>
<assignee username="jghoman">Jakob Homan</assignee>
<reporter username="stuhood">Stu Hood</reporter>
<labels> </labels>
<created>Wed, 11 Jun 2008 04:17:46 +0000</created>
<updated>Sun, 26 Oct 2008 01:10:38 +0000</updated>
<resolved>Sat, 2 Aug 2008 00:09:49 +0000</resolved>
<version>3.0.0</version>
<fixVersion>3.0.0</fixVersion>
<component>server</component>
<due/>
<votes>1</votes>
<watches>2</watches>
<comments>
<comment id="12604235" author="breed" created="Wed, 11 Jun 2008 14:36:26 +0000"><p>Actually we have been meaning to remove the sort. It causes an unnecessary burden on the server. If we really want things sorted, we should do it in the client library. The question is: do we really want things sorted? Especially in Java it is easy enough for the user to sort the list themself if needed.</p></comment>
<comment id="12604265" author="phunt" created="Wed, 11 Jun 2008 16:22:41 +0000"><p>My personal preference would be to leave it unsorted and let the client sort if needed. That way you only pay the perf penalty if you need the children sorted. Either way we should address this #8211; remove the unnecessary sort and make sure to document that the results are unsorted.</p></comment>
<comment id="12604288" author="stuhood" created="Wed, 11 Jun 2008 17:53:46 +0000"><p>I'd be fine with the sort being removed from getChildren, but fixing the natural sorting problem is still important. It causes undue pain for the client to have to perform an integer-aware sort to get the proper ordering for locks.</p> <p>My workaround was to pad the sequence value before appending it to the path in create:</p> <div class="code panel" style="border-width: 1px;"><div class="codeContent panelContent"> <pre class="code-java"><span class="code-keyword">if</span> ((createRequest.getFlags() amp; CreateFlags.SEQUENCE) != 0) { path = path + <span class="code-object">String</span>.format(<span class="code-quote">"%1$010d"</span>, parentCVersion); } </pre> </div></div> </comment>
<comment id="12604290" author="breed" created="Wed, 11 Jun 2008 18:02:16 +0000"><p>+1 Excellent suggestion!</p></comment>
<comment id="12604292" author="phunt" created="Wed, 11 Jun 2008 18:06:09 +0000"><p>+1, sounds like a great addition to a FAQ.</p> <p>Assigning to Ben to remove the sort and document appropriately.</p></comment>
<comment id="12619159" author="jghoman" created="Fri, 1 Aug 2008 22:55:03 +0000"><p>I've gone ahead and implemented the patch as discussed, which does the following:</p> <ul> <li>Implements the padding for sequential file names, padding ten zeroes to the name (enough to handle as many digits as can be generated by a 32-bit int). This allows the names to be sorted by natural order.</li> <li>Removed the server sorting the list of children, leaving it up to the client to do so if it wishes. This could give a very slight performance bump, particularly when dealing with directories with a large number of files.</li> <li>Updated the Javadoc to reflect this change in both versions of the getChildren method.</li> <li>Adds a unit test that checks that the sequential file names are being created correctly.</li> </ul> <p>I thought about adding a GetChildrenSorted or such method, but since it's really easy for the client to sort the list once returned (java.Collections.List.Sort(children)), it seems like it would be more work to add and support these methods.</p> <p>Hope this is useful.</p></comment>
<comment id="12619160" author="jghoman" created="Fri, 1 Aug 2008 22:55:35 +0000"><p>Implements the changes discussed in the Jira.</p></comment>
<comment id="12619163" author="breed" created="Fri, 1 Aug 2008 23:09:16 +0000"><p>+1 Fantastic job Jakob! This looks great. Test cases and everything.</p></comment>
<comment id="12619164" author="mahadev" created="Fri, 1 Aug 2008 23:18:24 +0000"><p>+1 .. thanks jakob .... </p> <p>nit:</p> <p>is %1$ redundant? i had to look up the formatter in java for this <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/smile.png" height="16" width="16" align="absmiddle" alt="" border="0"/>... i think %010d should be fine?</p></comment>
<comment id="12619165" author="jghoman" created="Fri, 1 Aug 2008 23:28:09 +0000"><p>Unnecessary placeholder removed.</p></comment>
<comment id="12619169" author="mahadev" created="Sat, 2 Aug 2008 00:09:49 +0000"><p>I just committed this. THanks Jakob. </p></comment>
<comment id="12619290" author="stuhood" created="Sat, 2 Aug 2008 23:04:49 +0000"><p>This is probably a separate issue, but is anyone worried by the fact that after ~2 billion creates, the sequence number will wrap around and break various algorithms?</p></comment>
<comment id="12619293" author="mahadev" created="Sun, 3 Aug 2008 00:31:42 +0000"><p>2 billion creates seem to be a lot fo creates. also since we are working on an upgrade feature on zookeeper #8212; we can upgrade the version to be long sometime later ... #8211; which would make the wrap around 4* 10^18.</p></comment>
<comment id="12619400" author="hudson" created="Mon, 4 Aug 2008 01:45:20 +0000"><p>Integrated in ZooKeeper-trunk #42 (See <a href="http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/42/" class="external-link" target="_blank" rel="nofollow noopener">http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/42/</a>)</p></comment>
<comment id="12642685" author="phunt" created="Sun, 26 Oct 2008 01:10:38 +0000"><p>3.0.0 has been released, closing issues.</p></comment>
</comments>
<attachments>
<attachment id="12387376" name="seqfile.diff" size="5549" author="jghoman" created="Fri, 1 Aug 2008 22:55:35 +0000"/>
<attachment id="12387378" name="seqfile2.diff" size="5547" author="jghoman" created="Fri, 1 Aug 2008 23:28:09 +0000"/>
</attachments>
<subtasks> </subtasks>
<customfields>
<customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
<customfieldname>Development</customfieldname>
<customfieldvalues> </customfieldvalues>
</customfield>
<customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
<customfieldname>Enable Automatic Patch Review</customfieldname>
<customfieldvalues>
<customfieldvalue>
<![CDATA[ false ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>48090</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
<customfieldname>Hadoop Flags</customfieldname>
<customfieldvalues>
<customfieldvalue key="10343">
<![CDATA[ Reviewed ]]>
</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i06487:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>33616</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
</channel>
</rss>