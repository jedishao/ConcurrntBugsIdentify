3001
CastException when doing healthcheck with spring
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
DOWN because of the exception
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3002
Get with byte[] Key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is there an interface I can use to do get, set and del operations with byte[] keys?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3004
RedissonFairLock blocks indefinitely after threadWaitTimeExpiry
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Threads that are alive and waiting for a RedissionFairLock will always get ownership of the lock it tried to acquire.
Actual behavior
When a RedissonFairLock is locked by long-running Thread T1, and other Threads (T2, ..., Tn) attempts to access the lock and waits for longer than 5 minutes (the default threadWaitTime), even when T1 releases the lock all waiting Threads T2 to Tn hang indefinitely.
This is due to future threads removing "expired" threads from the Queue, when in reality these threads are still alive and waiting for the lock. These "expired" threads never receive the PUBLISH message on unlock.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3005
When performing failover, RedisConnectionException is thrown when accessing the cache after failover.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Regarding #2932, when we confirmed the effect using 3.12.3, the phenomenon was not resolved.
After the failover is complete, access to the new master keeps failing.
Could you please provide the conditions and details of the bugs that have been corrected?
I don't know if it is related to this case,
I'm currently using it in a non-cluster mode configuration where Redisson's addNodeAddress specifies the primary endpoint of the node group.
According to the issue below, you are asked to specify the endpoint of each node.
Is it related to this phenomenon?
As a test, I fixed it so that the endpoint of each node was specified, and the phenomenon that it continued to fail after failover did not occur.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3006
Request retry very quickly and slows down response handle
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
one GET command results in one tcp request and done
Actual behavior
one GET command results in tens of tcp request
Steps to reproduce or test case
very hard to reproduce, don't know what caused this
tcpdump below is from a container without error log now(used to have 2 days ago), the application execute scheduled task every 30 seconds so more easy to analyze
in some application, this causes to much request and finally command timeout:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3007
Correct way for scan via reddison client
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
I wan't to use redis scan operation via redisson (like in Jedis).
I'm checked next solution.
For example, i have 3 objects inside Redis and want to retrieve only 2
But instead of retriving 2 objects, getKeysByPattern("some-pattern", 2) returns all keys from redis.
This behaviour is correct?
Anyway, i'am trying to use SCAN operator via Lua scripts.
And this aproach is working one.
But why keys.getKeysByPattern(pattern, count) returns all keys instead of count?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3008
Does redisson work with tomcat singlesignon valve
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
If we have configured the org.apache.catalina.authenticator.SingleSignOn valve in our application, does Redisson push the ssoId also to Redis? Do we have to make any other configuration changes other than what's mentioned in redisson-tomcat Readme for this to work?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3009
Running into RedisTimeoutException when using Redisson, ElastiCache in AWS lambda when high traffic comes in
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi
We are using Redisson to connect to ElastiCache to get RBucket in the AWS lambda. The trigger of the AWS lambda is a SQS(with batch size 10). The logic for this lambda is to get the RBucket for each message from SQS.(Redisson.get(BUCKET_KEY))
When traffic is low, no exception happens(TPS is around 50), but when traffic becomes higher(Max TPS is around 900), the invocation and concerencent number for lambda function is getting higher, and then some RedisTimeoutExceptions are thrown by Redisson. Therefore, the backlog of the SQS is increasing.
Here is the detailed Exception log when executing Redisson.get():
Here is the current Redisson Config, the other
Here are some question I want to get cleared:
I'm wondering what the detailed root cause for org.redisson.client.RedisTimeoutException: Command execution timeout for . Is that means the Redisson configtimout is shorter than expected? But I think purely increasing the timeout seems cannot scale up the capacity to handle the high TPS.
To resolve this issue, how can I modify the Redisson Config to handle such a high traffic? I followed the Redisson FAQ to scale up the config, but not sure how to come up with a suitable config.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3010
cannot be cast to org.redisson.api.RMap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
An error occurred when setting the expiration time ：
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3011
How to get 'last access time of an object'?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I see that there is the 'touch' operation on the RObject class but I don't see any method to retrieve the value for last access time.
Maybe is missing the command 'OBJECT IDLETIME'
If yes I can try to add that command.
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3012
Tomcat session manager requires serialization or is this a bug?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After successfully setting up Redisson as Tomcat session manager I get the following exception when trying to access the application:
I also received another exception pointing to jboss-Marschalling also in regards to NotSerializableException.
As far as I understood the documentation, it would not be required to fix application code to move tomcat sessions to Redis via redisson. Am I wrong with my assumption?
Trying to solve this issue with different codecs did not work either.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3013
Store a Map<String,SomeObject> in Redis DB from one process and access from another with Redis DB
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Is it possible to find an example where a Redisson Map<String,SomeObject> is serialized to the Redis DB by a process P1. This Map is then accessed in another process  P2, also P2 should get notified about the updates made to this map by Process P1.
Any pointers to get started with this?
I see MapWriter example on Wiki. Does that example assume Oracle DB beneath?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3014
Redis LiveObject Bulk Initialization
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi There,
I am using Redis library in my application.
Now I am planning to use RLiveObjectService  for search page (instead of DB will read from Redis Cache).
I do see that there are methods available  in RLiveObjectService for find , get , detele and instert to update Cache
I am looking for method like mergeAll or persistAll using which I can initialize cache during application startup.
Is there any way to achieve this.?
Thanks in Advance.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3015
Deletion RMap key by pattern
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi guys,
I stumble upon a weird issue for my project. I am trying to delete RMap key by a pattern. I follow the documentation and it seems I could do that by getting the keyset and passing the pattern, and delete the found keys via the fastRemove method.
However It does not work for me.
I am using redisson library version 3.12.3 for Java, and the cache is deployed through elastic cache AWS.
The setup is like the following:
the RMap name is jsonCollectionV3 and the item key inside the map I tried to delete is 100011176limit5offset2 the pattern I am using is 100011176*
Please find below the code I am trying to use to fetch the key pattern from the map and using the fastRemove to delete the key retrieved.
However as per log below and entry in Redis desktop manager, the key is not removed from the map, the size still one.
If you guys can help me point out where did I do wrong, that will be great! thanks a lot. I have tried changing the key format for storing the records and it is not working as well.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3016
Java application is closing in 1 hour even all redisson threads are in waiting state.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
In one of my java application we are connected with Redis Server running on low compute machine (2 GB Ram, 1 Core) just for shared memory purpose.
Configuration of Redisson is as below
At Redis server side, we also changed tcp-keepalive and timeout as 0 value.
But i am not getting any exception and application is closing after 1 hour. I just only received the update in shutdownhook and thread dump is as below.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3017
Cannot cast object 'UNKNOWN-UNKNOWN' with class 'eu.bitwalker.useragentutils.UserAgent' to class 'eu.bitwalker.useragentutils.UserAgent'
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm trying to setup redisson for tomcat 8, and i'm getting this exception at the start:
I think it may be related to incorrect dependencies? In order to get the tomcat to start withouth errors, i had to manually add some libraries to the tomcat instance because redisson was failing with multiple exceptions related to classNotFound, these are the dependecies i had to add:
This is the redisson.conf i'm using
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3018
a question about lock acquisition
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a question about lock acquisition.
assume two services A and B acquire locks to access shared resources.
A has acquired the lock.
When B tries to acquire the lock. it will find the lock is held by other service(A).
So B will subscribe to the channel, for acquiring the lock.
before B subscribe to the channel,A release the lock and publish some messages.
What happens next?
B is waiting for the messages that is published by the lock holder(A), but A has published the messages and released the lock.
How did you solve it?
I'm sorry I didn't understand the source code,Thank you very much for your work.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3019
RedisConnectionException while retrieving from redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Faced a problem while using redisson client after random period of time. the generated stack trace is:
the problem that the client does not recover until the application is restarted while another instances using that client is working normally.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3020
A question for method poll(int limit) in RedissonBoundedBlockingQueue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As far as I know, when I put a value to the queue,it will check the size of queue,the value is maintained at the key named redisson_bqs:... ,if the redisson_bqs's value <=0,it won't put any more.
This is the command for method poll():
If it gets the value,  it will increment the value of redisson_bqs by 1.
The following is the command for method poll(int limit)
It doesn't increment the value of redisson_bqs. When The number of times I put reaches the initial capacity, it won't put any more.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3021
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3022
Is setAPI executable with multiple threads?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Regarding the execution of "API: org.redisson.api.RBucket#set(V value, long timeToLive, TimeUnit timeUnit)", is there a way to call multiple using a netty thread?
I tried the following, but it did not run in multi.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3023
`RBucket.set()` method is fully thread-safe, but I wouldn't recommend to use blocking operations in netty threads
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko
RBucket.set() method is fully thread-safe, but I wouldn't recommend to use blocking operations in netty threads
Doesn't it mean that the blocking operation (such as "RBucket.set()") cannot be thread-managed (multithreaded) only by the logic in redisson without using another library (such as "Spring's ThreadPoolTaskExecutor")?
Originally posted by @mrniko in #3022 (comment)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3024
`RBucket.set()` method is fully thread-safe, but I wouldn't recommend to use blocking operations in netty threads
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko
RBucket.set() method is fully thread-safe, but I wouldn't recommend to use blocking operations in netty threads
Doesn't it mean that the blocking operation (such as "RBucket.set()") cannot be thread-managed (multithreaded(parallelization)) only by the logic in redisson without using another library (such as "Spring's ThreadPoolTaskExecutor")?
Originally posted by @mrniko in #3022 (comment)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3025
RateLimiter Bug on 3.13.3 : bad argument #2 to 'unpack' (data string too short)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My Code
Expected behavior
Actual behavior
first call test() function， works fine， but after 5 SECONDS（after one period）， will throw exception
Steps to reproduce or test case
Only 3.13.3 have this problem
There is no problem on 3.13.2
Redisson configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3026
How RScoredSortedSet sets a namespace or creates a parent directory
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The amount of data is very large, I want to put it in a parent folder，help me
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3027
Why doesn't the redisson connections reconnect after the network recovery
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
After the network between redisson and redis server recoveried from disconnection, Redisson is able to open a healthy connection pool to each of the nodes
Actual behavior
Connection never recover until we restart the service. This situation  Occasionally happens.
Error Log
We only log the exception message like this
I am curious about some question:
why some log shows "after 0retry attempts"? Does the retryAttempt not work?
What's the meaning of the freeConnectionsCounter and freeConnectionsAmount in the log? The value of  freeConnectionsCounter in the log is 1100 and even bigger than the connectionPoolSize, is that ok?
why the connection never recover?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3028
sessionDestroyedMessage  and sessionCreatedMessage question
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
question:
we have two server: A, B
when session.setAttribute(key, value); on A server
session.invalidate(); on B server.
session.setAttribute(key, value); on A server,
now session.getAttribute(key); on B server will return null
why this happened?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3029
 java.lang.String cannot be cast to [B thanks for help
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3030
Sentinel and Redis Different password
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There is no configuration for sentinel password, you are using the same password flag to be used for sentinel and redis, and by that way I am obliged to set the same password for redis and sentinel, so can't we have a different yml property special for sentinel password?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3031
use RBloomFilter contains throw org.redisson.client.RedisMovedException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3032
Is there a fast and efficient way to get a count of all entries in a RMultimap?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
With a regular RMap the size() is very quick and efficient but it doesn't seem that there is a way to get the total size of a multimap in the same way. What I mean by total size is the sum of sizes of all of the values (collections) of a multimap.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3033
Understanding sizeInMemory
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm wondering what exactly is reported by sizeInMemory() method. The doc says it is "Returns bytes amount used by object in Redis memory".
I'm looking at the numbers this method reports say for the RSet of strings and it is much smaller than byte count of the strings stored in the RSet. Does it mean that the data is stored compressed in REDIS?
Also is my understanding correct that for RSetMultimap to find the total size of it in memory one needs to add value returned by sizeInMemory() for the map itself and then the value returned by sizeInMemory() for all of the RSets stored in that map?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3034
`RMultimap.sizeInMemory()` method doesn't take in account size of all associated objects
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3035
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3036
Migration form 3.12 to 3.13. FST to Marshalling Codec migration without downtime
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have multiple instance of web app and all pointing to same AWS Elasticache (redis). When new version deployed some of them will use old Redisson lib (with previous default codec, FST).
Any suggestion appreciate to deploy new version with new codec smoothly without downtime?
Thanks in advance
Marko
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3037
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3038
RSemaphore.addPermits() method doesn't work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3039
CommandDecoder - Unable to decode data. reply: $X
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redis.txt
Observing Similar Errors in Our Logs since few days
Attached a file with similar errors
Please help me with this
We have a single server config
Thank You
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3041
Is redisson-tomcat 3.13.0 compatible with redisson-all 3.12.4?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3042
Allow RedissonClient construction with no redis availability
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
This is for SingleServerConfigs.
Occasionally during deployment the redis instance comes up after our services. When injecting RedissonClients using Spring @bean or CDI @produces, the RedissonClient dependency will fail with an exception upon construction.
Describe the solution you'd like
When your connection pool minimums are set to 0, RedissonClient instances should be able to be constructed without redis being available.
Any operations with no connections in the pool should attempt a connection. Failing that, fail accordingly. It would be nice to have a "target pool size" in addition to an actual minimum- so that I can have a minimum of 0 but aim to have 10 or more, etc.
Describe alternatives you've considered
We'd have to inject some form of Supplier instead, this is not ideal. The client is the owner of the pool, us doing that is taking on those connection pool management concerns.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3043
java.io.IOException: Unsupported protocol version 252
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am getting a failure due to the issue:
stackTrace:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3044
Old value of RLiveObject's field isn't removed from index
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3045
redisson-3.13.1 throws java.lang.ClassCastException for gets when used with AWS Elasticache Cluster mode enabled
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
We currently use Redisson 3.11.5 with AWS Elasticache Cluster mode enabled. Gets using RBuckets works well.
When we tried to upgrade to Redisson 3.13.1, we expected gets should work seemlessly without issue
Actual behavior
But When we tried to upgrade to 3.13.1, started to see ClassCastExceptions.
I have tried to look into scenarios on when this was happening.
Looks like it happens whenever redission client is seeing MOVED response from connected redis node
Issue get resovled immediately when we rollback to 3.11.5
questions:
is there something different in cluster mode handling in 3.13.1?
Looks  like 3.11.5 rightly resolve to right slot and node and is able to cast payload correctly. But  with 3.13.1 something is broken.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3046
Implement Watchdog for RPermitExpirableSemaphore
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3047
Encountering NullPointerException when a bunch of requests hit the web app in short period
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When a bunch of requests hit the web app in short period (e.g. 2000 requests  in 5 min), tomcat-redisson-9 throws NPE attached on the bottom, the issue refers to below line of code.
I've tried with various versions of redisson-tomcat-9(3.12.3, 3.12.4, 3.13.0, 3.13.4), but the issue stick to below line of code.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3049
Is there configs suggestions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, is there any suggestions for configuring these 'size' values based on the config of Redis server
For example, my Redis cluster server:
I know it may depend on the commands I am using, so I just want to know a basic suggestion.
Is there any formula I can follow for configuring?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3050
RBloomfilter need addAll
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RBloomFilter only have
boolean add(T object);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3051
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3052
With Fst Codec during readall java.io.IOException: java.lang.RuntimeException: unable to find class for code 50
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Junit should pass
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3053
Fail to start with Tomcat8
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I followed instructions for Tomcat, copied two jars to lib dir, edited context.xml, created conf.yaml, however, keep getting:
Do I need add more libs to classpath?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3054
Would it be possible to add compressed JSON codec?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It would provide for grate portability and at the same time would benefit from smaller stored object size.
We are using memcached in many places at the moment and it utilizes similar approach for the string data.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3055
org.redisson.client.RedisConnectionException: SlaveConnectionPool no available Redis entries. Master entry host: NA:6379
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson: 3.13.0
@mrniko
i see  this issue was fixed in 3.13.3, and there is no problem, after upgraded to 3.13.3. could you please post the cause of the issue ?  and how to reproduce it ?  thank you very much.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3056
Add RRingBuffer.setCapacity() method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3057
tomcat-redisson session.getAttributeNames not honoring loadedAttributes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When using readMode=REDIS and updateMode=AFTER_REQUEST
session.getAttributeNames() should include "a"
Actual behavior
session.getAttributeNames() does not include values cached in loadedAttributes map, and goes directly to redis, which has not yet received the new information.
Steps to reproduce or test case
see 86ac2aa for work around that solved the issue
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3058
tomcat-redisson session expiration for active session on another server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When a session is present on multiple tomcat servers, it should not expire and be removed from redis until the last accessed time in redis is old enough to be considered expired
Actual behavior
the last accessed time in memory on each server is checked, and if any of them are old enough, the session is deleted from redis
Steps to reproduce or test case
So we've run into a different issue around expiring sessions.
The scenario where we ran into this problem was with readMode=Redis and broadcast mode off, but it may exist with it on also.
user interacts with server 1
network partition/round robin loadbalancing makes a the next request to server 2 for a short period of time
user interacts with server 1 again (partition over or dynamic load balancing)
user's in memory session on server 2 will expire prior to their actual session expiration since the last access time in memory on server2 is older than server1 or in redis itself.
server 2 expires the session which triggers a delete call, removing the session from redis, even if they were still active on server 1
our tests, which have diverged a little from master looks along the lines of:
so before we expire any session, we make sure that the last accessed time is accurate.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3059
RedissonSession map doesn’t have expiration after changeSessionId is called
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We noticed a large number of keys in our Redis server had no TTL set and traced it back to the RMap that backs the session.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3061
Key prefix or custom key serializers
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Our company have redis cluster for multiple Springboot apps. We use different redis key prefix between every app by a key serializer, like this:
Now, when we use RedisTemplate to do everything, the key was added a prefix by serializer. But when we use RedissonClient to do everything, we must set the prefix by self every time.
So, is there any way to help us set a global key prefix for using redisson client?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3062
when I use delay queue, I got an exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
where I use delay queue, I catch an exception:
I use the queue:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3063
Unexpected ClassCastException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Return entity or NULL as expecting
Actual behavior
Throw ClassCastException
Steps to reproduce or test case
This only happens when we upgrade Redisson from 3.10.0 to 3.10.7 and in only happens in one of our environments.
The detail of ClassCastException will be shows like 'Cannot cast 'xxx.yyy.zzz.ClassA' to 'xxx.yyy.zzz.ClassA' (The path are totally the same) or 'org.redisson.spring.cache.NullValue' cannot be cast to '....'
It only happen once and I cannot reproduce from my local.
When I clear the whole Redis, this exception will pause for a while, but after some time, it will happen again
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3064
Implement merge(), compute(), computeIfAbsent(), computeIfPresent() methods for RMap-based objects
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3065
Unable to connect to Redis server:
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3066
Code syntax c error in wiki description
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In the picture above, I think it is java code. The modifiers in the code are not correct. Should we use double quotes?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3067
Question about fix for issue 2181
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Recently we got below error after Redis M/S switchOver at Redisson 3.10.1:
And i saw it was fixed at 3.11.2 by: #2181
I have one question about the fix: 12e81de
reattachPubSub method was only called in MasterSlaveEntry.slaveDown. What will happen in Redis M/S switchover
in case we configure  "subscriptionMode: "MASTER""? To my understanding:
slaveDown should not impact subscription as we configured Mode to master.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3068
Increased Logging for Tomcat Session Manager
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How can I increase the logging from Redisson when using the Tomcat Session Manager? I'm not running into an issue, but just want to know how to do that if needed.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3069
RObjectLiveService # delete: Incorrect representation obtained by the proxy's RObject getName method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Getting the correct object identifier to remove it.
Actual behavior
There is incorrect behavior when calling RLiveObjectService # delete (T) where T has a name field with an appropriate getter and setter.
Steps to reproduce or test case
Create simple entity
Persist and delete entity
See throwed exception:
in new RedissonKeys(ce).deleteAsync(map.getName()) because the proxy object calls its own RObject # getName method, which corresponds to the entity getter, and returns null. Also with the specified value, the entity is not deleted.
Solutions to the problem:
check the object for system getters and setters that the proxy object has before loading the class into the cache and registering it in the context
check the object for system getters and setters, and, if any, generate additional utility methods
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3070
MapCache Update event is not received to the one of the client
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using map cache to persist the data in the Redis.
We have two clients with local cache and listeners added to the update and remove events.
When an entry is updated in the map cache.
Only one client got map entry updated notification but other client did not receive the update.
Server is not restarted and client connection to the server is also looks good.
On redis server , pubsub numsub is returning 2 as value.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3071
org.redisson.client.WriteRedisConnectionException: Channel has been closed!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I used 1.11.1 , after application running 2 hour , find this problem
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3072
Unable to send PING command over channel
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When using 1.13.4 , find this problem after applilcation started.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3073
RObjectLiveService#delete: incorrect behavior of delete(Class<PRoxy>, ID... ) method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Correct long result with the number of objects removed.
Actual behavior
Current call of RLiveObjectService#delete(Class, ID...) raises an error converting the result to type Long.
Steps to reproduce or test case
Create simple entity with some r-indexes
@REntity
Persist and delete entity
See throwed exception:
E.g. in debug mode, I see that in the RedissonLiveObjectService #delete(Class, ID...)#574 method there are 3 commands to delete both the entity and the entity indexes. The commands for deleting indexes return the result "true", and the command for deleting the entity itself - "long", where the next action is the addition of the results of command execution.
Solutions to the problem:
to identify commands by type (entity, index, etc.) and give the real result of deleting only the main object. Service commands related to the deleted object - do not take into account, otherwise we get unreliable information)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3074
Problems found in executing Lua scripts
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
1.Environment configuration
2.Official website demo
3.discover problems
When I select the ReturnType as boolean, I find that if the Lua script directly returns false, the result is null, but the Lua script directly returns true. The result can be resolved to be true. I'm confused. Is this a bug？ Or did I have the wrong configuration？
3.1 Lua Script:"return true"
3.2 Lua Script:"return false"
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3075
Runing with @SpringBootTest Error creating bean with name 'enableRedisKeyspaceNotificationsInitializer' defined in class
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
error info：
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3076
Connections used by block operations get incorrectly reconnected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
connection not reconect if server responses in block time.
Actual behavior
Connections get reconnected, causing a lot of TIME-WAIT connections, and messages may lost in readGroup block mode.
Steps to reproduce or test case
1、readGroup block 1 second:connections get reconnected if  Redis Stream is empty, causing various TIME-WAIT connections;
2、readGroup block 1 second: stream message is put into pending list if Redis Stream responses longer than block time configured in Redisson , because the original connection is already closed by Redisson.
TimerTask in handleBlockingOperations of RedisExecutor is shown below:
I think delay time in newTimeout method should be longer than popTimeout, due to the tranmisson time and waiting time in Redis Server.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3077
Pubsub channel isn't reattached to a new master after slot migration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Pubsub channel should be reattached to a new master after slot migration in Redis cluster.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3078
An object that was put into RMapCacheReactive with zero TTL is auto removed by Redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
The object is successfully retrieved.
Actual behavior
The object is not available using Redisson.
Steps to reproduce or test case
Put any object into Redis using RMapCacheReactive with any non-zero TTL (e.g. 1000 ms) by some key K
Wait for that TTL (or a little bit longer). Then try to get it to make sure that it's no longer available
Put another object into Redis using RMapCacheReactive with zero TTL by the same key K
Try to get that object by K
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3079
why traverse all the keys?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
here HKEYS operation and for loop would be very time-comsuing, I thought the KEYS[1] is renewed when the last lock set. is these traverse necessary?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3080
ElastiCache fail over with primary/reader endpoints not working with replicatedServersConfig
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm currently working with an ElastiCache Redis Cluster (cluster mode disabled) and I have 3 nodes (1 primary node and 2 replica nodes). I'm working with an application configured with the Redisson Tomcat Session Manager. I'm currently testing the ElastiCache failover. I had to set the retryAttempts to 30, the retryInterval to 1000, and use the 3 node endpoints in the nodeAddresses, but with that I'm able to successfully fail over the ElastiCache cluster without disrupting the application. However, if I use only the primary endpoint (master) and the reader endpoint (replica) in the nodeAddresses an ElastiCache fail over disrupts the application. Are the primary/reader endpoints not supported with the replicatedServersConfig?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3081
CPU Load on RedissonMap.get/put
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Good afternoon. Help to understand the problem of high processor load. So, the case:
there is some client that pulls the server to change the state in redis (RLiveObject), for each operation there are multiple calls to ByteBuddy proxy get / set data in redis. Conditional number of operations: 5000 op / s per 1 RLiveObject. The expected behavior is that the processor load will be minimal.
1 redis node and second config - 3 masters, 3 slaves;
How can I fix this problem, please advise?
P.s the same behavior is observed both in the configuration nettyThreads = 4 and nettyThreads = 16, we also used the redis cluster in the configuration 3 masters, 3 slaves
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3082
RKeyReactive.getKeysByPattern not using pattern parameter
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
If I use redisson.keys.getKeysByPattern("my-pattern*") then executing
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3084
org.redisson.tomcat.RedissonSessionManager.findSession Session can't be found
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i have see the close question about this  and try it ,but it does not work.
my webproject is based on SSM+shiro
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3085
Subscribe timeout: (7500ms)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I Increase two params,but it doesn't work.Can you tell me the reason.
redission version: 3.13.4. I use another redis server ,it works well. which param of redis can effect it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3086
Unable to init enough connections amount! Only 25 from 32 were initialized. Redis server: my-redis-service/11.99.77.00:6379
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3087
org.redisson.tomcat.RedissonSessionManager memory leak
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It seems org.redisson.tomcat.RedissonSessionManager leaking memory.
First, memory usage increase time by time even we made no access to application.
Is it normal behavior?
After performing the load test, memory of RedissonSessionManager is not released.
Please help!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3088
setPingTimeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How to set Ping timeout without setPingTimeout?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3089
duplicated with
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
duplicated with #2488
Originally posted by @mrniko in #3075 (comment)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3090
How can I change the command name in RedisCommands.java?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Let's say, if I renamed the sentinel command in sentinel.conf, then the redisson client can't find the sentinel command, can we make the command name configurable? Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3091
Can't read after write when data is large
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
read success after writing into Redis when data is large
Actual behavior
can't read data after writing into Redis using redisson when data is large
Steps to reproduce or test case
We have a social service in our app, and we store the follower list in the Redis.
When I follow a user, I will delete the follower list of this user on Redis, next time when I load the follower list, I will load data from MySQL first, then call RScoredSortedSet.addAll() to add data to Redis, then call the RScoredSortedSet.valueRangeReversed() to get the data with start and limit.
If a user has a little follower list lower than 1000, it will succeed. But when more than 3000, it will return null first time, and will
return the correct list the second time.
It seems like a consistency issue, but we use the cluster, which will only read data from the master node.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3092
Support google gson codec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
I saw there are many codecs that redisson provided,  I want to add one more codec to support json using google gson , any suggestions?  thanks
Describe the solution you'd like
Support json serial/deserial using google gson
Describe alternatives you've considered
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3093
RedissonClient#getMap(String) throws java.io.IOException: Unsupported protocol version 109
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hello ,
I am trying to retrieve some data from Redis Instance (which I use it as Hibernate 2LC), when I try to get some map data it throws java.io.IOException, and message is Unsupported protocol version 109.
here is my code snippet:
which mistakes am I doing while retrieving the data from map?
(datas are put to Redis by Hibernate)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3095
broken connection not detected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
we see some redis tcp connection status is ESTABLISHED, but the file descriptor is missing, the reason is unknown, but if redisson use these connections, netty writeFuture always timeout and we get org.redisson.client.RedisTimeoutException
Steps to reproduce or test case
don't know, we experience this twice in last month
hope redisson can provide testOnBorrow or some method to solve this, thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3096
Set pingConnectionInterval = 30000 by default
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3098
It seems to broadcasting session creation between several tomcat with netty 4.1.52 even if broadcastSessionEvents="false".
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have memory leak issue as I posted #3087.
So, I update netty version 4.1.52 according to #1975
This won't happen if I use redisson-all-3.13.5.jar from url below
Here is my pom.xml making my own redisson-all-3.13.5 to update netty
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3099
RRateLimiter.delete() returns false despite apparently removing the appropriate key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Calling delete() on the Rate Limiter instance returns true when the object is removed from the data store.
Actual behavior
Sometimes returns true, but is returning false after I have called tryAcquire(). Note that the keys are still removed from the store.
Steps to reproduce or test case.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3100
I am using redis queues extensively. Every now and then I see a warning from CommandDecoder.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following warning:
response has been skipped due to timeout! channel:
Can it have any impact on my normal redis functions?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3101
Problem on Turkish language Windows
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Topic listener is not working on Turkish language Windows 10
It works if you change display language to English.
Publishing to topic works fine regardless of the OS language
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3102
RBatch doesn't handle MOVED, ASK errors in Redis Cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3103
LocalCacheMap key add or remove notification
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, I would like to use a LocalCacheMap to cache collections of objects, and reduce the number of requests to redis.  Our use case is one where keys are added or removed infrequently, but we iterate over the entire collection very frequently.
If I understand it correctly, the LocalCacheMap does not add new keys to the local cache when they are added to redis by another application using a LocalCacheMap instance, which means that when we iterate over the collection it requires a SCAN redis command, which is a round trip redis operation.
Is there a way to update the local cache when object are added to the redis cache?  If there were, it seems like it would eliminate the need for the redis SCAN command when iterating.
Alternatively, is there a way to add an EntryCreatedListener, similar to other collection types?  Or piggy back on the LocalCacheMap's own listener to achieve the same?  If I could do that I would then know all the keys to iterate over the collection.
thanks, Mitchell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3104
Failed to switch to the Redis instance during ip address change in DNS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Connect to the Redis instance when it is ready after an ip change in DNS
Failed to connect to the new Redis instance forever even if the new Redis is up and running
The problem is in the two classes:
In function 'monitorMasters' in DNSMonitor.java, there are two lines:
The changeMaster(...) is asynchronized call without return value. So regardless successful or not, the master list is changed to the new Redis.
The fix can be to add a return value to changeMaster(...), and only when the connection to the new Redis is setup successfully then change the masters list. Otherwise, retry to connect to the new Redis until it is available.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3105
The RSet in RSetMultimap doesn't prevent logically equal objects from being stored in it
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm not sure if this is by design or a bug so posing this as a question.
For the following code:
the test will fail.
Of course if you read the set by calling getAll() it will have only one entry but the duplicates will be stored in the REDIS memory.
Is there a way to enforce uniqueness on put?
Thank you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3106
RSet In RSetMultimap doesn't prevent logically equal object from being stored in it
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm not sure if this is by design or a bug so posing this as a question.
For the following code:
the test will fail.
Of course if you read the set by calling getAll() it will have only one entry but the duplicates will be stored in the REDIS memory.
Is there a way to enforce uniqueness on put?
Thank you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3107
response has been skipped due to timeout! for PING command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson version: 3.12.4
We are seeing warning log in our production logs
response has been skipped due to timeout! channel:
We have enabled keepAlive and set pingConnectionInterval to 5 seconds to keep the connection alive which was suggestion given for another question last year. Looks like this background PING command has 1 second timeout instead of using timeout configuration, can you confirm?
Looks like these timeouts happen on connections running BLPOP command, in that case can you skip doing PING on blocked connections?
We also gave netty threads equal to max number of connections in the pool, this value varies by service 64, 128, and 256.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3108
RMap's values(pattern) doesn't seem to work on a simple test
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following simple test doesn't seem to work:
Version of redisson is 3.13.4
I'm pretty sure I'm missing something here so didn't post it as a bug
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3109
reddison can not stop my program
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I wrote a program to test the connection to Redis, it successfully connected to Radis but the program does not stop in the end.
my dependency in Gradle:
when Get thread dump, my console:
I think the problem is in netty, but my netty version is final (4.1.52)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3110
Is there a way to batch read values from the RMap using key pattern?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm looking through the documentation and it doesn't seem currently possible to batch multiple values(pattern) calls.
If this functionality doesn't exist will it be possible to add it in the future versions?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3111
High contention on AsyncSemaphore
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We have a cluster of services that extensively use Redisson 3.13.4. But CPU load and throughput are not equal for all instances. We found that the bigger CPU, then bigger latency and lower throughput. The main difference of such instance is in high contention on AsyncSemaphore object. Is it possible to reduce it somehow? For example, use few connection pools, instead of one or we need to use few Redisson clients?
Here is for comparison node with high and low CPU:
Stack trace from profiler in netty thread:
Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3112
Redisson upgrade 3.9.1 -> 3.13.4 increased number of Redis processed commands
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
After upgrade Redisson client from 3.9.1 to 3.13.4 we noticed significantly increased number of processed commands in Redis. This seems doesn't impact Redis cluster CPU load, but looks strange, especially because of big imbalance in Redis nodes:
What could it be? Application wasn't changed, only Redisson.
Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3113
No interface method addListener (ReactNative module)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redis version: 2.7.1
Error:
topic does find the function getPatternNames(). However, interface method addListener(Lorg/redisson/api/listener/PatternMessageListener) cannot be found in class Lorg/redisson/api/RPatternTopic.
addListener can be found.
Please help me, I am in urgent right now. Thank you very much.
I think when compiling code in Android. The function is removed from the interface.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3114
WeightedRoundRobinBalancer filtered any Master node because it has freeze status.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I configured master-slave configuration for standalone Redis.
I added master to balance map.
When I switched on the monitor on Redis I see that on master there aren't any read requests from my application.
In WeightedRoundRobinBalancer balancer I found that code:
Why a master node always filtered here? It's a mistake?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3115
Redisson don't switch read operation properly when slave is down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I configured master-slave configuration for standalone Redis. readMode = ReadMode.MASTER_SLAVE
When I do on slave debug segfault there aren't operations in a monitor on a master node. Only after timeout in 180000 ms all operations will start to perform on the master node. My code didn't receive any exception from Redisson.
I can reduce a delay by setting up failedSlaveCheckInterval = 3000 parameter but why Redisson didn't switch to slave after the first failed command?
And that more important why Redisson didn't send any command to the master node?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3116
after upgrade redisson-spring-boot-starter to 3.13.5, can`t load config file anymore
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
load config file from classpath
Actual behavior
applicaton goes error when bootstrap
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3117
RMapCache.keySet inconsistent behaviour
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I am using redisson 3.12.5
I have this map "REMOTE_SESSIONS" and I am trying to access it using getMapCache ( RMapCache )
After fetching the map I am querying it's keys , using keySet but I am seeing inconsistent behaviour and I am not sure why.
I might be using the library wrong but this is driving me crazy :)
Here is my code
I am doing the following:
Get 10 instances of REMOTE_SESSIONS cache. For each of them print the count given by size and then the actual count , retrieved via iterator traversal.
And I get the following output:
For some reason the actual content of the keySet is varying. This might be related to the fact that under the scenes this is implemented using HSCAN but can't really tell why.
Any idea why this is happening and can I access the keys from a map.
My end goal would be to query the keys using a pattern but that doesn't work consistent either.
Any help is greatly appreciated.
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3119
RTransaction should be executed in IN_MEMORY_ATOMIC mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3120
incremental number of connection over time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
we face a problem that number of connection to Redis cluster node is increasing until it consumed the max number of open connections (which was set to 4096)
After a period of running the client, we discovered that number of connections from client to a single redis node (slave one) using lsof is more than 100 connections in some cases it exceeded 200 connection despite the configs are set to 64 (see the attached connections.log for open connections from client to redis node)
Is that a connection leak problem or a configuration issue?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3121
Redis is disconnected for a long time, and using redisson's trylock() will cause the thread to wait all the time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
notify thread and return false
or throw redis disconnected exception
Actual behavior
Keep waiting
Steps to reproduce or test case
1.Run application
2.Disconnect redis
3.Execute trylock()
(1)Create a thread pool
CorePoolSize:8
QueueCapacity:200
ThreadNamePrefix:cmdpAsyncExecutor-
(2)Use trylock() in a thread.for loop 10 times
4.Wait a few minutes
5.Reonnect redis
6.View thread status
View thread stack information
We found that the thread had been waiting
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3122
How to improve performance for batch lock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Dear:
In my project, we want to lock large number of data at the same time, the max data size will be 200,000.
We found redisson cann't support this kind of scenario, it'll take several hours to lock 200,000 data totally, 20 millisecond
for one record.
Is there any solution for this  big data scenario?
Best regards.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3129
Don't throw the exception of Bloom filter config has been changed in BloomFilter
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If we modify bloomfilter's config in redis, it will make contains function cycling constantly.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3131
Add Reliable Topic object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3132
terminate main class with out sessionfactory.close
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have an enterprise program that works with Hibernate and hikaricp connection pool, I just added Redisson for the second level of Hibernate cache.
When I start the Tomcat, everything is OK
But when I run a Main class, everything is done, but in the end it does not terminate.
I know I have to use the class sessionfactory.close but I did not use this method before and it stopped at the end,
It's been like this since I added Redisson.
Is there a solution for me not to use the  sessionfactory.close() ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3133
java.lang.ClassCastException occurs when RedissonSessionRepository restore a session with JsonJacksonCodec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redis 3.13.4
When setting a sub class of JsonJacksonCode to RedisConfig.
The restored Session RMAP actually store Integer for maxInactiveInterval, thus class cast exception occurs.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3135
Getting Error while connecting to sentinel using password.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Getting below error while connecting to sentinel using a password. I have kept the password the same for both Redis and sentinel still getting the issue.
Can't connect to sentinel server. Unable to connect to:
Expected behavior
Should be able to connect to sentinel using the same password.
Actual behavior
Getting error - Can't connect to sentinel server. Unable to connect to:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3136
Question on queues and detailed documentation on RStream
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, I'm a fairly new user of Redisson and have a question regarding queues and streams in Redisson.
I'm evaluating whether I could/should use RStream or not but unfortunately the documentation and examples I found are very short and didn't come with much explanation of the used methods/parameters and the reasons why.
My use case is fairly simple and could be managed with a queue but I want to make sure an element pulled from the queue was processed by an ack or something similar to prevent data loss in case of a failure.
I found this question on StackOverflow which is basically the same problem I have:
But unfortunately it's basically a monologue by the person asking without a final answer or solution.
Basically I am not interested in features like consumer groups etc. and I'd already be happy if I could have something like in the following example:
Would you recommend using RStream for this use case or is there a better way to achieve what I want with Redisson?
If I can use RStream for this is there a simple example to get RStream working like a RQueue with acks?
Could you provide a more detailed documentation on RStreams?
Thank you!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3137
result of RStream.read method isn't sorted by key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3138
suitable configuration settings
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hello,
there are numerous connection settings like connectionPoolSize, connectionMinimumIdleSize so forth so on..
for instance, when I put 100 for connectionPool, it use all of them in course of some load (I monitor redis server with redis-exporter). then I increased it to 200, then it started to use 200.
My question is how can I find suitable settings, is there any hint which I can refer?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3139
Rx API is missing support for cache variants of multimaps
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Context description:
The regular (non-async, non-reactive, non-Rx) API contains cache variants for multimap based collections:
But the Rx-ified version of the API does not have the cache variants:
Our problem:
The problem we are facing is that we have a code base that heavily relies on Rx interfaces and that we need the expiration/eviction functionality that Redisson offers for set multimaps, but this combination seems to be missing from the API.
Desired solution
Additions to the Rx-ified API to be able to instantiate multimap caches, so that we can specify expiration for items in the multimap cache using Rx method calls.
Alternatives we've considered
We've considered using the non-Rx-ified APIs, but we'd end up writing our own Rx proxy layer around it since our code base so heavily relies on RxJava. Therefore it seems more logical to add it to Redisson instead, even more so because it looks as though this feature would fill a rather obvious gap in the API (for which there was understandably no time yet, undoubtedly).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3142
Is it able to encapsulate 'isExistsAsync' and 'fastPutAsync' into one Batch
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3143
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3144
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3145
TimeSeries.iterator() doesn't respect the ordering
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Since timeseries is a sorted collection I'd expect iterator() to respect the ordering. There's a range method which in fact returns the values in order, however it returns Mono<Collection> instead of Flux which means entire set is loaded into the memory, while I'd like to read it reactively in chunks.
Actual behavior
redisson.getTimeSeries("").iterator().next().block() != redisson.first.block()
Steps to reproduce or test case
add multiple elements into the timeseries collection
open a redis desktop manager or use the cli to check the elements are indeed ordered by score
call iterator() method and check the ordering
I've checked also the non-reactive version and seems to work in the same way.

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3146
Add ListCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
I'd like to have a possibility to set eviction for a given element while inserting into the collection that keeps the insertion order.
Describe the solution you'd like
Similar to the MapCache and SetCache I think there's a need for a ListCache as neither of the previous ones keep the ordering.
Describe alternatives you've considered
SetCache but it lacks ordering.
TimeSeries but as per issue 3145 the iterator() method does not return the values according to the score.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3147
Null pointer on RMapCache destroy
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, I'm getting null pointer exception when try to destroy RMapCache in EvictionScheduler line 74 (remove(String name)). Error occuring on tasks object.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3148
RLongAdder.sum() and RDoubleAdder.sum() methods return wrong result
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3149
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3150
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3151
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3152
DNSMonitor switches master and slave frequently
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
there are three sentinel node, and one master node and on slave node.
redis and sentinel config file in attachment file.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3153
CROSSSLOT error when clearing a redis-spring-data cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Calling RedissonConnection.del() with multiple keys when using a clustered connection should delete the keys without error
Actual behavior
"CROSSSLOT" exception is thrown
Steps to reproduce or test case
Should be able to reproduce by simply trying to delete multiple keys that aren't in the same slot using a ReddisonConnection that is clustered.
In my example
Clustered
I ran into this when upgrading from Spring 2.2.x to 2.3.x (Redisson 3.12.0 to 3.13.6)
This appears to have been broken when the check for clustered connection was removed as part of this commit: 8be9008
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3154
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3155
How to get RLock list? Rkeys is not work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Rkeys does not contains RLock keys.  Only me?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3156
Class cast exception when working with RMapCache<String, String>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have this RMapCache<String, String> stored in redis. Each key has a 30s TTL
Everything behaves normally but from time to time I get this class cast exception which causes a lot of issues down the line.
I can't tell why this is happening , I am using redisson 3.12.5
Any idea what is happening over here ?
We have multiple nodes that are updating the same map inserting and deleting keys , different TTL's for each.
All nodes are time synced
Any help will be greatly apreciated.
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3157
Implement a reliable RQueue with an ack() method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
I initially discussed this idea in #3136.
Describe the solution you'd like
I'd like an RQueue implementation that allows to ack() elements to improve reliability and ensure that an object has been processed by one of the queue's consumers. The following example demonstrates the feature request:
If the consumer that q.poll()ed the element crashes or shuts down before finishing the processing and calling q.ack(), the element will automatically be "unlocked" for another consumer to poll next (e.g. via a watch dog similar to RLocks).
Describe alternatives you've considered
As shown in #3136 I considered using RStream but decided against doing so because the RStreams are far too complicated for simple use cases with only a small number of consumers.
My current solution involves using q.pollLastAndOfferFirstTo(...) and creating locks for the elements that should be marked as in progress to check whether the consumer working on an element is still alive or not. This also involves a periodic task that performs such a check on all items in the "in-progress-queue". This works but it would be great if this could be a feature of Redisson so I could reduce my code to someting similar as shown in the small example above.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3158
Concurrency issues with RQueue::removeIf / RQueue's iterator
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When having one producer and at least two consumer threads (or instances of an application) I expect RQueue's removeIf(lambda) method to remove elements without negative side effects.
I expect the same when using an iterator to iterate over the queue and calling remove() on the iterator.
Actual behavior
There are multiple types of errors that I observed:
I've seen NullPointerExceptions inside the removeIf lambda (e.g. q.removeIf(element -> element.getId().equals("id"))), where element is null (we don't add null elements to the queue).
Other times removeIf does not actually remove the elements from the queue, probably because it did not find the elements in the first place.
As the default implementation of removeIf uses the iterator my guess is that basically the iterator causes this issue and may not work properly when another consumer of a queue modifies the queue while it is used.
Steps to reproduce or test case
I have the following test case which can be used to reproduce the issue. It uses Lombok, Awaitility and Apache's RandomStringUtils for convenience (in case you want to run it without modification). Below I will explain steps to modify the test to get different results.
The test has one producer thread pushing 200 random Strings (wrapped with QueueEntry objects) and one or more consumer threads "processing" these objects (parking them in an "in-progress-queue" - which is the problematic queue).
If you run the test as it is here it will fail because the "in-progress-queue" is not empty.
Modifications to change the test results:
Change the number of consumer threads to 1 in the line marked with (4). Now the test should pass. Change the number back to something larger than 1.
Comment in the RLock and its usages marked with (1). Now the test should pass. Comment the lines out again.
Comment out the removeIf(...) statement (marked with (2)) and comment in the remove(...) statement (marked with (3)) instead. Now the test should pass.
Instead of using removeIf() you could also modify the test to use an iterator and remove elements with it. The results will be similar.
Default single server config with JsonJacksonCodec.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3159
Redisson RMap isEmpty() returns unexpected result
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a map stored in redis cluster. When I try to get this map to know if a given key exists in it, I am using
It works at most times. But somehow the RuntimeException I defined above will be throw out sometimes unexpectedly. Which means rMap.isEmpty returns true with no exception, while the fact is we do have this key stored in redis.
In addition, I found a exception in another thread,
Does this exception impact the result when I was calling `rMap.isEmpty()'?  And how can I avoid this problem?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3160
Add IdGenerator object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3162
MOVED redirection loop detected with AWS Elasticache redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Getting following error:
We are using redisson 3.13.4 ( tried with 3.13.6 also) with AWS Elasticache Redis.
For our internal testing we created AWS Elasticache Redis cluster with following configuration:
Connecting to configuration endpoind.
In the error you see 'redis://' but we are using 'rediss://' , there is another bug in RedisException where 'redis://' ( without extra 's') is hardcoded.
It was working fine till last week.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3163
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3164
Will RList<>.add(V) return false ever?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Will RList<>.add(V) return false ever?
It looks like RedisCommands.RPUSH_BOOLEAN command always return true based on below convertor implementation, can you please let's know will it every return false assuming there is no RedisTimeoutException?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3165
Add property to disable redisson in spring boot
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
Is your feature request related to a problem? Please describe.
We use redisson with spring-boot-starter in our project. Unfortunately, sometimes we need to disable caching (f.e. on some environments we don't have redis). When it comes to a spring-data-redis we can just set property:
spring.cache.type: NONE
and caching is disabled, but if we use Redisson then his auto-configuration doesn't let us run the application without a worked Redis connection.
Describe the solution you'd like
Disable the whole auto-configuration when
spring.cache.type: NONE
Describe alternatives you've considered
We can add a new maven profile and exclude the redisson dependency but it doesn't sound well because we get a new profile to maintain.
My current solution
I excluded autoconfigurations:
I made my own auto configuration (based on redisson's autoconfiguration) where I've added
If you agree then I will push a pull request with changes.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3172
redisson-tomcat does not persistent attribute changes properly using updateMode AFTER_REQUEST
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Session attributes modified without calling setAttribute are not stored properly in Redis.
The following snippet sets an empty list as a session attribute ("foo") on the first call. Any subsequent call gets the attribute and appends an item ("bar") to the list without calling setAttribute.
Expected behavior
With updateMode AFTER_REQUEST the changes should be persisted to Redis after each request regardless of the missing setAttribute.
So the list should expand by one item on every call.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3173
evalSha/evalShaAsyn returns null for MAPVALUE / MAPVALUELIST returnType
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Actual output:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3174
Redisson set a different TTL than the provided in Tomcat web.xml
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
TTL same as in the settings
Actual behavior
Steps to reproduce or test case
Set session-timeout in minutes, get the TTL in redis after the session creation, its way higher.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3175
How to set the sessionIdLength in the Tomcat 9 redisson?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How can I set the sessionIdLength in the context.xml?
This didn't worked, the default is 16.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3176
About tomcat context.xml
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am not very clear about the specific role of readmode="MEMORY". If readmode="MEMORY" should be enabled at the same time broadcastSessionEvents="true" this attribute to ensure the consistency of multiple copies of the session? Does readmode="MEMORY" just store an extra session in the tomcat memory? When I simulate redis downtime, redisson will not directly read the cache from tomcat, but continue to connect to redis to get the session.I need help,thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3177
RetryAttempts doesn't work ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My env: SpringBoot 2.3.3.RELASE, JDK 8, Redis 5.0.6, redisson-spring-boot-starter 3.13.6
My test scene:
Firstly shutdown my redis server
Then start my springboot application
Then restart my redis server
What I expect is: Redisson in the app will retry to connect to  the redis server until connect successfully and the app started normal. But actually redisson didn't retry to do this and the following exception is thrown:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3180
After integrating with spring-data-redis, redisTemplate get  method always returns null
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
I want to use redisTemplate and redissonClient at the same time. Based on the above configuration, using redisTemplate can set the value during operation. But the get value is always null
When I remove the RedissonConnectionFactory injected in RedissonSpringDataConfig, redisTemplate will use lettuceConnectionFactory by default. At this time, there is no problem using redisTemplate's get method and set method. The get method can also return normal values.
Actual behavior
redisTemplate's get method always return null
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3181
Add a possibility to work with RLocalCachedMap reactively
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
In highload systems, it may be too expensive to make requests to Redis too often. Using a not reactive approach, it's possible to enable local caching and use RLocalCachedMap to reduce amount of requests to Redis. However, in a reactive system, currenty it's not an option.
Describe the solution you'd like
I think it would be very nice to be able to use RLocalCachedMap reactively.
Describe alternatives you've considered
As an alternative, I have to implement a custom caching logic to reduce amount of requests to Redis.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3182
org.redisson.client.WriteRedisConnectionException even after 3 retry attempts
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
With retries enabled WriteRedisConnectionException shouldn't happen.
Actual behavior
We have set netty threads and max connections to 250. When Redission is retrying will it use different netty connection, or attempt using same channel which is throwing newClosedChannelException/ClosedChannelException? It's not clear from below error what other tuning is required in application code.
Steps to reproduce or test case
Intermittent exception noticed in production logs.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3183
Desired TTL is not being set for new cache maps
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am trying to set the TTL on the cache map as shown in the snippet below but I am noticing that the TTL is set to -1 and not the value I am passing. Is this the right way to go about setting the TTL for the cache maps? If not what is the right way?
private RedissonClient client;
This is what I see on enabling the debug logs:
So looks like it is indeed trying to set the TTL.
I am using redisson version 3.13.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3184
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3185
How to clear Redis cache when deployed to 2 or more containers?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In my Spring Boot project, I have one redis container deployed in Docker swarm cluster. I use it as Hibernate 2nd level cache for the application. I use Redisson client to manually clear the cache using the following code
Now I would like to scale it to multiple containers to withstand failover and distribute the load. If I do that, how can I clear the cache in 2 or more containers at the same time?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3187
Behavior of locks vs conditions like network partition
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello everyone,
Couldn't find my answer in docs or by looking briefly at the implementation, so posting the question here.
Let's assume a system, where X instances of the same application are working concurrently on processing some data. In general, the instances can work concurrently, but some specific data items must not be processed at the same time by more than one instance, as this would produce race condition.
To synchronize application instances and avoid race conditions, we've set up a Redis instance, and we use Redisson's locking mechanism to achieve exclusive execution. In general, the workflow for an instance looks like this:
(take a lock A) -> (process data) -> (release lock A)
Then, obviously, the other instances, that want to process the conflicting data item, need to wait for lock A to be released. Processing an item can take anywhere between several seconds and several days. so a lock might be held for a long time (and we use this auto-renewal feature for locks to have the lock prolonged as needed behind the scenes by Redisson).
My question is - what happens if an instance, that is currently holding the lock, loses connectivity to Redis (and therefore the lock times out and is then taken by another instance), and then after some time it regains the connectivity? Will it finish processing the data without holding the lock, and then fail on releasing the lock? Or maybe something else would happen?
I'd really appreciate your feedback on this.
Best Regards,
Paweł
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3188
Rmap.addAndGet method throws NumberFormat exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
This should not throw an error. It should convert the number to long but it is converting to int
Actual behavior
RedisExeption is thrown
Stack trace:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3189
Authentication broken for Sentinel configuration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
HI there,
it seems like the Redisson authentication is broken for the current release 3.13.6 in combination with a Redis 6.0.9 and a Sentinel setup. I provide the password with the config object:
config.useSentinelServers() .setMasterName("sentinel-master") .addSentinelAddress("redis://127.0.0.1:26379") .setPassword("redis");
I suspect the implementation of the checkAuth() and createRedisConfig(...) methods in SentinelConnectionManager.
Since the default of usePassword is false, this results in the provided password being set to null in createRedisConfig(..), which subsequently causes checkAuth() to fail prematurely on line 213 client.connect() with a RedisConnectionException caused by an RedisAuthRequiredException. Therefore, usePassword is never set to true and the Redission Sentinel config is broken for secured Sentinel instances.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3190
Local Cache performance : Cache Key extra operations
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello Everyone,
The Local cache map data types for key is CacheKey and for value is CacheValue. The CacheKey contains the hashed value of encoded original key object. Due to this, when ever redisson tries to retrieve from the local cache, it has to encode the key and convert to hash value and get value from the local cache.
Is there any specific reason behind this approach? What if the CacheKey stores the original key directly? Will that improves the local cache performance?
Best Regards
Sai
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3191
wiki file singleServerConfig need to update
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
run success
Actual behavior
with exception  Can't parse config
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3194
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3196
Always get a deprecation error log about JSON even though not using
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
I point RedissonSessionManager at a YAML config file. I don't get a deprecation warning about using JSON config files.
Actual behavior
I point RedissonSessionManager at a YAML config file. I do get a deprecation warning about using JSON config files.
Steps to reproduce or test case
Point RedissonSessionManager at a YAML config file. Get a deprecation warning about using JSON config files.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3197
RateLimiter Bug on 3.13.6 : bad argument #2 to 'unpack' (string expected, got nil)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
working normally
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3203
org.redisson.client.RedisTimeoutException: Command still hasn't been written into connection! Increase nettyThreads
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Getting below exception intermittently during execution of a multi-threaded batch process.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3204
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3205
RMap is holding huge memory compared to normal object in Redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
While working on memory improvements for Redis, I came across with an issue where I have observed that Redis is using huge memory for RMap compared to normal object.
I have execute below code and I observed below things:
I could see memory occupied in Redis for key abcd-abcd:map is 10728729 bytes(10.72 MB), I have used command MEMORY USAGE abcd-abcd:map.
I could see memory occupied in Redis for key abcd-abcd is 1170360 bytes(1.17 MB), I used command MEMORY USAGE abcd-abcd
My question is if I am saving one object(hashmap) as an RMap and saving the same object(hashmap) as a value in another Map then why the object saved in RMap is occupying huge amount of memory compared to other case?
Please note currently I kept SIZE as 100000, but in my case I need to save 1-2 million(or more than that) objects in RMap and in that case I can see huge memory utilization in Redis.
Can someone please review this and share their thoughts?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3206
Fill variables in redisson.yml with Spring Boot values.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
We are using redisson-spring-boot-starter. We were hoping that we could configure Redisson with a redisson.yml, but also configure more dynamic properties from our application.yml.
When we run in a different environment we can overwrite the Redis hostname by setting an environment variable. With Spring Boot profiles (for example "local"), we could have an application-local.yml that contains the following:
That way we would be able to have different configurations for our local run configuration compared to what we use in our production systems. Detailed properties for Redisson (described in redisson.yml) are the same for all environment, while things like the host, port or ssl properties can change depending on the environment where the application is running.
Describe the solution you'd like
If the merging of application.yml(or application-local.yml) with redisson.yml is not possible, can we then maybe have some feature where we fill variables with Spring Boot values. That way the redisson.yml would be able to look like:
In such a way, we would be able to create an application-local.yml that looks like this:
With Spring Boot values I mean the values described by externalized configuration here. That way there are many ways to inject variables into the configuration of Redisson.
Describe alternatives you've considered
We currently are using the following as an application.yml:
This works for us but puts a lot of detail for a specific dependency in the application.yml. These fields are never changed. The values are prone to mistakes.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3207
bug(redisson-hibernate-53): hibernate config CACHE_REGION_PREFIX is ignored
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Environment:
Setting CACHE_REGION_PREFIX for hibernate should be used by redisson hibernate and the entities should be stored under the entity key with the defined prefix.
Actual behavior
The prefix is not used and the entities are stored under the default keyspace.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3208
redisson-spring-boot-starter maven test
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When a fresh copy of the repository is cloned, the tests of should all pass.
Actual behavior
When running mvn clean install in the redisson-spring-boot-starter module the build failed on failing tests. I got the following error:
When I run the tests with an IntelliJ run configuration the test does pass.
Steps to reproduce or test case
mvn clean install
Redis version
I think this is not relevant, but it Redis 6.0.6 running on Docker.
None
What is the actual problem?
I think you'll see in the above exception log that there are some (probably) unexpected character in the redisson.yaml that is used by the tests for redisson-spring-boot-starter. I looked at the encoding of the redisson.yaml by using Notepad++. The result is that the encoding for the redisson.yaml file is: "UTF-8-BOM".
How to solve this issue?
Setting the encoding of this file to "UTF-8" results in the maven tests passing. After doing this, and looking into the git diff shows the following:
I am not sure what are the "".
Can I create a PR for this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3210
default codec MarshallingCodec result in exception "ERR hash value is not a float" when using map.addAndGet
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
no exception when use default config
Actual behavior
have exception, but if i set codec to JsonJacksonCodec, everything works
Steps to reproduce or test case
use defatult config with default MarshallingCodec
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3211
deleteByPatternAsync lua script error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am currently using AWS Redis Elasticache cluster with a simple setup
Redis Version 5.X
1 shard, 2 replica
I sometimes get an error like below where keyPattern is "test-key*" which is confusing considering that I only have 1 shard.
Any idea what could be going here?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3212
Can we share sharing the same Redisson client for both Hibernate L2 cache and Spring Cache Abstraction
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Can we share sharing the same Redisson client for both Hibernate L2 cache and Spring Cache Abstraction?
I am configuring redisson as my l2 cache in application.propeties
Currently, I am creating a Cache manager bean using the below code, which creates a new connection to redis.
I want to create a Cache Manager bean use the same connection configured in application properties. Is it possible to do that?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3213
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3214
RMap keySet throw java.lang.String cannot be cast to java.lang.Integer
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3216
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3217
Redisson 3.13.6 + Kryo 5.0.0: Class is not registered
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
I should be able to serialize any Pojo.
Actual behavior
Steps to reproduce or test case
With those versions of Redisson and Kryo. Just set up a simple client. The boolean "RegistrationRequired" is true by default now on Kryo and any new serialization will fail.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3218
Add tryAdd() method to RSet and RSetCache objects
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3220
compatibility with spring-session 2020.0.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i have seen on the wiki that currently redisson officially supports spring-boot up to version 2.3, the same for spring-session and spring-data. which version of reddisson library should I use when running with spring-boot 2.4.0 and spring-session 2020.0.1?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3221
Option to store null values into the local cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
I have an application that is using Hazelcast "near cache" extensively and I'm evaluating a migration to Redis using Redisson "local cache" because I would like to use the AWS ElastiCache Redis service. This application does thousands of cache reads for every user request, so the "local cache" is really needed.
For testing purposes, I launched the same request twice to this application using Hazelcast and twice using Redis, and I saw that the second execution time for the Redis application was higher than the second execution time for the Hazelcast application. It was very surprising considering that the second request should read the data from the "local cache" (redisson).
I debugged the application code and I found that it does hundreds of cache misses. On the othe hand, I found that Redisson only updates the local cache when reading the map value from redis gives a not null value. This redisson code is in RedissonLocalCachedMap.getAsync():
So, considering that our application does hundreds of cache misses and that Redisson local cache always tries to read the value from redis (even when it tried to read the same key before), it is reasonable that our application performs worse than expected.
Describe the solution you'd like
In order to improve our application performance when using Redis I think that it would be helpful to be able to add null values to the Redisson local cache, maybe adding an extra option in LocalCachedMapOptions; something like cacheNullValues, with a false value by default. I think that something related was fixed in #928 and #853
Describe alternatives you've considered
I have not considered an alternative
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3222
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3223
Redisson Semaphore Expiry Not Getting Honoured
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to synchronise my APIs using Redisson semaphores. Here is the code:
I have observed certain cases where the LockOn object in Redis is has its TTL set to -1. What this means that there is no TTL. But I am clearly setting it to 60s on a successful acquisition.
Steps To Reproduce: This happens only for a bunch of requests and is intermittent.
Redisson version: 3.13.4
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3224
Semaphore TTL -1 In Redis Despite Explicitly Setting It
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to synchronise my APIs using Redisson semaphores. Here is the code:
I have observed certain cases where the LockOn object in Redis is has its TTL set to -1. What this means that there is no TTL. But I am clearly setting it to 60s on a successful acquisition.
Steps To Reproduce: This happens only intermittently. I have been unable to reproduce it myself.
Redisson version: 3.13.4
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3225
Adding permit later doesn’t unblock thread
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Thread A:
Get semaphore.
Thread B:
Get semaphore.
Acquire permit = 1. (may block for step A.2)
Do stuff.
Release permit = 1.
Add permit = 1.
I expected step B.5 to unblock thread A, but that doesn’t happen.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3226
Spring Data Redis 2.4 support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3227
Rlock not able to handle 200 concurrent requests
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I was trying to use distributed lock to do some operations and here I am facing an issue - it wasn't able to handle more than 200 concurrent requests
I am using redis as single server instance for this testing and here is my code
Please advise on what to look for to handle higher concurrency and handle the required requests per second. Our target was to handle around 1k concurrent requests
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3228
register expired event topic in cluster didn't work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
HI, I want use subscription features, but redisson always register it at only one node, I can't got other node's expired event.
I tried more times, the results are same,
and I lock WIKI 10.6 Low level Redis client:
but I can't found the method in my use version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3229
redisson-spring-boot-starter, version 3.13.6
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I use the following command, an exception is thrown，I tried a lot of high version, the error message is the same.
I use the  version: 3.5.5, It is work. so why the high version doesn't work ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3230
How to configure checksentinelslist in springboot file
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How to configure checksentinelslist in springboot file
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3231
ElementsSubscribeService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi, I'm using redisson's ElementsSubscribeService along with redis BRPOPLPUSH command to subscribe to a redis list, so that I can retrieve an element from the tail of the list (and move that element to the head of the same list) when another client pushes an element to this list.
But when I push an element to the list and consume that element from the same application (spring context), the consumer's redisson operation got blocked during handling.
consumer pseudo code:
here is the log right before the consumer got stuck:
log after:
can you help me with this? many thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3232
 redisRepository.opsForZSet().rangeByLex( NullPointerException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3233
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3236
Please follow semantic versioning specification when you make big changes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is not the first time you make a breaking change in a minor version bump!
Expected behavior
We expected the minor version bump would be backwards compatible.
Please refer to here:
Minor version Y (x.Y.z | x > 0) MUST be incremented if new, backwards compatible functionality is introduced to the public API.
Actual behavior
In your redisson-3.13.6, you made a type change:
which breaks our build when we tried to bump the version.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3237
Regression: using #del() in pipeline on clustered connection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Using del() in a pipeline on a clustered connection should always execute after the earlier commands (e.g. get) in the pipeline. We‘re using Redisson as the connection factory for a spring-security-oauth2 token store, which uses this behavior.
See previously #2680.
Actual behavior
We’re getting NullPointerExceptions, because the one of the gets returns null. It looks like #3153 re-introduced this error, because it always executes del async, regardless of whether the connection is pipelined.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3238
Redis elasticache (ReplicatedServersConfig) RW/RO endpoint or all nodes?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am trying to use redisson to connect to an AWS Elasticache (not cluster) redis,
I can't find a clear answer on what 'nodes' should I list in redisson config.
Should I put : (using AWS front endpoints)
(in the past I used the master.myredis... directly in a node application, didn't dig more into it then).
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3239
How to programmatically initialize redisson hibernate second level cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My application uses:
I am using spring boot along with redisson for http session management and spring data. The configuration is programmatically initialized and works well.
I am trying to add hibernate 2nd level cache back by redis. I cannot find documentation on how this can be done programmatically. I have the following beans: RedissonClient, RedissonConnectionFactory and RedisTemplate
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3240
Enums in ReadMode.java seems to have non inclusive language
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
The enum variables defined in ReadMode.java has wording that is being considered non inclusive in tech industry.
Describe the solution you'd like
Use one of the preferred alternatives like Replica, Primary, Secondary, Follower, Responder.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3241
RedissonLocalCachedMap: putAllOperationAsync wrong Lua script for Reconnection Load strategy
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In RedissonLocalCachedMap : putAllOperationAsync method, the below LUAscript is executed.
As highlighted, if the reconnection strategy is LOAD, then we are calling hmset, ideally it should be ZADD, as this is used  store the score and ids in sorted set.
Expected behavior
To store into sorted set.
Actual behavior
Trying to store into Hashmap and failing with error saying that, invalid arguments for hmset.
Steps to reproduce or test case
Create a RedissonLocalCachedMap with ReconnectionStrategy as LOAD. And call putAll operation on localCachedMap.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3242
isHeldByCurrentThread() goes wrong
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3243
Is there any method can tell multiLock is held by current thread?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In RedissonMultiLock method isHeldByCurrentThread direct throw unsupportedOperationException.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3244
redisson Chinese document configuration error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson Chinese document configuration error！
Chinese document configuration by  yml
This configuration is wrong：
The correct configuration is：
clusterServersConfig:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3246
config sentinelAddresses with k8s service address(ClusterIP) error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
may i ask if i can only config the sentinelAddresses with fixed ip address?
in my k8s env,there are three redis sentinel pods(ip may change when restart),these pods match k8s service(clusterIp):
i use this service address to config sentinelAddresses,found constantly error log.
Expected behavior
connect redis correct.
Actual behavior
constantly log error like
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3247
Client unable to discover cache node because of primary node failure
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Our cache cluster has 3 shards with single master in each shard and 0 slaves.
Expected behavior
When the Redis cluster node fails aws(elastic cache for redis) will create a new node and replace the failed node. After the replacement is successful client should be able to discover the new node again.
Actual behavior
Redisson client is unable to discover the new node. And all the calls are failing until we force the re creation of the client from the start.
Steps to reproduce or test case
We are working on AWS ElastiCache for Redis
Our cache cluster has 3 shards. Each shard has 1 master and 0 replication nodes.
When one of the shard’s primary node fails(happens in case maintenance) all the calls which get directed to that particular shard fail after that.
This behaviour is observed only when there is some traffic at the time of node failure. If there is no traffic at the time of node failure the client seems to work perfectly fine and serve requests at later time.
I have observed the following log statements:
Not really sure why a slave with same address is getting added and removed.
My guess is it is removing the wrong node.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3249
Connection leak while using Redis-Redisson 3.13.6?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I use Redisson 3.13.6, and connect to redis 5.0
when started, the connection number is constantly increasing, all connections are established, like the following:
the connection number is increasing from dozens to thousands, #2771 tell us fixed,but  I suspect connection leasing is still exist
this is my redissonconfig
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3250
Shared session between Tomcat Session Manager and Spring Boot Redis Session
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi.
In our organization, we are building a new version of our website on Spring Boot and we are using Redis for session storage via spring session data redis. In our old application, session is stored in tomcat memory. As for now, we are trying make to the application share session data, by updating our old website with Tomcat Session Manager, but we are having an issue with synchronizing data and session expiration strategies and session data.
Spring Session
Tomcat Session Manager
Is there any way to synchronize the way, how these modules work with sessions other than writing implementation or put spring boot application in nonembedded mode?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3251
Use lua script to run directly on the linux server, you can check the data, use redisson, you can't get the data
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
this is my lua file
return resultsWithParent
but search data from redisson ,it can not get datas;
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3252
Problem to deserialize object with jackson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey guys could you tell me what i am doing wrong here
I have an interface and it has many different implementations, so for example there is a call create account it should return CreateAccountResponse or any other interface realisation
Could not execute the callcom.fasterxml.jackson.databind.exc.InvalidTypeIdException: Missing type id when trying to resolve subtype of [simple type, class com.opngo.nowos.nowos.api.response.DataResponse]: missing type id property 'operation' (for POJO property 'response')
Here is my Interface
Here is one of the response objects that implements the interface mentioned above
Here is main Response that have that interface that should bring correct response object
And finally just wanted to mention that the goal of such approach and receiving different responses for each call is to test their properties, so i am casting interface to the correct class depending on the call
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3253
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3254
RedissonFairLock.tryLock returns with false after timeout even when lock has been released
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We use RedissonFairLock in our application to synchronize across multiple threads. Whenever there are several simultaneous lock attempts on the same lock, one or more of the waiting threads always errors out with tryLock returning false after the waitTime configured, which is almost 5 mins, even though I can clearly see that the other threads that were holding the lock have long since released it.
Is there a known issues with RedissonFairLock? Also, would switching to a non-fair lock help (we don't really need fairness guarantees)?
Code used to obtain lock -
Redisson version being used is v3.13.6
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3255
Redisson Multiget - Getting multiple key values in single call form Redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a redis cache where each key is of type list and from redisson i want to make a map of each list key and their size...
Below code is working fine but I want to make single call to redis cache.
I don't want to make a call to cache multiple time. Below code should be changed to single call
Thanks in advance
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3256
RetryAttempt setting isn't applied to connection during startup
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3257
org.redisson.client.RedisException: ERR Protocol error: invalid bulk length
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using redisson 3.13.6, redis 5.0.7
Putting an HashMap we are getting this exception:
Current redis configuration is proto-max-bulk-len 1024mb
The hashmap size is not exceeding this limit
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3258
RPatternTopicReactive.removeListener() not working
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
After calling removeListener with reactive client, we shouldn't trigger the listener anymore
Actual behavior
Listener is triggered after calling removeListener with reactive client
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3259
ClassCastException when trying to get count of elements within a range in sorted set for rxjava2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am getting a ClassCastException when trying to get the count of elements within the score range in a sorted set using the rxjava2 client.
code snippet:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3260
“RateLimiter is not initialized” exception when expire the key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
normal
Actual behavior
Steps to reproduce or test case
My Code
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3261
ClassCastException when adding elements to sorted set using rxjava2 client
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am getting a ClassCastException when trying to add multiple elements to a sorted set using the rxjava2 client.
code snippet:
redisson version - 3.13.6
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3262
Command still hasn't been written into connection! Increase nettyThreads and/or retryInterval settings
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson version: 3.13.4
This will be the case when you visit redisson every time the project is started，nettyThreads is the default number
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3263
Exception "Unable to write command into connection" throwed after two weeks time running with redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The exception stack info is below:
We can't find the channel port 55134 in the client vm, but other channel worked normally, the redisson version is 3.11.3
I want to known how to lead the ConnectionWatchDog to check the channel in time.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3264
Would be nice to have a way to extend the TTL on an RLock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
I have some situations where I'd like to keep the lock acquired for potentially a long time, but I don't find out until I've held it for a while.  I don't want to set a long TTL because I might finish soon; I basically need to extend the acquisition of the lock in increments.
Describe the solution you'd like
A simple RLock.setNewTTL() method, or similar.
Describe alternatives you've considered
https://redis.io/topics/distlock describes how this can be accomplished by sending a Lua script:
If the work performed by clients is composed of small steps, it is possible to use smaller lock validity times by default, and extend the algorithm implementing a lock extension mechanism. Basically the client, if in the middle of the computation while the lock validity is approaching a low value, may extend the lock by sending a Lua script to all the instances that extends the TTL of the key if the key exists and its value is still the random value the client assigned when the lock was acquired.
It would be nice if Redisson's RLock API could take care of this for you.  Apologies if there's already a way to do this that I missed.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3265
Add LFU eviction support for RMapCache object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3266
the lock expiration  failed when the network breaked.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a problem ,this is code:
at imeUnit.MINUTES.sleep(5), break the network，the program throw a network exception,restore the network,find the lock expiration  failed,other thread can lock the key ,is a problem?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3267
Redisson used disconnected channel to write data
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My redisson version is 3.13.3, and the configuration is :
The slaveConnectionMinimumIdleSize use default value.
After a two weeks time running, an exception "Unable to write command into connection" thrown
The stack info is:
We can't find the port 55134 in the client channel,  why Redisson used the disconnected channel to send data?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3268
Print the SearchDomainUnknownHostException repeatedly when connected to redis sentinel cluster on the Kubernetes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I use redission 3.13.6 to connect to the redis sentinel cluster on the kubernetes,it will print following logs every few seconds.The address of cluster is redis-cluster:26379 which is the servername on kubernetes. But when I change the address to its IP address which is 172.30.49.77:26379,the error is missing.How to resovle this problem when use servicename address.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3270
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3272
Tomcat session manager registers UsageValve with Engine pipeline
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Since the Manager can only be registered with a Context, the UsageValve should not be added to the Engine pipeline, but to the Context pipeline. Or the UsageValve should take into account that not all Sessions are RedissonSessions.
Actual behavior
If the session manager cannot find a UsageValve, it adds a UsageValve to the Engine pipeline. The UsageValve assumes all Sessions are RedissonSessions.
Steps to reproduce or test case
Have two webapps, one with the default Session Manager, one with RedissonSessionManager
Access the one with the RedissonSessionManager first
Then access the one with the default Session Manager
An internal server error is returned and the following error is logged
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3273
Unable to send PING command over channel:
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3274
Support TTL for RBuckets.set
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently RBucket supports set with TTL
This is a request for similar support in RBuckets for setting multiple key values with specified TTL.
thank you.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3275
Can I get and update an object in an RBatch operation?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Apologies if this has been asked before, or if this is the wrong forum for this kind of question.
I'd like to update the timestamp field of a java object in an RBucket, keeping the object's other fields as-is.
Can I do this in the context of an RBatch?  It's not super clear from the documentation I've found - I can't tell whether batching only supports pipelining a bunch of writes, or if it can do reads and then writes based on the results of those reads in a single batch operation.
pseudocode for what I'm trying to do:
I'm not sure if the batch will wait for the result of the read before updating it and performing the write.
If this isn't the right way to do it, should I just perform a synchronous get followed by an async update?  Thank you.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3276
redis-clusters mode with one master node crashed , why redisson client still connect the crashed node?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi ,
i want to use redis-cluster and client is redisson, i ran test case as follow:
step 1: run the test code;
step 2: during the loop , i killed one master node (192.168.199.142:8001) .
on console log : there still has command set request to  192.168.199.142:8001 node and continuous attempt try output ,  is that right or reasonable? thks.
or how can i do to avoid the request to 8001 node?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3277
Does RLocalCachedMap get invalidated with the changes in Redis-Server?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
My use case:
I have a single node application(MyApplication) which uses RLocalCachedMap (say testMap)to communicate with redis-server and also cache data locally in aplication.
On the other hand there is another Non java application say anotherApplication(which we have no control of) will update the data in redis-server on same map testMap.
In which case, does RLocalCachedMap in  MyApplication will invalidate the local cache entries when there is change in redis server ?
If not, how would you suggest to implement Redis Server assisted client side caching?
Is there a way that i can use listen to redis-server invalidation events and keep the local cache in sync with redis-server data (with or without RLocalCachedMap as Its not mandate for use to use RLocalCahedMap). ?
Please suggest.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3278
Does a redisson retry attempt invoke the load balancer again?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Given one master node and multiple replica nodes with Sentinels enabled, Redisson configured to read from replica nodes only, and round robin load balancer and retries enabled. In case of a Redisson retry attempt, does it invoke the load balancer again to determine a new replica node or does it talk to the same replica that it had unsuccessfully communicated with before?
Our use case is such that we see are witnessing a 50% drop in commands processed per second when a single replica node restarts. We have retries enabled in Redisson but they don't seem to be helping so we are wondering if the retries also go to the same failing node.
Redisson version: 3.13.6 Redis version: 5.0.6
The contributing guidelines dont really say anything about where to ask questions so I also created a SO question:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3279
How to execute redis 'client tracking on' command ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I would like to subscribe to the invalidation messages from redis-server using redisson.
I looked through commands mapping:
But not found any method associated there.
Also checked the low-level client but RedisCommands.java also does not have CLIENT TRACKING ON.
Could you suggest how to achieve it ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3280
After immediate put call get method returned null
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using Rmap/RadissonMap , and use fastPut method to put key in cache and immediately after this method call ,Call get method and that return some time null and some time working fine please suggest solution for this issue.
My redis is in master-slave architecture with sentinel.
Redisson client configure as sentinel configurations so my understanding all the put should used master node of redis and all get should use slaves.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3281
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3282
redission remote service does not support java8 class Optional serialization
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redission remote service does not support java8 class Optional serialization
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3283
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3284
Using external EventLoopGroup with the Blocking API
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using Redisson RBLoomFilter  over Vert.x and I need to call the contains method, which is blocking (i didn't find any async option)
Is it possible to use Vert.x Netty EventLoopGroup instead of Redisson Netty threads without blocking the eventloop?
The blocking nature of the contains method blocks netty threads? or is it using a different thread pool for blocking operations?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3285
RBloomFilter contains async Implementation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using RBloomFilter and I saw there isn't a async variation of the contains method.
Why is that? is there any particular reason it's the only method missing an async variation?
Is it possible to implement it by my self with another redis client?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3286
Documentation out of date with 3.14.0 for spring sessions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Could you please update the docs for enabling spring sessions with redisson.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3287
Why does it take RLock nearly 1 second to get the lock?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There are only 10 redission client connected to the redis server, no more than 4 threads competing for the lock.
It is weird that my redis server cpu and memory usage is no more than 10%.
My redisson version is 3.12.5.
Is there any one knows the reason?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3288
how to manual change read mode at redis cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have some high loading action, I hope it can run at SLAVE nodes, and other action at MATER nodes.
ex：
scan key by pattern and mget value by keys at SLAVE nodes.
normal get and set at MASTER nodes
how to assign nodes when I use some high loading action？
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3289
BiHashMap  not perform in bijection manner
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,Author or team member of Redission. I find a convenient util class named BiHashMap when I read source code of redisson. In my opinion, it will perform in bijection manner. I try to use it but find some problem. here are some descriptions
Expected behavior
return a value equal to  parameter which is already put into the map  when use map.reverseGet(map.get(param))
Actual behavior
return a value not equal to parameter which is already put into the map  when use map.reverseGet(map.get(param))
Steps to reproduce or test case
We can't guarantee all the inputs is bijective.if it should perform in  bijection manner , does it better to  use some mechanism when conflict occurs(delete illegal old data or forbid it when put operation will result in a conflict data ... )
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3290
RedissonMap.keySet(pattern, batchSizeHint).isEmpty() is inefficient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissionMap.isEmpty adopts the default AbstractMap.isEmpty, which checks size()==0. RedissionMap.size() iterates all keys (even with pattern), which is inefficient with large HASH.
Suggest to override RedissonMap.isEmpty() which checks iterator().hasNext() instead.
Not sure whether this optimization applies to other RMap implementation.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3291
Redisson creating new connections when using pollFromAny
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have the following code.
redisson.getScoredSortedSet(keys.stream().findFirst().get()).pollFirstFromAny(1, TimeUnit.MINUTES, keys.toArray(new String[0]))
The above code results to connections getting acquired and released every second as follows. What can I do so that it reuses connections from the pool rather than creating new ones.
I am connecting to Elasticcache which is running redis with 2 nodes and cluster mode enabled
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3294
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3296
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3297
Rename Empty BloomFilter Throws RedisException:no such key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
possible reason：
Bloom Filter is empty now and key {foo} doesn't exist ,so rename failed
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3298
RedissonMap.keySet(pattern, batchSizeHint).isEmpty() is inefficient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3300
RSet broken for serializable custom pojos
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When working with multiple service instances and using RSet as a distributed cache, add() will create a duplicate for a custom serializable pojo even though equals() and hashCode() are implemented correctly. Also the contains() method will return false when checking the same pojo from different instances OR from the same instance with a refetched RSet like
Actual behavior
RSet's contains() method returns false. RSet's add() method will add the same object multiple times.
Steps to reproduce or test case
Take any simple serializable pojo, add it to an RSet. Get the RSet again from the redission client and call its contains() or add() method with the same object. contains() will return false, and the same object will be added again.
The size of the RSet will increase with each add(). Using the RSet as a constructor parameter for a native HashSet(), its size will  always be constant, since the duplicates are not added as expected.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3301
First call to RMapCache get() 10 times slower than subsequent calls why?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Trying to understand the slow performance of get(). I run a test program:
What is happening on the first call that isn't happening afterwards?
Many thanks for your help.
WHat is happening
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3302
RBlockingQueue entries are sometimes lost.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RBlockingQueue entries are sometimes lost.
Expected behavior
All entries added to the queue with put are returned with poll.
Actual behavior
Sometimes a queue entry will be lost when poll returns.
Steps to reproduce or test case
Minimal code sample used to reproduce:
The bug reproduces within 100 iterations in included sample. The poll timeout is set to 1 ms to increase likelihood of the error happening. In a live system I have this set to 5 seconds and I get this error several times a day.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3303
Why does using a redisson container slow down io.netty?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
An Attempted Optimization:
I was benchmarking an application and realized that the majority of time was being spent waiting on a jedis socket.
The slowness appeared to be from the accumulated network round trip of a particular jedis call.
Seems like a good use-case for a cached redisson container, so I opted for SetMultimapCache.
And sure enough, it reduced the overall time spent in my function from 24% to .1%
A new problem:
However this seems to have caused even more time to be spent in io.netty.  So much so that the overall duration (from the client's perspective), is significantly slower.
Do you know why this is happening?  My understanding so far is that both grpc and redisson are using netty, and maybe they aren't playing well together?  Or I have some kind of bottleneck which is now being stressed further by optimizing the main worker thread.  Or I don't understand netty or redisson enough to see what's happening.
Attempts to fix:
I've tried to setup the resisson client in many different ways.
I've tried a different number of nettythreads.  I've tried different eventloop groups with different thread counts.  I've tried changing the IO ratio to something lower/higher than 50.  If it helps, I'll show you the diff of how I integrated the container.  It basically just shows how I moved away from jedis calls in place of the redisson container:
The diff shouldn't be that important, but I didn't want to leave anything out.  These are the changes I've made with the configured redisson client that result in speedup where I was trying to optimize, but signifcant slow down on the client side and increased time spent in io.netty?
Do you know why this is happening?  What else can I try?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3304
Why does the first IP of the cluster automatically change to the intranet IP?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is my configration file
This is my log. note that the ip of port 7000 has changed,
When I test the code on my computer, I always get an error: Can't connect to master: redis://172.18.40.70:7000 with slot ranges: [[0-5460]]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3305
Make RxJava/Reactive libraries optional/move them to separate modules
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Curently, redisson library itself is more than 2MB. When added Netty, another 2.5MB, along with RxJava, +2MB, & Project Reactor, 1.5MB, its nearly 10MB in total dependency size, even without Spring etc. I realized that both RxJava &  Project Reactor classes are not necessary for all operations, mostly has their own packages for operations/data structures etc. I believe it'd be extremely useful to move them to their own separate modules so anyone who wishes to use them, either one or both, can add specifically, but the core will be free from those dependencies & be more compact.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3306
Error starting project:Unable to connect to Redis server.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There is a probability that it will happen, not every time it will go wrong.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3307
RPriorityQueue/RPriorityBlockingDeque peek instance object, update value won't save to redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Being confused.
If won't save update changes to redis automatically,  "RPriorityQueue/RPriorityBlockingDeque"  feature is almost no help  personally.
The memory address keep change:
step 3: The head of RPriorityQueue, "using" property still be "false"，no matter get from redis later again .
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3308
An exception was thrown by org.redisson.misc.R in edissonPromise$$Lambda$160/1930319715.operationComplete() post redisson 3.11.5 too
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
With redisson sentinel mode getting null pointer exception
Expected behavior
Sentinel configuration should work as per expectation in redisson version 3.11.6 and 3.14.0
Actual behavior
Getting below error :
Steps to reproduce or test case
On trying to connect to redis labs with below sentinel configuration we are getting above issue.Connection to redis is successful.But I continuously see above error its like every milliseconds.
where  'redis://127.0.0.1:8001' is address of service discovery in redis lab.
Similar error was fixed earlier in redisson version 3.11.5 .reference link : #2355
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3309
Unable to send PING command over channel ClosedChannelException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3310
How to optimize slow queries by Redisson RSet.readAll() ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Recently, I used Redission RSet to save Object Collections (size from 10,000 to 40,000). When I used readAll() action to fetch all of objects in the set, it caused a lot of slow queries(cost over 100,000 microseconds).
I know that storing too many objects, and that too long a key can be a performance drop, so I'd love to know how I can store so many objects and read them all efficiently with Redisson.
Thanks~
Object Example:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3311
AccessorInterceptor#removeIndex: incorrect behavior of removeIndex(RMap<String, Object>, Object, Field) method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Correct removed index if exists in cluster mode or not removed if value index does not exists.
Actual behavior
Current call of AccessorInterceptor#removeIndex(RMap<String, Object>, Object, Field) raises an NPE if index value does not exists.
Steps to reproduce or test case
Persist and delete entity
See throwed exception:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3312
AccessorInterceptor#removeAsync: incorrect behavior of removeAsync(CommandBatchService, String, String, Codec, Object, String) method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Correct removed index.
Actual behavior
Current call of AccessorInterceptor#removeAsync(CommandBatchService, String, String, Codec, Object, String) raises an script exception ERR Error running script (call to f_7f573e8a56b15c812f93887e04b9fdb40d72f0e6): @user_script:1: WRONGTYPE Operation against a key holding the wrong kind of value.
Steps to reproduce or test case
Persist and delete entity
See throwed exception:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3313
Allow to store cache misses for JCache local cache.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3314
netty4.0.23.Final, a post request, got exception: java.lang.UnsupportedOperationException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3315
StringIndexOutOfBoundsException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Input code:
Exception Message:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3316
RedisTimeoutException: Unable to acquire connection after Redis cluster back to normal
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
my redisson version:3.12.3
redisson client:
I use redissonMap to caching data and use RScheduledExecutorService to schedule tasks. Why there's no connection to use  ? Looks for your help, thanks.
My application error:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3317
need to trigger RLock.unlock() twice to remove lock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi
i have strange behavior in my program. I am trying to implement something like "getAndLock then PutAndRelease".
Here is my getAndLock function:
Here is my PutAndRelease function:
i can see that after 1-st rLock.unlock(); lock is still alive (presented in reddis and rLock.isLocked() == true) and after 2-d rLock.unlock() it is released (removed from reddis and rLock.isLocked() == false)
Why is it so? why do i need to trigger rLock.unlock(); multiple times until it finally removes lock?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3318
Issue with redisson - Exception Command still hasn't been written into connection!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We are using AWS elasticache Redis with cluster mode enabled. We are seeing below issue intermittently from Redisson, please guide how to resolve this issue.
Below is the cluster configuration:
I have tried increasing netty threads, connection pool size and retry attempts.
Average load on our system is around 500 requests/sec.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3319
Add StoreMode setting for JCache local cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3320
ERROR [io.netty.util.ResourceLeakDetector] - LEAK:
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I run redisson,there are some error logs:
LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3321
Support transaction in live-object interceptors
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to use  transactional isolation functionality in live object interceptors, or do I have to embed in the library code to implement the feature?
Do you plan to implement it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3322
Add Tomcat 10 support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3323
RedissonMultiLock#tryLock  The difference between leasetime and newLeasetime
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In this method, both waittime and leasetime are specified. That is to say, the leasetime and waittime of the input parameter are not equal to - 1. When locking, newleasetime is used, which is twice as much as waittime. Why not use the leasetime in the input parameter
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3324
Interrupted Exceptions are hidden under Unexpected exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If an InterruptedException is thrown while waiting for RedissonBuckets.get, redisson throws a  RedisException with the message Unexpected exception while processing command.
Expected behavior
If an interrupted exception is throw while waiting for RedissonBuckets.get, a RedisException wrapping the InterruptedException should be throw so the clients can implement proper error-handling.
Actual behavior
Exception that is not clear to pin-point the actual reason:
Reproduced on 3.13.6 and 3.14.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3325
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3326
What's the best way to iterate through a Mapcache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Looking at this example, there are different ways to iterate though a map
In addition, I can also use Java native API
Suppose the map has millions of entries, what's the best way to iterate through the map to get all key/value pairs, without blocking Redis?
My understanding is that KEYS command may block other clients, so HSCAN may be better. Does Redisson support the map iteration based on HSCAN?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3327
Avro utf8 string cannot be deserialized properly using JsonJacksonCodec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Avro Utf8 string cannot be deserialized properly by jsonjacksoncodec
Avro utf8 string is serialized as binary object but being deserialized as string hence causes transformation exception
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3328
Get value failed in cluster mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Both redis in 172.21.22.22 are slave , when there is  one key in 9000‘redis and  one key in 9001`redis,   failed to get key in 9000'redis by RedisTemplate.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3329
Add support MEMORY STATS command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3330
Where is RXAResource class?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In Chinese wiki page you mentioned RXAResource class but I couldn't find in source code. Where can I find it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3331
Problem with serialisation/deserialisation query cache for Hibernate Cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using:
codec: SnappyCodec
When I try to put query data to Redis I receive an error
Then I try to change the codec to Kryo5Codec
What am I doing wrong?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3335
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3336
Add setAndKeepTTL() method to RBucket, RBucketRx, RBucketReactive interfaces.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3340
Redis Cluster slave "down" on slave connect timeout when startup.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redis Cluster slave  reconnect or report error on startup after connect timeout
Actual behavior
Redis Cluster slave report "down"
Steps to reproduce or test case
Cluster slave connect timeout on startup
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3341
Add min idle time parameter to listPending() and pendingRange() methods of RStream object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3342
Add autoClaim method to RStream object.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3343
Add addIfExists() method to RScoredSortedSet object.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3344
Add addIfGreater() and addIfLess() methods to RScoredSortedSet object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3345
about slave node down status.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
flags field that “sentinel slaves xxx” command result contains “s_down” or “disconnected”, manager will freezed the node,
but master-link-status than “sentinel slaves xxx” command result is “err”, slave node is in “LOADING Redis is loading the dataset in memory” status, why not add this condition in slave node state check? just like
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3346
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3347
The timeout configuration of MapReduce does not work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There are two data processing services here. When I use MapReduce to process data, the timeout (30 s) is set. However, when one of the services in the process of reducing data goes down unexpectedly, there is still no response from the map after the timeout, Does the data processed by the down service need to be reallocated to other machines? What is the specific meaning of this timeout? Is there something wrong with my use?
The following pictures are related information:
This is the normal data processing service:
This is a service that has been down unexpectedly:
This is the configuration code information:
This is the now time:
@mrniko thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3348
Redisson mapwriter
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using RMapCache<String,Object> with map option with write mode as WRITE_BEHIND
now when i put something in cache after particular delay it is getting executed after dealy provided,
but what i need is map writer should pick entry from map unless it is cache but it is not doing so it is only getting executed once.
Can anyone help what can i do in this case or there is any alternative?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3349
Spin lock with exponential backoff
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonLock uses pubsub mechanism to get notified about changes to lock. According to the cluster spec (https://redis.io/topics/cluster-spec), currently messages are simply broadcasted to all nodes in the cluster. It makes this lock inefficient in clusters with more than 5 nodes.
It would be great to have a spin lock with exponential backoff, because it works well with Redis's horizontal scaling.
If the idea seems fine to you, I can prepare a PR in a few days, just let me know. If not - sorry for taking your time, feel free to close the feature request.
Best regards,
Danila Varatyntsev
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3350
Add readUnion() method to RScoredSortedSet object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3351
can i use redisson with spring cloud getway and webflux
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when i use redisson in spring cloud getway filter,
but when i unlock this rLock report error log not locked by current thread , this rLock is not the same thread when i locked, how can i fix this problem
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3352
add readIntersection() method to RScoredSortedSet object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3353
BaseRedisBatchExecutor NullPointerException with Redis Cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson 3.14 - Redis Cluster with cluster-require-full-coverage=no throwing NPE
I believe the NullPointerException happens because the slot is not allocated.  "MasterSlaveEntry msEntry = getEntry(source);"
returns null, and then get() is called with a null parameter, which is not allowed by the ConcurrentHashMap
Could this be updated to return a Redisson exception?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3354
RScript eval error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3356
add readDiff() method to RScoredSortedSet object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3357
Redis Cluster master down and restart，redisson can‘t update cluster state
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
redis cluster master down one by one.After a period of time, restart master node, redisson client can't update cluster state
Actual behavior
redisson can't write command to master, and report error.
Steps to reproduce or test case
It doesn't have to happen
1.test case
3 master and 3 slave
restart all master and There's a certain probability
2.redisson can't update cluster state exception
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3358
add diff() method to RScoredSortedSet object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3359
org.redisson.client.RedisTimeoutException: Command still hasn’t been written into connection!  Increase nettyThreads and/or retryInterval settings.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Got this exception continuously for a minute and then became fine. Would like to know what is the root cause of this.
Using Redisson: 3.13.2
org.redisson.client.RedisTimeoutException: Command still hasn’t been written into connection!
Increase nettyThreads and/or retryInterval settings.
command: null, params: null after 3 retry attempts
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3360
FstCodec error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson-all-3.12.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3361
add rangeTo() method to RScoredSortedSet object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3362
add revRangeTo() method to RScoredSortedSet object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3363
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3365
How to implement the contains of RDelayQueue To specify fields for the same of value.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to implement query the message that exists in the RDelayQueue, and remove if it exists function.
The message DelayEvent is
The value is ture about this TestCase:
The value is false about TestCase in the below:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3366
Have a Bypass Mode? when redis down.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, I used redisson-tomcat-7 in my project.
Everything is ok.
and I tested how to works when redis down. Tomcat returned 500 Error.
My question is
Have a Bypass Mode? when redis down.(Use Local stored sessions)
If exist, Let me know how to use Bypass Mode.
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3367
Use System.nanoTime() in IdleConnectionWatcher to avoid clock drifting
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3368
RLocalCachedMap with Broadcast Mode tracking.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Can RLocalCachedMap be used with Broadcast mode tracking?
In Redis CLI we would enable this as "CLIENT TRACKING on REDIRECT 10 BCAST PREFIX"
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3369
Repeat consumption(multiple listeners)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3370
[Redis Cluster] RedisTimeoutException: Unable to acquire connection! Increase connection pool size
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson should not exhaust the connection pool. In other words, it should release connections after every successful command.
And even if the pool is exhausted that should not make Redisson freeze completely until restarted I guess.
Actual behavior
We have experienced this error in production and now I have managed to reproduce the error with a clean Spring Boot project and one endpoint that executes a lua script on a redis cluster. I am using Locust (locust.io) for load testing.
More on how to reproduce the error later.
The screenshot shows an example Locust load test result: the first couple minutes are fine, I get around 1000 req per second and no errors.
But then requests start to fail and response times go up to ~6 seconds. Sometimes it takes around 5 minutes as the test is a bit random.
This is the log for one of those failed requests:
Once this happens, even if you stop the test, Redisson no longer recovers. All requests fail after 6 seconds and you have to restart the server for it to work again.
By the way, those 6 seconds seem to be related to retryAttempts and retryInterval settings, but even if I set retryAttempts to zero, it still takes 1.5 seconds for each request to fail. Why?
Anyways, the main problem is that it fails.
Steps to reproduce or test case
I have created a clean spring boot project with one endpoint that executes a lua script. The script is basically rate limiting:
The endpoint just takes the IP of the request (from a "True-client-ip" header) and executes the script with it, returning the IP and the number of requests made so far this minute so you can see if it is working or not.
And the test makes a bunch of requests to this endpoint, faking the True-client-ip header with 50 different IPs in an attempt to simulate a realistic environment.
So, how to test:
Download and extract the demo project
Change RedissonConfiguration to connect to a redis cluster. Ours has 3 master and 3 slaves.
Start the server and see if localhost:8080/redisson works on your browser.
Start Locust with locust -f demo.py from the root project directory (you will need to install locust with pip3 install locust)
Open Locust UI on your browser (localhost:8089) and enter the following parameters:
20 users, 5 spawn rate,
Wait a couple minutes for the server to explode (hopefully)
And those numbers probably are not even important, but now that I have managed to reproduce the error I don't want to change them.
Check RedissonConfiguration for the details.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3371
The following method did not exist: org.redisson.api.RTopic.removeListener(I)V
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3372
Clarification on RLocalCachedMap and CODEC Types
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am working on a API which is a high TPS one (around 10000 TPS) for both read and write.My API makes use of Redisson Open Source to connect to AWS Redis and I am making use of RLocalCachedMap so that frequently used objects will be fetched directly from LocalCache. I have the following questions:
What is the unit of cacheSize? Is it the number of records. If it is number of records that this local cache can hold, then I am getting many errors related to server crash and restart if I increase the count to higher values. Each object size should be around 800 bytes. I am not sure why that is happening. Do you think it might be with the RAM of the server on which it is deployed?
What happens if I dont set the cacheSize. Per documentation it is unbounded (default value is 0). So what would be the max limit this local cache size occupies and does it do the cache eviction internally if the LocalCacheMap feels the memory is nearing its capacity.
This question is with respect to the Redisson default Thread Pool size. Right now, I am using the default thread pool options. Do I need to fine tune the thread pools or the default thread pools can handle 10000 TPS
This question is with respect to CODEC Types.
I am having an object which has generic as one of its attribute. When I push the object to AWS Redis through redission using the codec types SNAPPYV2, SNAPPY it pushes the value and while retrieving from AWS Redis I could see the object having the values populated except the values of generics attribute (guess this codec type skips the generics at the time of deserialization). If I use JSON Jackson Codec, I could see the complete values being retrieved from AWS Redis. Would there be any codec that you suggest that handles generics or do i need to write custom serialization logic to handle.
What would be the best codec type if I am going to push the object as Map<String, Object> to AWS Redis. I ran performance test with different codec types and almost each of them returned in the same time (JSON Jackson COdec being little faster).
To meet the High TPS, what should be the object i need to consider while inserting it into AWS Redis, should the object be the regular POJO or can I have it as Map<String, Object>
Also, it would be helpful, if you can share any articles that helps in improving the performance using Redisson to connect to AWS Redis
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3373
Will tasks submitted via redisson ExecutorService be executed after redis instance is restarted?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It's not an issue, it's a question I have not found an answer to in documentation.
Will tasks that were submitted via redisson ExecutorService be executed if redis instance is restarted?
For example, a task is submitted with a delay 10mins and right after it was submitted, redis is restarted. What will happen with that submitted task?
What if I have AWS ElastiCache with Redis Replication Group and Multi-AZ enabled - will that task be executed if it was successfully replicated to read instances and primary instance failed?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3374
time_to_live and max_idle_time doesn't work in redisson as 2 level cache in hibernate
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello everybody,
I try to use Redisson  as second level cache in my jpa spring boot application it works fine i see that it cache entities in redis it just i need to set a time to live and time to idle on cache entries i use this configuration below but it doesn't work:
I use redisson-hibernate-53 as dependancy
Any help on this will help, thank you.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3375
Can I make Redis soft dependency?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to use this library as my cache engine in my JPA application. As of now I understand if I configure this in my app - the app won't start if the Redis isn't running. Can I make this a soft dependency like if Redis server isn't running start the app without L2 cache?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3376
add ScoredSortedSetAddListener
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3377
org.redisson.client.WriteRedisConnectionException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When redis runs for a period of time, there will be abnormal connection
Actual behavior
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3378
Add createConsumer() method to RStream object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3379
Is redisson using write behind strategy guarantee data sync to DB"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I m exploring the use of write behind strategy, just wonder is it guarantee data sync to DB.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3380
add addIfExists() method to RGeo object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3381
add tryAdd() method to RGeo object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3382
No response after 1000ms
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3386
redisson client configuration when using AWS elastic cache with single end point but with replicas
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
what the optimal configuration when we use redisson as session manager and as a cache service , and the Redis cache provided by AWS elastic cache with a single endpoint that had replicas in the case of AZ failure ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3387
RPC is very slow
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RPC  very slowly. It takes about 1 second to get data for 10 times. How to solve this problem
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3388
Can I make redis strong consistency in active active HA environment
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi
can I make redis strong consistency in active-active HA environment through Redisson config? We need a synchronous replication between redis nodes.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3389
RMapCacheReactive.getLock returns org.redisson.RedissonLock instead of org.redisson.api.RLockReactive
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
RMapCacheReactive.getLock should return an instance of org.redisson.api.RLockReactive
Actual behavior
RMapCacheReactive.getLock returns an instance of org.redisson.RedissonLock and throws exception:
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3390
RBatch response order with cluster env?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In cluster environment batch executed in map\reduce way. It aggregates commands for each node and sends them simultaneously, then result got from each node added to common result list.
Read above tips, I was not sure about responses order for origin commands.
Could you help me make sure about this?
1.When commands send group by slots, but I want know responses order is right with original commands?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3391
If readLock is blocked by writeLock then readLock.isLocked() should return true
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
If readLock is blocked by writeLock then readLock.isLocked() should return true (see step 4 below)
Actual behavior
If readLock is blocked by writeLock then readLock.isLocked() returns false. (see step 4 below)
Note: readlock.tryLock() behaves as expected
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3392
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3393
Redisson 3.12.5 unlock hang forever
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson version:3.12.5
redis version:5.0.7
redis cluster mode: 3 master 3 slave deployed in vm
question descript:
In my production environment, a thread(dubheTaskExecutor-pool-2-thread-836) hangs up forever  whe invokes RedissonLock.unlock() . And I never found any error  in my application log. I am desired to find out if is a bug in redisson 3.12.5.The thread dump file is below(core part) :
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3394
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3395
Dead connection stay in pool forever if server is not responding.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Dead Connection automatically reconnect after channel inactive.
Actual behavior
In org.redisson.client.handler.CommandsQueue, we only call sendNextCommand to poll command if server responded with data or write was failed in the first place.
But if client write was successful and server is not responding, our QueueCommand is still staying at the front of queue, next time we call sendData, org.redisson.client.protocol.QueueCommandHolder#trySend will return false and nothing happens.
So eachtime we use that connection to write something, we got  RedisTimeoutException:  Command still hasn't been written into connection!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3396
Selectively store session attributes to redis using redisson tomcat based configuration.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi ,
I am implementing redis based tomcat session management using redisson. I want to filter out some of the session attributes which gets saved in my redis database session. Is there any way to do so through configuration? Something similar to SetAttributeFilter in MemcachedBackupSessionManager?
Here is the single instance config YAML file i have used:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3397
Allow password (or any secret) to be set at run time after yaml config read
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
Add a "setPassword" method to org.redisson.config.Config;
Motivation:
I'd like to configure everything EXCEPT the password in .yaml.
But allow a programatic setting of just the password after the .yaml config loads.
This way I can pull that "secret" out of a "vault"   ( hashicorp vault, azure key vault, amazon aws kms, etc)...and set it at run time.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3398
org.redisson.api.RAtomicLong#expireAt(long) Cause the value to be deleted
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson:3.15.0
redis:4.0.9
org.redisson.api.RAtomicLong#expireAt(long)
Cannot find the key of aKey after execution
Why is this ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3399
Add expireAt(Instant) method to RExpirable objects
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3400
Connection leak when redis cluster has "127.0.0.1" in its node list.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
An exception in adding a cluster member connection should not result in a connection leak
Actual behavior
Our redis cluster had two nodes which had configured themselves as "127.0.0.1:6379" in the cluster configuration.  Upon connecting two this cluster, redisson properly threw exception
Later in the logs we find, repeatedly
Each of these subsequent attempts appear to leave a new connection open to the redis node from which redisson is gathering cluster nodes information.  Over the course of ~2h, this used the remainder of that redis node's 10k connection limit.
Steps to reproduce or test case
I'm not sure how our redis server came to this state originally, but I was able to reproduce by stopping a cluster member, changing the address field in the "myself" line in the cluster config (in our case, /var/lib/redis/redis-6379.conf) from
Where $redisHost resolves by dns to A records for each node in the redis cluster.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3401
Add random() method to RScoredSortedSet object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3402
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3403
Support for storing data locally
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is support for storing data locally provided so that number of calls to redis can be reduced?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3404
Can't execute SENTINEL commands on
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
exception log
Can't execute SENTINEL commands on /192.168.28.129:63376
There are three sentinels in total. This anomaly occurs every time you start it. A sentinel anomaly appears randomly, but it can be used normally.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3405
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3406
Integer with Spring Boot 2.3.8 in Mac Warning：ClassNotFoundException: io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
no error log
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3407
Redis cluster master restart cause tps down and can't recover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redis cluster master down, redisson client update cluster state, and tps come down.  After a period of time, restart master node,  tps come back to normal.
Actual behavior
restart master node,  tps  can't recover , just come back a little.  And server no error.
Steps to reproduce or test case
5 master and 5 slave
master 1 down and wait for slave become master
restart master 1,  observe tps
version
redisson version : 3.14.1
Looking forward for your response, Thank you!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3408
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3409
Redisson api reconverts Stream's linked hash maps into hash maps
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi guys!
thanks a lot for your brilliant product it helped us tremendously. However I believe that we are facing a bug there.
redissonClient.getCommandExecutor().read(name, RedisCommands.XRANGE, name, "-", "+")
returns LinkedHashMap
while
redissonClient.getStream(name).read(10, new StreamMessageId(0L, 0L));
return HashMap, which is imo wrong.
When using redis streams and XRANGE command, one wants to rely on ordering being exactly the same as ordering on StreamMessageId's.
Would you have some time to check this?
Thanks,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3410
FST codec on Topic (PUB\
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3411
FST codec on Topic (PUB\SUB).
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
So i suggest. There is a way to do FST codec on Topic (PUB\SUB). When i tried to use it. It didnt work. Then i though that im choose a wrong way. And then i Make log of redisson to debug "logging.level.org.redisson=debug".
So what i see when i use publish method :
As we see there is using still StringCodec.  Then i tried to use FST codec not for PUB\SUB. Just for save info to redisson. And then it works. My configuration of FST is simple:
There is a way to use FSTCodec for Pub\Sub, not only for store data? Version of redisson 3.14
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3412
Duplicate PING when Redis connection got reconnected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When a blockQueue executed with TIMEOUT, it will always trigger reconnecting via one connection.  PING will trigger again when connection reconnected, but previous PING will still ongoing.
ps: 3302 fix will reduce the possibility of reconnecting,  but whenever reconnecting happen, duplication ping will happen.
Expected behavior
Redis PING performed one time per interval per connection
Actual behavior
Redis PING performed mutiple times per interval per connection when this connection got reconnected
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3413
Error default codec in Chinese wiki document
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The Chinese wiki mentions that the default codec is JsonJacksonCodec, but in fact the default codec is FstCodec,  please correct it, thank you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3414
about addandget API
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when i want to use the addandget API,i found the number convert throw a ClassCastException.
the error is on third line
Can I use new BigDecimal(entry.getValue()) instead?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3415
add randomKeys() and randomEntries() methods to RMap object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3418
CPU spike after Slave failover if subscriptionMode=SLAVE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3419
internal RedissonBaseLock.evalWriteAsync() method isn't executed again if cluster slaves amount > 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
Steps to reproduce or test case
Redis version
Redisson version
Redisson configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3420
RedissonBaseLock can't be unlocked if exception got thrown from the same thread
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonBaseLock.java:312
opStatus is always null:
RedissonPromise.java:183  (status of netty's Future is canceled due to Exception thrown from the same thread)
I'm experience it permanently.
At a first glance (if i'm not mistaken) this is a Blocker  level issue.
RedissonPromise.java:187:
Same behavior if Exception got thrown too early, such that f.getNow() results null
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3421
Ratomicdouble increases the number of decimal places
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3422
RStream.claim fails with NPE if given id does not exist
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In my scenario, I invoke RStream.claim(groupName, consumerName, idleTime, idleTimeUnit, ids)
where some ids may already be removed from a stream.
I would expect this method to claim and return whatever records exist.
Instead, it fails with NPE
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3423
RMapCache to add an expire "by key" functionality
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
Trying to implement a sliding-expiration..........in a performant manner.
the specific request is for RMapCache to add an expire "by key" functionality
Current "expire" (below) does not have a "by-key" parameter.
Describe the solution you'd like
Consider adding "expire by KEY" functionality to
We're doing this to get "sliding expiration" to work.
Other Project FYI's:
Lettuce and Jedis have this "expire by key" functionality.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3424
Cache entries loaded by cache loader are not expired even if TTL is specified
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Cache should respect configured TTL no matter how entry was put in it.
Actual behavior
For now if cache loader is configured RedissonMap puts loaded entries into cache ignoring specified TTL.
Steps to reproduce or test case
Create map cache with some TTL and cache loader, let loader to provide value for some key, wait for TTL and then try to get value from cache again - cache loader won't be used.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3425
Failed to cancel scheduled tasks and blocked threads
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Normal mission cancellation
Actual behavior
Failed to cancel the task and blocked the thread
Steps to reproduce or test case
When canceling a timed task, if the task is running, there is a chance that the task will not be canceled. If we use synchronous method to cancel the task, it will cause the current thread to block permanently, and the actual analysis shows that it will be in the scheduleCheck method.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3426
Will the next version of redisson plan to update netty to the latest version?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi mrniko,
When will redisson 3.15.1 be released? Will you update netty to the latest version?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3427
Redisson as L2 Hibernate cache in Spring-boot app in CloudFoundry
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are developing a micro-service in spring-boot, which would be deployed in cloud foundry , we want to use redisson as l2 hibernate cache, problem is RedissonRegionFactory expects Config from redisson.json/yaml file,  and
we cannot have file in class path, is it possible read credential from vcap services ? or make redisson-hibernate spring compatible so that we can inject properties to RedissonRegionFactory.
we planning to use redisson as regular cache as well hibernernate l2 cache, please let me know is redisson is suitable for my use-case.
i tried extending the class RedissonRegionFactory and overrite createRedissonClient method to inject vcap peroperties in Config object but before spring creates beans hibernate trying to instantiate RedissonRegionFactory (i could be wrong).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3428
If the object has "score" field, the "score" is discarded when it is serialized
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson configuration singleServerConfig <org.redisson.codec.JsonJacksonCodec>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3429
FairLock released if `lockWatchdogTimeout` is set to 100 millis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I encountered a strange behavior when lockWatchdogTimeout is set to 100 millis (I didn't test to see what exact value it starts behaving abnormally). Lock is released even if the locking thread still alive.
Any value higher than this, lock is kept as long as thread is alive.
Redisson version：3.15.0
I create lock in the standard way, nothing special.
I have a test where I acquire fairLock instance, and perform locking.
I have something like this:
If lockWatchdogTimeout=100 then this test fail constantly. But if the value is set to lockWatchdogTimeout=150 then the test passes successfully.
Even if I set Thread.sleep(5000); (5 seconds keeping the lock) the test still passes.
Why when this configuration value set to 100, Redisson releases the lock?
I'm not sure if it is a bug, but I couldn't find any documentation regarding minimum value of this config param. The default is 30 seconds and maximum is 60. But no mention of maybe it has minimum allowed in means of amount  and TimeUnit value.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3430
error in simple for loop: Command still hasn't been written into connection! Avoid to use blocking commands in Async/JavaRx/Reactive handlers.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when i use this procedure:
it will print:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3431
Chinese wiki has a wrong yml setting at 2.6.2.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
transportMode: "NIO"
Actual behavior
"transportMode":"NIO"
Steps to reproduce or test case
just edit Chinese wiki at  2.6.2
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3432
looping message
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
push delete by redis and i have one success
Actual behavior
i have looping push
Steps to reproduce or test case
i offer in pushQueue and when i take it i have not looping
Redisson version
3.10.
Hi, help me please
i have RDelayedQueue and RBlockingQueue, sometimes i have looping
sorry, my english is bad
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3433
How to handle Avro schema change in Redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using avro schema. Which looks like below.
Using various codecs available in redisson, I am storing the above object.
Now If I make a change in the schema(adding a new field), I am getting a deserialization exception, while retrieving old object back.
I have tried using AvroJacksonCodec, SerializationCodec, MarshallingCodec.
I have read that using kryoCodec it is possible. But could not find any working demo.
JsonJacksonCodec has some issues with org.apache.avro.util.Utf8. So that is also not helping in schema evolution.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3434
Fix reliable word in the redisson.org front page
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It's misspelled: relable
Not a good work do misspell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3435
confused in container use
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using redission 3.13.4 in k8s with cluster mode in 3 master 3 slave. I meet some problem when i delete redis pod one by one manually to simulate k8s node shutdown, after the redis pods reruning on other node, still have
some errors happened and never recover until i restart the business client pod where redisson in.
one like bellow:
It seems connecting to an old server ip.
hope to get your help
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3436
Deserialization issue with Kryo5Codec post schema change.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3437
looping useClusterServers
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
push delete by redis and i have one success
Actual behavior
i have looping push
Steps to reproduce or test case
i offer in pushQueue and when i take it i have not looping
sometimes i have looping when pushQueue.take() - message delete
but then i have i, why i have looping
this bug i have not rarely
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3439
How to add MapEntryListener to RMapCacheRX?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I thought the xxxRx and xxx datastructures were equivalent in terms of functionality. I use a RMapCacheRx in my application and want to be notified on Entry expiration of the entries in that RMapCacheRx. With a regular RMapCache there is an addListener(listener: MapEntryListener) method, however on the RMapCacheRx there is only addListener(listener: ObjectListener) which only notifies me when the RMapCacheRx itself expires.
I tried making a non-rx client and getting the RMapCache with the same name to add the listener but then I get these errrors:
I use Redisson 3.13.6 (last version with RxJava 2 support) and Redis 6.0.8
Can anyone help me?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3440
org.redisson.client.RedisTimeoutException: Command still hasn't been written into connection! and currentCommand=null
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson Version - 3.13.0
We are noticing following exceptions in our logs and then thread just get hung post that:
PS - masked the complete addr.
We are using RLock's following implementation to acquire the lock:
The config we are using is default config
Trying to understand what is causing this? Especially what does it mean - currentCommand=null
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3441
RScheduledExecutorService's  WorkerOptions.workers() doesn't work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
and i found it will consume 16 thread once instead of 5
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3442
slaveConnectionPool can't reconnect in sentinel model
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
use chaosblade to inject network delay in to redis port,keep delay time more than failedSlaveCheckInterval,
when netword delay finish, slaveConnectionPool not reconnect to redis slave node, slaveConnectionPool‘s all ClientConnectionsEntry in to RECONNECT status and keep throw exception:
it‘s a bug?or i can set any config to fix it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3443
How can i disable Reddison auto configuration ? There is a test environment where we dont want redis.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Spring boot app does not start as we dont have cache in test env.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3444
RateLimiter error during unpack on redisson 3.15.0 - bad argument #2 to 'unpack' (string expected, got nil)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
No error when trying to acquire a RRLimiter lock.  Error seen when multiple threads from one application try to acquire a lock from a 3 member redis cluster.
Actual behavior
Intermittent error seen,
I believe this internal script's function is the source of the problem:
I am not so sure why v would be nil.
Steps to reproduce or test case
Not easily reproducible as of yet.
3 member redis cluster with sentinel for HA, running in kubernetes 1.20.2
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3445
Simplify RGeo API
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Introduce new methods with ability to specify chained arguments:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3446
Add count with any for search in RGeo
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3447
Add ability to search in box for RGeo
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Usage examples:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3448
Command still hasn't been written into connection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We started receiving the following error multiple times:
We do not use the async API. We got the same error for successive commands.
Isn't this API blocking and how can we avoid such exceptions?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3449
RMap put method return null
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
version：3.15.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3450
Command still hasn't been written into connection! Avoid to use blocking commands in Async/JavaRx/Reactive handlers. Try to increase nettyThreads setting.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Exception：
Caused By these codes:
Redisson Version: 3.15.0. And I don't think it occurred in previous version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3451
failedAttempts cannot be set zero
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
if failed no Attempts
Actual behavior
create redis connect error.
when I read code I found maybe problem appear at org.redisson.connection.pool.ConnectionPool#tryAcquireConnection method.
this compare statement  entry.getFailedAttempts() < config.getFailedAttempts() is always true , so connect cannot create success.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3452
Does RSetCache support EntryExpiredListener
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RMapCache has eviction feature which can expire entries and has EntryExpiredListener to handle the expired entries.
RSetCache also has eviction feature to expires entries but don't have such a listener to handle the expired entries.
Is there any plan to support it or any difficulty to implement it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3453
3.15.1 sentinel execute auth error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
update to 3.15.1, run in sentinel model,throw
i trace the code,find in MasterSlaveConnectionManager.connectToNode() will createClient(NodeType.MASTER)
but in 3.14.1, MasterSlaveConnectionManager.connectToNode() method called by SentinelConnectionManager.checkState,will pass a RedisClient by createClient(NodeType.SENTINEL)
i think it's a bug
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3454
redisson config lead to The remote host forced an existing connection to close.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
After a few minutes of redis operation, the following problems will appear:
The remote host forced an existing connection to close.
Steps to reproduce or test case
Redis version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3456
Add MINID trimming strategy and LIMIT argument to RStream.add() method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3457
RStream.getInfo() method doesn't decode entries
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3458
Add MINID trimming strategy and LIMIT argument to RStream.trim() method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3459
How Redisson's DelayQueue offer same element as one element?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As far as I know, Redisson implements delayQueue through zset and list,zset will not add repeatedly for the same member
how can i tell redisson they are same member
Thank you for help me!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3460
Redisson does not reconnect after failed DNS Monitor change
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Editing and repurposing this issue after finding the underlying cause. Originally this issue was to improve the error messaging. The underlying problem is a failure to reconnect after a failed DNS change. After this scenario plays out, there are no connections in the pool, and the error message we end up seeing is an ArrayIndexOutOfBoundsException
Expected behavior
Reconnection to redis node
Actual behavior
after DNS monitor detects a change to an ip it cant reach, subsequent dns change to a good ip does not restore connections.
Steps to reproduce or test case
connect to a single redis master node
add a host file entry for some bogus ip address,
watch redis connection failures
remove the bogus host file entry, so that DNS monitor gets the good ip address again
re connection does not happen
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3461
Can we set a local cache size for RSetMultimapCache?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is there a way to set an upper limit on the number of elements that are kept in the local cache?  I don't see a way to do this and our TTLs are very long.  I don't see a way to clear the local cache ourselves either.  Containers like RLocalCachedMap have clearLocalCache(), but RSetMultimapCache does not.
Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3462
Is there a simple way to change node address dynamically?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I try to use redisson(3.7.0) as my redis cluster client, and I need to change the connection address of redisson dynamically, in Spring environment, is there a simple way to do that? Does it need to consider the instance with old connection's recycle?
I tried to get the redisson instance directly and update the node information of its config like:
but it failed(it could work sometimes).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3463
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3464
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3465
CommandDecoder:181 - Unable to decode data. channel: Unsupported protocol version 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to store a basic POJO called MobileNotificationDTO inside an RMap<Long,MobileNotificationDTO> using MarshallingCodec
Writing an integration test, it is failing to retrieve the POJO from the map
Any ideas how to fix this issue? I have tried JsonMarshallingCode and StringCodec but still the same error
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3467
Fallback failing for Hibernate-5.2 - nextTimestamp() doesn't have a try-catch
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
With an application server up and using redis, and hibernate.cache.redisson.fallback=true, I should be able to kill redis, and continue to use my application server.
Actual behavior
Hibernate+Redisson becomes unusable as soon as redis becomes unavailable - with failures coming from the nextTimestamp method in BaseRegion RedissonRegionFactory.
Steps to reproduce or test case
Configure hibernate L2 cache with redisson.
start application server with redis online
stop redis
try to use application (hibernate calls) - get errors.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3468
Can you create a linked list of live objects within a live object?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a live object that holds a linked list that holds items from another live object. I am able to push the parent live object to the redis live object service just fine. When I retrieve the parent object, the linked list is null. If I insert a string, it works just fine, but with my child live object it always returns null. See below:
The variables and ID's sets removed for readability.
The myObject will hold the ParentObject with the null linked list, this list is not null when sending to redis service. Also when I substitute the object type of the linkedList to String and not ChildObject, this works just fine and the list is not null. Its the nesting of the RLO within the RLO that is killing me. Any thoughts? Thanks for your time!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3469
What's the reason for using a single pub/sub topic in tomcat RedissonSessionManager?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We are currently using Redisson 3.13.6 for session management of a java web application deployed in tomcat 7 and sessions stored in ElastiCache.
RedissonSessionManager is configured with readMode=MEMORY and updateMode=AFTER_REQUEST (due to the way the app is implemented this is the only configuration working for us).
We noticed high network outbound traffic on a single ElastiCache node, followed by CLUSTERDOWN errors because of bandwidth throttling.
I checked the implementation and found that RedissonSessionManager is implemented to use a single topic for pub/sub communication
Is there a reason for using a single topic?
Is it ok to update the implementation to create multiple topics, and use a balancer when accessing them from  RedissonSession?
I understand that the Redis slot is computed based on the topic name, so choosing the name for the topics in such a way that they will end up on different nodes is not that straightforward, but I am interested if there is another reason this approach might not work.
Thanks,
Ilie
P.S. The quick fix was to upgrade the ElastiCache node type to accommodate the traffic, but it's not ideal because of the price of the new instances and because the nodes not handling the pub/sub topic are not using these resources.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3471
Simplify read() and readGroup() methods of RStream object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
Describe the solution you'd like
Describe alternatives you've considered
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3472
upgrade spring boot version to 2.4.3 to make our projects support spring-native 0.9 beta
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
spring-native released a beta version, support spring boot 2.4.3, so our company plans to use it, so hope the next version of redisson boot starter upgrade to the spring boot version.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3473
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3474
Why redisson lock implements use WAIT command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using redisson lock in my project, but the redis cluster i use in product env forbidden to use WAIT command, so the redisson lock alway ends up to and RedisException with message " wait command not found", I try every lock implements in redisson, all the same, so what should i do to fix this ? change anothe redis or write a lock by myselft ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3475
what is the minimum version for "jackson-core" required for redisson 3.14.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
what is the minimum version for "jackson-core" required for redisson 3.14.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3476
Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.core.TSFBuilder
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
keep getting this error when i try this
Config.fromYAML(PropertiesUtil.getResourceAsFile(REDISSON_RESOURCE_NAME));
the exception is
when I try to look at the code can't find usage for TSFBuilder at class ConfigSupport
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3477
Enable tcpNoDelay setting by default
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3479
RedisTimeoutException : Command still hasn't been written into connection! Increase nettyThreads and/or retryInterval settings
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson version: 3.13.0
This problem will appear after every downgrade of redis cluster. Restarting the application can solve this problem at present.
However, how to solve the problem thoroughly?
More information :
2.Examples redisson.yaml
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3480
References in RxJava objects aren't supported
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3483
java.util.ServiceConfigurationError: org.jboss.marshalling.ProviderDescriptor: Error reading configuration file
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hello, I spent my day trying to debug but I didn't succeed, do you have an idea?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3484
There may be concurrency problems in org.redisson.RedissonLock#tryLockInnerAsync
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
if two thread get the same lock subject and run the method at same time, one's leaseTime is -1, and another's leaseTime is bigger than 30, the "-1" thread first cam in and set internalLockLeaseTime, then another thread came in set the internalLockLeaseTime bigger than 30, then if the bigger leaseTime one get the real redis lock! It while cause watchDog invaild and the lock be expired ahead of time.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3485
Abnormal behaviour in redis mapwriter execution
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have used write behind mode in mapoption,
my code written in write method is executing fine but after some time
i have observed that i am getting "org.redisson.client.RedisOutOfMemoryException" exception after that my write method of mapwriter is not getting called,
can yo please help me out in these.
Also observed that after getting any throwable error in write method same behaviour is getting replicate.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3486
ERROR org.redisson.connection.DNSMonitor 112 - Unable to resolve redis.address
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Do not print such logs
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3491
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3492
with service cluster,a machine have held the lock,another machine will unlock successfully?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the method 'tryAcquireAsync' of RedissonLock class,use current thread IDas redis value.
if two machine have same thread ID,a machine have held the lock,another machine will unlock successfully?
RedissonLock class can use a map to store current application have own Lock,if service reentrant or unlock,
verify that it have the lock before.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3493
Transaction in Redis Live Object Service
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Is it possible to perform transaction on Redis Live Object?
I want write a new instance of MyClass - only if new instance is newer than previous one.
I need method similar to 'merge' in RMap.
So I need to compare dates of old and new objects and then save new object only if it newer. It has be executed in one transaction. In other thread someone can update fields in this object.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3494
RetryInterval and "Client Pause" command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I thought of reporting a behavior I see during testing.
If I break connectivity to Redis, retryInterval works as expected, but if I use the CLIENT PAUSE, then
all retries are done at the same time. retryInterval  is not respected.
I don't really use CLIENT PAUSE. I was just trying to simulate latency and noticed this. I reported in case this behavior can impact other/real scenarios
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3495
Add RedissonClient.reactive() and RedissonClient.rxJava() methods
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3496
Add MOVE command support for queue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3497
MacOSDnsServerAddressStreamProvider
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Why i have this warning?
and how this dependency help me?
i want to know why i need it??
question
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3498
if there are more than 2 servers using redisson , when session invalidate method called one of server does not know that session is invalidated, because JSESSION ID is still on the cookie in user's browser.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
session invalidated is applied to all servers.
when readMode="REDIS" session always should get from redis directly
Actual behavior
if there are more than 2 servers using redisson , when session invalidate method called one of server does not know that session is invalidated, because JSESSION ID is still on the cookie in user's browser.
Steps to reproduce or test case
setting redis configuration below.
make jsp file and prodcess login, logout, print session value.
load balance is infront of tomcat
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3499
ClassLoader issues when using Redisson Transactions with asynchronously acquired RedissonClient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When using an asynchronously acquired RedissonClient (via. CompletableFuture.supplyAsync) with transactions I expect the class loader used to be correct.
Some constraints to narrow the scope of the problem:
I only encountered this when using Redisson Transactions.
If the client was acquired in a synchronous way, I did not see this behavior.
Actual behavior
Similar to #2984 I am seeing that on the first request to my WAR on a web server, the correct class loader is used.
But then on subsequent requests, it is using the URLClassPath loader what I assume to be the default for Jetty.
After this breaks, I get consistent ClassNotFound errors.
Steps to reproduce or test case
I created a minimal jetty project here in an effort to reproduce the code we are running.
In words, my steps were as follows:
Create a Jetty Server running 9.4.30.v20200611, and deploy a WAR on it. Place objects into Redis, using transactions, and try to retrieve them. After the first request succeeds, observe ClassNotFound issues when trying to retrieve other objects. The stack trace can be found in a gist.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3500
[IS A BUG?] RedissonReadLock#tryLockInnerAsync
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
is this a bug ? when read lock try lock but write lock is held
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3501
Redisson 3.15.1 seems to try to authenticate on the Sentinel instance while no sentinelPassword is provided
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson should not try to authenticate against a password-less Sentinel instance.
Actual behavior
Redisson seems to send an AUTH instruction to the Sentinel instance, resulting in the following stacktrace repeating endlessly. However, the client seems to be successful at performing various operations on the Redis cluster (get/set).
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3502
LEAK: ByteBuf.release() was not called before it's garbage-collected.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson 3.5.1
I am debugging why we are seeing ByteBuf leaks and native memory problems.
I suspect one reason could be serialization failing for some objects.
I created a simple test to run this code in a loop
The code triggers: java.lang.IllegalArgumentException: java.io.NotSerializableException: java.util.logging.Logger
and looks like MarshallingCodec. Encoder.encode doesn't clean the ByteBuf  if there is an exception - and I
don't see a way to do it myself.
I enabled -Dio.netty.leakDetectionLevel=paranoid to get this output:
Recent access records:
If I can't get the native memory issues sorted out, I need to see if this can help:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3503
ClassNotFoundException when using ServiceLoader
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey, while writing plugins for BungeeCord proxy I ran into a problem with ClassLoader.  Plugins use the redisson library to create the network It works like this:
BungeeCord loads available plugins
One of the plugins contains the redisson library and connects to redis
Another plugin use the previously loaded plugin with the library to synchronize the objects
All plugins are loaded using the same ClassLoader, so the same ClassLoader also loads the redisson library, and knows about classes that we serialize and keep in redis. Unfortunately the plugin that is loaded in step 3 throws a error like:
So I wrote small ServiceLoader application to reproduce that issue.
Steps to reproduce or test case
redis-cli config set notify-keyspace-events KEA
or manually
mvn clean install
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3504
[Wiki] The default value of masterConnectionPoolSize in cluster settings is wrong
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Actually, the default value of  masterConnectionPoolSize in cluster setting is 64, but got 24.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3509
Redisson with AWS IRSA
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How can I create redisson client with AWS role based authentication ?
I have used it with redis auth so far but don’t know if I can create redisson if I want to use role based auth.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3510
task level taskRetryInterval and taskTimeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
For now, taskRetryInterval config in ExecutorOptions, and taskTimeout config in WorkerOptions.
I need like this:
RScheduledExecutorService.schedule(jobRunnable, CronSchedule.of(jobConfig.getExpression()), timeout, retryInterval)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3511
Old value is not available in cache entry update event
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Before I submit a bug report on this, I wanted to check if maybe I'm doing something wrong.
I'm expecting to get a non-null value from getOldValue on CacheEntryEvent, when event type is UPDATED. I have set isOldValueRequired to true in the listener configuration.
Is there anything else I need to do to get this to work?
I just upgraded to Redisson 3.15.1.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3512
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3513
can redisson lock accross apps written by different language?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
can redisson lock accross apps written by different language like golang, python?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3514
Fixed rate schedules stops after some time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
We're using executor service with fixed rate schedules, but the schedules stops after some time.
I've reproduced the issue in a small standalone project.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3515
RScheduledExecutorService.scheduleAtFixedRate() starts multiple instances of the same task if multiple workers defined
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3516
MaxIdleTime on Redis Live Object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Is it possible to set maxIdleTime on Live Object in Redisson?
If not, is there another option to delete unused objects?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3517
Redis 6.X : Required ACLs
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello !
What are the minimal required ACLs tu use redisson and the org.redisson.spring.cache.RedissonCache in particular.
I haven't found any documentation about this.
Moreover, I have activated "useScriptCache" option.
Thank you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3518
Redisson 3.15.1 and 3.15.2 never release connection on redis server (replicated server configuration)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
we have switched from redisson 3.15.0 to 3.15.1, and we were hit by a crazy increase of connection on our redis nodes.
our application idle at 77 connection to our redis nodes (basic replicatedserverconfig with three rediss node in aws elasticache).
our fleet of container generate total number of connexion between 200 to 500 depending on autoscaling.
Actual behavior
Today behavior with 3.15.1 and 3.15.2 is a crazy number of connexion, redisson never releasing the connexions,
eating all the connexions in our container (creating mess with tomcat), and generating 20k to 60k connexions on
our redis nodes.
Steps to reproduce or test case
Switching redisson version
redisson is used for spring boot cache mostly, a very simple lua script is also used for leader election.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3519
addLastIfExistsAsync API in RedissonDeque appending absurd value to the list in redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
This should append a json string value to the already existing redis list with json strings. The key was created with StringCodec.INSTANCE.
Some absurd value is being appended to the list. No error logs seen regarding command timeout or anything like that.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3520
DelayQueue not working when key exist in redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3521
if a thread fetched a lock and throws exception, should redisson cancel the renew task?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I wrote a test case like this:
and here is the result
Thread crashed and renew task is still going on.
I think it's necessary to check thread when renewing.
any idea? :)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3522
ConnectionListener.onConnect() method isn't triggered during Redisson start
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Use method Config.setConnectionListener() for listener registration.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3525
ReactiveBatch commands are not executed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Batch response include result of two operations:
Batch response include result only for  batch.getBucket("bucketKey").isExists(); operation. During debugging i see that
executeAsync() method of CommandBatchService have only one command.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3526
RedissonRateLimiter tryAcquire and availablePermits throw RedisException: too many results to unpack
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
method call should return without exception
Actual behavior
A RedisException is thrown:
Steps to reproduce or test case
Add more than 8k entries to rate limiter.
Wait for all of them to expire.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3527
Any alternative solution to create a SQL table structure in Redis using Redisson in java app.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Any alternative solution to create a SQL table structure in Redis using Redisson in java app. For example a table of say Products.
The standard flow would be to instantiate a RMapCache and add the products to that - something like this
and this in Redis would result in something like this
hscan "ProductTable" 0
1) "0"
While this solves the immediate problem, 2 or 3 questions arise
when doing the get command - prodRet = prodMap.get("Prod101"); - does Redis need to do a 2 step lookup - first to find the "ProductTable" and then to find the prod key within that ? is this not expensive?
in a Redis cluster environment the whole "ProductTable" will end up in 1 SLOT in 1 node. So whats the use of sharding across cluster ? Yes there may be other tables that may go to other nodes but no guarantees.
If someone has a better solution or better insight into this can you please share. Or am i missing something here?
appreciate your help...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3528
Exrta bytes in the value are missing when saved using local cache mode (getLocalMapedCache)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is a very simple java program using Redisson adding products to a productTableCache
When i look from redis-cli , i see these extra bytes added to the product value in redis - what are these additional bytes ?
Now if i insert another product using Redisson getLocalMapedCache i dont see these additional bytes
But now if i refer to LocalProd102 in an EVALSHA script , it gives exception possibly because the additional bytes are not found.
Any help or prior experience in this regards ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3529
RScheduledExecutorService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when I use it in Distribute Schedule, Runnable method  depencies on spring context(i.e @Service UserService.class and @Mapper UserMapper.class include more indirection depencies ) each other must implemnts Serializable ,This way is unfriendly,so I suggest ...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3530
Quarkus integration distributed cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There isn't any standard way or sample to basic Redisson with Quarkus Integration!
I actually, looking to find a way to handle distributed cache with Redisson. Could you please inform me in this way?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3532
How to configure Reddisson to connect with TLS1.3?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm trying to configure the Reddisson client to connect over TLS1.3. Has anyone had success with this? I've been setting the ssl* configuration parameters with the correct keystore file and sslProvider but I keep getting handshake failures.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3533
pollFirst & pollLast in RSortedSet are missing
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3534
Problem with deserialization using redisson as second level cache in hibernate
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I using:
deserialization should work with org.redisson.codec.Kryo5Codec too.
Actual behavior
Loading entity causing an error:
Steps to reproduce or test case
Use Hibernate with redisson second level cache and load an entity with a READ_WRITE as strategy.
NOTE: If it is not a redisson error, where should I create an issue?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3535
`RScript.evalShaAsync` prepends additional characters to the first argument. seems to be related to the default `Codec`.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Set up:
where:
sha is the hash of a loaded script (via SCRIPT LOAD) command.
key is an alphanumeric string. e.g. "123456789"
expirationSeconds is 3600
elements is a single alphanumeric string. e.g. "foobar1234"
the loaded Lua script contains the following lines:
if not tonumber(ARGV[1]) then
end
in order to parse the expiration.
Expected behavior
the if check in LUA script should not trigger an error.
Actual behavior
script returned error and from the error message ARGV[1] is set to > 3600 with possible whitespace characters (stripped from console output)
Steps to reproduce or test case
load a script (statically or programmatically) contains the argument parse lines above
invoke the method above
observe the application output
Note on the script:
the same script (without modification) worked with lettuce-core in the same application in a production environment (with thousands of calls per minute running 24/7) and has been proven stable.
for some reason the arguments received on Redis server (from redisson) contains extra characters for the first argument.
Update
I tested a non-default Codec:
and the issue is addressed. Not sure if this is expected behavior for the default Codec
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3536
Caused by: java.lang.NullPointerException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi Team,
while we are using Redisson 2.15.1.
Java 1.7.80
With 3 redis clusters and 3 application instances
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3537
Object lost due to TTL
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are trying the below approach to get the data from Redis with TTL.
Now list.size == 0 and my application failing due to this since the object fetched in removed from memory.
Please any approach to mitigate this issue.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3538
Handling of shard being down in a Redis cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi
Does Redisson has any logic for intelligently handling a scenario where a particular shard is down in Redis. Possible 'intelligent' solutions could be to-
Avoid calling Redis cluster for keys located over that shard
Not keep retrying for keys which are continuously failing
All these solutions may enable it to keep serving the traffic for which ever keys it can from other shards.
This is possible only with some built in knowledge of key distribution across shards, I am not aware if redisson has that context ?
Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3539
Collection RLocalCachedMap thread safe question
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi,im use redisson collection ,and this is my code
t6 put kv to localCachedMap,
then concurrent requests t5, found   duplicate records
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3540
Not support BITFIELD friendly
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
example:
can I use redisson client to execute command like this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3541
Redisson AWS ElastiCache cluster discovery after re-sharding failing
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using Redisson to connect to an AWS ElastiCache Redis cluster. We are seeing an elevated number of exceptions after we scale the cluster up or down and redistribute the slots.
Expected behavior
Redisson will pick up the new topology and slot distribution after the re-sharding is done.
Actual behavior
We are seeing these exceptions:
The exceptions persist for hours after the re-sharding is done. We don't see these exceptions if we restart our service.
Steps to reproduce or test case
Initialize Redisson client and connect to AWS ElastiCache cluster
Add or remove shards
Wait until cluster is in active state and slot redistribution is done
Try to read from the cluster
All other values are default
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3542
java.lang.ClassCastException: java.lang.String cannot be cast to LiveObject
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
not error
Actual behavior
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3543
Redisson keeps doing connections initialized
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have a 3 node redis cluster and redis clients running as java servers.
on some redis clients we see Redisson continuously keeps doing connections initialized - sometimes for more than 2 min or so.
Same program is runing on other servers connected to the same redis cluster but there we dont see this issue.
What could be triggering this reconnections? Anything we need to change in the config ?
Below is the config passed to redisson
appreciate any help.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3544
Why ExpirationEntry use LinkedHashMap to save threadId
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Reddison watchDog strategy use timerTask to increase key expiration time while set the lock success
First use entryName to get ExpirationEntry object. For the same entryName, other threads can't get the key because locked(ps: same thread can get and counter++)，so why use LinkedHashMap to save thread if there only have one thread?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3545
org.redisson.client.WriteRedisConnectionException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Some time getting following exception in unit tests but not always
Caused by: io.netty.channel.StacklessClosedChannelException
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3546
Object not added in RSet
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In the below code, we are facing intermittent issues where System.out.println("Your Ids: "+ids1) is not printed when we add something and RedissionSet reference doesn't contain anything even after adding objects to it.
Are we doing anything wrong? Any help will be appreciated.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3547
org.redisson.client.RedisResponseTimeoutException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
our server sometimes throw a exception ,the flow ,then the sytem is unavailable，how to solve this problem,thinks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3548
some time we see exception on DNSMonitor
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi,
we see some time following exception at the log , we don't know the reason for it
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3549
Sync methods can't be invoked from async/rx/reactive listeners
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I use both sync and reactive redisson clients in one project. Reactive one for business logic and sync one for third party library.
Calling sync client methods in reactive client map/subscription lambda/callback will throw the exception:
The exception is thrown by a method checks name of current thread starts with "redisson-netty"(introduced in version 3.15.1?). However, all reactive operator will run in the thread that named "redisson-netty-x" in downstream of reactive redisson client operation.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3551
An exception was thrown by org.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3552
exception in redisson decode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi,
is following exception is also related to netty version or there is other problem , by the way wasn't happen to us before production :)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3553
Redisson and Azure Redis for Cache. Connection starvation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello
We're using Azure Redis for Cache which has Redis 4.0.14 under the hood with cluster configuration (number of master nodes is configurable, can be less than 3):
There is scheduled maintenance on Azure which doing the following:
Terminate all slave nodes
Pause 10 min
Terminate all master nodes and load balancer
We have multiple components connected to redis (9 instances) and all of them are not able to execute commands after redis outage.
While redis is out of service we see following exceptions (which is okay):
There is a timer (not redis-based) which every 10 secords extracts value for particular redis key.  When there are no more exceptions which looks like above, we have a lot following exceptions (as a result of GET command sent by the timer):
And in a few minutes after previous exceptions operation to extract value in timer fails all the time with a little bit another exception:
In the beginning we also observed following WARN which also may cause issues:
Expected behavior
Connections to redis successfully restored after outage
Actual behavior
Some redis connections have closed channel and associated to particular slots. Unable to execute redis commands
Steps to reproduce or test case
Terminate slaves/masters in redis cluster configuration multiple times. Check that in connection pool all channels are not closed when redis instances will be restored
Thank you for help
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3555
Eviction for Entities Annotated with a Region that contains ":" caracter
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My entities are annotated with Regions following Redis hierarchy, using colons:
How could I set the eviction times for these Entities, on our application.properties?
We try:
But none of them worked.
Replacing the region to string that is not colon delimiter, works as a charm.
Any advice?
Thanks!!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3556
Setting TTL on existing value
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have a use case whereby when we first create objects in our Redis Hashmap, we set a long TTL (e.g. 1 month) to ensure that the data will be cleared out at some point in the future.
However, in general this data is only required for a few days, and for optimization we would like to clear this data out sooner when possible. When our application is made aware that it is safe to clean up this data earlier, we would like to set a new TTL on the entries (e.g. 1 day).
Unfortunately, I can't see any way to alter the TTL on an existing entry (other than doing a read, followed by a write with the new TTL).
What I was looking for in the API was something similar to:
or even better, a method which accepts a batch of keys
Does anything like this already exist already in Redisson? (or is there some other workaround I can use?)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3557
How to work with shard?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
in redis in action
They have API such as
does Redisson has similar API to help Shard automatically?
of course I can handle shard myself as
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3558
Add RMapCache.getWithTTLOnly() method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3559
Why doesn't RTransaction support passing MapOptions when creating a new RMapCache?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When creating a MapCache object within a transaction, I noticed that the create methods don't support the passing of MapOptions to configure the instance.
When creating from the client itself, the option is there to pass options to the method.
Are the fields in the MapOptions object that are not needed in a transactional context? It looks like at least for RMapCache objects, the options field is null when it calls the superclass.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3560
Redisson indefinitely try to reconnect on old sentinel instance
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We using redisson for our tomcat session cache in Kubernetes cluster. We have setup a sentinel cluster with 3 redis instance.
We have some issue when one of our redis pod changes. This can happen when maintaining a node. In this case the redis pod is recreated on another node but with a new IP.
For connect to sentinel we use a statefulset headless service.
Expected behavior
Redisson reconnect to the new redis node and stop communicating with the old pod
Actual behavior
Redisson reconnect to the new redis node BUT continue to try reconnect on old node indefinitely.
Steps to reproduce or test case
Setup redis sentinel cluster in Kubernetes (with statefulset). Our pod have 2 container, one for redis (port 6379), and one for is sentinel (port 26379).
Start tomcat pod with redisson config for session.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3561
ByteBuf LEAK in JCacheEventCodec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In #3511 I introduced a ByteBuf leak because the buffer copy is never released:
I can create a PR to fix this shortly.
"LEAK: ByteBuf.release() was not called before it's garbage-collected. See for more information.
Recent access records:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3563
Null pointer exception is thrown when performing action and redis server is down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior:  Redisson Client should throw checked exception or return bool value when operation on RBucket can not be performed because server is down
Actual behavior When single server will be shut down during application work and some operation on RBucket will be performed, then NullPointer exception exception is thrown. Also redisson treats RBucket object as not null one.
An exception was thrown by org.redisson.misc.RedissonPromise$$Lambda$731/0x0000000840e3b040.operationComplete()
Steps to reproduce or test case
Turn on redis and redisson with single server mode
Save some value by using RBucket
Shut down redis server
Try to save / remove another value by using RedissonClient (by using RBucket)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3564
The expire method of RedissonReactiveKeyCommands could not work on  Sentinel mode.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redis version 4.0.7
Redisson version redisson-spring-data-22:3.12.5
In ReactiveKeyCommands the method expire was defined as a write operation, but in the RedissonReactiveKeyCommands
the method expire was implement as a read operation.
When using the reactive redisson to work on Sentinel mode and executing expire command will cause the exception which tips that should not execute write command in a slave instance, because the RedisExecutor was set as readOnlyMode.
When RedisExecutor was set as readOnlyMode, the connectionManager will return a slave connection.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3565
How to print current open connections in redisson client?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to tune redisson client connection pool configuration and I am using cluster mode to connect to ElastiCache. I am trying to analyse what is current connections utilised and other connection pool details.
Can anyone please help me how to print the information?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3567
RMap compute implementation breaks Map contract.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Remapping function result is written to redis and returned.
Actual behavior
Remapping function result is only returned, but not saved if object instance remains the same.
Steps to reproduce or test case
This snippet prints
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3568
Broken connection detection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using 3.15.4 and sentinel connections, when I set the config connection listener, i don't get a connect or disconnect when (all) nodes have failed (e.g. dropping the Redis traffic from firewall to simulate network issues).
When this happens, a .getBucket command is blocking and remains blocked no matter if the connection is restored or not
The config i'm using:
The question i have is how to figure out when the connection is broken ? What am i missing ?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3569
Simple key value read and write example
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi Team,
Can you share a sample on how to read/write a simple key value  using RedissonReactiveClient
key: String
value:  java object
Reactive way of writing and reading will be great help.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3570
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3571
infinty add slaves if cluster nodes are all same ip&port
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3572
The best way to create Redisson client
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey guys! We're using Redisson in our app and instantiating it as a Singleton. But faced some weird behavior when the Redis cluster was rebooted. We're calling the method RMap.getAll(Set<K> keys) and this time got incorrect data from Redis. Seems like some of the Redisson workers returned the requested data and other ones not.
Now we're trying to create the Redisson client for each request to avoid the mentioned issue. Is it a good idea or will be better to create it one time along with the application?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3573
Thread lock starvation with RSemaphore on high concurrency with hundreds of locks
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We (@cstamas and me) are currently trying to integrate Redisson into Apache Maven Resolver. The purpose is to synchronize access to the Maven local repository across multiple processes. In our tests we experience a constant thread stravation where a write lock cannot be obtained in time, but tens of other threads are given access with RSemaphore. I assumed that we are having the same problem as in #1763, but the fiddling with config options did not work out. The lock is a hot path in dependency resolution.
The amount of locks is around 500 accessed by around 100 Maven modules from 48 threads (T4C on a 12-core Xeon processor).
Here is a sample condensed overview of semaphore permit acquisition and release:
I can provide full debug output, actual source code (see PR), pre-compiled Maven distro and the sample project which almost always fails for me. Help would be very appreciated because I am at my wit's end.
Note: The following lock types work flawlessly with the same project: rwlock-redisson (RReadWriteLock), semaphore-local (Semaphore) and rwlock-local (ReentrantReadWriteLock).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3574
Redisson Java Client-RedisCluster-YAML config-RedisNodeNotFoundException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Good morning:
I have been working in the implementation of a Redisson client to connect a Java application to Redis cluster defined by a YAML config file (loaded from the Config class) and by using RBucket as a class to put and get key-value pairs.
The connection is primary established by calling Redisson.create(config) method. Sometimes, even if a master is up after an outage, a RedisNodeNotFoundException exception happen saying that we need to increase the value of retryAttempts and/or retryInterval settings.
I really appreciate if you can give me some advices, recommendations about some configuration fields I could have missed, or something about the uses of RBucket or Redisson.create method in order to make it more resilient and to solve that issue.
Thank you so much in advance.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3575
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3576
RBatch - remove async from map not working.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am trying to execute few commands on several maps as part of an rbatch.
There are both putAllAsync commands and removeAsync commands.
All the put commands works fine but it seems that nothing is getting deleted.
The key type for each of the following maps is Long
These maps are of type RMapAsync ( and are part of the batch).
At the end of the batch I execute it using redisBatch.executeAsync()
Is there an issue with removing from a map and adding values to map in the same batch? Is there any other issue? How can I solve this?
Thanks.
It doesn't happen only in batch operations but also in calling fastRemoveAsync for RedissonLocalCachedMap
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3577
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3579
why can't i set expiration on RAtomicLong?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using Redisson 3.15.3
In my attached example you see that i try to create (or get an existing) RAtomicLong with a given name and expiration. Everything works apart from the yellow marked line where i try to set the expiration. In this concrete case expiration is 15 and unit is TimeUnit.MINUTES. But the expire() call always returns false.
I'm wondering if i do something wrong or what might be common causes for expire to return false (so i could investigate those further)?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3580
Async lock thread affinity
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm working on a kotlin micronaut web app which is attempting to be fully async and we're using redisson for distributed locks.
I'm somewhat unclear on how to exactly use it correctly.
The official documentation says RLock object behaves according to the Java Lock specification. It means only lock owner thread can unlock it otherwise IllegalMonitorStateException would be thrown. Otherwise consider to use RSemaphore object. which sounds weird as in an async context, executing on a specific threads is never guaranteed.
The code I'm using for now, in a kotlin suspendable func, is like this:
The unlock line is not guaranteed to execute on the same thread as the lockAsync line.
Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3581
Memory leak in IdleConnectionWatcher
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey,
I have a production environment which uses a load balancer over several master Redis instances, so the actual IPs of the Redis instances switch with every request.
I update Redisson from some 3.3.* version to 3.15.3 and started to notice odd memory consumption: something keeps piling up in the Old Generation and never gets garbage-collected. Normally, it would take about a day to reach Old Gen mem cap and in a few days, so when other objects make it to Old Gen, the app just dies with OOM.
I dumped the memory, it looks like when IPs change, new ClientConnectionsEntry items are allocated and attached the linked queue in the IdleConnectionWatcher which is never pruned, unless the client is shut down. I can't tell how many nodes are in those queues, probably too many, because IdleConnectionWatcher is about 30Mb big.
Unfortunately, I cannot change the infrastructure I use. Any chance there's any config that could just mitigate it for now?
Expected behavior
Application does not run out of memory if connection entries are re-created frequently and dangling objects are cleaned up.
Actual behavior
Strong references to previously created objects are retained and keep piling up until the app gets OOM-killed.
Steps to reproduce or test case
Tricky: Redis instances should be behind a load balancer, which should have a resolvable hostname. The idea is to make Redisson try to rebuild the connection pool every time it makes a request.
Redis version
Idk, because I don't have access to the infrastructure.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3582
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3583
Netty ByteBuf leak, JsonJacksonCodec, batched write
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are seeing leaked Netty buffers like this quite frequently in production. In some deployments it causes out of memory errors on our container instances.
Seen both in Redisson 3.15.2 and 3.13.1. The codec is JsonJacksonCodec as you can see from the allocation call stack. So far I have only seen it with pipelined write operations (RBatch, in memory atomic). No other exceptions or errors during the write operation was seen.
My question is, is there something we should be doing differently to avoid such leaks, or is this a possible bug? Any hints on where to look would be helpful. I have not been able to create a local minimal repro to share unfortunately.
Recent access records:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3584
RedissonConnection#scan query results error in redis cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, In our test case, we store three keys that start with  test  in redis cluster, two of which are in the same node, one in the other node, and then using  RedissonConnection#scan  method to query   test*. we can only query keys on a node, not all nodes.
Expected behavior
In Redis cluster mode，when we use RedissonConnection#scan to  get the keys with a pattern mode like (test*), we want to get the keys that can be matched by the pattern on all redis cluster nodes
Actual behavior
In Redis cluster mode，when we use RedissonConnection#scan to get the keys with a pattern mode like (test*) in redis instance，we can only get the keys matched by the pattern on a certain redis node
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3585
ConnectionListener configuration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Good morning:
I hope you are doing well.
I would like to know which is the process or thread that is used by the ConnectionListener so that the RedissonClient reconnects to the Redis Server.
I mean we can get onConnect and onDisconnect events, but I would like to know how Redisson implements reconnection mechanisms so that the listener can trigger the onConnect event.
Could that mechanisms (process/thread) be configured by using the YAML config? Or have a behavioral properties set by default for all the implementations that use it?
I appreciate your attention and collaboration with the related details about this topic.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3586
Redisson scheduleWithFixedDelay job not running on the configured time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Background:
Redisson version: 3.15.0
Framework: Spring Boot
Redis instance type: Cluster mode ( Azure Cache Premium with 2 nodes )
I am using scheduleWithFixedDelay API of redisson to schedule two kinds of delayed jobs:
repeat every 2 mins with a initial delay of 5 mins and max execution count of 5 times
repeat every 2 mins with a initial delay of 15 mins and max execution count of 10 times
I have implemented the logic for the max execution count using RAtomicLong data type.
Issue
When I schedule using the executor.scheduleWithFixedDelay API, the job is not executed at the expected initial delay configured. To add some more context, I spawned multiple instances of both the delayed job types and NONE of them ran at the expected delay ( 5 mins or 15 mins). In fact, all of them ran the next day around the same time with a delay of ~8 hours from their initial creation time.
On the other hand, jobs that I schedule with executor.execute API are running fine without any issues immediately. The problem is happening only with scheduleWithFixedDelay API.
Below is some sample source code of roughly how the delayed jobs look like along with the redissonClient / redisson node creation code.
Highly appreciate any help with this :)
We felt these errors were causing the scheduleWithFixedDelay to not to work properly, so to fix these connection timeouts, we set the following params to the redisson client:
pingConnectionInterval: 10000
keepAlive: true
Post doing these configuration changes, we did not notice these timeouts for 2 days and the scheduleWithFixedDelay API did work as expected. However, we started receiving these timeouts after 2 days.
I wanted to know what is a right way to deal with this situation. Also, as mentioned before, this is ONLY happening for scheduleWithFixedDelay usecase and not the execute API. Why is this happening ONLY for the schedule API and not the execute API ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3587
Redisson cluster cannot recover from "missing slot"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
A test program is pushing a bunch of requests (evalSha for lock-free evaluation) repeatedly. Then bounced Redis Cluster in the middle of it. The connections were lost, then discovered within seconds, as expected. However, Redisson is stuck unable to recover from this condition:
Redis cluster state is fine:
Expected behavior
Eventually discover the hash slot is available.
Actual behavior
Retrying the same sequence of operations does not recover even after 5 minutes.
Steps to reproduce or test case
Start Redis cluster
Loop evalSha across all cluster nodes.
Bounce Redis cluster in the middle of the loop
Observe the failures
Observe that restarting the Redisson (bounce microservice in this case) recovers - so the issue is not in Redis cluster.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3589
While putting value into Rmap It throws io.netty.util.IllegalReferenceCountException: refCnt: 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My application is a spring-boot application. Tried Running on both Tomcat and Undertow embedded server but the result is the same.
My SpringBoot version is 2.4.3 but have tried updating it to 2.4.2 and similarly 3.15.3 but the result is the same.
Exception Trace=
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3590
Exception in EVALSHA when referring to hash saved using LocalCachedMap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If I use Redisson LocalCachedMap to save into Redis and then refer it using the LocalCachedMap it all works OK.
But If i refer to that same object saved using LocalCachedMap in a EVALSHA Lua script i get this exception given below.
If i just use RMapCache to save the object and refer it in the same EVALSHA Lua script it works OK - so this means the script has no issue.
The issue seems to be when the script has to unpack an object saved using LocalCachedMap.
What is the workaround / solution for this ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3591
Tomcat 9 Redisson keeps hit Redis memory limit
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Description
Hi team,
We're encountering an issue in production env that Redisson client keeps hit the maxmemory limit of Redis, we're using AWS Elasticache Redis with cluster mode disabled, have upgraded the node type from t2.small to cache.t3.medium, but it still too small.
We're wondering if it's an issue that others may also experience, are there any potential solutions for us to try?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3592
Duplicated section 6.12 in English documentation (wiki pages)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
There is only one section 6.12 RateLimiter in the English version of the documentation.
Actual behavior
Section 6.12 RateLimiter is duplicated in the English version of the documentation.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3593
When using distributed locks, why not use the JVM locks first to reduce the pressure of redis?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When using distributed locks, why not use the JVM locks first to reduce the pressure of redis?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3594
Setter detection in Jackson codec ·94 ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using Jackson-based (de)serialization. Our DTOs are immutable and use Lombok's @Jacksonized @Builder (so no setters in those classes).
To our surprise, this does not work in all cases. When deserializing with a "pure" Jackson, everything works fine. But when using Redisson, Lombok's @Builder.Default breaks deserialization. In this case, the generated builder class does not have a matching field for the JSON property. For instance, a field String example in the DTO will result in two fields in the builder: String example$value and boolean example$set. None of them matches the JSON property example (serialized from the DTO). However, there is a matching setter method example(String), which is used by Jackson in that case.
After a bit of debugging, we found the reason why it works with Jackson directly, but not in Redisson: JsonJacksonCodec explicitly switches off the detection of setters, but only relies on fields (which is obviously not sufficient in this case). The solution is easy: We simply use our own codec that extends JsonJacksonCodec, switch on the setter detection and everything seems to work again.
However, the question remains: Why does Redisson explicitly deactivate the detection of setters (and getters, too)? Is there any drawback in allowing it, like we did?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3595
Connection pooling mechanism in redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
HI Team,
I had a doubt regarding redisson connection pooling management.
I have an application with a high volume of traffic and hence get a lot of concurrent requests.
Have optimised my connection pool accordingly.But i have the following query
What if a new request arrives and all the connections are busy in case of unprecedented volume.
How does redisson handle such scenarios.Is there a connection request time out , post which it tries to create a new connection if pool is exhausted OR the request is rejected in absence of a connection in the pool .
regards,
AC
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3596
Add broadcastSessionUpdates setting added to Tomcat Session Manager.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3597
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3598
No usable error message when failure parsing redisson-jcache.yaml
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@edburns was trying to get Open Liberty to persist http session cache data with Redis using redisson-jcache. Something that I (and the Open Liberty team) have not done before. He got the Open Liberty configuration setup correctly, but was getting an exception (see Actual Behaviour section). After much debugging we discovered it was because there was a typo in the yaml meaning there was an exception while parsing it. However the JCachingProvider.loadConfig method is just swallowing all exceptions that occur which means there was no error message anyone could use to determine what went wrong. I managed to track down the problem by inserting a printStackTrace into the IOException catch blocks, but I don't think that would be a PR that the Redisson team would wish to take.
Expected behavior
Useful error message like this:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3599
DelayedQueue Durability
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Suppose the following scenario:
Application Start
BlockingQueue being read.
Item added to DelayedQueue to be executed after 30 seconds
Application Restarted, before these 30 seconds
I noticed that, without application restart, the items on the DelayedQueue will be executed correctly. But, if I restart the application after item added to DelayedQueue, but before its scheduled execution, it is not executed.
Is this the correct behavior? No durability to itens that are on DelayedQueue?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3600
How to delete element from org.redisson.connection.IdleConnectionWatcher#entries
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It seems that 'entries' will always grow when DNSMonitor find dns was changed.
how to delete element?
since redis proxy was used in my app,the 'entries'  will grow infinitely along with dns changed.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3601
RTopic -ERR only (P)SUBSCRIBE / (P)UNSUBSCRIBE / QUIT allowed in this context
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Did I use Rtopic incorrectly?
Code:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3602
The XGROUP_BOOLEAN attribute parameter of the xGroupDelConsumer method is set incorrectly
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redission 3.13.2
Redission-spring-data-22
The XGROUP_BOOLEAN parameter is wrong when the xGroupDelConsumer method of RedissonStreamCommands calls write.
I tried to modify the "XADD" of the XGROUP_BOOLEAN property to "XGROUP", and the test result was deleted successfully.
The following is the error log information before modification:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3603
String index out of range: -3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
is my problem，iForgot to add port，
in RedisURI line 45，When rediss:// is configured, shouldn't it be https
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3604
org.redisson.client.RedisTimeoutException: Unable to send command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In a production environment, we use the redis is cloud services, in the event of network jitter occurs after org. Redisson. Client. RedisTimeoutException, specific exception is as follows:
Once this exception occurs, even if the network is back to normal, this exception will not disappear, can only restart the service.Has anyone ever had this problem?What configuration can be used to solve this problem?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3605
@RObjectField annotation with codec option has no effect
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
According to the brief documentation on the @RObjectField annotation I should be able to use this annotation on a field within a class annotated with @REntity to override the namespace and codec. For instance, in the below demo I'm using @RObjectField to override the serialization mechanism used to encode otherObject.
When I apply the @RObjectField annotation I expect the otherObject to be serialized using the JsonJacksonCodec. For instance, after I execute the following code:
I should see a Redis command in my MONITOR log that looks like this (note the JSON format):
Actual behavior
When I check out the logs of my Redis instance using MONITOR I see the following HSET command
With or without the @RObjectField annotation, the result is always the above. I've also tried different codecs to see if there's a problem with the codec, but I think the annotation is simply being ignored all together. If I move the codec specification to the @REntity annotation, I do see the correct result, but then the entire entity will be serialized using Jackson, which is not what I want.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3606
How to isolate MapListener to a single database
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have some code which adds a listener
which works great, apart from the fact that I'm getting notifications on events in databases i'm not using.  I.e., i'm using database 0, but I get events from database 1.
How can I isolate events to the database that i'm using.
thanks, Mitchell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3607
ExecutorService use getBucket(*).get()  time consuming
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I had a problem in my production . When the request qps increase,it taked a long time for the function that getBucket(key).get() .
I used the function in JAVA ExecutorService.When redis key is not exists , it has time consuming.But when redis key is exists, it is ok.
Expected behavior
Taked a little time for getBucket(key).get()
Actual behavior
Once in a while, it taked a long time for getBucket(key).get() .
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3608
use bitfield get StackOverFlowException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
return 13
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3609
RLocalCachedMap.containsKey doesn't fire loader
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
containsKey looks for a key in local cache, then in redis, and, at last, invokes loader. If loader returns entry, put it in cache and report true.
Actual behavior
containsKey doesn't invoke loader at all and returns false for cold local cache/redis.
Steps to reproduce or test case
I have a map with loader, however for cold local cache and cold redis, this snipped produces different output
The first one is false if cache + redis is empty, loader is not invoked. The second call invokes loader and populates cache. Subsequent containsKey calls start to work after that.
Probably, other Map implementations contains this issue.
Single server, LocalCachedMapOptions.defaults() with loader.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3610
RDeque needs popRange()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RList already got its subList() method, but RDeque still could not pop multiple elements at one time.
This limits a lot RDeque's usage, and I have to use RList instead.
Redis realization[python]:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3611
spring boot application bootstrap:  java.util.ServiceConfigurationError: javax.cache.spi.CachingProvider: org.redisson.jcache.JCachingProvider Unable to get public no-arg constructor
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
The program starts normally
Actual behavior
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3612
Allow pipelining for native RedisClient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
a native RedisClient "should" allow pipelining of a list of commands.
Currently that seems impossible to achieve (or is at least undocumented as far as i know)!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3613
can dependency on javax.cache be optional?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the pom.xml from org.redisson:redisson pulls in the caching API from javax. as we do not use this in our projects at all, can this one be made optional? or if not is an exclusion on our side safe?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3614
RLockReactive fail to unlock when subscribe to tryLock(Thread ID)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RLockReactive fail to unlock with RedissonShutdownException when un lock it at the end of the reactive sequence with doFinally() or with then() operators. When testing it with StepVerifier the unlock is complete sucessfully but fail with subscribe().
Example:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3615
AWS ElasticCache Redis(Cluster Mode Disabled) Cannot Find Redis Node After Failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using Redission to connect AWS ElasticCache Redis(Cluster Mode Disabled), but we found exception below, even we upgraded to the version 3.15.1. And we don't see these exception unit we restart our service.
Exception:
Do I need to change the config to useReplicatedServer() or useSingleServer() also can support AWS ElasticCache Redis(Cluster Mode Disabled)
Thanks a lot!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3616
Clean up dependencies report
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using bb7b1b6 from master mvn dependency:tree reports multiple bad dependency management on redisson module:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3617
Make storeMode = LOCAL to fire loader
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My application has caffeine local cache and I'd like to use redisson for this, just like normal distributed map. I've configured store mode and provided loader, however loader doesn't start.
I've looked into code and it looks like this option was never considered, so, probably not a bug, however I think, loader and store mode should be compatible with each other.
Describe the solution you'd like
Run loader and store result in local cache.
Describe alternatives you've considered
Dedicated caffeine instance
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3618
RedissonClient.loadBucketValues() api is not find，How to use mget  ,version:3.12.5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3620
the wiki "11. Redis commands mapping", "CONFIG GET/SET" method is wrong
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3621
RedissonNode starts with ClassNotFoundException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3622
redisson can not connection Redis Server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
redisson connection redis success
Actual behavior
redisson connection fail, but other redis client, connection success.
Steps to reproduce or test case
spring boot start
this is redis config log out , ip、port、password
this is spring boot run ,fail log
this is other redis client connection success.
redis server and springboot on one server ，
seek help.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3623
spring boot 2.5.0  with  redisson 3.15.5 Not compatible  :  zadd command will throw stackoverFlow error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
use spring data redis's factory for redisTemplate  was ok
use redisson's factory for redisTemplate  was error
my test code is
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3624
Need help with configurations while enabling SSL
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using redisson-3.15.3.jar in my application and need to enable SSL. I have enabled SSL at redis with the help of this URL
It helped me generate two files: a .crt file and a .key file.
Now I need the configuration to send SSL encrypted calls to redis. I have tried the following but it didn't work:
CC: @mrniko
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3625
Something odd in k8s
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using redisson:3.13.2 as the redis client of springboot(2.2.9) project.
I build project as image and then run it locally. It works. But fail in k8s with the exception:
I wonder what is wrong?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3626
Will RLOS indexed based querying work in cluster enabled Redis?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When we use cluster enabled Redis like AWS EC, it's possible that objects gets stored on different shards. Will the indexed based querying still work here?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3627
org.redisson.RedissonSemaphore#drainPermits throws java.lang.ClassCastException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Due to bug in RedissonSemaphore#drainPermits implementation, the invocation of this methos throws ClassCastException.
The return type parameter of the method is Integer but the argument evalCommandType passed to the commandExecutor is RedisCommands.EVAL_LONG
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3628
java.lang.NoSuchMethodError
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3629
Trylock causes a deadlock，System restart can be unlocked
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3630
Missed implementation of few methods in Spring Data's RedissonConnection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
List of missed methods:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3631
RExecutorService does not work，block at future.get()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redis_version:6.0.2
code
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3632
Exception in redisson decode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
is following exception is also related to netty version or there is other problem , by the way this is only happening  when I use it in RTopic pubsub MessageListener.OnMessage() :)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3633
redisson-spring-boot-starter doc error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
spring.redisson.config should be spring.redis.redisson.config
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3634
org.redisson.client.RedisException: Unexpected exception while processing command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, We found RedisException errors during stress testing。
CommandDecoder#handleResult running context:
Stack trace:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3635
Redisson error to map slot-partitions after re-sharding slots  between nodes:org.redisson.client.RedisNodeNotFoundException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson will   map slot-partitions  by the topology after re-sharding slots between nodes
Actual behavior
Steps to reproduce or test case
Initialize Redisson client and connect to redis cluster，and topology at the moment:
Reshard the slots  between origin nodes
Wait utils the re-sharding slots finish, and the topology at the moment:
Reddsion update cluster topology, and the topology at the moment
Try to access redis cluster
Exception happen
Cause analysis: org.redisson.cluster.ClusterConnectionManager#checkSlotsMigration has a bug.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3636
Redis Lock - question about edge case
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am looking to use Redis for exclusive locks of resources.
If they fail and two workers will think they are holding the lock, that can end up in, let's say, really bad data corruption.
I know that a lot of edge cases in Redisson have been covered, however how about this one:
Worker1 acquires lock with time of "infinity" (until manual release)
Worker1 loses connection to Redis instance, while access to everything else still works and it continues operation on data, databases etc....
Lock gets removed from the database, because it expired in 30s (lock watchdog timeout), because of no bump by watchdog
Worker2 has good connection to Redis and is able to acquire the lock and start it's operation on data (leading to corruption)
Worker1 gets Redis connection back, it's watchdog tries to recreate the lock in background ASAP, however it lost the race because the lock was already acquired by Worker2
Both Worker1 and Worker2 now think they are holding the lock :(
Looking by the code comments, this seems to be expected behavior/known edge case - one of very few in regards to locks.
If I am correct with this scenario, what would you recommend? Going with non-redis solution like etcd or zookeeper, for example?
or maybe set the watchdog timeout to a value that will always be more than the execution time of task under that lock and have some custom code for removing failed locks on boot?
(so if Worker1 is down I either wait for it come back and automatically clean it's locks that are no longer valid or manually remove the locks owned by Worker1 assuming I want to safely get rid of it)
And is there a mechanism to check periodically whether watchdog has lost the race to reacquire the lock and allow application to act on it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3637
Nested Conditions on RLOS don't work as expected when we use Conditions.in as one of the condition
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The below code doesn't work:
If I write the Conditions.in logic explicitly by looping the Conditions.eq, it starts working. Following code works:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3638
this.redisTemplate.opsForGeo().position(key, members)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
return null or an result
Actual behavior
Steps to reproduce or test case
When getting a point without member
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3639
Redisson Rate Limiter -> Hard Limit
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The problem I'm seeing is that I'm setting a Rate Limit of lets say 20/second. If there is a period where 20/s is not reached, it will compensate for that and allow a temporary burst of permits over that threshold.
I was hoping for a configuration change to set a hard limit for a rate limit -- so that irregardless of the average rate, the rate must never exceed this value.
This may be how the rate limiter is already set to function, and i've uncovered a bug, let me know if this is the case and I can attempt to simulate this issue in a test (or at least try).
This is how i'm creating my rate limiter:
RRateLimiter rl = sharedRedissonClient.getRateLimiter(this::class.simpleName);
rl.setRate(RateType.OVERALL, 18L, 1L,  RateIntervalUnit.SECONDS);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3640
Unable to evaluate the expression Method threw 'org.redisson.client.RedisException' exception.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm trying to get values for a stored key from Redis and I am facing above error. I am trying to get the keys using this.redisson.getSet("TestClass"); and for saving the values to redis I am doing repo.save(TestClassObject);
I am not able to retrieve the objects when I try to this.repo.findAll() in that case I get values as a list but all elements inside the list are null. I also tried using getSet as stated above in that case I get the values but as string only hence not able to call getters as they are not of TestClass object type.
Can anyone please help with this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3641
Getting connection refused error while trying to use reddison-hibernate as hibernate second level cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi All,
Getting connection refused error while trying to use reddison-hibernate as hibernate second level cache
Please note that redis server is up and accepting redis-cli commands.
reddison hibernate version used : redisson-hibernate-53 as I am using spring data jpa that gives hibernate 5.X latest.
Also reddison.yaml is configured.
Getting the following error/
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3642
Does Redisson support spring-data-mongodb
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
So I've adding redisson to my application. The config looks like what is defined here:
singleServerConfig: address:
When I try adding Cacheable to the method that call external services using RestTemplate I'm able to see the result cache in redis-cli. Though when I try adding Cacheable to service methods that call underlying Mongo repositoy I'm getting IllegalArgumentException
Could someone explain if its because its not supported? I don;t remember exactly but saw that this is supported in only pro version. And if there are any alternatives I could look at without much code change.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3643
RedisSentinel.getMaster() method throws NPE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3644
Why is `isEvalCacheActive` hardcoded to false inside `CommandBatchService`?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Why is isEvalCacheActive hardcoded to false inside CommandBatchService?
Due to CommandBatchService being used by RedisBaseLock this means regardless of whether you have useScriptCache set to true in the Redisson config all Redisson locks will be sending the whole script across the network for every lock call.
I assume there's a reason for this but is there any way I can use evalsha for locks instead?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3645
Storing large object exceeds Redis' max inline read request size.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Store an object of size greater than 64kb as allowable in docs.
Actual behavior
Client throws exception org.redisson.client.RedisException: ERR Protocol error: too big inline request
Steps to reproduce or test case
Single server configuration w/ sslEnableEndpointIdentification = false. I've tried with both StringCodec and FstCodec with no success.
Let me know if there's a configuration to avoid inlining the request, I couldn't find one via the docs.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3646
Redisson client opens thousands of connections, still disconnected from cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson client should be stable.
Actual behavior
Over the weekend we noticed that roughly 50,000 connections were made from Redisson clients or our AWS Elasticache Redis cluster. Typically our Redis cluster has a little over 1000 client connections. This introduced a lot of load on the Redis cluster until requests started timing out. Rebooting applications that use Redis seemed to remediate the issue. There are still some Redisson clients in a broken state.
One service is repeatedly logging the following a day later and is in a broken state.
I worked with our SRE team and with the use of netstat we discovered that this application was holding 2400 open connections to the Redis cluster! Typically each application will hold around 28 connections.
Rebooting the application resolves the issue, which seems to indicate it is a client side issue.
I looked back to when the issue started to occur and see no logs about creating new client connections. All I see are Redis operations beginning to timeout.
Steps to reproduce or test case
Unclear. We have been running this version of Redisson for months without issue. Typically our services are running for a maximum of 7 days.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3647
RMapReduce ，use the Document case，but  blocking, unable to execute
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i read RMapReduce document 9.5
Copy code in local ，but it does not work
block here
What happened here? Thank you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3648
reactive client getKeysByPattern getting incorrect result
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
I have 100 keys in redis
reactiveClient.keys.getKeysByPattern(null) size should be 100
Actual behavior
reactiveClient.keys.getKeysByPattern(null) size is 47 (always getting the magical result with size of 47...)
Steps to reproduce or test case
insert any number e.g. 100 of keys in local Redis console
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3649
Helidon CDI integration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3650
GraalVM native-image support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3651
Because of prior network problem, rbucket can't get data and throw InvalidDataAccessApiUsageException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson client could reconnect to redis server after network problem had been fixed
Actual behavior
Redisson client can't get data and threw InvalidDataAccessApiUsageException like below.
After we redeploy the project, redisson client can get data finally.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3652
schedule service  timeout will cause old running task to cancel the whole job when finish error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
my redission version is 3.15.1. using spring boot 2.4.1.
i run a task once per second, and will finish in 3 seconds,  but the timeout is 2 second,  this will trigger a new task to run, when the old task finish,  it will encounter and error, which cause the whole schedule task will no run anymore.
here is my example to reproduce the case:
this is the output log
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3653
Redisson shutdown takes much time after RBatch execution
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson shutdown takes much time if RBatch executed in REDIS_WRITE_ATOMIC or REDIS_READ_ATOMIC mode.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3654
Is order of Operations in a RBatch guaranteed?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Sorry if this is obvious, but i did not find any documentstion about this:
If i am using RBatch and create let's say a Bucket from it, and call setAsync on the bucket 100 times before executing the batch, is the order of the operations in the batch guaranteed to be the order in which
setAsync(Object)
has been called?
In other words, is there any way i could end up with anything but the last value i set to the bucket after the RBatch is executed? For instance if the Marshalling of the 99th value took some time?
Bucket is just an example here, i am also using RMaps the same way.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3655
Redisson running under Quarkus throws ClassNotFoundException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to use a Redisson pubsub solution between several nodes running jobs.
Redisson crashes when trying to deserialize a message published by another node.
Quarkus version: 1.13.4.Final
Expected behavior
The message subscriber should receive the message without error
Actual behavior
Publishing works just fine. When the subscriber receives a message, a ClassNotFoundException is thrown during deserialization
Steps to reproduce or test case
Subscribe to any message while running Redisson under Quarkus
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3656
`useScriptCache=true` sends whole script to Redis for each lock call when using `RedisBaseLock`
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When useScriptCache = true is in config evalsha should be used for all script executions rather than eval to reduce network load as specified in the docs.
Actual behavior
When useScriptCache = true in config eval rather than evalsha gets used for each lock call resulting in significant network load.
Steps to reproduce or test case
Open Redis CLI
Execute MONITOR command to see commands executed on Redis
Run redisson.getFairLock('lock-test').tryLock(10, TimeUnit.SECONDS); using the configuration below.
Note the EVAL from the MONITOR:
The reason for this is that CommandBatchService is hardcoded to ignore the config setting:
CommandBatchService is used by RedisBaseLock when executing its scripts.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3657
Micronaut integration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3658
Adding ttl
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How do I add the lowest possible TTL to Redisson? Some caches expire after long time. Or would it be better to write clear() on Spring application ready event?
This is what the Config looks like:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3659
ClassCastException occurs
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm seeing these errors in logs, this for Instant and others for Enums as well
My value serializer is StringSerializer and the codec is not defined explicitly so it would be picking by default.
What would be the issue? Do I need to change to JDK serializer or Jackson one?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3660
expire(Instant) is not equivalent to expireAt(Date)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In #3399, RExpirable#expireAt(Date) is deprecated, and the javadoc said Use expireAt(Instant) instead (in latest release it is called expire(Instant)).
But I notice that the implementaions of this two method is not equivalent actually.
This breaks some object expiration, such as RedissonBloomFilter.
Expected behavior
calling expire(Instant) should expire bloomfilter name and configName both
Actual behavior
only bloomfilter name is expired
Steps to reproduce or test case
expireAt(Date) calls expireAtAsync which is overridden in RedissonBloomFilter which expire name and configName both
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3661
Spring Data Redis 2.5 support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3662
Is RLOS merge/persist a transactional operation?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
We understand that whenever we merge/persist a RLOS object, it will also created indices inside Redis for fields annotated with RIndex. Basically, this merge/persist operation includes multiple writes being carried out on the cache.
Is it fair to assume that this entire operation is a transaction, i.e. if any of the writes fail due to any reason, it will do a rollback and throw an error to the caller?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3666
Reactive Support for Redisson Live Object Service
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
Are there any plans to introduce reactive support for RLOS? If yes, by when do you think it will be available?
Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3667
RedissonReactiveSubscription remove listener after first 32 messages
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
RedissonReactiveSubscription keep the listener to process messages continuously
Actual behavior
RedissonReactiveSubscription remove listener after first 32 messages
Steps to reproduce or test case
using spring data redis backed by redisson to subscribe message from redis
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3668
Invalidate cache (2LD Cache Hibernate) if add or remove column in entity.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
It should not throw an error and only use the columns that are present in the entity, unfortunately I don't know exactly how redisson stores that.
Actual behavior
If you have an entity and add or remove a column and try to load it, you get an error.
Steps to reproduce or test case
Run 2 Java applications use hibernate-core (5.5.2.Final) and redisson-hibernate-53 (3.13.4) and setup redisson 2LD cache.
First Application has the "old" entity like:
Then try to load it on the first application it will work. But then try to load it on the second application and you will get this exception:
if you clear the cache and load it on the second application first and try to load in on the first application you will get this error:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3669
Can't set expiration time for bloomFilter key?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Can't set expiration time for bloomFilter key?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3670
Reactive Client - Key does not expire
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Why does expire method not work for reactive client?
I can still see the keys and values after 10 seconds. Looks like the client should not be shutdown to expire the keys? Can we not set the expire key as part of the expire method invocation itself?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3671
getLocalCachedMap for reactive client
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Why do we not have getLocalCachedMap for a reactive client when the blocking client has it.?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3672
MapLoader / MapWriter Reactive Interface
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Can we have corresponding reactive interfaces for below interfaces?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3673
RBlockingDequeReactive does not consume all elements
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps:
Verify in redis that we have 100 elements in the List.
Now consume elements from the queue. (add delayElements to replicate this issue) It consumes only 32 elements. we lose all other items.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3674
Transaction does not execute
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This transaction works just great 1 time. I tried to execute in a loop just for 10 times!! I get the exception for the remaining 9 times.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3675
'Not all slots covered!' on startup in AWS Elasticache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We run a Redis cluster in AWS ElastiCache. On a service startup we sometimes get the following exception (used dots instead of potential NDA data):
Application run failed
As far as I understood, redisson sends a ping on AbstractNIOChannel.finishConnect if pingConnectionInterval > 0, and this ping fails.
Is it possible to fix this issue without disabling slot coverage check? If not, is it safe enough to disable that check?
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3677
class not found exception with redisson tomcat code
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
we got following exception with Redisson tomcat decode
version 3.14.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3678
RScheduledExecutorService tasks not run(or run only a part)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
my problem is: use RScheduledExecutorService execute task, but no task key into redis(sometimes can into, sometimes can't, so what reason can cause this?).
my redisson version is 3.12.3.
Has anyone encountered the same problem,  eager for your solution.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3679
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3680
I want to listen to the redis link disconnection event
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to listen to the redis link disconnection event
What should I do?
Can Redisson do such a thing?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3681
Configure Sentinel on Kubernetes using bitnami/redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a setup of Redis Sentinel on Kubernetes that is using https://github.com/bitnami/charts/tree/master/bitnami/redis (single master setup). My configuration looks like follows (Spring Boot):
The sentinel instances are running behind one single service redis-cache:26379 in Kubernetes and only that single service must be used to access the sentinel instances.
Now I'm constantly seeing the following warnings in the log:
Looking at the code in org.redisson.connection.SentinelConnectionManager.SentinelConnectionManager(SentinelServersConfig, Config, UUID) it seems that SENTINEL SENTINELS is executed to get the list of sentinel instances. That won't be correct for the mentioned setup as this returns multiple cluster-internal IPs instead of the single service mentioned above.
Is there a possible solution for this (e.g. to disable automatic sentinel discovery)? I saw the configuration option org.redisson.config.SentinelServersConfig.isCheckSentinelsList() but that only disables the check, but not the discovery mechanism.
I'm using Redisson 3.15.5.
Any ideas how to solve this? Thanks!
Also see #2788
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3682
Redisson LOS retry configuration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, I noticed that there's an inbuilt retry mechanism inside Redisson Live Object Service which retries 3 times before throwing the WriteRedisConnectionException exception.
Is there anyway, we can further configure this retry logic? Or switch it off in case we want to implement our own?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3683
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3684
Connecting to AWS Elasticache cluster using cluster endpoint
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
AWS EC exposes 2 ways of connecting to multi-node cluster.
It gives us a cluster-endpoint AND it also gives us endpoints for each node.
Now, in redisson I see that there's a cluster connection config which requires each of the node endpoint address alongwith replicase i think.
And then there's singleServerConfig.
I was wondering what's the best way to handle this? If I use single server config with cluster endpoint, will it be okay?
Or I always need to use cluster connection config with all node endpoints registered.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3685
MOVED redirection loop detected on AWS Elasticache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
works fine.
Actual behavior
Steps to reproduce or test case
It works fine when use cluster config. but the cluster mode has bug when redis failover, like #3635 ,  I want to try replicated mode. and found the issue.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3686
How should users debug subscription timeouts?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I often see this error message when my one of my replicated services is trying to acquire a distributed lock from our AWS Elasticache Cluster.
Subscribe timeout: (7500ms). Increase 'subscriptionsPerConnection' and/or 'subscriptionConnectionPoolSize' parameters.
I followed the suggestion of the message and increased my subscriptionsPerConnection from the default to 500. I still see the error message. I looked at the CPU/Memory usage of the AWS Elasticache cluster and it is below 5%.
I have looked into other issues about this topic and I have not found a good way to root cause what is actually going on.
Is there a way that we can validate that we are indeed exceeding the subscriptions per connection or are running out of subscription connections?
If we are indeed running out of connections is there a way we can dump what subscriptions our connections are using?
I have enabled DEBUG level logging and I see the following messages.
What is the difference between the freeSubscribeConnectionsAmount and freeSubscribeConnectionsCounter ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3687
AUTH does not seem to work as expected.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps:
Run this command in redis
acl setuser dummy on allkeys +get +set nopass
Try to do this in redis. This will fail as the user has no permission to do this operation.
AUTH dummy password
Run this. This should ideally fail. but it passes!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3689
redisson crashing
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3690
Is there any instruction to build the project, thanks
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#3652
The fix hasn't been released yet, but we want to use it because we in the production environment.
I downloaded the source code today, switched to the corresponding tag(3.15.1) and tried to build it with the this fixed change, but the Maven dependency couldn't be found.
Is there any instruction to build the project, thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3691
Error message from Redis: ERR invalid command channel:·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i user redisson version is 3.13.2
Error message from Redis: ERR invalid command channel:
What does this mean, please?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3692
Redisson complains about multiple masters when two replicated address nodes resolve to the same IP
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are working through issues with using Redisson with AWS Elasticache during upgrade/failover/etc.
We currently have a replicated cluster of size 2: 1 master and 1 replicated node.
AWS Elasticache provides us with two DNS endpoints to use:
During normal operation both of these DNS entries will resolves to different IP addresses, however during upgrade/failover it is possible that only one cluster node is available and the DNS entries will resolve to the same IP addresses.
Even when operating the cluster with 1 node I think this should be allowed. This allows infrastructure teams to easily to scale up/down underlying cluster nodes load balanced by DNS without having to modify the application config to include/exclude certain hostnames.
Expected behavior
Redisson should tolerate when more than one node address resolves to the same IP address, that happens to be a master in the cluster.
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3693
Redisson Spring Boot Starter is missing CacheManager
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
redisson-spring-boot-starter should also expose CacheManager. Currently it does not!!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3694
Redisson Pro
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I like redisson so far. Does Redisson open source version support the following?
master-slave
cluster
sentinel
if yes, whats the need for pro version?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3695
The ClusterPartition#slotRanges not update in ClusterConnectionManager#checkSlotsMigration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
The  method ClusterConnectionManager#checkSlotsMigration only update the slots, not update the slotRange
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3697
Getting UndeclaredThrowableException when cache down while doing rlos.get()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
rlos.get() causing this. As per above writeups method.invoke calls needs to be handled explicitly.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3698
Redisson - remove web dependency. conflicts with WebFlux
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Issue:
I use Spring WebFlux - reactive web stack. When I added Redisson Spring boot starter - I started seeing weird issues in the application. Then I found that it brings this below unnecessary dependency. I can do maven exclude. But ideally , in redisson, this should be a test scope dependency.
spring-boot-starter-web.
WebFlux and Web can not be in the same project and it would lead to weird issues.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3699
Stream - do not emit empty map
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko
Issue:
Below code returns an empty map when there are no messages. Ideally Mono should be emitting an empty signal. Not an empty map.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3700
Stream API enhancement
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently redisson stream read does not seem to be really reactive. It just emits via Mono.
Can we change the Map<StreamMessageId, Map<>> to a proper data structure?
Also stream is never ending data stream.
The upstream should listen to downstream demand and emit messages as and when it arrives.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3701
Transaction support for other DS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently in transaction mode, we have options for updating only limited data structure.
For ex: List is not supported.
Is there any reason for this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3702
Provide Redisson commandExecutor instrumentation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We want to trace command execution with RedissonClient.
To approach this with spring I create proxy with cglib and inject it by java reflection API:
It would be nice if Redisson will provide some way to set interceptor (or multiple) for command execution (pre- and post-execution). It can be used for several observability purposes like metrics collection or distributed tracing.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3703
cannot get redis connection after redis master switch over and found there're memory leak.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In my product environment, after some times of redis master switchover (2 redis services + 3 sentinels),  the redisson happens
Expected behavior
Expect the redisson work fine the get connection
Actual behavior
redisson happens error and cannot ger error.
found memory leak in the heapdump.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3704
Redisson vs Lettuce - Performance Comparison
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was just trying to do a simple performance test to compare Redisson and Lettuce.
I really like Redisson. But Redisson seems to be consistently slower than Lettuce. Is this expected?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3705
Azure Redis For Cache. Scheduler stops fire timeouts after redis restart
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We're scheduling multiple tasks and using Redisson as a library for distributed scheduling backed by Azure Redis For Cache (cluster mode)
Everything works fine during few weeks but at some moment it stops call tasks handlers after timeout. We found that it happens in failover cases (when master is terminated and slave promoted to master or when redis fully rebooted) but not each time. It can be reproduced manually when we randomly restart master/slave redis instances or both of them through Azure Portal. After a few restarts (it happens not each time) our application stops execute tasks handlers when it's time to call it. Newly created tasks for the same instance of RScheduledExecutorService are also not working.
If we restart our application when detect this issue, then it handles all scheduled tasks that were not handled after failover and starts working normally.
I tried to debug this issue and see that HashedWheelTimer still executing and pushes request Ids through lua script into list (request queue):
{job-scheduler-executor:org.redisson.executor.RemoteExecutorService}  (backed by redisson blocking queue)
But entries are never extracted from this list after restart (previously it was done by BLPOP command, but after restart I don't see any BLPOP commands related to this queue and from response queue also: {remote_response}:). Most probably it just doesn't resend BLPOP command after reconnect to Redis and because of this it doesn't call associated handler. Size of queue just increasing when new tasks scheduled:
And after restart of an application it immediately handle all of them:
Here is a log file that I've captured (with enabled Redisson debug logs) and there you can see that there are no BLPOP commands anymore after restart. I can reproduce the issue but not sure what exactly I should check.
Since request queue is a local variable passed to "subscribe" method of RedsissonRemoteService, I cannot check the state of this queue (may be there is a way to do that but didn't found where it can be stored)
While debugging after failover, I've tried to call "getBlockingQueue" manually, it returns new instance of blocking queue. Poll/take methods from this newly created queue working fine for this queue after failover. It's possible that re-subcribe didn't happen in some rare situation.
Expected behavior
After failover redisson continues fire timouts (calls handlers)
Actual behavior
Redisson stops call scheduler tasks handlers. Even newly scheduled tasks are not working
Redis version
Azure Redis for Cache (Redis 4.0.14)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3706
Quarkus native remote service invocation fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I tried to call a simple remote redisson service, compiled to quarkus native, but the invocations fails, because of a ClassNotFoundException org.redisson.remote.RemoteServiceRequest
This class seems not to be registered for reflection and serialization. If trying to add it manually with graal-options, other CNFExceptions occure, because other redisson classes are missing. Not native-compiled invocations of such a service work well.
Quarkus version: 2.0.0.Final
Expected behavior
The invocation of a remote service works
Actual behavior
The invocation fails with a ClassNotFoundException
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3707
Allow to set task id for RScheduledExecutorService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
Currently, there is no "native" way to determine if task is already submitted to Executor in distributed environment, across several Application instances.
It's true when some of the instances restarts and the instance doesn't have any correlation between generated task id (random in current implementation) and actual task.
The new feature will allow to avoid submitting duplicate tasks.
Describe the solution you'd like
Describe alternatives you've considered
I used some sort of workaround and maintain separated HSET to hold actual submitted task, such that application instance calculates the ID from actual task on startup and verify that task already exists in HSET.
This approach is a kind of shame in our codebase, since it requires instances to have distributed lock for task verifying and registration process. It is something like leader election based on lock.
P.s. my thought that this is a crucial part in the library, since it will allow to seamlessly implement "distributed task queue" and get off unmaintained quartz solutions without extra hassles that i had to implement.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3708
none·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3709
Add value to RSet with KEEPTTL option
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Since Redis 6.0, the KEEPTTL option has added to SET command. So I'm wondering how can I use this option in RSet API, or do we have any implementation for the usage of this option?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3710
Live object batch persist error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3711
org.redisson.client.RedisException: Unexpected exception while processing command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using Radisson as a distributed cache and it is updating by two aws ECS instances. Eventually, I am getting this exception. when clear the cache it is working fine properly and again it is happening after some time. I could not narrow down the problem. looking for help from here.
Cache objects are updating frequently by java services and frequently retrieving.
Issue happens eventually, which means that some objects are caching and retrieving properly and sometimes retrieving getting this error.
Note: by searching on the web, I have found that there was a marshalling issue and redisson has fixed it on 3.15.x versions. Even after I update the library, this issue existing.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3712
Redisson renewExpiration not working after redis lock expires
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
After a lock is expired or removed on Redis-Server a new lock should be created with renewalExpiration renewing TTL of a lock.
Actual behavior
A new lock is created , but for some reason this new lock do not call renewExpiration but add this ThreadId to a map and  I dom't figure it out how it uses this map to renewal.
On this specific case I was trying to use the same thread to reaquire this log,  I tried with a new thread but the result was the same.
If I restart the applications, as this map is empty  the ttl renewal works as spected.
Steps to reproduce or test case
Set a HIgh watchdog (30s) aquire a lock expire it manually on server. Aquire it on the same application
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3713
Unsupported protocol version 50
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Retrieve data error，Beg big guy to help see
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3714
Redis renewExpiration  ttl problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Allways renew the ttl key .
Actual behavior
after looses a lock and try to aquire it again, sometimes the renewal feature doesn't work as it supposed
Steps to reproduce or test case
To reproduce it I had to use debug stop the execution before this call
with redis client remove the key.
Then release the flow.
if the key does'nt exists the renewal doesn't fire for this specific key, and it's everything ok
So my code aquire this lock again since it's not the owner, and everything seems to work except that it doesn't renew the ttl key lock because of this
In my point of view if you add
cancelExpirationRenewal(threadId)
when the renewal fails , it solves the problem
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3717
Kotlin objects with JsonJacksonCodec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!!
I'm using Redis as a cache provider with the help of Redisson in a kotlin service.
At first I tried to set in redis non Serializable objects and I had to change to a JsonJacksonCodec in order to encode non Serializable objects. However some code at initTypeInclusion from JsonJacksonCode.java is avoiding our jackson to write @Class property for kotlin classes (they are closed by default).
I have created a custom Codec in kotlin extending JsonJacksonCodec:
And everything works! Now I can serialize and deserialize kotlin classes into Json and keep them in redis.
However I'm wondering, as we are passing class type to getBucket:
redisProvider.getClient()?.getBucket<V>(cacheKeyToString(namespace, key))?.get()?.awaitSingleOrNull()
Can't we just use that information to indicate Jackson which class should be used to deserialize???
Also, did you find OK my JsonJacksonKotlinCodec?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3718
org.redisson.client.WriteRedisConnectionException: Unable to write command into connection! Node source: NodeSource
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
1、my redisson version is: 3.12.3
2、my code like this:
RBlockingQueue queue = redissonClient.getBlockingQueue("queue_name");
XXVo = queue.take();
3、my problem is:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3719
org.redisson.client.WriteRedisConnectionException: Unable to write command into connection! Node source: NodeSource
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
1、my redisson version is: 3.12.3
2、my code like this:
RBlockingQueue queue = redissonClient.getBlockingQueue("queue_name");
XXVo = queue.take();
3、my problem is:
4、additional:
the queue may have 100 element, 99 take success, but 1 take occurred error above.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3720
RDelayedQueue doesn't return element when there is only one element in queue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Add one element to RDelayedQueue:
Wait for specified time
insert second element in queue.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3721
Pub-sub is not working if custom name mapper is defined
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
If a custom name mapper is defined, the pub-sub mechanism should work as previously.
Actual behavior
If a custom name mapper is defined, listeners are not invoked.
And if this mapper is removed from configuration or NameMapper.direct() is used then listeners are invoked.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3722
Redisson - JDK 16
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, while doing communication using redisson I encountered a problem because on JDK 16 when deserializing a packet redisson cannot find the class (ClassNotFoundException). (The same code works fine on version 8 and on version 11 (with the same version of redisson)). That is why I'm wondering if I'm doing something wrong or redisson doesn´t support JDK version 16.
Stacktrace
Of course this class exists, there is a screenshot of that.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3723
ByteBuf leak when RedissonScoredSortedSet addAll
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
No memory leak
Actual behavior
Apparently there is a direct memory leak problem when using Redisson and RedissonScoredSortedSet
We noticed more and more memory being used by our container when started using our service in particular way, storing larger amount of objects than usual, but we couldn't see it in the heap dump.
After enabling paranoid leak detection in netty we got the exceptions:
	org.redisson.RedissonScoredSortedSet.addAll(RedissonScoredSortedSet.java:364)
	our.service.RedisClient.set(RedisClient.java:34)

We are pushing larger set to the cache, about 3000-4000 objects few KB each.
It keeps increasing everytime the data expires (our case 5 minutes) so most certainly set.addAll is causing that. After a couple hours the container hits the limit, but heap stays the same.
Steps to reproduce or test case
Our code is rather simple:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3724
Ask a lock reentry problem, sub method using thread pool call
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If the thread ID is used as the key value for reentry, is there any problem if the thread pool is used for calling the sub method? Can the key value be specified externally? And if the thread number will be repeated
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3725
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3726
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3727
RMapCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi,
We use RMapCache object to save our data, but we can see that the redisson client gets all the map when we need data and not a specific key on the map.
is there a better way or map to prevent this behaviour and get the key we want instead of all the map and continue having TTL leave map ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3728
Thread lock starvation with RSemaphore on high concurrency with hundreds of locks (2)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is a followup to #3573. We have now received the first user feedback from @jebeaudet which exhibits the same behavior as in the previous issue.
We have tried with Maven 3.8.x from the maven-3.8.x and Resolver 1.7.1 with Redisson's RSemaphore. Several runs observe the same behavior. One thread tries to acquire a lock which is not held by anyone else and after the time is up (30 s) no lock is obtained. @jebeaudet privately provided me log files of those builds and I have distilled the lock workflows from it. Here is a sample:
The write lock artifact:ch.qos.logback:logback-classic:1.2.3 is not held by someone, yet it fails. I can provide several SQLite databases which contain raw imported data, prepared data as well as joined by lock workflows/transitions. The thread dump of a hanging build looks always the same:
Nothing, but localhost....
PS: There is a similar issue with RReadWriteLock, but I will report this seperately.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3729
ReactiveRedissonTransactionManager`s transactionOption change, but not work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
transactionOptions timeout option disable
Actual behavior
transactionOptions timeout option not disable
Steps to reproduce or test case
Hello
I use redisson with spring framework
create ReactiveRedissonTransactionManager bean
I set the timeout to -1 but it didn't set as desired. I think tunoff
so, I find ReactiveRedissonTransactionManagers doBegin` method
inherit this class, and customize doBegin method set timeout -1
but didn`t not work well ( I set it up, but it was actually 30 seconds. )
how can I turn off timeout setting ?
ps. let me know if i can help you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3730
FairLock deadlock again
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
redisson_lock_queue and redisson_lock_timeout keys disappear once the lock that was taken by the first thread is timed out automatically after lock lease time, and then the second thread successfully takes the lock.
Actual behavior
Sometimes, even though the lock from the first thread is timed out and released automatically, the redisson_lock_queue and redisson_lock_timeout keys are stuck and the second thread can't acquire the lock, even though nobody is holding it. The second thread is stuck for full acquisition timeout. Then, it fails to get the lock eventually, and keys redisson_lock_queue and redisson_lock_timeout disappear, making the lock available again. Feels like lock expiry notification gets lost and Redisson waits for nothing. P.S. In this regard, would be great to have FairSpinLock not to rely on pubsub.
Related? #2883
Steps to reproduce or test case
1 redis, 1 sentinel
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3731
Dynamic cache name when using with spring boot
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using Spring Cache as the abstract level for caching and Redisson as the client. Everything works fine, but recently I had a an issue with high cpu and memory when handle a lot of requests. Now i'm searching how to optimize or solve it. I read https://redis.io/topics/memory-optimization and see that Redis hash data type works well only when there is small number of entries in a hash.
This is how I'm using Redisson with Spring Cache.
And I use spring Cacheable annotation in my method with the value as "CacheA" or "CacheB".
I checked the source code of RedissonSpringCacheManager, Redisson create a RMapCache instance for every cache names which are mapped to corresponding hash key in Redis. In my example there is two RMapCache instances, one for "CacheA", and one for "CacheB".
Now come to my issue, because my cache object (ex: CacheA) has thousands of entries. My idea is to split it into smaller hashes by altering the cache name dynamically. Example: CacheA-1, CacheA-2,....
But how can I do that in Redisson? Bellow is the code of createMapCache method in RedissonSpringCacheManager.java
Thanks,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3732
Can't parse json config /tomcat/redisson.conf
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I experienced "The session manager failed to start due to previous errors". It looks "Can't parse json config /tomcat/redisson.conf".
I attached the redisson.conf here. If someone can review the conf file and provide suggestion solving the errors, it would be really appreciated.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3733
Redisson connections release while command execution attempt failed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We faced an issue in following Azure Redis Cluster configuration:
And we have a question:
When RedisExecutor executes its command and retryTimeout happened then:
1.1. Error message is assigning to exception variable
1.2. Then attemptPromise is cancelling
1.3. Then attemptPromise.onComplete happens which calls releaseConnection
1.4. There is a code
which do not release connection if connectionFuture.isSuccess() == false (and this condition always met in case of timeout or I am wrong?).
And looks like that its never releases this connection and free connection counter semaphore is not releasing at all here.
Is it expected behavior? Should we always have connectTimeout less than retryInterval?
And in case when 2nd attempt fails too, we still see in the logs "after 0 retry attempts" because we already have "exception" variable set on previous step.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3734
Predicate filter on RListReactive list returns non-deterministic result
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
Returned array is non-deterministic way. Values that it can take:
Steps to reproduce or test case
I use Redisson RedissonReactiveClient with Spring Boot 2.5.2. I wrote the following example code. When I hit refresh in the browser, I receive different array sizes in a non-deterministic way. The array is always deleted before the execution, so array should always contain the following 4 elements and filtering by "B" should return the two elements of the array, where the result  of the applied predicate is true.
Redis runs dockerized on localhost.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3735
ClassNotFoundException Exception RemoteServiceResponse
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We are intermediately getting ClassNotFoundException exception while using redisson-spring-data-23:3.16.0. Could someone guide on the issue and its resolution please.
Using bare minimum config as below.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3736
Issue with AWS Elasticache using ReplicatedConfig when failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
We are working through issues using Redisson with AWS Elasticache during switch between master/slave.
We currently have a replicated cluster of size 2: 1 master and 1 replicated node. AWS Elasticache provides two DNS endpoint: the primary one, and the reader.
Sometime on a failover, there is a switch between the master and the slave behind the DNS and redisson update his connexion. But it seem that the Redisson switch is incorrect and our service can't proceed command when this occurs.
Here is some log to help:
Jul 18, 2021 @ 08:57:42.757 ERROR redisson-netty-2-1 Can't process the remote service request.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3737
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3738
Batch check the existence of keys in RedissonMap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
I am using RedissonMap to store ... a map! Sometimes I wish to check if a key is present in the map without having to actually get the value. Redis provides a command HEXISTS to do this, and I can see that in RedissonMap we leverage this command to implement containsKey efficiently.
However, sometimes I would like to check the presence of multiple keys in the map, sometimes many thousands. The naive solution to simple call containsKey ends up round-tripping to redis many times.
Describe the solution you'd like
I would like a batch method (maybe something like containsKeys) which indicates the presence or absence of many keys at once, without round-tripping to redis many times.
Describe alternatives you've considered
I can call getAll() and just look at which keys got returned, however this returns all the values as well, which I don't care about in my case and which consume additional network + memory resources.
I could bypass RedissonMap and simply issue a pipelined request for many HEXISTS, but this is extra complexity I have to handle myself and it bypasses the RMap abstraction.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3739
Question about Redisson pub/sub listeners not re-subscribing after Redis maintenance
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm fairly new to Redis/Redisson and have a question about an issue that I have encountered during Redis maintenance (planned switchover I think).
My application is running on Azure against Azure Cache for Redis
The application is using Redisson pub/sub listeners but after Redis maintenance only 1 of many listeners re-subscribed and other listeners fail to deliver new messages that are being published.
I'm not sure if I should increase some retries-related configuration to avoid this problem or is more in-depth investigation (including redisson logs) required.
Example of successful re-subscription:
I would appreciate any help with this issue.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3740
mget
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i can‘t find "RedissonClient.loadBucketValues()"  in version 3.16.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3741
RedissonClient.getList() performance
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
RedissonClient.getList() currently is doing a count on the list and retrieving every item one by one. We have a dynamic list that increases with time so the response time of the app also increases linearly with as the time to fetch more of the list items get longer.
From AWS xray tracing:
We have 267 items in the list and the above repeats for all items in the list:
If there a way to get all list items in redisson with LRANGE instead?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3743
Class cast exceptions on CommandsData
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We're using redisson pro and getting class cast exceptions. Our dependencies in maven look like:
The exceptions we're getting:
Does someone have an idea how to resolve this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3745
Command still hasn't been written into connection!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are experiencing what at first glance seems like network related errors using the latest version of redisson pro. However we noticed that this error only occurs on LPOP commands.
Increasing netty threads has no effect on this, also increasing timeout config did not improve the errors.
Also when deploying our code (on a test environment without load) we see a heavy increase in cpu usage on redis master nodes. The load increases by 50% and drops very slowly in about 1 hour to <5%
We are using the RedissonClusteredSpringLocalCachedCacheManager (but the same occurs when using RedissonClusteredSpringCacheManager)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3746
not consistent response
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have 2 application servers (Tomcats) and our application is not sticky which mean that every request can reach different application server.
In our flow we upload data from one server to Redis and then read data from the second server but don't get the uploaded data.
Can the reason for this behavior can be related to local cache implementation in Redisson? Can we disable it per put request or only disable it for all Redisson client requests?
we use to get the data
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3747
Regression - quarkus native builds fail after updating netty in 3.16.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After upgrading to redisson 3.16.1 there are build failures of native quarkus, the stracktrace points to netty. as far as i can see there was a minor version upgrade of netty in the last release, so maybe this is the reason, in 3.16.0 everything works fine.
Quarkus Version: 2.0.3 Final
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3748
sslProtocols parse issue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi.
After adding sslProtocols option to redisson.yaml file I get error below:
redisson version: 3.16.1 for tomcat 8
After removing sslProtocols line no errors reported in tomcat console
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3749
RedisTimeoutException following RedisLoadingException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In our setup, we have sharded mode cluster consisting of 6 shares, 2 nodes per shard.
Our redisson client interacts with only the MASTER node in each shard.
Recently we experienced the following exception: "org.redisson.client.RedisLoadingException: LOADING Redis is loading the dataset in memory". Following that exception, we had been getting RedisTimeoutException on majority of the calls until we finally restarted our application services and the problems went away.
Any clue as to what might be the cause of this? I am suspecting this is a problem with the redisson client itself.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3750
redis lock not working as expected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have the following test scenario:
My expectation is the following: if the lock couldn't be acquired in 1s  then it should show Failed to acquire lock. If the lock is acquired then, in 30s, it should be automatically released by Redis (this 30s are very important as I only need to allow another run after this time). Only one should should be acquired in 30s. The problem is that most of the times I get multiple Lock acquired between 30s intervals.
The code launches 1000 parallel execution tasks. Since Redis is (mostly) single threaded then I wasn't expecting any concurrency problems (and I'm pretty sure they aren't on the Redis side). I am also using a single node Redis.
I have also tried another solution using Zookeeper Leader Election and that one works as expected using the same caller function. It acquired a single lock at a time.
Am I doing something wrong here are we having a Redisson issue?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3751
RDeque Or RPriorityDeque Lost data
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
version: redisson-3.13.2
add code:
consumer code
add success, but Occasionally, data is not consumed.
There is no recurrence problem in the local stress test, but it occurs occasionally in the production environment
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3752
Different effects when Mix using of multiLock and Lock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
version:
redisson-3.14.1
When try to using both multiLock and Lock with same key
There are different effects according to the lock order
When lock lock1 first ,then lock multiLock1
multiLock1 stun for a few seconds and then, lock success(lock1 are not released)
When lock multiLock1 first ,then lock lock1
lock1 are stoped and waitting for the multiLock to release
it's confused
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3754
Is there any guideline for upgrading the middle value of a version
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Will it be an incompatible version when I upgrade from 3.11.x to 3.15.x?
Is there any reason or guideline for the version value?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3755
Redisson throwing java.io.NotSerializableException when trying to publish something in a topic
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm really confused as to why I got this error, and I might have misunderstood how topics work with objects in Java.
So basically when doing RedissonClient#getTopic(nameOfTheTopic).publish(objectToPublish), I'm getting this NotSerializableException.
The object I'm trying to send is this class:
Can't you send classes other than the ones from the JRE or am I missing something that I need to do in order to be able to do so?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3756
the method  RRateLimiter.expire() is incorrect working
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
this is my code :
then I fund a bug ：
5 seconds have passed， the  redis key “redisson_rate_limit:trade:rootMchId0001” has removed，but the redis key
Who knows you can help me？please...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3757
java.lang.NullPointerException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
CommandEncoder throw NullPointerException all config is default
Redis version 5.x
Redisson version 3.16.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3758
java.lang.ExceptionInInitializerError: null
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, first time using redisson. I have a very basic setup with redisson 3.16.1 running on jdk 16.
Trying to use redis for a simple cache: RMap<UUID, String> uuidCache;
The setup is just like the basic examplte from the README.
But when launching the app, this exception is printed and redis doesn't seem to work.
Is this a knows issue?
Thanks for help.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3759
Redis Stream Support For Spring Applications
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko
This is a feature request.
Currently Spring supports only Kafka and RabbitMQ for cloud stream applications. There is no support for Redis Stream.
I think Redisson could implement this interface and provide redis binder via redisson.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3761
RedissonMapCache#addListener with Redis Sentinel may cause NOPERM exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonMapCache#addListener is trying to detect OS type by executing INFO command, which is considered dangerous by Redis (part of its dangerous ACL list).
This causes exception:
NOPERM this user has no permissions to run the 'info' command or its subcommand
As a workaround, user can be granted an access to this command.
But, there should be a way to avoid INFO command at all (for example, by allowing to specify RedissonMapCache#osType explicitly along with adding something like BaseEventCodec.OSType#NONE).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3762
Issue when testing failover on AWS Elaticache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, I'm facing an issue when testing failover on AWS Elaticache
I'm using Redis Cluster with 2 slots, each slot contains 1 master and 1 slave.
It takes about 8 minutes after I trigger a failover event and the Redis works well but my services seem cannot recover by themselves.
I dump a thread capture and may get some useful information:
I'm using jetty as our web container and the operation I'm using with Redisson is quite simple - this.redissonClient.getBucket()
The reason why the service cannot recover is that threads are blocked in JVM, I can see 900 qtp* in JVM and their states look like this:
From my understanding, when the web requests try to get data from Redis Cluster, one of the nodes takes the task asynchronously then callback to the service by Netty epoll. So when the master failover, the tasks on this node cannot answer anymore, which makes those qtp* threads cannot finish.
I'm wondering if my guess is correct and how I can solve this issue, like giving a timeout for web requests or returning exceptions from Redisson side?
Although failover is not a common case, it still hurts a lot when my service cannot recover automatically.
Expecting for your response, thanks a lot.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3763
Redisson No Session in spring app on tomcat
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have integrated redisson in tomcat as specified in doc. My application is built in spring framework and running on tomcat server 8.5. I am currently running 3 replicas of application in my kubernetes cluster where redis is also installed.
My tomcat context.xml is as follows:
My Redisson.yaml is as follows:
masterSlaveServersConfig:
But when my application starts and try to login i see following exception in my serer:
In redis ii see session keys in redisson/tomcat_sessions and they keep on growing when i refresh the page so it seems like its creating new session ion each refresh and not validating existing one
Can you tell me what's need to be changed here ?
Also there are no log statements printed by redisson can you also tell me how to enable debug logs for it ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3764
redisson-spring-boot-starter support "spring.redis.url"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hope that the redisson-spring-boot-starter can support the above spring boot setting. Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3765
Does near cache options also apply to the backing RMap?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I can set max size, eviction algorithm etc. using LocalCachedMapOptions, but it's unclear from the documentation if those options also apply to the backing RMap. Given that RLocalCachedMap does not subclass RMapCache, I'm guessing no, but would like to hear from a maintainer.
You can use this ticket for improving the documentation in this respect.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3766
Redis operations metrics
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
I'd like to see metrics for low level Redis operations, like GET, SET etc.
Describe the solution you'd like
Expose metrics around these operations. The only available metrics is for RedissonCache, and there is no visibility into any of the other data structures.
As a less desirable solution, you may consider providing interceptors for a client to implement and export their own metrics.
Describe alternatives you've considered
None
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3767
RedissonReactiveClient limitations
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
RedissonReactiveClient is missing many of the features compared to  RedissonClient.
Returned RMapReactive has no methods to set max size or eviction algorithm.
No method to create a LocalCachedMap (or perhaps) LocalCachedMapReactive. There's an open issue #3671 for this point only.
Describe the solution you'd like
Bring feature parity between blocking and reactive API.
Describe alternatives you've considered
Using blocking API.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3768
Flushing write-behind tasks
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
So i have set up redis as read-through/write-behind cache for a mongoDB. Now there is data i want to persist when the application stops.
Writing into the cache isnt enough as the MapWriter that writes from redis into mongodb is run by the same application.
If i stop the application and write my data into the cache then my MapWriter wants to wait some seconds to batch write the data from cache into db.
But at this time the application is already stopped and nothing will be persisted.
Is there some way to flush the write-behind tasks in a blocking fashion?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3769
Is there a way to pass redis commands in redisson, without using the functions?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3771
Exceptions when changing node type in AWS Elasticache on the fly
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We tried to update underlying node type in our Elasticache Redis cluster. When AWS starts switching to newly created nodes, we see a lot of exception:
Is it possible to scale Redis cluster vertically on the fly using Redisson?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3772
fixing spelling in wiki
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
minor
since there is no way to pull request the wiki:
in the configuration section
"All property names matches" should be "All property names match" (not plural)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3773
Add batched merge() method to RLiveObjectService interface
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3774
quarkus-redisson: a static analysis issue mentioning bytebuddy
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Quarkus Redisson should work in native mode with this reproducer.
Actual behavior
The static analysis fails with a message like:
Error: Unsupported features in 3 methods
Detailed message:
Steps to reproduce or test case
The README of this reproducer should explain what's needed.
Logically, running mvn clean integration-test -P native should be enough.
mvn, java, graalvm native-image and a valid testcontainer setup might be needed.
Redis version
There is a test container resource embedding redis 6.0.9 in RedisTestResource.java.
Redisson version
3.16.1
Redisson configuration
Basic single server here.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3775
nginx PROXY redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3776
RPriorityBlockedQueue takes element even after the calling thread has been interrupted
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
RPriorityBlockedQueue element available to be taken by the second thread after the first one has been interrupted before the element appeared in the queue
Actual behavior
The element has been read by someone else
Steps to reproduce or test case
Testcase is almost the same as RedissonBlockingQueueTest.testTakeInterrupted() with exceptions:
getPriorityBlockingQueue() is used instead of getBlockingQueue()
Had to use @RepeatedTest(30) since it's not 100% reproducible. I have about 6 succeeds out of 30 runs.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3777
Topic listener removal · 77 ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is it necessary to explicitly remove a Topic listener before shutdown, or does shutdown remove it anyway?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3778
Listeners unregistered · 78 ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey
Not sure if this is an issue. I'm using a topic to transit data between two instances. Sometimes, listeners are unregistered randomly, and I don't know why, server is just publishing data, it works 1-5 times and then it breaks :/
Config:
Monitor (first wave it works, second doesn't) :
Thanks for your help, if you need more details, tell me!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3779
TransportMode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
TransportMode Indicates the differences between different configurations
Why is NIO selected by default
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3780
The return value of this method about setIfAbsent is null.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The return value of this method about setIfAbsent is null when a key is exist. I think the return value should be false or zero.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3781
`RedisNodeNotFoundException` still exists when redis cluster fail over
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson can detect the cluster nodes change  correctly.
Actual behavior
Steps to reproduce or test case
When redis cluster fail over.
And can not recover by itself.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3783
RedissonKeys.Delete() method pass empty array will block the thread in redis cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Exception throws like single redis server
Actual behavior
In cluster mode, this method will block the thread and no exception throws
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3784
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
none
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3785
org.redisson.client.RedisException: ERR invalid cursor. channel
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Normal traversal
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3786
Micronaut 3.0.0 integration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3787
spring cache and jackson InvalidDefinitionException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I think the problem is jackson turn this value to List.
But I don't know how to solve it exactly.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3788
Post slave-recovery , GetType commands continue to being sent to master node instead of slave nodes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Master redis node should never get GetType commands.
Actual behavior
After unexpected traffic-load (spike) on redis, redisson starts sending gettype commands to master nodes instead of slave nodes.
Steps to reproduce or test case
On sudden spikes , this issue has been observed , its random in nature. Issue goes away after service restart.
(Also , happens very frequently.)
Both client service accessing the redis cluster and the redis cluster are in the same VPC
Redis cluster : AWS Elastic Cache is used. Cluster is 3 shards with 6 nodes  with each shard containing one master and one replica node. Instance type of each node is r6g.2xlarge
Commands used :zadd and zrevRangeByScore only.
Behaviour of nodes during the problem :
Since then we are seeing get cmds being run on 0002-001 & 0003-001 , which are master nodes.
Once the slaves are recovered, instead of using slaves for zrevRangeByScore , we see calls at master for zrevRangeByScore commands.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3789
MacOSDnsServerAddressStreamProvider
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I try netty-resolver-dns-native-macos 4.1.67.Final and 4.1.65.Final and 4.1.63.Final but didn't work.
I found netty maybe not support m1 how can I solve this problem.
redisson
Shiro.ini has default web session manager set
We made all kinds of changes and combinations, but still cannot make redisson persist our session. Help!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3791
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3792
Deserialization difference between RedissonMap and RedissonLocalCachedMap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
I was writing some unit tests and I discovered that I could not perform any operations on a second instance of RedissonLocalCachedMap when I was storing non primitive key/values in the map.
My expectation is that a second instance of RedissonLocalCachedMap would be able to read values from a map as long as RedissonMap could. This is preventing me from using RedissonLocalCachedMap in my code.
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3793
exception class loader
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi,
we have the following exception even we change the configuration to :
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3795
Why does redisson always reconnect the old redis pod ip?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Our redis cluster is composed of three nodes, and each node is loaded with two redis pods. Two redis pods die when a single node goes down. But redisson always tries to connect these dead redis pods.
When a single node goes down:
When the redis cluster returns to normal
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3797
redisson currently does not fully support the redis lpush command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently, the "lpush" command of redis >= 2.4 supports multiple elements at a time, while the corresponding "RDeque.addFirst()" in redisson only supports one element.
Similar commands that are not fully supported include "rpush", "sadd", "srem".
Hope these features are supported, thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3798
class loader exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi,
regard #3793  wasn't able to reopen
we tried to remove jar from app, but it wasn't able to recognize the app classes that we saved in the cache ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3799
RedissonSemaphore#trySetPermitsAsync lua script is wrong ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3800
RMap.loadAll() probably should clear unexistent entries.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I've got rather confusing experience with loadAll() method. I used it on startup to 'sync' redisson map with database, however, it doesn't clean values not existed in database.
I can use
but it is not atomic and I've found no functions to lock entire map access while I do this.
As loadAll() calls loadAllKeys(), maybe it better to clean nonexistent keys at the end of loading if loadAllKeys = true?
Reproduction snipped to illustrate:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3801
Access Denied on Javadoc Search
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In the search box on the right, type redisson.
In the  search suggestions, scroll down to the Types section (second from the top), and click on org.redisson.Redisson.
Stare at the error below and wonder why.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3802
RMapCache HMGET notworking
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
redis call trace  once
redis command hmget
Actual behavior
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3803
Redis Stream XTRIM with MINID strategy is not fully supported: incompatible parameter type
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
The API to trim a redis stream (see the correspoding XTRIM command) supports different strategies via the org.redisson.api.stream.TrimStrategy type.
Yet the additional command parameters in the overloaded methods (e.g. trim, trimAsync, trimNonStrictAsync) will allow only ints.
Specifically you can now only pass a
int threshold (to say how many messages you want to keep)
int limit (to remove up to a given number of messages)
Those are inconsistent with the TrimStrategy.MINID which expects a message Id as input.
Since the message Ids are composed of a timestamp in millis from epoch and a number, the current int param won't be able to technically be used for such a job, even ignoring the semantics of the param.
An int is not enough to encode a valid millis timestamp which is part of the message Id.
Describe the solution you'd like
It would be nice to provide overloaded methods taking an instance of org.redisson.api.StreamMessageId, and - most importantly- a simple String, to allow partial matches.
Describe alternatives you've considered
I will probably use a work-around by calling the low-level redis client, but the issue is mostly about the current API which is a bit misleading in what it provides.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3804
RRateLimiter drift
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Rate limit decreases over the time in highly concurrent environment.
Demo of such drift is on screenshot. Rate there has been limited by only RRateLimiter.
Expected behavior
Limit should not change without explicit call of setRate() with new value.
Actual behavior
Limit changes over hours. As a workaround I explicitly call setRate() with the same values time to time.
Steps to reproduce or test case
Just regular usage, nothing special:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3805
Redis hostnames support for Sentinel mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3807
port out of range:-1 if host is starting with slash
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Description
If hostname is given to Config with leading slash it causes exception 'port out of range:-1'
Expected behavior
Either of two variants:
exception about incorrect host should be thrown
slash should be trimmed silently from host string and proceed.
Actual behavior
This behaviour is very misleading and cause to search a ghost mistake with port configuration instead of host typo.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3808
CommandDecoder: Unable to decode data. channel command: (EXISTS) java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Long
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3809
Failed to submit a listener notification task. Event loop shut down?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when I choose redisson (version 3.16.1)  ,this problem  occurred, but go well for other version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3810
mset command (getBuckets().set(Map<String, ?>)) in redis cluster throw CROSSSLOT
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson: 3.6.1
redis: 6.2.5 in cluster mode
use redisson.getBucket().get(keys...) success,
but when i use redisson.getBucket().set(Map<String,?>) and keys hashed in different slot,throw a CROSSSLOT
it's a bug? or because of other considerations
and i can pr to fix it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3811
Why does RCountDownLatch not implement the RExpirable interface?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The reason I want to set the expiration time:
The 'countDownLatch.countDown()' method may not be called
The server went down when the 'countDownLatch.await(10L, TimeUnit.SECONDS);' method was called
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3812
RExecutorService execute same task twice at the same time ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I submit 200 tasks into RExecutorService and get 202 tasks executed.
The log shows the task :  00e3b0a299b6e8e71dc887aa9e728f4ac8 push into
I guess it may cause by retry mechanism, because the client connect to REDIS via VPN and the network is slow and unstable.
the result : task 00e3b0a299b6e8e71dc887aa9e728f4ac8 executed twice.
attachment is the log store in json format.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3813
why send may command when use mget command and all keys in same slot?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when i use getBuckets().get("{test}abcd", "{test}bcdf", "{test}efgc");
i trace the code and find the 3 key use hash tags, so their have the same hash code(by connectionManager.calcSlot)
but in executeBatchedAsync, cretae 3 command (mget {test}abcd, mget {test}bcdf, mget {test}efgc ) and run in CommandBatchService
why? and i think send a command (mget {test}abcd, {test}bcdf, {test}efgc) is better than now?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3814
RExecutorService sometime will stuck and does not resume task anymore
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am tring to use RExecutorService in my project.
The test env connect to redis via VPN and the network is slow and unstable.
In my test. sometimes the RExecutorService will stuck and does NOT resume task anymore.
The RExecutorService is named : "redisson-web-online-test-DistSvc"
The RExecutorService will store request in : {redisson-web-online-test-DistSvc:org.redisson.executor.RemoteExecutorService}
and store task into {redisson-web-online-test-DistSvc:org.redisson.executor.RemoteExecutorService}:tasks
I found the {redisson-web-online-test-DistSvc:org.redisson.executor.RemoteExecutorService} is empty but the task in {redisson-web-online-test-DistSvc:org.redisson.executor.RemoteExecutorService}:tasks does not processed and remain in {redisson-web-online-test-DistSvc:org.redisson.executor.RemoteExecutorService}:tasks
relative data store in redis:
Expected behavior
Task submit into RExecutorService being executed.
Actual behavior
The RExecutorService being stick and task remain in {redisson-web-online-test-DistSvc:org.redisson.executor.RemoteExecutorService}:tasks .
Steps to reproduce or test case
Start my application
after started , waiting for 5 minutes.
submit task into RExecutorService
the task does NOT executed and remain in {redisson-web-online-test-DistSvc:org.redisson.executor.RemoteExecutorService}:tasks
{redisson-web-online-test-DistSvc:org.redisson.executor.RemoteExecutorService} is empty
value store in {redisson-web-online-test-DistSvc:org.redisson.executor.RemoteExecutorService}:counter is 1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3815
Curious to ask, why deprecate the json configuration ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I used org.redisson.config.Config#fromJSON(java.lang.String) to generate Config, I found that this method has been deprecated.
When using redisson-spring-boot-starter, the value of spring.redis.redisson.config is String. I think json String is less prone to format errors than yaml String.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3816
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3817
HINCRBYFLOAT  java.lang.NumberFormatException: For input string: "PONG"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Not Execption
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3819
Hostname ends up comparing against IP address
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When using redis and sentinel in hostname mode, when redis and sentinel instances are restarted, the redisson client should allow its known slaves to reconnect to the same master.
Actual behavior
Redisson is comparing the hostname to a saved IP address and not realized it is the same.
Steps to reproduce or test case
Redis deployed into K8s using the following settings:
Setup:
3 redis + 3 sentinel (running in a Kubernetes cluster), kill off 2 pairs of redis/sentinels pods (redis master and a replica)
the pods come back with different IP address sometimes (but not always) and they a
Redis returns to a healthy state, but running into issues where the client can't recover.
One issue is that replicas coming back are not being considered having the same master
We can see here that the SentinelConnectionManager thinks current master is 100.64.110.145 while the replica is reporting its master as redis-node-1's hostname
they both point to the same instance, but the comparison is not working correctly.
I'm not sure yet if its caused by the same comparison issue, when killing and recreating the pod which was running the master redis node, we are running into a state where the ClientConnectionsEntry for MASTER is marked as frozen, even after it should have been working. I think it may be a timing issue with the unfreeze call during re-connection, but still working on isolating it. (if i manually unfreeze the master entry via remote debugging, it starts to work again)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3820
Lambda task not work as expect in RExecutorService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I submit Lambda task into RExecutorService but get strange executing result.
below is my code:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3821
RedissonLock Perhaps leak
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The tryLock(long waitTime, long leaseTime, TimeUnit unit) method, if the subscribe timeout, and then subscribeFuture.cancel success,when to call unsubscribe , the subscribeFuture.onComplete should move out ,before the if block.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3822
bitfield xx get i8 :READONLY You can't write against a read only slave
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
use client.getBitSet("bitsettest").getByte(1)
it will send "bitfield bitsettest get i8 1" to slave node
but redis return a error -READONLY You can't write against a read only slave.
so bitfield xx get ...  command only work on master node?so we need use “commandExecutor.writeAsync” to execute command?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3824
[question] 3 node SENTINEL init fails with "SENTINEL SENTINELS command returns less than 2 nodes"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
SENTINEL SENTINELS command returns less than 2 nodes! At least two sentinels should be defined in Redis configuration. Set checkSentinelsList = false to avoid this check.
Any idea why this could happen
note：redisson version 3.15.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3825
Question about use of Redisson againt Azure Cache for Redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We use Azure Cache for Redis.
We configure Redisson as follows:
clusterServersConfig:
nodeAddresses:
In our application log we see Redisson querying cluster nodes details and obtaining info about two specific instances (Master and Replica; ports 15000 and 15001)
We're observing issues when there's a scheduled maintenance on Redis instances (github issue 3739).
Microsoft support came back to us with following feedback: your application is directly connecting to the port 15001 which means it is connecting to specific instance. Please note that it is not a good practice to connect to the specific instance as during patching, if it goes down for an update, you start seeing errors. I would suggest you to connect to Redis over port 6380.
Is it possible to make Redisson follow this recommendation i.e. always connect to port 6380 and not to specific instances?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3827
Question about ConnectionListener with AWS ElastiCache for Redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
We have multiple instances of an application running in AWS ECS.
We periodically encounter a scenario where one (not all) container's RedissonClient with ConnectionListener receives onDisconnect calls from previously connected Redis hosts that never connects again. Other containers remain connected to the same hosts and are able to operate as expected.
Hoping for assistance to understand a way to avoid this scenario.
When we run against a docker cluster on our local computers, we are able to restart Redis instances at will and see disconnects and reconnects as we expect. Only in AWS do we find permanent disconnects. Eventually, our RedissonClient is disconnected from Redis completely and cannot make any progress on its work.
Thank you for any help.
Our RedissonClient is created more or less like so:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3828
RedissonV3.16.2 write null command to slave node when use epoll transportMode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
You can't try to checkFuture by write command to redis, the slave node in redis cluster shouldn't be allowed to do this.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3829
RedissonFairLock does not automatically clear non-running LockName and non-reference lock methods after a restart and cannot be automatically renewed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
Production environment with a large number of requests queued
At around 19:23 on the night of September 9, due to the existence of a large Key in the store, after submitting a work order to delete the large Key, there was still an imbalance of data in the cluster slice, and the DBA tried to perform a memory analysis of the cluster, resulting in a Redis slice switch and the loss of some of the Keys.
Redisson's unlock mechanism will go to determine the LockKey Delete state, if Delete succeeds then publish a message to notify other clients subscribed to this lock to compete for the lock, if Delete fails then there is no message notification (Delete is a failure state when Key does not exist), thus causing the clients subscribed to the lock to wait until the thread wait timeout time (default is 5 minutes) to compete for the lock again.
Steps to reproduce or test case
Creating a large number of concurrent requests for locks
The business processing request time to obtain the lock is set longer than 30s
If thread A acquires the lock and manually deletes the key of the lock, i.e. RawName
Observing other threads acquiring locks, you will find that you need to wait a long time to get the lock, and after restarting the main method of Test, you cannot empty the last waiting queue, but can only wait for the default 5 minutes to clear the non-running state LockName(id:ThreadId)
1. RedissonFairLock.lock will not automatically renew
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3830
Unable to send PING during load test
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
While running a load test, I'm occasionally seeing these "Unable to send PING command" errors. Wondering if there's a particular timeout setting I can use to try to overcome these. Separately, trying to understand if this could be related to spurious disconnects seen by a configured ConnectionListener. In a previous question, I asked about any experience/advice regarding how to manage cases where a RedissonClient loses connections that are never re-established. If a RedissonClient has disconnected from a cluster, what is the best way to heal it and re-establish connections to the cluster?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3831
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3832
Multiple connection pools created to failover slave while redis server rebooted
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When a master/slave fails over, the appropriate connection pool should only reconnect once and no. of connections on redis server should be 2X at max.
Actual behavior
Seeing multiple connection pools being initialised and repeatedly a pub sub connection being initialised, making failover redis node unresponsive due to connection exhaustion.
Logs from a single application server, initialising slave pool 20 times, in less than 4 seconds
Steps to reproduce or test case
Not sure, as it was an unexpected outage of redis server. But you can try failing multiple redis nodes at once.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3833
Pub Sub connections being initialised repeatedly after redis server VM became unresponsive
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
If a redis server goes down, maximum of 2x connections should be seen on the failover node, with no change needed in pub sub connections.
Actual behavior
We are seeing much more connections than 2x (Reaching 50k connected clients in this case) and pub sub connections being initialised repeatedly to the nodes on the unreachable server.
Does redisson require pub sub pool for any internal functions or can the pool size be set to 0, effectively disabling it?
Steps to reproduce or test case
1 VM was running 3/18 cluster nodes in the redis cluster.  It became unresponsive and we saw a surge in connections to that VM after that.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3834
Inconsistent Performance Retrieving Data From Redis with Redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have Redis setup in as a Master with 2 Slaves.  Generally it works well.  Occasionally when we pull a large cached object from Redis, the time to pull the data from the cache is 50-60 seconds.  The good times we have seen are 3-6 seconds to pull the same data.  Is their anything we can do to make it more consistent (obviously we want it to be in the 3-6 seconds range).  The data is stored in an RList.  This particular case the data is very large, 16-17MB.  This is an unusual case, but we need to be faster nonetheless.
I have run the latency checks on the server, no issues there.
I will add that we are constantly adding new items to the cache.  These items expire after 60 minutes (ttl).  The cache typically has about 1600 items in it at any given time (during peak usage hours).  Redis is running inside a Kubernetes environment, as is the client application (same K8S environment).  Memory usage for the 3 Redis instances is hovering around 70-80MB we have allocated 2G for each (max).
Is there anything you can think of that would cause a request for cached item to suddenly take 50-60 seconds?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3835
I expect to receive a delayed message without pushing a new or null data to the delay queue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
1 Write the data to the redisson delay queue and set delay time is 30s
2 Shutdown the consumer application within 30s and starts again
3 Start consumer application before or after 30s
4 I expect to receive a delayed message
Actual behavior
1 The consumer application is no longer received until the delay queue's data is delay
2 Write a new data to the redisson delay queue , the consumer side can receive historically unspent and newly written data
Steps to reproduce or test case
STEP 1 Offer data to the delay queue, set delay 30s
delayQueueService.addDelayQueue("HELLO", 30, TimeUnit.SECONDS, "TEST");
STEP 2 Shutdown consumer application
STEP 3 Start consumer application
the delay data can not be recevied, Expected recevied the delay data
STEP 4 Offer data to delay queue again,but do not shutdown consumer application
delayQueueService.addDelayQueue("HELLO AGAIN", 30, TimeUnit.SECONDS, "TEST");
STEP 5 The consumer application received the message "HELLO" immediately, and 30s later , the message "HELLO AGAIN" can be received
I expect to receive a delayed message without pushing a new or null data to the delay queue
Redis version
6.2.4
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3836
spring boot 2.4.10 with redisson 3.16.2 : zadd command will throw stackoverFlow error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Spring Boot 2.4.10
This is simple demo.
string is ok.
Spring Boot 2.5.4
This is ok
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3837
can i disable AddressResolverGroupFactory
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Due to security issues, I want him to use the default dns instead of netty to read /etc/hosts.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3838
How does spring boot1.5x upgrade the redisson version from 3.8.x to 3.11.x?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
From the dependency of redisson 3.11.3 version, we can see that the spring boot used is 2x, and now our project uses spring boot 1.5.9, how should I upgrade to redisson 3.11.3 version? The following is a screenshot of the error report
The reason for the upgrade is to fix the bugs of versions before 3.9.1
#1811
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3839
Stream - DS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Let's imagine a stream created like this.
I thought I should be able to add a list of payment events into the stream. But looks like I need to always convert it into a map to add it to the stream.
My point is - each stream entry is for 1 event. Not for collection of events.
I have to add it like this.
If we see, the key is basically unnecessary here.
Can you please explain the reason behind the such data structure? Is it because redis's limitation? Or do we have any other better use case?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3840
Connection leak (regression since 3.16.1)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3841
RMapCache.fastRemove throws RedisException: too many results to unpack
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson Version : 3.16.1
Redis : 6.0.5
Getting the below error when trying to remove cache entries in bulk(more than 10000) in Redis.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3842
How can I execute BGREWRITEAOF command from RedissonClient?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Does Redisson expose an interface to execute any Redis command? Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3843
Unexpected exception while processing command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Use ExecutorService to obtain the redis value. After obtaining the redis value, cancel the task, and redisson throws an exception.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3844
 keys.getKeysByPattern cost too much time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
why this code cost 42047ms,but only 6000+ keys in my redis,redisson ver 3.16.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3845
EntryXXXListener is not working on Turkish language Windows 10
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
EntryXXXListener is working
Actual behavior
EntryXXXListener is not working on Turkish language Windows 10
You can read at for more information.
Easiest fix will be changing toLowerCase() calls to toLowerCase(Locale.ENGLISH)
I guess problem comes from usage at CommandPubSubDecoder.java
Steps to reproduce or test case
You can force Turkish language by giving JVM argument -Duser.language=tr and try to use listeners on any map with name which includes character 'i'
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3846
Reddison Fuzzy matching iteration is too time-consuming
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
When I use the keys method for fuzzy matching, there are only 15 keys, which takes 7-800 milliseconds after iterative processing
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3849
Master slave mode vs Replicated mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko
How is master slave mode different from replicated mode, after keep aside AWS EC support ?
Is it possible to do sharding using redisson across multiple standalone servers (non clustered) ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3850
Redisson should not retry on non idempotent operations
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson should fail fast  when dealing with no idempotent operations instead of retrying.
Actual behavior
Redisson is retrying on no idempotent operations like  RDeque.pollFirst() / RPOP:
In the above scenario, the queue was popped twice, causing data loss.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3851
redisson-hibernate fails to load config when running in Quarkus dev mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I had to do a bit of a workaround to pick the Redisson Hibernate 2LC instead of the official Quarkus 2LC:
Notice how I've also had to override createRedissonClient(). This was due to the config file not being found when running in Quarkus Dev Mode.
See Quarkus#2531. They suggest using currentThread() to get the correct classloader
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3852
RLockReactive tryLock waits longer than waitTime
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
long id = Thread.currentThread().getId();
... lock.tryLock(0, 10, TimeUnit.SECONDS, id) ...
Expect this to exit immediately - reporting "true" if it can get the lock now ; and reporting "false" if it can not.
Actual behavior
It seems to block and wait until the lock becomes available.
The waitTime (set as 0 above) does not seem to influence the behaviour.
Steps to reproduce or test case
Invoke "lock.tryLock(0, 10, TimeUnit.SECONDS, id)", when the lock is already taken.
Expect it to instantly return with "false". It does not.
((Note: I am working inside Quarkus, and using "reactor.core.publisher.Mono" to convert the Redisson Reactive Core (Mono) into Mutiny (Uni) - this does not seem related ; but it makes it harder for me to frame a pure-Redission test case))
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3853
How to extend the valid time of tomcat session?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
By official tutorials, the maximum sessions valid time would be 30 minutes, and my application’s maximum valid time is expected to set to 24hours, how to configure the redisson?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3854
How to get notified of an expired lock lease?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello. Wondering how to be notified of a lock's expired lease?
I've tried adding an ExpiredObjectListener and a DeletedObjectListener to my lock, but neither of those received an event when my lock's lease expired.
I do see that I can call lock.remainTimeToLive, but wonder if there's a way to configure a listener for that.
Thanks for any suggestions.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3855
How to add custom tags to Redisson metrics
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We usually add custom tags, like "environment", to our Spring Boot apps the way recommended by Spring Boot docs:
So that all metrics exported to our InfluxDB contains this tag.
We moved to Redisson recently, with a PRO license, and configured the metrics export with Influx as pointed in docs this way:
We can correctly see metrics in our InfluxDB but the environment custom tag is missing.
Also tried this with no luck:
How can we do this?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3856
Redisson Crashes Tomcat server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3857
Tomcat Servers Crashes due to SIGSEV with Redisson 3.10.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson Jar causes all servers in the cluster to crash due to SIGSEGV issues related to Date Format
Below is the Thread details.
Register to memory mapping:
Not able to reproduce as I am not able to find the actual data. It looks it has something to do with  java.text.SimpleDateFormat.compile. However pushing this to all servers in the cluster and crashing is not expected.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3858
when use CompletableFuture.runAsync to create thread we got no class definition found from redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when start new thread using CompletableFuture.runAsync we have no class definition found
we have useThreadClassLoader: true
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3859
Redisson getLock operation does not respect timeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson getLock timeouts after timeout
Actual behavior
Redisson getLock timeouts after timeout + 1 second
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3860
How does PING influences the BATCH command?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm doing a batch command in the following way:
From time to time we get the following Timeout exception:
org.redisson.client.RedisResponseTimeoutException: Redis server response timeout (20 ms) occured after 0 retry attempts. Increase nettyThreads and/or timeout settings. Try to define pingConnectionInterval setting. Command: null, params: null
I'm wondering about the Try to define pingConnectionInterval setting. in the WARN message. We use the default setting for PING (the 30s interval). What is the meaning of that sentence in the message? Is the PING necessary? Could we disable the PING?  How does the PING influences the batch command? Any suggestions how this WARN can be avoided?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3861
Quarkus extension seems to only use config from build time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Weve had to revert to using reddison and creating the client ourselves as it seems only config used at build time is injected into the client, which is then causing issues for the native build. Looking here it seems this may be the case. Is this to be expected, or am i missing something here. we need this to read from an external yaml file thats managed in kubernetes.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3862
RTransaction::getBucket returns different instances on subsequent calls to the same transaction
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi
We create datastructures from RTransaction so that we can see uncomitted changes.
While this works on the same instance of the datastructure, it does not when the same thread retrieves it again from the same instance of the RTransaction.
As the RTransaction is the isolating bit, we were wondering, if the same RTransaction should return the same instance of the datastructure on subsequent calls.
This seems to be true with all datastructures (Bucket, Map, ...)
quick test:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3863
redisson-spring-boot-starter has compile time dependency on test artifacts (junit and assertj)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
adding redisson-spring-boot-starter as a dependency should not pull in junit and assertj as compile-time dependencies. these artefacts should not be deployed to a productive environment
Steps to reproduce or test case
create a spring-boot project
add redisson-spring-boot-starter as a dependency
build war file
war file includes junit and assertj
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3864
How to add value synchronous on RedissonPriorityQueue?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I would like to add a value synchronous on a RedissonPriorityQueue. The add méthod use method evalWriteAsync to add the value :
Why this method is async? How can i add a value synchronous?
For information, i use redisson version 3.15.2. I check the master : the method is the same.
Thanks in advance
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3865
Unable to register multiple Reference codecs in RedissonClient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In Redisson 3.15.2, getReferenceCodecProvider() was removed from RedissonObjectBuilder.java.
This breaks code that adds a reference codec with the RedissonObjectBuilder, for example:
RedissonObjectBuilder now only allows registration of the single codec set on the Redisson Config object.
Is there an alternative way to add another reference codec?  We need to use JsonJacksonCodec by default for references, but have a sub class that needs to use TypedJsonJacksonCodec.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3866
JCache does not call onExpired event at expired cache event.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
when cache entry is expired, JCache call registered CacheEntryExpiredListener#onExpired method
Actual behavior
Did not call onExpired.
Other event types (CREATED, UPDATED, REMOVED) did call onCreted, onUpdated, onRemoved except onExpired
Steps to reproduce or test case
Build jcache with redisson
register CacheEntryEventListener to configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3867
Version 3.16.3: RedisTimeoutException: Command execution timeout for command: (PING)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After switching to version 3.16.3, I see tons of next exceptions:
And I don't see the same in v3.16.2.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3868
Exception on heavy load in springboot
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
we are using springboot-starter redisson client on cloud foundry and using AWS Redis cluster, 99% operations are read only, i am using RMapCache<String, String>  and I am using default config, not changed threads/nettry threads etc.
During load testing (max 200 requests per second), getting below different exception intermittently (DNS , out of memory, readtimout) and once we get these exception , they are not recovered.
Could please let me know how we can fine tune the configs to support heavy reads?.
DNS Logs:
Read timeout Logs:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3869
org.redisson.client.RedisResponseTimeoutException: Redis server response timeout when use RLock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My Redis don't use cluster just only one node address.
I used RLock for locking but was not successful because of Redis timeout. I restarted the service, it worked but it's not the best way in the production stage.
I referred to the same issue about Redis timeout such as an increased nettyThreads or timeout config but it's not successful.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3870
How to get notified when the key has been expired by TTL
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3871
Connection Leak
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
(Maybe related to #3840)
Expected behavior
Following fresh startup of service utilizing Redisson client, AWS ElastiCache nodes each maintain consistent ~1k active connections from our service without change (with exception of node failovers, re-sharding, etc)
Actual behavior
Slow connection leak after deployment of 3.16.3 client & constant spam of new connections being created. Previous client versions (tested all of 3.15.6, 3.16.0, 3.16.1, 3.16.2) have maintained constant ~1k connections per node without new connection spam.
Pattern of connection leak is unclear - connections increased continuously for ~11 hours, slowly decreased over another ~10 hours. Starting experiencing complete cache failure a bit before lowest peak of active connections during leak was hit.
AWS ElastiCache metrics:
(First drop is from trying re-deployment, where connection leak occurred again)
Sample of debug-level logs (sanitized): https://pastebin.com/raw/RKJaYeX7
Reverting to previous client version resolves issue.
Steps to reproduce or test case
We have been able to repeat this issue across service deployments, but can't give general reproduction steps.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3873
Reddison 3.16.3 is using netty-common 4.1.68.Final and netty-handler 4.1.68.Final but when I upgrade latest version of reddison is still using netty 4.1.66 version
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi Everyone!
I am using in my pom.xml the latest version of reddison - 3.16.3 which is supposed to use the latest versions of netty-handler and netty-codec, but when I run mvn dependency:tree -Dincludes=io.netty:netty-codec and mvn dependency:tree -Dincludes=io.netty:netty-handler I see it is using 4.1.66 version instead of 4.1.68 version.
Can we take a look at this please?
Thank you.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3874
use LocalCachedMapOptions.SyncStrategy.UPDATE,Perform put(), remove(), and get() operations in order, I got the value of put().
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3875
redis-sentinel connection with ssl not working as expected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
we have three VMs running redis and redis-sentinal in ssl mode. and we are facing issue connecting to it with redisson
Expected behavior
we should be able to connect with redisson to the cluster
Actual behavior
Message
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3876
Unable to get connection! Try to increase 'nettyThreads' and/or connection pool size settingsNode source
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When the Redis network has  restored, applications send  requests to redis cluster operation,
redisson operation to All master  are  OK  after master/slave switch.
Actual behavior
When the Redis network has  restored, applications send  requests to redis cluster operation,
redisson operation to these old master is normal, but redisson operation to   another new master is  exception occurs after master/slave switch
What causes this？
The whole network failure of redis cluster was simulated and the production problem was restored
[ Step one ]
View the current cluster status,result  is healthy
[ Step two ]
Shut down the Redis network and check the application log:
The ClusterConnectionManager detects a network exception and fails to connect to the host every 5s
[ Step three ]
Restore the Redis network and check the application log.
The ClusterConnectionManager detects the cluster node status.
An master/slave switch occurs on 7001 and 7005, and the cluster status is abnormal.
The Redis cluster status check is cancelled.
[ Step Four ]
Send a request to check the status of redis operation. The result is as follows:
Redisson  operated  7003 7002 is normal, and operated  7001 exception of  master/slave switch occured
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3877
NPE in CommandPubSubDecoder.messageDecoder
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3878
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3879
How does "RedisTimeoutException: Unable to get connection! Try to increase 'nettyThreads' and/or connection pool size settingsNode source" happe
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the 6 nodes cluster is composed of 7005,7002,7004 that are master nodes,and 7001,7003,7006 that are replica nodes.
When Node 7001 replicas 7005 and 7005 fails, the cluster promote node 7001 as the new master and continue to operate.
After Node 7005 is replica node and Node 7001 is master node, the redisson client write to Node 7001 and replies RedisTimeoutException
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3880
IndexOutOfBoundsException on reading PENDING Array[Byte] message
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Possibly a null for a message value could be returned instead of an exception.
Actual behavior
An exception is thrown
Steps to reproduce or test case
I had a steam consumer that had both new and PENDING messages.
Then I cleaned up my stream from the old messages using XTRIM my-stream MINID 1633844273000-0 command. All the events up to this point have been removed.
It happened that some of the PENDING messages were also removed by XTRIM command. Still, they are present in PENDING list of my consumer, but the values of the messages are nil.
When I try to look for data for one of those nil events (1632735948072-0), I do not find them, but Redis is providing me newer message:
I understand this looks like Redis bug and PENDING should not reference the message that no longer exists.
But I think Redisson could handle better this case and return at least null as a message value instead of throwing an exception. The reason is, I am reading 10 messages and only 1 of them can be problematic, while now the whole XREADGROUP command blows, and I am unable to handle that problematic message programmatically, e.g. acknowledge this message as having wrong message value.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3881
Transaction.commit
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson 3.12.1  The thread is always in this state
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3882
I am using the "redisson-spring-boot-starter" dependency to read the yaml file and encountered some problems
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
xxx
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3883
Systematic timeouts since 3.16.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
No negative performance impact between redisson releases.
Actual behavior
After upgrading to redisson 3.16.3 from 3.15.0 operations started to time out, once it got rolled back, timeouts got back to regular values:
I've tried to gradually bump from 3.15.0 all the way to 3.16.3, and we experience the same performance problems when migrating from redisson 3.16.0 to 3.16.1.
Most of the timeouts are either PSETEX or lock acquiring and renewals:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3884
Netty memory leak error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey, I saw a few other similar posts already but they weren't this exact error. I am running version 3.16.3.
I am using AWS elasticache with a replicated server setup in cluster mode and am only really using redisson to try and store sessions.
The below is the stack trace I get, it happens while tomcat is starting up.
12-Oct-2021 16:22:07.359 SEVERE [redisson-netty-2-28] io.netty.util.ResourceLeakDetector.reportTracedLeak LEAK: ByteBuf.release() was not called before it's garbage-collected. See for more information.
Recent access records:
There are a few other redisson-netty errors with similar stacktraces - all seems to be related to the Servlet filters on my application
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3885
RListMultimapCache & RSetMultimapCache is not available for RedissonReactiveClient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
RListMultimapCache & RSetMultimapCache is available only for RedissonClient and not RedissonReactiveClient.
Describe the solution you'd like
RListMultimapCache & RSetMultimapCache is also available for RedissonReactiveClient.
Describe alternatives you've considered
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3886
Low ScanInterval burns CPU
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello.
We tried to scale cluster under the load, but we got a lot of Node hasn't been discovered yet exceptions. To prevent them we changed scanInterval to 25ms. It helped, but according to JFR 30+% of CPU is burned to refresh cluster state:
For me it seems that ClusterConnectionManager.checkMasterNodesChange has a O(n^2) complexity and can be simplified to O(n) using map instead of inner loop.
Are there any recommendations what values should scanInterval have? And how can we update it on the fly to scale cluster?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3887
Unable to send PING command over channel: L:/127.0.0.1:65454 - R:localhost/127.0.0.1:7000
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a local redis server (version: 6.2.6), redisson(3.16.0) and after a few mins of application startup, I see errors related to Redis connect timeout in logs:
Unable to send PING command over channel: [id: 0x87172b36, L:/127.0.0.1:65454 - R:localhost/127.0.0.1:7000]
Is this related to pingConnectionInterval settings? Also one other question, is retryAttempts = 1 considered as first attempt?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3888
Regression in 3.16.3 fails EVALSHA operation on multiple-shard Redis Cluster with authenticated connections
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson version 3.16.3 EVALSHA no longer works with AWS ElastiCache Redis Cluster that has more than 1 shard when the Redisson client is configured to use Redis authentication and TLS connections.
Downgrading to Redisson version 3.12.5 fixes this issue, and operations with multiple shard clusters with authentication work as expected.
Expected behavior
EVALSHA operation on multi-shard cluster completes successfully when connection is using Redis authentication
Actual behavior
The following code works on multi-shard clusters when clsuter Redis authentication and TLS connections are disabled, but fails when Redis authentication and TLS connections are enabled.
EVALSHA fails with the following error:
Steps to reproduce or test case
Create AWS ElastiCache Redis Cluster 5.0.6 and enable authentication and TLS connections
Use Redisson redisson-spring-boot-starter 3.16.3 with Spring RedisTemplate to run a Lua script operation against that cluster, which will end up calling EVALSHA operation on Redisson client.
Thank you!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3889
Unreleased Resources
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonRegionFactory  125line  classLoader.getResourceAsStream(filename)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3890
Redis keep the keys even if they are expired
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi !
I'm using Redisson 3.16.1 with a RMapCache with a MaxIdleTime, a TTL and a MaxSize in LRU mode
The key of the cached value in the map contains a date so it won't be called the next day.
I was expecting for those keys to disapear after the TTL has expired but it doesn't seems to work this way. I can reduce the number of keys per cache but that's quite weird
My understanding is that the framework wait for the key to be called to clean up.
Notice that I have activated  :
useScriptCache: true
cleanUpKeysAmount: 1000
Thank you for your help
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3891
Concurrent attempt to RReadWriteLock writeLock leaves thread in blocked state after lock is released.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Two Threads, thread-1 and thread-2 attempt to acquire a RReadWriteLock.writeLock() using lock().  thread-1 gets the lock, thread-2 waits for lock to be released.  thread-1 releases lock, thread-2 acquires lock.
When thread-1 releases lock (using unlock()), thread-2 does not acquire lock.  Wait for lock expires after 35 seconds.
2 threads call lock() on the same RReadWriteLock at or near the same time.
thread that gets the lock release the lock (after a second or two).
Note that thread-2 doesn't automatically get the released lock..
Redisson version 3.16.3
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3892
Is RBatch a single get/put call to Redis server using MGET/MSET functionality ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RBuckets uses MSET/MGET functionality but RBuckets.set() doesn't have an option to set TTL for entries.
From documentation of RBatch, it was mentioned: RBatch requests are batched to separate queue and could be executed later with execute(). Does this mean each request in batch gets executed at once or is MSET/MGET functionality used to execute all requests of batch at once?
@mrniko Can you please confirm if results of batch.execute() is in order and if value is not present in cache for get request, does it return null?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3893
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3894
RBloomFilter batch and async mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I faced a problem similar to one mentioned in #3094 but for the contains method. When I want to test a large number of elements it's more sensible to test a group of objects in the same call.
I implemented batch method Map<T, Boolean> contains(Collection<T> objects) and immediately decided that if we want to make it performant RFuture should be used.
And here comes my question: if I wanted to create PR for those changes, should aync version (RFuture<Map<T, Boolean>> containsAsync(Collection<T> objects)) be implemented in RBloomFilter or should I create RBloomFilterAsync as it seems to be a convention used for other classes? The second option is more tedious as RBloomFilter hasn't extended RBloomFilterAsync so far for some reason.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3895
java.lang.StackOverflowError in releaseConnection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have random StackOverflowError where only redisson is involved in the stack trace. There seems to be no pattern. Since we don't have this behavior in staging it eighter has to do with high loads or is just very unlikly,
Expected behavior
No StackOverflowError
Actual behavior
Stack OverflowError
Steps to reproduce or test case
No reproducer found so far. Maybe if we can limit the problem with your help
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3896
RMapCache#addListener method；Obtain the operating system type is null ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
serverFuture.getNow().get("os") The obtained result is null
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3897
AWS Elasticache Redis Replicated server and master failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
we use the latest version of redisson and a 3 node AWS Redis (one master, 2 replica).
The config yaml list all three node as replicated server.
During a service update deployment, AWS update the 3 nodes, doing a failover of the master to an updated replica to update the last node.
Our application has logged a few errors -READONLY You can't write against a read only replica.
for around 500ms.
Is there an automatic system in redisson that will try to revalidate where is the master node in case of READONLY error ?
does those 500ms between the moment AWS swith the old master to a read replica and promote a new master ?
or is it the leftover of the scaninterval use by the connection manager to check for new master ?
Any way to avoid or react (retry) easily on those errors ?
(this error popup in code using cachemanager, but we also use RBucket)
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3898
BloomFilter false judgment does not meet expectations
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
Steps to reproduce or test case
Redis version 4.0.13
Redisson version 3.16.0
Redisson configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3900
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3901
Performing a GET on an existing key, which is set outside Redisson, returns `Unsupported protocol version 53`·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Trying with redisson - 3.16.3
Not able to get the value already set in the redis.
Key type stored in redis is of type STRING ( normal SET and GET operation )
In this test, I have set the key 'b' as follows using redis-cli:
Trying the below code gives the following error:
If I uncomment the bucket.set("5") and then try, it works.
But the value of key "b" is something like:
Why there are extra characters while creating a STRING key-value using RBucket?
Is there a way to streamline this so that [STRING] values set from other sources can be read with RBucket ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3902
TransferQueue blocks connection for poll
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
I want to send an Object to a specific server if it does not respond I want to use a fallback solution. Since ReliableTopics don't give me a way the check if the request really came though we are using TransferQueue each takeAsync permanently allocates a connection (or more precisely the BlockingQueue from the RemoteService that is used in the TransferQueue).
Describe the solution you'd like
Either ReliableTopics giving me a way to detect when the request was received or TransferQueue not allocating one connection,
Describe alternatives you've considered
I guess I could build something like this myself with multiple topics but I thought this could be useful for other people two.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3903
RBatch to execute MULTI key operations across different key slots as single command similar to RBuckets get
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
RBatch to execute MULTI SET across different key slots. MSET doesn't allow to set TTL for all entries.  RBatch with IN_MEMORY_ATOMIC throws error: CROSSSLOT Keys in request don't hash to the same slot.
Describe the solution you'd like
RBatch with multiple get/set operations shouldn't throw CROSSLOT error similar to get(List keys) in RBuckets interface
Describe alternatives you've considered
We don't want to put all keys to one slot so just want to know if it's possible to get cluster node to slot mapping from existing API or do I have to execute CLUSTER NODES command?
@mrniko Would like to know if there are any other alternatives to execute multiple SET operations (with TTL) as single command on Redis.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3904
redisson print slots added and slots removed when application run a period of time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson version: 3.16.2
and use redisson-spring-data-21 to adapter spring boot 2.1.6.RELEASE
os: red hat 7.6
here is the log of org.redisson.cluster when it start print the infos
why it happend?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3905
springboot 2.2.9 use redisson-spring-boot-starter 3.16.3 always throw StackOverflowError
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
true
Actual behavior
Steps to reproduce or test case
application.yml
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3906
Unable to change master after the Redis singleServer changes Ip address
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, we are using singleServerConfig to connect to Redis server hosted in Cloud. we are using Redisson client 3.16.0 and pointing to elastic cache Reader endpoint and Redis server is running with one master one read replica. After the Redis server changes the IP address, DnsMonitor detected the IP address change correctly but is not able to connect again and throwing error
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3907
Is it possible to have batch/bulk getWithTTLOnly and getWithTTLOnlyAsync methods in RMapCache?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi! We are using RMapCache object to store key-value pair with TTL per key in an AWS ElactiCache cluster mode enabled setup. In this setup, we have multiple shards and at least one replica per shard and we want the application reads to strictly be from the replica nodes for performance reasons. We were earlier using RMapCache.getAllAsync method and realized that, as explained in #2165, this method will always read from the primary node. Upon further reading, we came across #2981, which mentions the RMapCache.getWithTTLOnly method that can serve the reads from replica nodes.
In our use case, we will be reading multiple keys from the RMapCache all at once. In the case when the values for these keys are not present in RMapCache object, we will be making one network call for each missing key to Redis. Hence we wanted to understand if it would be possible to have bulk/batch variants of these methods, similar to other getAll and getAllAsync?
Happy to share more details.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3908
java.lang.ClassNotFoundException: java.util.Comparator$$Lambda$170
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3909
Latency much higher than jedis in certain condition
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The result is "redisson avg 7.8" and "jedis avg 0.7". I think this is related to epoll being slow but I don't how to confirm that.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3910
none·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3911
when domain's ip change, redisson also reconnect old ip
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson version:3.11.5
After the IP of the domain name changes, redisson always reconnects the old IP. The correct way is to disconnect from the server after the IP of the domain name changes. Redisson should reconnect to the new cluster IP
why？What configuration is needed?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3912
REntity.TransformationMode.IMPLEMENTATION_BASED is not working using Live Object Service
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
I annotate my object with @rentity(fieldTransformation = REntity.TransformationMode.IMPLEMENTATION_BASED) to make sure that my map is not converted to RedissonMap. According to documentation at Section 9.2.5. Annotations
fieldTransformation - You can also specify a field transformation mode for the RLO. As mentioned before, in order to keep everything as close to standard Java as possible, Redisson will automatically transform fields with commonly-used Java util classes to Redisson compatible classes. This uses ANNOTATION_BASED as the default value. You can set it to IMPLEMENTATION_BASED which will skip the transformation.
I expect that my map will be always stay as HashMap or at least as a normal JVM map instance.
Actual behavior
When I read back the object using attach, object returns map as an instance of RedissionMap.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3913
Buckets.set method saves value that is not encoded by codec·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
saved value by Buckets.set is encoded by codec
Actual behavior
saved value by Buckets.set is encoded by toString method
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3914
this cron 33 3/5 * * * ?  only execute once
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson version
jdk version:
oracle jdk 11
This is the correct expression : 33 3/1 * * * ?
When the starting time is long, the probability will not be executed
33 3/5 * * * ? will be not executed at all, if now time is "2021-10-25 10:03:50"
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3915
duplicated with
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i do not use docker ,but still Constantly repeating sentinel WARN.
here is the conf
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3916
Why is Redisson not writing data to some shards in AWS ElactiCache (cluster mode enabled)? 16 ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi! I am using Redisson 3.16.3 with AWS ElastiCache in cluster mode enabled.
AWS ElastiCache Setup:
Stage#1: Redis in cluster mode enabled, with 2 shards and each shard having 1 primary and 2 replica nodes.
Stage#2: After some time, I added 2 more shards to this cluster, thus it has a total of 4 shards (4 primaries + 8 replicas).
Stage#3: Eventually, I removed one cluster, thus the final setup is 3 shards (3 primaries + 6 replicas).
// Adding data to Redis
I have used this application code to put various keys into Redis in all the three stages on my AWS ElastiCache setup. While transitioning between each stage, I can see Redisson has identified the shard addition/removal and the ClusterConnectionManager is logging slot movements (... slots added to ..., ... slots removed from ...). I can also see that all the shards in all the stages have active connections with my application based on the "Current Connections" AWS graph of each shard.
Problem/Issue Faced:
But in all 3 stages, some shards are never receiving any data at all. And I believe these shards should be receiving the data because my slot partitioning logline is printing the key's slot to be on these no-data-receiving shards.
Is it possible that I am logging the slot partitioning incorrectly here, and Redisson is appending some metadata to $myRedisKey before inserting it into Redis? Or have I misconfigured something in this entire setup?
Please find attached some logs and graphs supporting that data for a key that should be going to shard#3 in stage#2 when there are 4 shards in total, but there are no items at all on shard#3.
Happy to share more details.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3918
Upgrading from 3.16.1 to 3.16.3 increases connection usage 30x and doubles response times
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Minimal differences between minor versions
Actual behavior
Severe performance degradation and increased resource usage
Steps to reproduce or test case
We are exclusively using Redisson for lock management.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3919
RLock lease expiry not being extended in spite of RLock being acquired
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Our Microservice is running in Azure. It is deployed with 2 pods. Each pod attempts to lock the same RLock, the idea being that only one pod at a time holds the lock.
RLock is obtained using org.redisson.api.RLockAsync.lockAsync() and onComplete() lambda is used to get notified about lock acquisition.
We observed following: pod1 had the lock but then pod2 got notified of lock acquisition.
So we lock again and within 1 msec get notified about success: heldByCurrentThread=true, ttl=29998
This cycle continues from then on:
we get the lock without issues, very quickly
within 30 seconds we lose the lock and so go back to 1)
I think 30 seconds matches lockWatchdogTimeout setting. I see no warn/error log related to Redis connectivity
I have logs for around 3 hours when this issue has persisted but it might have well lasted for much longer.
Expected behavior
If a client acquires RLock then it should also be able to extend its (lease) time
Actual behavior
A client acquires RLock but then seems unable to extend its (lease) time
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3920
How do sentinel round reconnect to when all are down ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, when redisson work in scheme 1 master and 2 slave with sentinel daemon on each, then 2 slave go down, some time master go down too, and then one or two of slaves go up, but redisson try connect to master only sentinel/redis node.
Question: How to do round-reconnect to sentinels servers if no one server not avialable ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3921
ReplicatedConnectionManager not follow dns change when elasticache node is modified.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
connections are renew when dns change.
Actual behavior
dns changing doesn't affect to connections.
Steps to reproduce or test case
modify elasticache node type.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3922
master change checking in Replicated ConnectionManager is stopped when exception occurs in slaveUp
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
master can't be changed in current try but keep checking.
Actual behavior
stop checking.
Steps to reproduce or test case
If the master monitoring job is executed before the dns change is applied.
LoadBalancerManger.getEntry returns null
LoadBalancerManager.unfreeze throws exception
exception occures in master monitoring job and scheduleMasterChangeCheck is not called again.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3923
PubSup close due to buffer size is not handled
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson should notify about closed subscriptions
Actual behavior
The subscription is closed quitely mem dump of redisson shows that the pubsubs are even still in PublishSubscribeService maps.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3924
Redisson reconnection issue | version : 3.16.3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Please find the following series of events that bring the redisson connection to dead state
Redis server goes down, please find the logs :
After this redisson detects the DNS change, the switch to new master couldn't happen because we have disabled connection to public IP using Azure's private redis endpoint feature. Please find the logs :
Now after this, we keep seeing such logs where the DNS monitor looks for the change in IP and throws error that it is not able to connect even though the redis server becomes healthy again.
Now if we hit the service we get (though, now the redis server is up):
Please find the following connection config :
Also, If we restart the service it will be able to connect properly.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3925
Redisson client injects weird characters at the beginning of strings
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using Redisson client to publish String messages on a topic, but for some reasons, the published messages always contain some weird characters at the beginning:
Any idea how I can make those weird chars go away?
My java code looks like this:
I'm using redis:3.2 & radisson-spring-boot-starter 3.16.1
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3926
FstCodec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
FstCodec
Why did YOU rewrite the map
Is there a problem
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3927
Strange mess with data being read from different keys causing mysterious ClassCastExceptions until application is restarted
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Values read from different keys concurrently should be returned to a proper calling thread. I.e. RedissonClient.getBucket("Key_1", new FstCodec()).get() should return value stored under key "Key_1".
Actual behavior
We get sometimes very strange situtations causing the whole process to mix up all values from different caches, causing ClassCastException(s) or deserialization exceptions with values from different types of keys trying to be deserialized or cast to types used by completely different redis keys.
Probably it happens after a small networking problem in production when there are some timeouts or slow server responses.
Here is an excerpt from our production logs from a single application instance:
It looks like it has read Long value from a key that is used for RedissonLock objects instead of com.xxx.customers.CustomerInfo at 01/11/2021, 09:10:16.421, and then later at 01/11/2021, 09:10:18.120 tried to cast String read from com.xxx.customers.CustomerInfo key (which is actually a FstCodec encoded binary object) cast to Long used by RedissonLock.
And if such thing happens, then we continue getting such strange errors for other keys/locks until we restart the JVM.
Steps to reproduce or test case
Don't know, it happens too randomly and not so frequently, but if it happens, it causes random errors in production causing problems to our customers.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3928
Redisson client should be created even without all connections being initialized
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The problem we are facing now with Redisson is that we create the Redisson client at the application start-up and quite often we get an error like the following:
Unable to init enough connections amount! Only 49 of 50 were initialized.
or for a different use case:
Unable to init enough connections amount! Only 1 of 2 were initialized.
This leads to the client not being created.
We don't want to retry synchronously because it would slow down the application start-up which in turn would slow down the AutoScalingGroup outscaling.
We would like to get an instance of the Redisson client even if none of the connections are initialized. There should be some async retry mechanism for re-establishing the connections.
We currently use a Dummy client as a fallback (when the Redis is not critical)) or manage the client creation async retry by ourselves, but we need to replicate this retry mechanism for each Redisson client (we have different use cases with different Redis clusters).
Would be very useful to have such a functionality built-in. We used to have Aerospike before Redis and Aerospike had such a functionality (you were able to set this property to false)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3929
msetnx command (getBuckets().trySet(Map<String, ?>)) in redis cluster throw CROSSSLOT·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#3810
Redis version: 6.2.5 in cluster mode
Redisson version: 3.16.3
when i use redisson.getBuckets().trySet(Map<String,?>) and keys hashed in different slot,throw a CROSSSLOT
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3931
FstCodec 31 ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
String deserialization with high concurrency "{}"  or Object reference
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3932
j.l.IllegalArgumentException: port out of range:-1 with Sentinel setup
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I noticed weird warnings in our logs during investigation of one of issues:
Right before this warning, trace logs:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3933
Problems founded with jcache license file
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
In your application you use jcache 1.0.0 version. This version has not correct license file. This page shows that license was change on Oct 11, 2015 and than was corrected from JSR-000107 JCACHE 2.9 Public Review - Updated Specification to Apache License, Version 2.0 on Oct 14, 2016.
Release jcache 1.0.0 was on 18 March 2014. LICENSE file version was:
This causes some problems with other users using your application. Using jcache 1.1.0 version or higher will help to resolve this problem.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3934
Leak of connection leads to redisson unable to perform action correctly
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
The connection pool remain stable and keep the number of opened connection to the minimum.
Actual behavior
Connection pool is full of blocked connection and redisson can't open another connection to perform any request.
Steps to reproduce or test case
We have not idea what was the cause of this. The only thing we know is:
We have one service that use redisson and on both instance of this service the number of opened connection has increased since 10 days without any connection being freed. When we restarted the two instances of the service, the number of open connections on our redis dropped by 80. On the JVM side, there is no thread stuck during this period.
We are using redisson for distributed task using the RScheduledExecutorService. It's possible to have task that are cancelled during execution.
Replicated server with a node config containing one worker group of 5 with 8 redis thread, 16 netty thread and a the default MasterPubSub connection pool (24min, 64 max)
Here is some log about the problem after the connection pool is full of blocked connection:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3935
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3936
PriorityBlockingQueue can duplicate elements be removed?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to a sort queue and it can remove the duplicate elements.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3937
Redis Sentinel doesn't add resurrected master back into node cluster  unless one of the sentinel is restarted externally in Redisson setup
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Explored and Tried lot of ways to automate redis sentinel process of auto discovering failed/resurrected master node in Master Slave Setup.  Tried this setup in containerized environment, unless I manually restart one of the sentinels the old master node will be discovered by the sentinels and would be converted as slave in the new master.
Need immediate help for this issue
Sample Snippet of Redisson Sentinel Setup
Please let me know what I'm missing in the setup and provide workaround at the earliest
Thanks
Varun
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3938
Issue with adding resurrected master as slave after master is restarted back from failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redis Sentinel should auto reconfigure the resurrected master from failover and be placed as slave under new master. This setup is working only when I manually restart one of the sentinel node
Actual behavior
Resurrected master from failover is not added back into master slave setup and becomes an independent node unless one of the sentinel node is restarted and old master becomes a slave to the new master
Steps to reproduce or test case
Setup a RedissonClient with Sentinel setup
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3939
Significant performance drop and loss of scalability after Redisson client upgrade
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
There is a significant performance drop and loss of scalability after upgrading Redisson client from 2.2.12 to 3.10.6.
The performance (throughput - number of requests per second) dropped by almost 40% and the scalability of the Spring-boot app using it was lost, meaning that adding more instances of the Spring-boot app doesn't increase the system's throughput.
Some technical details:
Redis 3.0.7 64 bit in cluster mode - 3 masters and 3 slaves.
Please find attached redisson.json file redisson-3.10.6.json.txt
The reason why the client was originally upgraded was because of the following error that appeared in the log:
With the previous client version the performance was excellent and the solution was scalable.
Please advise.
Regards,
Nethanel
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3940
Intermittently, after Azure Redis maintenance, Redis pubsub channel is removed and Redisson listeners subscribe successfully but don't deliver any messages
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We observed and intermittent issue after Azure Redis scheduled maintenance.
The issue occurred on one of service pods; other pods didn't experience the same issue.
Our application creates a pub/sub listener, publishes messages every second but doesn't get these events back; as a result it thinks Redisson-Redis connection is broken and so resubscribes, but the same issue occurs even with new listeners. The issue has persisted for many hours, even though Redis maintenance was fairly short.
In attached logs (both from our service and from Redisson) following can be seen:
Expected behavior
Published messages are received back
Actual behavior
Published messages are not received back
Steps to reproduce or test case
Issue intermittent, observed after Azure Redis scheduled maintenance on one of service pods; other pods didn't experience the same issue
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3942
Add support of SINTERCARD and ZINTERCARD commands
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3943
redisson-quarkus-20 can't get config from envirement variable
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
can't get envirement variable config,@buildstep is Before it
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3944
ttl key with no expire time , return 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when i  use stringRedisTemplate.getExpire(key, TimeUnit) to judge key is not set expire time, i expect -1, but it return 0.however i user spring-boot-starter-data-redis, it return -1 with expect. here is the environment:
the redis i use is sentinel , and redisson version is 3.16.1 or 3.11.1, springboot version 2.1.6.RELEASE
here is the test case and result:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3945
Redisson connection uses unsafe.Allocatememory() cause direct memory leak
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey,
In the production environment, we found that the memory occupied by the program has been increasing. Using the top command, we found that the value of RES has been increasing, even exceeding Xmx. We use jconsole.exe to observe that the number of threads and classes is stable, and the size of heap memory and meta space are within the normal range. Therefore, we begin to suspect that the program is constantly occupying native memory and is not released.
When we use gperftools to analyze the memory allocation occupied by the program, we will find that the method unsafe.Allocatememory0 occupies a very large proportion of memory and increases over time.
This is the original PDF file generated using gperftools analyzer memory
After debugging with debug, it is found that the thread redisson-netty calls unsafe.Allocatememory().
After modifying the redisson configuration so that redisson is no longer used to connect to redis, we use gperftools to observe that there is no Unsafe_AllocateMemory0, and the memory occupied by the program remains stable and will not increase,so we now suspect that redisson caused the program's native memory leak
Expected behavior
We hope to get your help so that we can use redisson without increasing the memory all the time
My environment
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3946
java.lang.ClassCastException: java.lang.String cannot be cast to java.util.Set
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
What can cause such an error?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3947
Redisson Client AWS Elastic Cache Configuration Best Practice
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to configure Redisson Client to connect it to AWS ElasticCache. There is not much documentation that what's the best practice to do so.
AWS ElasticCache provides Primary Endpoint and Reader Endpoint for writes and reads respectively.
Now instead of mentioning each nodes endpoint I would prefer to use Primary Endpoint and Reader Endpoint.
But from what I saw in multiple github issues in this repo, it was advises to use node endpoints directly. Why was that ? Reader Endpoint helps me to add more servers to Redis without changing the code base. Will Redisson pick up more servers automatically ?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3948
Redisson doesn't support username for sentinels
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Redisson shall be able to support sentinel authentication.
Maybe a sentinelUsername shall suffice.
Actual behavior
Only the sentinel Password is used for authentication
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3949
UnsatisfiedDependencyException ProxyCachingConfiguration NoSuchFieldError cacheManager
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I tried integrating redisson into our springboot project, but got the following error upon adding the dependency:
Here are all the Redis-related dependencies we have:
Before adding redisson dependency, there was no error. I was wondering if there is any conflict between these dependencies or their versions? Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3950
redis-sentinel connection with ssl not working as expected fixed in regards to issue  #3875
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hello, I believe that I have fixed the issue in  #3875 please check it out and let me know
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3953
Distributed iterator
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello.
We have a huge sorted set (1m+ elements), that should be processed in parallel by different application instances. We came up to the idea to have a LUA script that will call a ZSCAN command using a saved cursor to return each element to app only once. Due to single-threaded nature of Redis engine, it would make a iterator, shared across all clients.
I didn't find anything like it in Redisson. If you think that this feature would be useful, I can prepare a PR in a week. If not - sorry for disturbance
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3954
How can i configure TypedJsonJacksonCodec from yaml file ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3955
Connection configuration for a replicaset behind anycasted address:
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
First of all, thanks for an amazing library!
I'm looking for advice here on the client configuration for the following setup:
Redis 4 instance consists of:
1 master
2 slaves
sentinels
All servers are, so to say, ephemeral, and hence in front of the instances, there is haproxy server + bird2 that together achieve anycast advertisement of a fixed IP address and proxy traffic to the current master. Users are instructed to connect to master only and given the DNS entry for the anycast IP. Slaves are not in use and are only there to pick up the role of master in the event of the failover. Setup is similar to what is described in haproxy blog.
As a result, for Redission client I have only a single host:ip endpoint to use in configuration. I tried configuring Redission with both:
It seems neither of these two appear to be able to detect a failover event. When failover happens and a new master is elected, Redission keeps using existing established connections trying to write to what now became a slave, and getting:
READONLY You can't write against a read-only slave
My question is: isn't useReplicatedServers() supposed to periodically check the actual ROLE of a server it is connected to, so that when such a "silent" change in topology happens behind haproxy? Could it be that it is a problem on haproxy side, that keeps proxying traffic through open connections to previously connected node? I'd expect exactly a periodic ROLE check to address this.
Thank you.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3956
Question: After enabling redisson, sessionID does not update if node goes down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
After deploying redisson to my tomcat cluster sessionID does not update at all and it is causing all kinds of problems.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3957
IdleConnectionWatcher closes active PubSubConnections
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have a Problem were subscriptions seem to be removed (still in PublishSubscribeService#name2PubSubConnection but not showing on redis server itself)
Expected behavior
PubSubConnections should not be closed
Actual behavior
PubSubConnections get closed even with multiple active subscriptions that don't get reconnected from watchdog as the RedisConnection was marked as closed via setClosed(true)
Steps to reproduce or test case
Not yet but maybe if you could point us in a direction
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3958
Unintelligible symbols in YAML config format
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i see parameter and its value (codec and the class that implements it)
But what do the symbols mean:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3959
Mybatis RedissonCache cannot read config file `redisson.yaml`
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Actual behavior
throw error
Steps to reproduce or test case
is it should be InputStream is = getClass().getClassLoader().getResourceAsStream(config);?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3961
Returning Null Value  from  redissonClient.getMapCache(CLIENT_MAP).get(key)  in replicated  multinode cluster.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I am trying to fetch  a value for a particular key from a replicated  multinode cluster.  This cluster has 2 nodes. Node1, Node2 with authentication on. I am inserting values and trying to fetch the same value.
Key-value pair insertion happened in node1. And while fetching the same key-value pair , I am suspecting it it trying to get it from node2.
Please find my code below
From redis cli I had to do readonly on node2 inorder to c the keys. If readonly is only option to fetch the key-value pair from java code, how to code it?
Help is appreciated . Thank you in advance.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3962
java.lang.IllegalArgumentException: Can't parse packet
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I got such an error when I try to clear the RedissonLocalCachedMap.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3963
Cannot inject dependencies into runnable scheduled task
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, I am having trouble injecting beans into scheduled tasks. I am able to connect with redis to do other things so I don't believe it is a configuration issue.  ​I saw someone else had posted a similar issue but it seems like it got closed without being resolved: #2318
Essentially, I am trying to schedule a tasks on a distributed server to send a reminder to a user after x amount of time. In order to do this, I need to inject a bean to be able to get the current state of the user at the time the task is executed and another bean to be able to send the notification. However, I am running into the same Null Pointer and Not Serializable exceptions as from the issue above.
I have also tried another approach where I register the task to a RRemoteService so when it tries to execute, it will call a server-side RRemoteService that has the dependencies autowired. However, when I do that, it gives an IllegalArgumentException: Unable to serialize lambda.
I'm pretty stuck on what to do and I was wondering if someone could help provide guidance on if this would even be possible with Redisson or if I should try to find another solution? It would be helpful if someone could provide an example of an @Autowired service being injected into a task and it working.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3964
use redisson-spring-boot-starter maven  library， Redis is a cluster deployment， stringRedisTemplate  can set value ，but get value is null
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
springboot start is ok
the redisson and redis initialize is ok
now, stringRedisTemplate can set value, but get value is null
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3965
I want save lock state with redis instance failover. What configuration for lock and redis can do this?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, i search distributed lock, that if one redis instance crash all setted locks can be transfered and accessed from other redis instances.
I think this situation is solved only by redlock or multilock with 3 redis master nodes but not cluster ?
In documentation:
8.4. RedLock
This object is deprecated. RLock operations now propagated to all Redis slaves.
Is a blocking redundancy scheme possible with master-slave replication(sentinel, not cluster) ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3966
Local cache not working as expected when executing multiple put and get operations on the same key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
We found an unexpected behavior using the Redisson local cache in our application.
This application is loading a redis map constantly using Redisson local cache, executing put and get operations.
The get operation returns the expected value almost all the time, but sometimes we found that it does not return the expected value. The expected value is what the application just put before the get operation.
This is something that only happens when we use a LocalCachedMap. If we switch to a Map then it works as expected. Anyway, we need to use a LocalCachedMap in this application.
In short: we expect to execute a put operation, then a get operation with the same key and receive the value that we just put before.
Actual behavior
Sometimes we execute a put operation on a "localCachedMap", then a get operation with the same key and receive a different value than what we just put before.
Steps to reproduce or test case
A test to reproduce the issue:
It fails on different iterations when you execute the test more than once:
We tried to remove the line 292 from RedissonLocalCachedMap.getAsync() and the test just works:
But we don't know why it reaches that line because the getAsync() method should end on line 262 when it finds the value on the local cache (the value should be on the local cache because we execute a put before the get):
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3967
Too much log
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How to get rid of this too much log? I use this dependency. i do not have anything else. logging.level.root=off does not help.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3968
How to get the list of group names associated with a stream?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How to get the list of group names associated with a stream?
I was hoping I could see the group names by calling stream.getInfo(). But we do not have any.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3969
RedissonLocalCachedMap should overwrite expire* methods
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Local cache exists after redis' key expired. Here is my code:
Expected result: val is null.
Actual result: val is "bbb".
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3971
Add Spring Data Redis 2.6.0 support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3972
Command still hasn't been written into connection! Increase nettyThreads and/or retryInterval settings
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are experiencing the error what seems like network related errors using the 3.13.2 version of redisson.
We run  code in the docker of rancher,  then have been occurred  on some pods. so confused am I.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3973
Is pipeline response list ordered?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Are pipelineMapList and keys kept the same order? If not, is there a way to get ordered result with response to the keys order.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3974
Unable to send PING command over channel
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson:3.16.3
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3975
Getting Out of memory error while reading RMap, Map contains over 200k data
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Code:
RMap.readAllValues().stream().forEach => OOM Getting here..
Can someone please help me out, Is any available solution to read this load data in RMap, or will have to be read in batches ??
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3976
Insertion order is not preserved when JSONJackson codec is used in RMap or RMapCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Insertion order should be preserved regardless of codecs configuration but unfortunately it is working only for StringCodec . The problem with string codec is during retrieval it will display the contents as "to string" implementation of java . So need resolution for JSONJackson Codec for preserving insertion order
Actual behavior
Currently it is not working for JSONJackson Codec , it is only working for String codec
Steps to reproduce or test case
Just Create a Bean of RedissonClient and then setup a RMap or RMapCache Bean with JSONJacksonCodec instance and try to insert the contents into redis the latest item is placed first and the previous one to the last no insertion order is maintained
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3978
Local cache not working as expected when executing get, put and get operations on the same key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is a extension of the issue #3966 because we could not reproduce the problem with the provided test.
So, we are trying to provide a new test trying to reproduce the actual issue that we observed on our application.
Expected behavior
We execute these operations on a local cache that points to a redis map already initialized:
We expect to receive the new value on the third operation.
Actual behavior
Sometimes we get the initial value on the third operation.
Steps to reproduce or test case
A test to reproduce the issue:
It fails on different iterations when you execute the test more than once:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3979
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3980
 org.redisson.client.RedisConnectionException: SlaveConnectionPool no available Redis entries
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Specification we are using:
AWS Elasticache- Redis 5.0.6 (Cluster Mode with master and slave)
We are intermittently facing the below error. I think this is because the Master instance is loosing connection to the slave instance.
If we check the elasticache, all instance in the cluster are in available status.
Only way to resolve is to redeploy the application.
Any idea on configuration that should be tweaked? Or does redisson provides any time interval to refresh the connection to avoid this?
I checked the other post but looks it is closed but doesn't have an answer to the question.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3981
SlaveConnectionPool no available Redis entries. Master entry host
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Spec Used:
We intermittently get below error .. I think this is because the Master instance is loosing connection with the Slave instance. If we check in Elasticache, all the nodes are in "available" status.  Only solution we do is to redeploy the app to resolve the error.
Any idea what parameter should be added or tweaked related to this issue? or can Redisson provide any interval option to refresh the connection pool?
Note: I verifed the post 2535 .. it is in closed state but the question isn't addressed.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3982
Redisson locks can consistency guarantee ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson locks can consistency guarantee as raft consensus protocol (ex:hazelcast) with schemes cluser and master+slave(sentinel) ? It dont have problems as has hazelcast before cp-subsystem(ver3.12) "at least once"
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3983
 SlaveConnectionPool no available Redis entries after Redis pod restart
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behaviour : When the Redis pod(stateful set) restarts, the application should be able to reconnect to the redis pod automatically.
Actual behaviour : When the Redis pod restarts, the application is unable to reconnect to Redis even after multiple retry attempts. I tried this in a single node setup. When Redis pod is brought down, another pod is spun up in few seconds. But the app is unable to reconnect automatically. After the app pod restart, it works fine.
This is the exception thrown.
Please let me know if there's any workaround for this other than the restart. Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3984
Stuck on joining HashedWheelTimer worker thread when shutting down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Sometimes Redisson seems to be stuck when calling Redisson.shutdown(). Some Services are stuck for mutliple days. But it seems to be a very rare event,
This is the Thread netty tries to join. Stack trace does not seem to change over time (took multiple thread dumps)
Expected behavior
Redisson.shutdown() should be blocking but not for ever
Actual behavior
Redisson.shutdown() is stuck for days (in some rare cases) and the Timer thread is taking huge amounts of processing power (this is not a typical profiler bug with parking threads but acutally showing in the process list)
Steps to reproduce or test case
Not tried but maybe if you could point us in a direction.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3985
java.lang.IllegalArgumentException: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'local': was expecting
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello all i am trying to access json filed in criteria query but getting above error could you please help me for the same.
subquery.select(root).where(this.criteriaBuilder.equal((packageRoot.get("publis")), userEmail));
here publis is the json in repository
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3986
Codec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
That code format is stable and I see a change in the code format
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3987
Failed slaves aren't detected in Replicated Mode.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3988
Why Redisson is unable to connect?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
On connection with redis I'm getting this:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3989
 ERR Error running script (call to : @user_script:1: user_script:1: bad argument #2 to 'unpack' (data string too short
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am unable to understand this error. Please help.
I am trying to read using getMapCache(ALLUS_XXX)
also, in redis cli if I do hgetall ALLUS_XXX.  This is the output
This is easlily reproducible,
Now try to access this using redisson getMapCache("ALLUS_XXX").readAllEntrySet()
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3990
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3991
 Inquire about the distributed scheduling task service (Scheduler Service), how to achieve that only one of the multiple worker servers (worker) executes tasks at a time?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Inquire about the distributed scheduling task service (Scheduler Service), how to achieve that only one of the multiple worker servers (worker) executes tasks at a time?
My code is as follows:
Configuration code:
Schedule task code:
According to the configuration, log("task has been executed!") will be output every 5 seconds. It is currently started on a single server, and the scheduled task service can run.
But if you start the service on multiple servers, the process on each server will output every 5 seconds, but what I want to achieve is: on multiple workers (workers), only one of them (or Random, or polling, or preemption) execute a task every 5 seconds.
How should I configure the distributed scheduling task service to achieve this effect?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3992
CROSSSLOT error when rename spring session id
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
rename session id
Actual behavior
Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:
Steps to reproduce or test case
My app is a spring cloud gateway app, and store session information in Redis through Redission.
This is my facroty bean:
I found some issurs with the same CROSSSLOT error at October, 2020 and fixed by
But the reactive connection do not use the ReactiveKeyCommands class fixed in that PR. Maybe this bug is happening again?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3993
Redisson can client-side sharding or partitioning?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson can client-side sharding or partitioning?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3994
RLock syncedSlaves in BatchResult is not checked
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I tried RLock(Redisson master branch, redis 5.0.5) with the following config and tried to test whether synchronous replication works with master-slave. After I killed one replica and the lock can still be granted(there was only one client trying to get the lock), what I expect is that the client failed to acquired the lock cause the command was not able to propagate to all the replicas.
After debug for a while, I found that BatchResult for EVAL & WAIT command was not checked in RedissonBaseLock.evalWriteAsync method,  i.e the syncedSlaves in BatchResult was not checked.
So is it because i misunderstand the synchronous replication mechanism used in Redisson or it's a bug
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3995
Why Redisson is  connect  Timeout?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3996
java.lang.OutOfMemoryError after upgrading to 3.16.5 (LocalCachedMap)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
no OutOfMemoryError on applications using the same Redis server but the previous version of redisson 3.16.3
Actual behavior
applications starting to OOM running version 3.16.3 while an application running with 3.16.5 was fine
Steps to reproduce or test case
access the same Redis server with different versions of the library (3.16.3 vs. 3.16.5)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3997
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3998
Redis vendor rename command 'eval' to 'xxx_eval‘, redisson throws exception when I use it.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Can I configure this command somewhere?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

3999
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4000
Redisson 3.16.4 is using netty-transport 4.1.68.Final but when I upgrade to 3.16.4 of redisson is still using netty-transport 4.1.65 version
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When upgrade the redisson version from 3.10.4 to 3.16.4
netty-transport should be 4.1.68
just upgrade the redisson version 3.16.4 in a gradle project
Hello, I have the same issue for 3.16.4. I am using gradle and I updated my redissson version from 3.10.4 to 3.16.4 to solve a CVE. But when I checked the dependencies I realised that some how I do not know why, the versions were downgraded from 4.1.68 to 4.1.65 for netty-transport (it comes with redisson).
Could you take a look, please?
Thank you.
Here is the output;
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4001
Read operations are not evenly distributed among all the redis nodes in replicated mode and master_slave read mode.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
We use redisson to connect to 3 redis nodes in replicated mode and MASTER_SLAVE read mode (AWS ElastiCache).
We expect to distribute the redis read operations evenly among the 3 redis nodes.
Actual behavior
Since the upgrade of redisson to version 3.16.15 PRO we notice that our application does not distribute the redis read opeations evenly to all the nodes, and only one redis node receives almost 100% of the read operations.
Yesterday at 20:40 we deployed our application with only one change: upgrade redisson from 3.16.4 to 3.16.5.
And today at 11:10 we rolled back our application to the redisson 3.16.4 version.
This graph shows:
Until 20:40 the 3 redis nodes received the read operations evenly (redisson 3.16.4)
Steps to reproduce or test case
Connect to 3 nodes in replicated mode and MASTER_SLAVE read mode.
Execute multiple read operations.
Check redis read operations metrics.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4002
Can MessageListener annotated with @FunctionInterface for java8?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
MessageListener can be annotated by FunctionalInterface to use lambda?
Describe the solution you'd like
java.lang.FunctionalInterface
Describe alternatives you've considered
this interface have only one method  onMessage  now
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4003
WARN logs when using SentinelServers config
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Connected using SentinelServer config, all the Redis pods(1master, 2 slave) are up and running in the Kubernetes cluster. Sentinels are also running along with the Redis containers like a sidecar. No WARN logs to be printed when connection is fine.
I am connecting to the Redis headless service in kube.
Actual behavior
Getting continuous WARN logs like below for all the IPs where Redis pods are running
Steps to reproduce or test case
3 Redis pods running along with Sentinels
App connected to Redis with Sentinel config
Please let me know if i have mis-configured anything. Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4004
Unable to connect to host using DNS resolver on Java 9+
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Using Java 16/17 I can connect with a host by host name successfully, just as with Java 8
Actual behavior
When running the same code with Java 8, I can successfully connect to a remote host by name, but with Java 9, 16 and 17 I cannot.
Stacktrace:
Steps to reproduce or test case
I am using Redisson, which is using Netty:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4005
Can't Find Node in Slaves in Version 3.16.5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Have 1 master and 1 slave (with AWS ElastiCache). When testing failover by through modifying of the node type of the redis instance, expect after failover that there are no errors when querying the new master/slave.
Actual behavior
Getting the following error message:
Can't find replicaAddr/<host> in slaves! Available slaves:
Steps to reproduce or test case
Deploy Service
Modify node type of redis instance
View application logs and see errors
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4006
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4007
RateLimiter - Can't expire RateLimiter value/permits although can expire config?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When using RRateLimiter.expire(), RRateLimiter sets TTL to config Hash set, but doesn't set TTL to value and permits.
IIUC, value and permits consumes more memory compared to config Hash set.
Is there a way to expire value and permits?
NOTE:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4008
Buffer overflow error while running tests after adding Redisson dependency
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is happening on my CI/CD tool (Semaphore CI). After adding the Redisson dependency, the build always fails with the error:
My CI/CD uses a Ubuntu 18.04 VM and has Java 11.0.11 installed.
I think the problem is likely related to that VM, as if I run the tests locally (Ubuntu 20.04, OpenJDK Runtime Environment AdoptOpenJDK-11.0.11+9) the tests are executed as expected.
Has anybody had this problem before? Do you have any idea on what might be creating this error?
Thanks in advance for any help!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4009
Read Only (not writable_ access from redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We want to enforce that Application can only read the data from Redis Master node but is not able to write or make into modifications into the Redis Master node in replicatedServerConfig. Can you please inform how can we do that?  Is that using readMode :MASTER ? Can you please provide the yaml configuration for that ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4010
ClientConnectionsEntry.getFreeAmount() removed?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey guys.
When moving from version 3.16.3 to 3.16.5 I've noticed compilation issues due to the missing method getAmount() which underneath was running freeConnectionsCounter.getCounter():
My question is was that intentional and is there a substitute method somewhere? I couldn't find a quick solution for this.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4011
Incorrect connection calculations in version 3.16.5 and 3.16.6
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a limit of 20 connections per server and in previous versions the initialization was correct. But in version 3.16.5, the SlaveConnectionPool was initialized, which creates 24 connections by default. But I cannot reduce their number for configuration in single server mode and I cannot disable the creation of this pool either.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4012
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4013
get LocalCachedMap lead to OOM
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
not hope to oom;
Actual behavior
home get  redissonClient.getLocalCachedMap() can olny single entity,but evrytime get a new new RedissonLocalCachedMap<K, V>(xxxx)，more request lead to OOM
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4014
Why redisson opens many connection to slave even creates client by single server?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Above code by default it create client using single server config, but it still opens many connection for other purpose, why?
connected_slaves:0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4015
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4016
Got a NullPointerException in WriteReadLock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the redis model is cluster
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4017
RSet.distributedIterator() and RScoredSortedSet.distributedIterator() methods throw script error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4018
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4019
redisson-mybatis - Application still works if Redis does not respond
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, We are looking to configure redisson-mybatis, so that when for some reason Redis does not respond, the application can be running without problems.
The idea is to leave a trace of the connection error, but that the application executes the sentences and continues working.
I found this similar report, but for Tomcar. Issue
The question is if this behavior is possible, and if not, could I report a feature?
Thanks for your time
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4020
Redisson executor: service rolling upgrade compatibility
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Consider the following scenario in a service HA cluster:
service 1 node 1 is at version 1, with task-legacy-1
service 1 node 2 is upgraded to version 2, with task-legacy-1, task-new-1
service 1 node 2 submits task-new-1 to Redisson executor.
There's a chance that service 1 node 1 picks up the submitted task-new-1, but will fail due to lack of definition.
I think this issue is common for all services that using Redisson executor. What's the best practice?
Thinking of potential solutions:
Normally with distributed scheduler, there's a tag filter, to filter worker nodes for task. But can't find similar thing in Redisson. ------ please advise.
Another idea is to use different executor namespaces, and each service version N submits tasks to executor-N (the latest) and executes task from both executor-N-1 and executor N.  However this is also hard for upgrade and eviction of old executor is needed. Seems a blocker when there's recurring schedule submitted in old executor. Not sure how to migrate.  ----- please advise.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4021
redisson-spring-data: RedissonConnection eval codec bug?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Any one can help me ?
Why the eval method in RedissonConnection use codec:StringCodec.INSTANCE , but evalSha method use ByteArrayCodec.INSTANCE.
I found that the eval may encode the byte array (response from redis server ) into String, which may cause Serialization problems.
Is it a bug?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4022
Error while aquiring ReadWriteLock and Lock at the same time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I call method runWithRwLock and method runWithMultiLock at same time, it works fine. When I call method runWithLock and method runWithRwLock/runWithMultiLock, the following error is frequently reported
This is my test code:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4023
Error while acquire Lock and ReadLock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
Let me simplify the reproduce process:
Thread x get Lock "A" and hold the Lock
Thread y get ReadLock "A" and also hold the ReadLock
Thread x and thread y all acquired lock
Thread y call method unlock to release ReadLock y
After a few seconds, thread x also call method unlock to release Lock x，and then it causes an exception
Here is stacktrace
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4024
 Unable to init enough connections amount! Only 3 of 8 were initialized.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The Redis version was upgraded from 5.0.3 to 6.2.4, and this problem occurred.
The configuration file for Redission has not been modified
Redission version is 3.15.5
This is a detailed error message ：
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4025
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4026
Mention that classes need to be Serializable in guides and documentation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We've wasted way to much time searching for a problem in our codebase. I think it won't hurt to add a note in the official guide :)
Here:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4027
link display problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4028
org.springframework.dao.QueryTimeoutException: Command still hasn't been written into connection! Increase nettyThreads and/or retryInterval settings. Payload size in bytes: 0. Node source: NodeSource
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4029
Is hibernate-redisson support Hibernate 4.1.2.Final ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4030
hibernate-redisson4 expire time configuration not working
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to integrate redis with hibernate 4.1.3.Final. But expire time configuration not working.
Here are my redission configuratio:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4033
multilock fail
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
lock successful
Actual behavior
lock fail when get first lock in multi lock case
Steps to reproduce or test case
when I set waitTime=0in multi lock , it fail, but I set waitTime=0 in RLock, it success, why?
then , debug RedissonMultiLock,  until Line 413
I think it is a bug in RedissonMultiLock
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4034
RLocalCachedMap sometime does not sync data from Redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I have 2 servers that use the same RLocalCachedMap. Server A I use to put data and Server B just use to query data.
I'm facing with issue that sometime Server A updates data but Server B data is still old (cached value is not updated). I checked log but no Redisson exception there.
If I invoke localCachedMap.preloadCache() on server B (via SOS REST call), data of server B will be updated.
I'm using Redisson 3.16.5
This is my LocalCacheOptions
LocalCachedMapOptions.defaults() .evictionPolicy(LocalCachedMapOptions.EvictionPolicy.NONE) .cacheSize(0) .syncStrategy(LocalCachedMapOptions.SyncStrategy.UPDATE) .reconnectionStrategy(LocalCachedMapOptions.ReconnectionStrategy.NONE) .writeMode(MapOptions.WriteMode.WRITE_BEHIND);
This is my RedissonConfig
Please help me to point out some ways to investigate and resolve this issue.
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4035
mget send multi commands on same master slave entry in cluster mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
mget  group keys by master slave entry,  different slot with same master slave entry keys send one command
Actual behavior
mget  group keys by slot, different slot with same master slave entry keys send multi command
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4036
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4037
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4038
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4039
Subscription allocation per Redisson and not local cache instance.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4040
Config readMode from SLAVE but redirect to MASTER
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
The Lua script executes on the Slave node
Actual behavior
The Lua script executes on the Master node
Steps to reproduce or test case
Here is the Java code:
Here is the Lua script
After executing Java code and the Redis's log like bellow
We can see that the Lua script is executed on the master node (127.0.0.1:7001) instead of the slave node (127.0.0.1:7005), but I have already config the readMode to SLAVE & pass the RScript.Mode.READ_ONLY config when evalSha.
Please help me correct if I'm wrong, thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4041
hibernate-redisson4 application don't start if redis server is down. What should I do that if redis server is down it won't stop the application?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4042
SlaveConnectionPool enabled when use single server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
There should be just MasterConnectionPool enabled when useSingleServer.
Actual behavior
When trying to connect to Redis containing one node, slave connection pool will also be created.
Steps to reproduce or test case
Connect to single redis server.
there is a addSlave() call when single server is used.
This maybe edited for creating slave connection correctly in some cases. But it will also create a pool when using single server.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4043
how to batch add object to bloomfilter
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
first, please forgive my poor english。
my question :
is there any efficient way to batch add object with bloomfilter?
such as pipeline?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4044
multi lock fail
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
lock successful
Actual behavior
lock fail when get first lock in multi lock case
Steps to reproduce or test case
when I set waitTime=0in multi lock , it fail, but I set waitTime=0 in RLock, it success, why?
then , debug RedissonMultiLock,  until Line 413
I think it is a bug in RedissonMultiLock
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4046
Reads only happening from Master Node for Redis Cache in Elastic Cache replicated mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using the clustered connection in aws for redis, but the read is always happening from the primary node.
The versions we are using:
@mrniko  Could you check this once you have some time. I am sure you can provide a relevant answer very fast.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4047
How to use Reactive/RxJava api?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Unfortunately, the docs doesn't contain any information about Reactive and RxJava Redisson apis. How you even use them?
For example, RMapRx#get(K) returns Maybe<V>, how it can be considered reactive? Shouldn't it be an Observable<V>? How it is any more useful than just returning something like a CompletableFuture<V>?
What is the use case of these apis?
Also, .getLocalCachedMap() is unavailable in reactive and rx apis, why?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4048
[Bug] Version 3.16.6: RedisConnectionException: Unable to init enough connections amount
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
I should be able to create a RedissonClient
Actual behavior
This only happens with version 3.16.6. 3.16.4 doesn't cause this error. Also, this error only happens with the local embedded Redis. On a real remote Redis server, it works fine.
On create, I get this error:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4049
PooledUnsafeDirectByteBuf Error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
use codec
What's happen? Sometimes this error happens
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4050
MultiLock causes deadlocks in high concurrency cases
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
No DeadLock
Actual behavior
DeadLock
Steps to reproduce or test case
The complete code is as follows
Deadlocks don't happen every time. After running the program for a while, I found that the process stopped and the keys in redis were fixed, not added or reduced. What is even more strange is that the expiration time I added the lock is 800ms, and if I use the ttl command to get the expiration time, the result should be 0 or 1, or a negative number. But, I found a number greater than 1! And it keeps changing, like this: 4s -> 3s -> 2s -> 4s
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4051
Allow specifying class instance each time when deserializing
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently, if you deserialize an object it will always be created using the same class instance as when it was serialized. This will result in a ClassCastException if you serialize and deserialize from classes loaded by different class loaders (which is a case when using something like hot code reload).
The proposed solution is to add a type parameter in every method that deserializes an object, e.g.
MyClass value = rMap.get("key", MyClass.class);
Which is the same as in a popular GSON library.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4052
What If RLock Implement java.io.Closeable? ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
Describe the solution you'd like
auto unlock with try...with...resource
maybe code like this
Describe alternatives you've considered
haha. just make code eaiser.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4053
ScoredSortedSet - diff is broken
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
diff method is broken RScoredSortedSetReactive.
Create 2 SortedSet and do the diffstore in redis.
check what set:1 contains. It contains only "a"
Now do the exact thing with redission.
It does not do any diff. set:1 contains all the original elements.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4054
RedissonCommands.EVAL_MAP_KEY_SET using MapValueDecoder
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When invoking RedissonMapCache.readAllKeySet() the codec's map key decoder should be invoked, i.e  Codec.getMapKeyDecoder()
Actual behavior
The codec's map value decoder is being used to decode keys, i.e. Codec.getMapValueDecoder() which causes exceptions to be thrown depending on the codec being used.
This is caused by RedisCommands.EVAL_MAP_KEY_SET being defined using MapValueDecoder instead of MapKeyDecoder.  I have locally amended the command to use MapKeyDecoder which fixed the problem
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4055
High Memory Consumption with publishAsync
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey! After doing this as just a test of Redisson pubsub
The thing is, when using the method .publishAsync, memory usage increases too much really fast, but when using .publish, it doesn't
Is this an expected behavior? am I doing something wrong that could be causing that?
I'm running this with 8GB of ram
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4057
Redisson WriteRedisConnectionException timeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4058
Cannot connect to redis memory store mode standard on GCP
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi. I create memory store redis mode standard with replicas on GCP. I using single server config to connect to primary endpoint, but error.
Anyone know config to connect to redis, this is myconfig. Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4059
What is behaviour with getList with non existent key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi Team,
Can you describe about the case when we do a getList(key) for a non existent key and also we did some operations on Rlist from previous call
i could not found a javadoc i can find which states this case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4060
Time to live for cache elements from both Local and Redis in Near Cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How can I evict cache elements based on time to live and idle time from both Local and Redis cache for RLocalCachedMap (near-cache). As of now, is this possible in open source edition (or) do I need to buy Pro license.
It would be a great feature if its available in open source edition.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4062
clusterSlots() Method Throwing Type Exception (Redisson 3.16.7)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
No exceptions expected when querying for clusterSlots:
Actual behavior
Get the following exception:
Steps to reproduce or test case
Use Redisson in clustered mode
Call the following code:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4063
Requirement of Insertion Order in RMap Data Structure in Redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
Currently have been using RMap for Read-through and Write through Caching Operations and have leveraged benefits out of it. The only benefit we still need is the requirement of Insertion order in RMap as per implementation it is using HashMap .
Describe the solution you'd like
So can insertion order requirement be considered using LinkedHashMap Implementation, which will be most beneficial to many of us
Describe alternatives you've considered
We considered going for dequeue, list and other ds but they didn't provide flexibility and performance offered by RMap DataStructure.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4064
Thread safe problem when acquiring locks resulting in a pubsub channel not being unsubscribed · 64 ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This seems to be related to:  #2575
Expected behavior
The pub/sub channels that are created while trying to acquire a lock with RedissonLock should be unsubscribed when no longer needed.
Actual behavior
In some cases when 2 pub sub channels are created around the same time for (2 different lock keys) one of the two throws an error:
Subscribe timeout: (7500ms). Increase 'subscriptionsPerConnection' and/or 'subscriptionConnectionPoolSize' parameters.
After this error the failed lock key will lock fine when not locked. If it is however locked by another thread it will fail instantly.
see the logging from the test case below, notice how thread [pool-1-thread-12] successfully locks key 0. When thread [pool-1-thread-19] tries to lock lockkey-0  it instantly throws the subscribe timeout exception (notice it does not wait 7500ms).
If there is no locking going on and the app is still running it kept a channel active for lockkey-0
Some logging from the test case when it fails:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4065
How to use 'zAdd'?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How to use 'RedisZSetCommands.zAdd(byte[] key, double score, byte[] value)'?
not implemented？
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4067
How to use multiple entities with AvroJacksonCodec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have two entities in a package.
I try to use AvroJacksonCodec(ClassLoader classLoader), the classLoader is got from one entity.
When I try to save data to Redis.
It has the error
java.lang.IllegalStateException: Can not write Avro output without specifying Schema
How should I resolve it?
Or the AvroJacksonCodec only for one entity for a RedissonClient?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4068
ERR WAIT cannot be used with slave instances
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This occurs when trying to acquire a lock.
Currently, we are using redisson library 3.16.3 with readmode: SLAVE
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4069
Unable to resolve master.****.cache.amazonaws.com ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
expected no exception
Actual behavior
Unable to resolve master.****.cache.amazonaws.com
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4070
I have migrate my spring boot prject from 1.5.x to 2.3.12 and I have used redis cache to get the user details but it is not working
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when I am tring the get the data from redisson.getmap it is showing this error
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4071
Why list has all value, but redisson get one by index from the list will reconnect Redis?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
1、List has all values, but when get by index redisson will reconnect redis.
2、Isn't it dangerous to get all the data of the list in memory？
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4072
delayedqueue  serialization is not expected ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
view by rdm:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4073
Change RedissonLocalCachedMap.cachePut access modifier
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I want to monitor latest updated time of Redisson local cache map. But I see that cachePut access modifier is private and I cannot override it.
Now I'm copy the original RedissonLocalCachedMap.java to a new file for my purpose.
I wonder that can Redisson change RedissonLocalCachedMap.cachePut method access modifier to protected or public?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4074
io.netty.resolver.dns.DnsNameResolverTimeoutException: query via UDP timed out after 5000 milliseconds
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
io.netty.resolver.dns.DnsNameResolverTimeoutException:query via UDP timed out after 5000 milliseconds
You need to check dns server.
If it is DNS problem, there will be happened all over the entire K8S cluster, but the phenomenon is a few services, there are several exceptions, and the frequency of occurrence is 1-2 days.
Originally posted by @Brainhu in #4069 (comment)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4075
Hi @ybonda  facing similar issue. Could you please provide more details what the issue was in Redis configuration?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi @ybonda  facing similar issue. Could you please provide more details what the issue was in Redis configuration?
Originally posted by @Lakshmihm in #474 (comment)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4076
Quarkus redisson config fails to load in cluster mode with only one node address
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Configuration is not successfully loaded if there is only one node address configured in cluster mode.
Expected behavior
Configuration should be loaded successfully, documentation states that only one is required.
Actual behavior
Steps to reproduce or test case
Setup Quarkus project
Add redisson-quarkus-20 dependency
Configure Redisson client to use cluster mode with single node address
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4077
RedissonMap keySet() is inefficient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This feature request is partially driven by a problem we are having and our attempts to fix it.
We have multiple services and are utilizing LocalCachedMap's for various write once read many use-cases. The problem arises when a different service needs to invalidate keys in those LocalCachedMap's without the required keys in the class path. We started out with this looking like
localCacheMap.fastRemove(localCacheMap.keySet("pattern*").toArray(String[]::new));
But were getting ClassNotFoundException as Redisson is executing an HSCAN which is returning both the Key and Value and these were being run through the Codec leading to this error.
Currently our workaround is to use a custom codec that just discards the value to avoid this issue.
The only reason I call this a workaround and not a solution is because the values we have in the map are vary large when compared to the keys, so there is an overhead to moving those all over the network that would be great to be able to avoid.
Currently it looks like in RedissonMap the keyIterator(...) will use a RedissonMapIterator and just grab the key and do nothing with the value.
It may be possible to use a Lua script such as the one found here  to only actually return the keys from the HSCAN call and prevent the overhead of moving them over the network and unmashalling them.
A new iterator RedissonMapKeyIterator could be implemented for this specific use case.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4078
old messages in Reliable Topic are ignored
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When publishing a message to a Reliable Topic with no subscribers, then registering a subscriber the messages should be received.
Actual behavior
Messages published before the registration of listeners are ignored
Steps to reproduce or test case
App 1
App 2
Run App 1, let it send the message/messages.
Run App 2, messages won't be received.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4079
About RReadWriteLock can work ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The code as follow can work?
@jackygurui
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4080
Redisson : Issue while unlock lock for a key ,  attempt to unlock lock, not locked by current thread
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, I am getting below errors in my logs.
I am using below dependency for redisson:
And I've implemented a wrapper that will acquire and release the lock:
But the log "Released lock for key" is logged rarely. The task after acquiring the lock gets finished within 1 or 2 seconds and the wait and lease time are 5 and 15 secs respectively.
RedisConfig is :
We have redis server in Kubernetes cluster with 2 pod instances both as master.
Would appreciate any suggestions?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4081
RMapCache size() method is inconsistent with keySet()/values()/entrySet() methods
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
size() method should return the same value as count of items in collections returned from keySet()/values()/entrySet() methods.
It is needed to safely convert RMapCache to other collections. Typical conversion involves 2 steps: retrieve size(); then based on that value do further conversions. Some implementations could use iterator().next() right after checking that size() > 0, it is expected to be safe.
Actual behavior
size() method does not take expired items in mind, but keySet()/values()/entrySet() methods return not expired items only. It gives count inconsistency. Implementations using iterator().next() right after checking that size() > 0 will fail with java.util.NoSuchElementException
Steps to reproduce or test case
Unit tests in Kotlin illustrates the problem:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4082
org.redisson.client.RedisException: ERR unknown command 'WAIT'
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I use Redisson of V3.14.1 and advanced version, it occur a error such as code below. But if I use V3.14.0 and older version, the error didn't occur.My redis is redis-5.0_0.3.4 of community version and it deploys as cluster mode.My jdk version is 1.8.0_261.
I guess it has something to do with the jdk version or netty-buffer version.But I can't find the answer.
When I use V3.16.7, it also occur the same error, and the error contains , params: [1, 1000]', such as:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4083
Add configuration to MasterSlaveServersConfig to manually set syncSlaves
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I'm using a MasterSlaveServersConfig with readMode=”SLAVE” and Redis Enterprise. While this configuration works with Redis OSS, it is not always applicable to Redis Enterprise since read-replicas are scaled-out at the database-level; not shard.
Redis Enterprise can guarantee HA with a single replica shard however the throughput requires multiple read-replicas. This mismatch between the total slaveAddresses registered in the configuration and total shards used for HA causes a timeout in the WAIT command issued by Redisson Transactions.
I checked Redisson’s code and found that the MasterSlaveServersConfig is passed to the MasterSlaveEntry which is used by BatchOptions to set syncSlaves based on the amount of slaveAddresses configured. When a Redisson Transaction is executed, the amount of syncSlaves determines how many HA replica shards are needed to respond before the WAIT command releases its lock. With the mismatch, this means that they will always timeout.
As a workaround, I'm using a single slaveAddress in MasterSlaveServersConfig which points to a reverse-proxy for load-balancing of reads between two separate Redis Enterprise database endpoints. Those databases are kept in-synch using Redis Enterprise's replica-of and it worked. However, this is not an optimal solution since it adds an extra network-hop and deployment complexity.
So, my feature request is to add a new optional field in the MasterSlaveServersConfig to set syncSlaves manually which will allow users to pass multiple slaveAddresses without impacting the use of the WAIT command on the master database/shard. Since the freeze logic is run in other connection related methods, there would still be protection to handle unavailable read-replicas.
Thanks, Allen
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4084
Classloader issue when using RScheduledExecutorService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Classloader error thrown when invoking method of Autowired Spring Bean in a Runnable task.
I tried a couple of things,
Supplying class loader to constructor of codec (MarshallingCodec) - no difference
config.setUseThreadClassLoader(false) - no difference. It does not seem to be used at all TasksRunnerService
See for full example: https://github.com/nylund/redisson-classloader-issue
Redisson version: 3.16.7
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4085
how to loadAllKeys  into redis stream?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following MapLoader can load all key into redis map,
but my quesiton is : how  loadAllKeys  into redis stream?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4086
RPermitExpirableSemaphore.tryRelease returns true for already expired semaphore
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
RPermitExpirableSemaphore.tryRelease(permitId) method returns false if the semaphore was already expired
Actual behavior
RPermitExpirableSemaphore.tryRelease(permitId) method returns true even if the semaphore was already expired
Steps to reproduce or test case
Create a semaphore with TTL
Wait long enough for TTL to expire
call tryRelease() method
Note: I couldn't figure out how to make a PR for contribution (push it unauthorized), so below is my suggested fix in RPermitExpirableSemaphore.tryRelease(String permitId) method :
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4088
RedissonDelayedQueue stop transfer timeout elements to destination queue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After using for a while, the RedissonDelayedQueue stop work。All added elements are backlogged in the queue, even if many elements have already timeout.
When I restarted the application，all the elements will transfer to the destination queue。
Even if I use the following code to force trigger the publish，it still doesn't work。Only restart can resolve.
My Redisson version is 3.15.5 ，And used in SingleServer mode.  Redis version is 6.0.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4089
can not cast to JSONObject
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Error message after storing data
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4090
[BUG]#2 to 'unpack' (data string too short) Exception in RRateLimiter
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#2 to 'unpack' (data string too short) Exception in RRateLimiter
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4092
spring boot application with redisson for spring cache usig aws elasticache redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Our redis nodes seems to use lots of cpu, how can we find more information about why that much cpu?
And what sort of redisson configuration we can do to help that ?
Having bigger instances in AWS would not sove it as redis is still limited to one cpu core.
we use redisson for caching with spring boot cache. One cache is caching 'big' data  (heavy structure for pagination), another one has more smaller entries but lots of potential cache check/write.
What sort of metrics we can get from redisson to get a better understanding of the cpu use in redis ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4093
RMapCache EntryExpiredListener doesn't work after AWS ElastiCache failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When AWS ElasticCache fails over, and redisson client automatically reconnects to ElastiCache, the EntryExpiredListener , which is added to RMapCache, should still get notified when an entry is expired.
Actual behavior
When AWS ElastiCache failed over, and redisson client reconnects, the EntryExpiredListener is not notified.
And we see logs like this	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
Steps to reproduce or test case
Connect to AWS ElastiCache with Replicated Mode
Create RMapCache, add EntryExpiredListener
Test with correct behavior:
--3.1 Save key/value pair into RMapCache with ttl= 5 minutes
--3.2 When the key/value expires, EntryExpiredListener is notified
Test with Failover
--4.1 Save a new Key/value pair into RMapCache with ttl= 5 minutes
--4.2 Failover ElastiCache Primary node
--4.3 After Redisson client reconnects, EntryExpiredListener is NOT notified
--4.4 Continue to add another new key/value pair with ttl = 5 minutes
--4.5 When the new key/value pair ttl expires, EntryExpiredListener is NOT notified
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4094
java.lang.NegativeArraySizeException after upgrading Redisson from 3.16.1 to 3.16.8
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, I'm facing with this exception after upgrading Redisson. Please help me out.
Expected behavior
System should work probably
Actual behavior
After upgrading from 3.16.1 to 3.16.8. This exception is thrown
Redisson version
3.16.8
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4095
For ReplicatedServers, Reads still going to Master with default settings
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Reads only go to Slaves (read replicas)
Actual behavior
Reads go to Master node as well.
Steps to reproduce or test case
Use replicated servers, have 1 master with 4 replicas in AWS ElastiCache
Observe read load on Master Node, it is way above non-zero.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4096
RedissonLocalCachedMap throws NullPointerException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonLocalCachedMap init ,it may throws NullPointerException
Expected behavior
behavior normal
Actual behavior
Steps to reproduce or test case
RedissonLocalCachedMap is in init，and the listener received msg at the same time，it throws NullPointerException just like the picture
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4097
Introduce WAIT command to RPermitExpirableSemaphore
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
In Issue 2669, Redlock was deprecated by integration of WAIT command to RLock. However, the problems caused by out of synchronization nodes still exist for semaphores.
Describe the solution you'd like
It could be helpful to introduce the WAIT command to RPermitExpirableSemaphore.
Describe alternatives you've considered
Couldn't find many alternatives other than implementing a Redlock like algorithm for semaphores.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4098
Quarkus environment variables not working
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Some environment variables are not working.
In case we want to override this value with the environment variable: QUARKUS_REDISSON_SINGLESERVERCONFIG_ADDRESS, the configuration fails to load. It seems that: #3943 didn't completely solve issues with environment variables.
Expected behavior
Configuration should successfully load when using ENV variables.
Actual behavior
Steps to reproduce or test case
Setup Quarkus project
Add redisson-quarkus-20 dependency
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4100
RPermitExpirableSemaphore memory not released after expiration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
If RPermitExpirableSemaphore with a single permit is acquired but never released, the memory is released after TLL is over.
Actual behavior
RPermitExpirableSemaphore is not released after expiration time. Probably keys with resource-name, and {resource-name}:timeout are not cleaned up.
Steps to reproduce or test case
A load test with only random name acquires but no releases shows memory usage increasing. After the test is over, Redis memory usage level stays the same and does not decrease.  The line chart below shows Redis memory usage of 2 consecutive load tests with a pause interval between them.
Below is the graph for number of keys for the same tests:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4101
Configuration doc error. tcpNoDelay is true by default
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Read in doc:
tcpNoDelay
Default value: true
Actual behavior
tcpNoDelay
Default value: false
Steps to reproduce or test case
Check https and read any tcpNoDelay entry.
I can not fork wiki project to create pull request :( (but I've added a patch)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4102
Support CH option in addIfLess and addIfGreater for ScoredSortedSet
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonScoredSortedSet addIfLess and addIfGreater methods don't support CH option.
Is that possible to add such support?
E.g. introduce new methods changeIfLess and changeIfGreater which will run ZADD command with both CH and XX options
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4103
Redisson Snappy Codec failed decompress value
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am working on a project which uses a python app to write data to the Redis cluster, and another Java app reads it.
The issue happens when I try to use Snappy to compress the data write into the Redis. And the Redisson client start to give "Unable to decode data" exception while trying to read it.
Here is the detail of the python app where I use to write the data:
Main Library:
Sample Code:
Here is the exception I encountered:
I am new to use the data serialization in Redis, and I didn't find too much example or guidance about how to utilize these Codec listed in here (https:). So I would like to ask which part I implemented incorrectly in the code above?
Thanks for your time!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4105
Add Sharded pubsub feature
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
More details here: https
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4106
Conditions.contains(field, value)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Wanted to know if it was possible to Condition a String Index of a LiveObject from "containing" another string value, and not just equaling it.
Thank you!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4107
TimeSeries - does not handle same values for different timestamps
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The problem as it is described in redis documents here. https
Trying to add 1000 same values to different timestamps yield a 558 items only as a result of RANGE command.
here is the tail of that command.
Expected behavior
all 1000 items to be returned.
Actual behavior
only 558 items returned as a result of the problem
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4108
Redis single for AWS ElastiCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Is Redis single compatible with Amazon ElastiCache or only GCP and Azure ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4109
response timeout in a job lead to deadlock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson version： 3.9.0
action：
creating a thread makes a job every 5 seconds
job acquire fairlock  trylock(10, 10, timeunit.seconds)
redis busy or bad network, response timeout(default 3s)
5s, this instance will reentrance  lock
other intance will not acquire lock
suggestion:
when redis response timeout , should redisson release the lock?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4110
Disable DNS caching
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is it possible to customize DnsResolver and disable caching ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4111
Add SORT_RO command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4112
Redisson Tomcat stores attributes locally in readMode=REDIS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Attributes are only stored in redis, as described in the documentation
Actual behavior
Attributes are also stored locally in Tomcat, potentially causing a Heap Overflow. This is caused by a call to super.setAttribute in the RedissonSession class. I believe this call should only be made when readMode=MEMORY, or the StandardSession internal attributes map should be cleared in endUsage
Steps to reproduce or test case
Install redisson-tomcat as described in the README
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4114
SentinelServersConfig: sentinelUsername is not copied in copy constructor
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#3948 introduced sentinel username, but forgot to copy it in copy constructor. Result: authentication with username and password is not possible because config is always copied in org.redisson.Redisson constructor.
#4113 should do the trick.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4115
Add RScoredSortedSet.pollFirstFromAny() pollLastFromAny() methods with count
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4116
Add RScoredSortedSet.pollFirstFromAny() pollLastFromAny() methods with count and without timeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4117
Add FUNCTION support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4118
Add EXPIRETIME and PEXPIRETIME commands
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4119
Add RTimeSeries.range() rangeReversed() entryRange() entryRangeReversed() with count
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4120
Add RTimeSeries.pollFirstEntries() and pollLastEntries() methods
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4121
Original hostname: 'redis' failed to resolve 'redis.svc.cluster.local' In k8s
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4122
While run task Unable to inject Spring beans
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My config class：
my task class:
then when task running，throw exception
Expect your help，thanks！
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4123
How the increase of the memory/key usage cause the Redis timeout exception ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi community,
I am using a 3-master and 3-slave redis cluster. The redisson client version is 3.15.1.
Previously the memory usages is approx. 20G, and the total keys are approx. 20million. And I didn't encounter a single exception.
Recently the memory usage is increased to 40G, and the total keys are around 40million. Now I start to get following exceptions randomly
For example:
and
There are other exceptions relate to other redis command, but the common part is "Unable to acquire connection! Avoid to use blocking commands in Async/JavaRx/Reactive handlers. Try to increase connection pool size".
The code is same, the only difference that I can see is the increase memory & key usage. Could this be the culprit which causing these issues? And why?
Thanks ahead for your time!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4124
reliableTopicWatchdogTimeout is 10, which is not divisible by 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The default value of reliableTopicWatchdogTimeout is 10, which is not divisible by 3. I remember it was 30 before, did i remember wrong?
Thanks ahead for your time!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4127
java.lang.IllegalStateException: Batch already executed!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
add redis stream in batch with batch=10000,
the first 3 batch always succeed , then report  Batch already executed
Expected behavior
Actual behavior
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4128
Spring Data Connection in multi mode causes thread stuck
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4129
Redisson pool size
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I use the next configuration:
Why idle connections does not clearing by redisson ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4131
Redisson Using AWS Elasticache / Problems Connecting
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
An application, that I am trying to troubleshoot, is unable to establish connections to a Redis replica, using AWS Elasticache, using the Redisson Java client. An example of an exception that occurs is this:
The settings, and the values that they are being set to, are as follows:
Any thoughts on how I can resolve this issue?
We have used versions 3.16.8 and 3.10.1 of the Redisson library.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4132
Engine CPU Regression when using Redisson (compared to other libraries)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
There seems to be an elevated Engine CPU when switching to Redisson from Lettuce.
Not sure this is due to increase in connection count due to to each instance connecting to all replicas.
Actual behavior
Steps to reproduce or test case
Switch from lettuce to Redisson (we are using Micronaut)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4133
Entry.connections is always equals to minimumAmount
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is my configuration:
I have problem with IdleConnectionWatcher, method validateAmount is always return false, because Entry.connections size is always equals to minimumIdleAmount. How can I fix it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4134
Add addAllIfLess(), addAllIfGreater(), addAllIfExist(), addAllIfAbsent() methods to RScoredSortedSet object.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4135
The doLoop method in the StreamPollTask class always reports a null pointer exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The version used is
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4136
Exception from redis : MasterConnectionPool no available Redis entries
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4137
Add RScoredSortedSet.pollFirst() pollLast() methods with timeout and count
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4138
Add RBucket.getAndExpire and getAndClearExpire() methods
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4139
Azure Premium Cluster Configuration Failover Issue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are connecting to an azure premium cluster with 3 nodes using the clustering configuration with redisson 3.16.8.  Whenever azure starts doing failovers removing and promoting nodes for patching we receive the following:
Can someone please tell us how to properly configure redisson in this scenario to avoid these errors? If we reboot the cluster everything fails over successfully. It is only when they are promoting a slave to master during failover and removing the master for patching that we seem to experience the issue.
thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4140
Redisson LZ4 decoder encounter java.lang.IllegalArgumentException: initialCapacity
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am trying to use LZ4 encoding in my python code to write data to the Redis cluster, and my Java app reads it.
The issue happens when I try to use the Redisson LZ4 Codec to decompress the LZ4 encoded data from Redis. And the Redisson client start to give "java.lang.IllegalArgumentException: initialCapacity -2147483648 (expected: >= 0)" exception.
This exception happens if the original String is more than 127 characters (include space). If the original String shorter or equal to 127 characters, then decompression works fine and no exception.
Here is the detail of the python app where I use to write the data:
Main Library:
Here is the detail of the java app where I use to read and decode the data:
Main Library:
Redisson 3.15.1
Here is the exception I encountered:
After digging into the code, the value "-2147483648" is coming from the function "buf.readInt()" in "LZ4Codec.java" .
If the original string contains 127 or fewer characters, this "buf.readInt()" will return a positive number.
If the original string contains more than 127 character, this "buf.readInt()" will return the negative number as shown above. And "ByteBufAllocator.DEFAULT.buffer(decompressSize)" failed with the exception above.
Both python lz4 library and the lz4-java that I use are based on Yann Collet's LZ4 library written by C. I would like to ask for help if there is anything that I am doing wrong.
Thanks for your time!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4141
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4142
Disable Dns caching
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I would to disable Dns caching, so I use DnsAddressResolverGroup with ttlmin&max=0. Is there any way to set it to Config ?
Or maybe any better ways to disable DNS caching ?
I have the next configuration:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4143
DNSMonitor doesn't see changes.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, I'm testing case in which domain name change IP. So I start my application when file hosts has 127.0.0.1 redis.test.
Then after starting I change to 128.0.0.1 redis.test. DNSMonitor doesn't see this changes. Also TTL set to 10 java.security.Security.setProperty("networkaddress.cache.ttl", "10");
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4144
MOVED redirection loop detected in cluster mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We are experiencing issues with connecting using redisson to a AWS redis cluster
This results with
The target is $NODENAME1 and the source is the corresponding $IP1=IPADDRESS($NODENAME1)
Is there a workaround/fix?
Will adding ignoreRedirect config flag help?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4145
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4146
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4147
Add RExpirable.expireIfSet() expireIfNotSet() expireIfGreater() expireIfLess() methods
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4148
expireAt(Instant instant) method of RExpirableReactive and RExpirableRx interfaces doesn't work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4149
How can we apply multiple rate limit in minimum redis call?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Correct me if I am wrong, currently, we have to make 3 calls to redis if I want to apply 3 rate limit to a call before allowing it. Is there any way we can reduce the number of calls by making a batch call?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4150
org.redisson.client.RedisNodeNotFoundException: Node: NodeSource hasn't been discovered yet
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi Team,
We are getting below error while using elasticache redis cluster. While update or save values we are getting this error everytime.
It is not the case of failover. All nodes are active and i can see slot 7188 is also available.
Redisson version - 3.7.5
org.redisson.client.RedisNodeNotFoundException: Node: NodeSource  hasn't been discovered yet
Could you please help to look into the issue on priority.
Thanks,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4151
Add RScoredSortedSet.pollLastEntriesFromAny() and pollFirstEntriesFromAny() methods
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4152
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4153
Fair Lock attempt to compare nil with number
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In my code, I am trying to acquire a fair lock with a fixed waitTime and leaseTime as so
fairLock.tryLockAsync(waitTime, leaseTime, timeUnit, ID)
Occasionally, I face this error
I also see a queue is being formed for the fair lock, even though it is not currently held.
The waiting requests eventually time out after the waitTime expires.
The queue is being formed for the same lock that this exception is being thrown for.
At times, I have also seen the queue being formed for no reason without this error being thrown.
I am not able to reproduce this locally,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4154
IllegalStateException: Only 2 of 1 slaves were synced
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, I started getting weird exception after sentinel cluster failover. Application restart does not help. Looks like sentinel cluster might be at a faulty state, but there's no signs of it.
Redisson version: 3.16.7
Steps to reproduce or test case
Still figuring it out. We were experimenting on sentinel cluster with 3 nodes, killing master for test purposes.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4155
redisson-spring-data: RedissonConnection execute codec bug?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the execute method does not compare the parameter length and parameter type. When a method is overloaded,such as the ttl method, it may cause java.lang.IllegalArgumentException exceptions.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4156
RBlockingQueue.pollFromAny() method doesn't include self queue name
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4157
Regression: 3.16.8 refactor on deleteByPattern does not always delete keys correctly.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
All keys matching pattern are deleted
Actual behavior
Keys are not deleted
Steps to reproduce or test case
The above code works correctly on 3.16.7 to delete all keys matching 2 patterns we pass in.  On 3.16.8 the keys are not deleted.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4158
Exception when two modules use different Redisson version (3.16.1 and 3.16.8) ·58 ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I have 2 module A and B, using same Redisson 3.16.1. The modules are using a RLocalCachedMap. I want to change Redisson version of B server to 3.16.8. And I'm facing with exception.
I know that LocalCachedMessageCodec encode and decode methods were changed for a reason. And this exception is thrown when LocalCachedMap updated.
I wonder that does it have any way to run server A and B with different Redisson version?
P/s: That is my example. Now I have more than 10 modules are using Redisson and I just want to update some of them
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4159
RedissonMapMultimap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'd like to add a Distributed data structure named RedissonMapMultimap (It'll be similar to RedissonListMultimap).
For The following Map:
Map("id1" to Map("innerId1" : "value1", "innerId2": "value2"))
the user could use the RedissonMapMultimap to get value1 without making 2 network calls / writing the logic themselves.
The interface will have functions like RedissonMapMultimap.get(key: Key, innerKey: Key).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4160
Is Rbatch excute operation atomic?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have keys in array of ByteArray (ByteArray for each key) and I am wondering if redisson enable returning value/timeout/null(miss) for different key with batch execute. Would batch support this? Or batch.execute() is just an atomic operation and will fail for all batch once a key is missed?
eg:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4161
TOML Config Support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is your feature request related to a problem? Please describe.
My application uses TOML for its configurations and it would be nice if the Redisson configs were TOML too. TOML is an INI-like human-readable config language that's increasing in popularity.
Here's some references on TOML:
Describe the solution you'd like
TOML support should be added to Redisson Config using Jackson.
Redisson Config seems to use Jackson to handle JSON and YAML. As of Jackson 2.13, jackson-dataformats-text supports TOML in addition to YAML. It seems that Redisson upgraded to Jackson 2.13 with commit 3f457c9 on Dec 21, 2021.
By adding the TOML backend, jackson-dataformats-toml, the TomlFactory type can be used similar to how the YAMLFactory type is used in org.redisson.config.ConfigSupport.
Describe alternatives you've considered
Current workaround is to not use TOML and have Redisson's configs stored in YAML. Resulting in my application requiring multiple config formats.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4163
Using any Codec that isn't MarshallingCodec or SerializationCodec with RRemoteService timeout on reply
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Simplest service interface:
Service is instantiated locally and then the client (both on same JVM, Redis server is running locally with default Ubuntu 20 configuration)
Expected behavior
Log to have the line "I was pinged"
Log to have the line "pinged"
No timeout or exceptions
Actual behavior
Log has "I was pinged"
Exception:
Redisson configuration
As seen in the code, bare minimal
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4164
Problem with RRemoteService and passing maps that contains generics
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Used classes:
Service is instantiated locally and then the client (both on same JVM, Redis server is running locally with default Ubuntu 20 configuration)
Expected behavior
Expected log output:
Redisson version
Redisson configuration
As seen in the code, bare minimal
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4165
Unable to send PING command over channel
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
Error not occurring.
Actual behavior
Error occurring.
Steps to reproduce or test case
Create a topic and send objects through the topic every second. After a few minutes or so this error occurs repeatedly randomly.
Question
Is there maven dependencies for snapshot versions such as 3.16.9? If not, can they be added?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4166
Respecting serialVersionUID
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am saving and later retrieving a serialized object using an RBucket. When doing so, the serialVersionUID has no effect - redisson tries to retrieve and de-serialized the object and throws an exception it this fails. Is this done this way deliberately? Is there a way to make redisson respect the serialVersionUID, or do I need to serialize and de-serialize  the object myself?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4167
Unable to Acquire Fair Lock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In my code, I am trying to acquire a fair lock with a fixed waitTime and leaseTime as so
fairLock.tryLockAsync(waitTime, leaseTime, timeUnit, ID)
Sometimes, all the requests will get queued up for apparently no reason, while no request has acquired the lock.
I can see a wait queue being formed for the lock, but the actual lock is not held by anyone.
Eventually, all of these waiting requests will time out and fail, and new requests will work fine.
This seems to happen randomly when there are a lot of simultaneous requests.
I am not able to reproduce this locally.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4168
Missing cluster settings in wiki
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Please add a below settings description in cluster settings wiki
failedSlaveReconnectionInterval
Default value: 3000
Interval of Redis Slave reconnection attempt when it was excluded from internal list of available servers. On each timeout event Redisson tries to connect to disconnected Redis server. Value in milliseconds.
failedSlaveCheckInterval
Default value: 60000
Redis Slave node failing to execute commands is excluded from the internal list of available nodes when the time interval from the moment of first Redis command execution failure on this server reaches defined value. Value in milliseconds.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4169
Add RBlockingQueue.pollFirstFromAny() and pollLastFromAny() methods.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4170
Session Attributes not synced  - 2 tomcats without sticky session - Read mode REDIS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is this condition here restricting REDIS read mode from syncing attributes between tomcats utilizing same JSESSIONID for the same user?
Have two tomcats running same application. Sticky session disabled.
Redission tomcat session manager configured (version 3.16.4)
Scenario:
Tomcat1 --> updates a attribute in Session.
After 1 second, Tomcat2 --> reads the same attribute in session but do not have updated value but instead it reads the old value.
@mrniko could you please help?
Please help on fixing this scenario.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4171
Redisson threw MOVED redirection loop detected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There's an existing closed bug #1548 that seems to be manifesting in my installation.  I'm using AWS Managed Redis CLUSTER with Hibernate.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4172
ExecutorOptions.taskRetryInterval not working for RExecutorService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I submit tasks to RExecutorService with ExecutorOptions.taskRetryInterval=5m and expect the tasks will be resumed by another nodes after 5m if some nodes are down.
In my test , I submit 32 tasks to 2 nodes ( Server A/B , each have 20 threads to consume tasks ) , each consume 16 tasks.
The tasks take 30 seconds to complete and I manually kill one node (Server B) before tasks complete.
I expect Server A will consume all 32 tasks after 5m
Expected behavior
Server A will consume all 32 tasks after 5m.
Actual behavior
Server A only consume 16 tasks, another 16 tasks consume by Server B ( but not complete) remain in scheduler and tasks and are NOT processed by Server A.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4173
Redisson requires reflect-config to run
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a LockFactory class which provides the default and multilock. The following code results in a bad request with no logs at all:
In normal mode and in native mode locally, I see redisson logs. However, when I deploy the native build, I don't see a single redisson log. Any ideas what might be happening here?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4174
bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
it let this code always error.
throw new RedisConnectionException("SENTINEL SENTINELS command returns less than 2 nodes! At least two sentinels should be defined in Redis configuration. Set checkSentinelsList = false to avoid this check.", lastException);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4175
Get values of all keys matching a given pattern
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is there a way to retrieve the value of all the keys matching the given pattern?
Also, can it be generalised to any key type? I'm able to get keys matching the pattern but how can we get all the values at once too?
Below is code snippet, however here I'm calling get for each key:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4176
Available permits for `RRateLimiter` not getting updated
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using RRateLimiter if the thread which acquired the permit crashed or is long-running the permits never again become available again. Have created a rate limiter as below and once the permit is acquired even if the thread crashes or is closed the permit doesn't get available again.
Expected behaviour
Permits should get available again when the thread crashes or is closed
Actual behaviour
Permits not getting available
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4177
when i set waitTime=0 in multi lock, it fail
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
about issue#4033,I don't need to wait,so i set waittime=0,but the result is failure,why Rlock set waittime=0 result is successful?i need get the lock fail,end business at once.
see source code,when waitime=0,leaseTime assignment zero
Expected behavior
Actual behavior
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4178
Only one thread can get lock after unlock timeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have an annotation RLock which works with an aspect, it work well in some programs.
Here is the codes:
Someday a program throws Exception at every tryLock in two of three containers. I checked ELK and find RedisTimeoutException before the first exception.
By the way, every container works with only one thread to consume kafka messages.
It seems taht  the first RLock unlock timeout and then redisson treats next RLocks as reentrant cause they have the same thread Id.
How to ensure that the lock could be released correctly after unlock timeout.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4179
CPU Spike & WriteRedisConnectionException on Elasticache Redis Data Tiering with Redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Elastic-cache recently released a data-tiering which lets offload LRU keys to disk.
In an attempt to onboard to the feature, we ran some tests where we would fill up our memory till 100% and observe keys being offloaded to disk. We repeated the test using both redis-benchmark tool & Redisson ( Client we use for production).
With redisson as soon as MemoryUtilisation reached 100% we observed a sudden spike in CPU , accompanied with WriteRedisConnectionException . This CPU spike lead to node failures again and again. We didnt observe the same behaviour with redis-benchmark tool.
My question is : Why would there be a spike in CPU with Redisson ? How can we avoid this & is there an ability to perform exponential backoff timeout in redisson?
Redisson Error Message when memory reaches 100%  : Error message: org.redisson.client.WriteRedisConnectionException: Unable to write command into connection! Increase connection pool size).
IMO, the timeouts are already quite high. I dont see new connections being formed as well.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4180
See the following error intermittently when trying to initialize the redisson client during the start of our Spring Application : "Unable to decode data. channel"" ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson version :
We have the following RMapCache beans that will basically create the RMapCache for us :
Stacktrace :
Expected :
For our spring application to start without any issues. The application fails to start because the redisson client cannot be initialized. This error is intermittent and difficult to reproduce all the time
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4181
issue with RedissonLocalCachedMap#removeAsync with LOCALCACHE_REDIS store mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Expected behavior
When I remove values, using RedissonLocalCachedMap#removeAsync method, expectation is that values are removed i.e. no longer retrievable from cache.
Actual behavior
Does not seem to be the case. "Removed" values are retrievable via "getAsync" operation
Steps to reproduce or test case
Here's the reproducible test project:
Steps to reproduce:
clone the project
in the system-out element body, we observe the following:
i.e. all values with even "attribute" are removed from the cache.
However, the test fails with:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4182
Reisson delay queue execution throw “ERROR org.redisson.QueueTransferTask -Unable to acquire connection!”
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In the process of using reisson, when reisson delay queue is normally used, it will be thrown during operation
I confirm that the redis service is normal because there is no problem with another redisson delay queue. Normal after service restart
What are the possible causes of this problem? Is it because the connection is suddenly unavailable?
I need your help
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
