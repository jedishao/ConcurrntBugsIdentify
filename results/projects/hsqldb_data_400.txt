

https://sourceforge.net/p/hsqldb/bugs/
https://sourceforge.net/p/hsqldb/bugs/1
HyperSQL Database Engine (HSQLDB) / Bugs / #1 Error in Build
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, 
When i try to execute the script build (build the jar 
archive) i can't because the javac give me the 
following error : 
I can't find the class org.hsql.Map (used in class 
jdbcconnect) 
My version of JVM is 1.1.8 
Please send me the correct source 
Best Regards 
Joao Luis
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/2
HyperSQL Database Engine (HSQLDB) / Bugs / #2 Please Support multiple ResultSets!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently, the jdbcStatement class does NOT support 
multiple ResultSets. (This is clearly documented in 
the javadocs, and is also obvious from looking at the 
source code.) 
However, this makes this class USELESS for executing 
general stored procedures (which OFTEN do mutiple 
queries -- doing complex stuff like this is usually 
the whole point behind using stored procedures).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/3
HyperSQL Database Engine (HSQLDB) / Bugs / #3 bug in the getMoreResults() method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The getMoreResults() method of org.hsql.jdbcStatement 
class fails to follow the Statement interface specs 
exactly. This causes problems with code that should 
work. 
The basic problem is that getMoreResults() fails to 
advance the current ResultSet. (It also fails to close 
the current ResultSet, which is also a violation of 
the spec.) 
Since HypersonicSQL currently does not support 
multiple ResultSets, what SHOULD happen if the specs 
are to be exactly followed is that the next ResultSet 
should be advanced to null after closing the initial 
one when getMoreResults() is called. 
Below is the current (and buggy) implementation of 
getMoreResults(): 
-------------------------------------------------------
----------- 
public boolean getMoreResults() { 
if(Trace.TRACE) Trace.trace(); 
return false; 
} 
And here is a simple patch which corrects the above 
bug: 
-------------------------------------------------------
public boolean getMoreResults() throws SQLException { 
if (Trace.TRACE) Trace.trace(); 
if (rSet != null) { 
rSet.close(); // MUST do this to satisfy Statement 
interface spec! Good idea anyways 
rSet = null; // advances to the next RS, which is 
always null for now 
} 
return false; 
} 
To illustrate the current bug, and also to test that 
the above patch actually solves the probelm, consider 
the following code which works with any properly 
written JDBC Statement implementation (but fails in 
HypersonicSQL): 
// ********************************************* 
String sql; 
Statement s = null; 
boolean isResultSet; 
ResultSet rs = null; 
int updateCount; 
boolean moreResults; 
&lt;&lt;some code here which estables a database connection, 
etc&gt;&gt; 
//The following code executes a generic SQL statment 
and marches thru all the possible results: 
isResultSet = s.execute(sql); 
rs = s.getResultSet(); 
updateCount = s.getUpdateCount(); 
// process the first result for sure, and also any 
additional results: 
do { 
// handle the current result: 
if (isResultSet) 
processResultSet(rs); 
else 
processUpdate(updateCount); 
// get the next result: 
isResultSet = s.getMoreResults(); 
rs = s.getResultSet(); 
updateCount = s.getUpdateCount(); 
// determine if the loop should continue: 
moreResults = !( !isResultSet &amp;&amp; (updateCount == -
1) ); 
} 
while ( moreResults ); 
/* 
From the Javadoc on Statment: 
s.getResultSet() SHOULD be null if the result is 
actually an update count or there are no more results 
s.getUpdateCount() SHOULD be -1 if the result is 
actually a ResultSet or there are no more results 
*/ 
// ********************************************* 
The above code fails with updates (but not queries) 
because the loop never ends. This happens because 
getUpdateCount() 
fails to return -1 the second time that it is called. 
If the above patch to getMoreResults() 
were in place, then getUpdateCount() WOULD recognize 
that the current RS is null and then would return -1.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/4
HyperSQL Database Engine (HSQLDB) / Bugs / #4 DatabaseMetaData.getExportedKeys broken
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am writting a java program that analizes the 
relations among the different tables in the database. 
When I create a table using FOREIGN KEY, Hypersonic 
classes don't write to the SYSTEM_EXPORTEDKEYS table. 
Then, when I call to the getExportedKeys method, I 
obtain no data. 
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/5
HyperSQL Database Engine (HSQLDB) / Bugs / #5 DatabaseMetaData.getExportedKeys() inop
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am writting a java program that analizes the 
relations among the different tables in the database. 
When I create a table using FOREIGN KEY, Hypersonic 
classes don't write to the SYSTEM_EXPORTEDKEYS table. 
Then, when I call to the getExportedKeys method, I 
obtain no data. 
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/6
HyperSQL Database Engine (HSQLDB) / Bugs / #6 LONGVARBINARY error using setObject
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
using hsql version 1.42 
When using setObject to set the value of a binary 
column a class cast error occurs. 
I have made the following changes that solved the 
problem: 
line 1048 of jdbcPreparedStatement.java: 
case Types.BINARY: 
case Types.VARBINARY: 
case Types.LONGVARBINARY: 
// setBytes(parameterIndex,(byte[])x); 
setBytes(parameterIndex,((org.hsql.ByteArray)
x).byteValue()); 
break; 
--------------------------------------------------- 
line 565 of Column.java -&gt; method modified to 
static Object convertObject(Object o,int type) throws 
SQLException { 
if(o==null) { 
return null; 
} 
switch(type) { 
case BINARY: 
case VARBINARY: 
case LONGVARBINARY: 
if( o instanceof byte[]) 
return new ByteArray( (byte[])o); 
else 
return convertString(o.toString(),type); 
default: 
return convertString(o.toString(),type); 
} 
} 
------------- 
ByteArray.java -&gt; added new constructor 
ByteArray(byte []a) { 
data=a; 
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/7
HyperSQL Database Engine (HSQLDB) / Bugs / #7 Fix for &amp;amp;quot;SELECT x, SUM(y)&amp;amp;quot; &amp;amp;amp; &amp;amp;quot;GROUP BY x
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following sql does not work correctly: 
CREATE TABLE T(N VARCHAR,I INTEGER) 
INSERT INTO T VALUES('a',1) 
INSERT INTO T VALUES('a',2) 
INSERT INTO T VALUES('b',3) 
INSERT INTO T VALUES('b',4) 
SELECT N, SUM(I) FROM T GROUP BY N 
It returns a single null row. 
The bug is in Select.java, getResults() method 
if(eCondition==null || eCondition.test()) { 
Object row[]=new Object[len]; 
for(int i=0;i&lt;len;i++) { 
row[i]=eColumn[i].getValue(); 
} 
count++; 
if(aggregated) { 
updateAggregateRow(agg,row,len); 
// *** rows are not being added to r at this point 
// *** if I comment out the else, it appears to work 
// *** } /*else*/ { 
// *** I don't know if I'm missing other stuff 
} else { 
r.add(row); 
if(simple_maxrows &amp;&amp; count&gt;=maxrows) { 
break; 
} 
} 
} 
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/8
HyperSQL Database Engine (HSQLDB) / Bugs / #8 Fix for &amp;amp;quot;SELECT x, SUM(y)&amp;amp;quot; &amp;amp;amp; &amp;amp;quot;GROUP BY x
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following sql does not work correctly: 
CREATE TABLE T(N VARCHAR,I INTEGER) 
INSERT INTO T VALUES('a',1) 
INSERT INTO T VALUES('a',2) 
INSERT INTO T VALUES('b',3) 
INSERT INTO T VALUES('b',4) 
SELECT N, SUM(I) FROM T GROUP BY N 
It returns a single null row. 
The bug is in Select.java, getResults() method 
if(eCondition==null || eCondition.test()) { 
Object row[]=new Object[len]; 
for(int i=0;i&lt;len;i++) { 
row[i]=eColumn[i].getValue(); 
} 
count++; 
if(aggregated) { 
updateAggregateRow(agg,row,len); 
// *** rows are not being added to r at this point 
// *** if I comment out the else, it appears to work 
// *** } /*else*/ { 
// *** I don't know if I'm missing other stuff 
} else { 
r.add(row); 
if(simple_maxrows &amp;&amp; count&gt;=maxrows) { 
break; 
} 
} 
} 
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/9
HyperSQL Database Engine (HSQLDB) / Bugs / #9 Code transition and standards
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
On 2001-04-04 nobody@nowhere screamed in frustrationa 
and said:
&quot;I'd like to supply some fixes we made to HSQL over 
the time. However, we need to be able to reconcile 
those changes with whatever you did to HSQL. 
This is _impossible_ to do, since all files changed 
due to your formatting changes. There's no way to find 
out what changed between 1.43 and 1.60RC2. 
Do you have any kind of change history documenting the 
changes you made? 
I can't even just grab the newest sources - I added 
some testing framework to HSQL that I'd hate to lose. 
Is there any way to merge stuff back?&quot;
This is an ongoing issue and will be cross-posted as 
an open bug as we transition our customers to the new 
code base.
For the future of this project, NOTHING IS MORE 
IMPORTANT THAN THIS! At least until we get the CVS 
tree in place. Mark has offered to do this on an 
individual basis but we need two things from the 
developers:
a) someone to volunteer to be trained by Mark to do 
this for customers/users (could be - SHOULD BE - 
multiple someones (ideally 3))
b) someone to ride herd on this in the future (again, 
should be more than one) and assist me in this 
specifically, keeping me aware and honest - THIS KIND 
OF QUALITY CONTROL CAN MAKE OR BREAK A PROJECT. AGAIN, 
NOTHING -NOTHING!- IS MORE IMPORTANT.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/10
HyperSQL Database Engine (HSQLDB) / Bugs / #10 No docs on DB transition
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
OPENED IN RESPONSE TO CUSTOMER SERVICE REQUESTS:
Need to add documentation on transition issues from 
other RDBMS's, the strengths and weaknesses of HSQLDB 
in various use-cases and other new-user documentation 
to next point release
CUSTOMERS AFFECTED/REPORTING:
ETIENNE GAUDY
JAN PLOSKI
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/11
HyperSQL Database Engine (HSQLDB) / Bugs / #11 PreparedStatement Timestamps
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm using hsqldb-v1.6 for unit testing my code, and I've lately run into trouble
with java.sql.Timestamp in PreparedStatement. Our code will be using PreparedStatement
all the time, and there will be lots of timestamp columns, so I really hope this works out.
The problem is basically that I create a PreparedStatement from a hsqldb driver connection,
then call setTimestamp(int,Timestamp) on it, and when I call executeUpdate, I get the following 
error:
&quot;java.sql.SQLException: General error java.lang.NumberFormatException: 01 05:00:00.0 in 
statement [insert into date_t (begin_date) values ('2000-01-01 05:00:00.0')]&quot;
It appears from the error message, as well as from the hsqldb source, that the Timestamp
object gets converted into a string (&quot;2000-01-01 05:00:00.0&quot;), and then the stringified SQL is 
processed by the hsqldb engine. But apparently it doesn't parse the string. I'm guessing it's the 
nanoseconds, because in the self-tests included in hsqldb (which make good examples), there are 
things like '2000-02-29 10:00:00', but nothing with nanoseconds. I don't really need nanoseconds, 
it's always going to be 0, but I at least need JDBC compliance: if I pass a Timestamp value, the 
driver must support it.
Please let me know what the status of this is. I'll gladly post this elsewhere on the SourceForge 
site if there's a more appropriate place, and I'll also send source code if it helps.
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/12
HyperSQL Database Engine (HSQLDB) / Bugs / #12 single quote in statements
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If string field contains single quote it throws 
exception !
Can anyone here help me patching this problem ?
I am using HypersonicSQL which is being closed i guess.
TIA
Nitin
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/13
HyperSQL Database Engine (HSQLDB) / Bugs / #13 Infinite loop while executing DELETE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a sample tiny hsqldb 1.60 database on which the following statement:
DELETE FROM folder WHERE isDeleted='y'
causes an infinite loop in method TableFilter.findFirst.
The database uses tables created with the CACHED modifier (leaving out this modifier seems to fix the problem, but is not an acceptable work-around).
As the database is taken from a closed-source project, I would prefer not to upload the file publicly. Please e-mail me for the test data + code which demonstrates the bug (jpljpl@gmx.de)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/14
HyperSQL Database Engine (HSQLDB) / Bugs / #14 not null fails on primary key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I believe without looking this is ansi 89 to have
create table foo {
x int primary key not null
}
even though the not null is implied by being a primary 
key. It is acceptable by oracle 8i, MS SQL Server, MS 
Access, and hsql 1.43.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/15
HyperSQL Database Engine (HSQLDB) / Bugs / #15 canonizing column names
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I can understand why you may take this shortcut to 
capitalize all column names internally to the 
database, but it sucks if you want to use reflection 
to instantiate records off of the database.
You may not consider this a bug since oracle does 
this, but you won't find it in hsql 1.43, mysql, ms 
sql, or access.
The mysql database appears to rely on the application 
programmer being case sensitive in all cases instead 
of hashing mixed and upper case names. This is the 
other extreme, but I still prefer it to just 
capitalizing everything.
Please reconsider.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/16
HyperSQL Database Engine (HSQLDB) / Bugs / #16 bit types only take 'true' and 'false'
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
You should be able to change a bit value by setting it 
to 0 or 1. Don't know if this is ansi sql or not, but 
it is accepted in oracle, ms sql, ms access, mysql.
I can only change bit values by setting it to 'true' 
or 'false'.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/17
HyperSQL Database Engine (HSQLDB) / Bugs / #17 followups don't work on sourceforge
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
btw, ms sql server does not take 'true' and 'false' in 
update statements for bit types. And oracle does not 
have a bit type, closest type was smallint.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/18
HyperSQL Database Engine (HSQLDB) / Bugs / #18 now() getting parsed as timestamp
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using the now() function to put timestamps on 
records. I have an insert that has a value for each 
column in the record, no nulls that works just fine, 
and includes one formatted date, and one call to now().
Later I do an update with a record that has many 
nulls, so the columns do not appear, and two calls to 
the now() function. For some reason it is dropping 
into:
java.lang.IllegalArgumentException: Timestamp format 
must be yyyy-mm-dd hh:mm:ss.fffffffff
at java.sql.Timestamp.valueOf(Timestamp.java:137)
at org.hsqldb.Column.convertString
(Column.java:1001)
at org.hsqldb.Expression.getValue
(Expression.java:670)
at org.hsqldb.Parser.getValue(Parser.java:836)
at org.hsqldb.Parser.processInsert(Parser.java:417)
at org.hsqldb.Database.execute(Database.java:252)
at org.hsqldb.jdbcConnection.executeStandalone
(jdbcConnection.java:994)
at org.hsqldb.jdbcConnection.execute
(jdbcConnection.java:721)
at org.hsqldb.jdbcStatement.fetchResult
(jdbcStatement.java:686)
at org.hsqldb.jdbcStatement.executeUpdate
(jdbcStatement.java:85)
Sounds like alternate paths through the sql parser..
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/19
HyperSQL Database Engine (HSQLDB) / Bugs / #19 problem with 'SHUTDOWN COMPACT'
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm running HSQLDB v1.60 and am having no luck getting 
the &quot;SHUTDOWN COMPACT&quot; query working. No matter what I 
do, the JVM never exits properly if I use this 
query... my application is always left &quot;hanging open&quot; 
at the end. I finally stripped the code down to it's 
bare bones... please take a look at the following code 
and let me know what's wrong. 
---------------------------------------------- 
import java.sql.*;
public class SimpleHSQLDBTest {
public static void main(java.lang.String[] args) {
try { 
Class.forName(&quot;org.hsqldb.jdbcDriver&quot;); 
String conName = &quot;jdbc:hsqldb:file&quot;; 
Connection con = DriverManager.getConnection
(conName, &quot;sa&quot;, &quot;&quot;); 
Statement stmt = con.createStatement(); 
stmt.execute(&quot;SHUTDOWN COMPACT&quot;); 
// stmt.execute(&quot;SHUTDOWN&quot;); 
stmt.close(); 
con.close(); 
System.out.println(&quot;DONE&quot;); 
} catch (Exception e) { 
System.out.println(&quot;EXCEPTION&quot;); 
}
}
}
---------------------------------------------- 
It doesn't matter whether the 'file.script' database 
is brand new, has tables in it, is 'script mode' 
or 'cached mode'... the above app never exits. Notice 
the commented out 'normal' SHUTDOWN line... it works 
properly when used. 
It appears that the 'SHUTDOWN COMPACT' query executes 
properly and that no exception is thrown. Any ideas? 
I also tried the &quot;CHECKPOINT&quot; query, which seems like 
the way to go, but it didn't compact the database like 
I thought it would... actually, I don't know what it 
did. I ran &quot;CHECKPOINT&quot; on a cached database with 
deleted rows that were still &quot;hanging around&quot; after 
deletion... but the rows were still around after 
the &quot;CHECKPOINT&quot; was issued and the database was 
closed. It didn't seem to do anything. Is 'CHECKPOINT' 
also a problem?
DEV ENVIRONMENT:
I'm running VA Java Enterprise, patched to v3.5.3. 
under Win2k. I imported the HSQLDB v1.60 java files 
(not the class files) into it's own VAJ project. This 
HSQLDB project is the only thing included in 
the 'project path' of the above class. The workspace 
classpath is empty. The code doesn't work properly 
under the IDE, nor does the VAJ compiled version work 
properly from the command line under SUN JDK v1.3.1.
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/20
HyperSQL Database Engine (HSQLDB) / Bugs / #20 SA: User not found
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Occassionally, I get this exception saying that SA 
is not a valid user(something along those lines). 
Since, sa is the default user and I haven't created 
any other users, the only choice I have while 
accessing this database is to drop and recreate the 
whole database since it doesnt let me login. Any 
suggestions? Any one reported this problem before?
Thanks for the great product. 
-Xtrimity
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/21
HyperSQL Database Engine (HSQLDB) / Bugs / #21 Subselect fails when using functions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Consider following situation:
&gt;&gt;&gt; snip
create table test ( _id integer, _text varchar);
insert into test values ( 0, 'blah 0');
insert into test values ( 1, 'blah 1');
insert into test values ( 2, 'blah 2');
insert into test values ( 3, 'blah 3');
select * from test where
_id = (select max(_id) from test)
&gt;&gt;&gt; end snip
This fails reporting:
java.sql.SQLException: Column not found: _ID in 
statement [select * from test where _id = (select max
(_id) from test)]
No progress when trying to use test._id in all 
places... It seems it doesn;'t find the column for 
the &quot;select max(_id) from test&quot; part.
&quot;select max(_id) from test&quot; alone works GREAT!
Hope I'll see this fixed soon.
Walk-around:
select max(_id), * from test
Notice: If the table is sorted by ID, otherwise 
returns the last inserted row :(
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/22
HyperSQL Database Engine (HSQLDB) / Bugs / #22 Insert statements misbehave in this case
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
No exception is thrown when I do an insert using the 
wrong statement:
Create table varchar_test(id varchar(100) null, tstamp 
bigint null);
insert into varchar_test values(tstamp);
Values are silently inserted into id column and tstamp 
is 0.
regards,
Xtrimity
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/23
HyperSQL Database Engine (HSQLDB) / Bugs / #23 like &amp;quot;text%&amp;quot; does not use index
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
in hsqldb 1.6 the like statement does not use the 
index so queries take a lot of time. It would be good 
if statements:
- like 'begin%'
- like 'begin%something'
would use the index.
For the first one there is a workaround which can be 
used:
instead of:
select * from table where col like 'test%'
try the following:
select * from table where col&gt;='test' and col&lt;'tesu'
..which is with index 100 times faster!!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/24
HyperSQL Database Engine (HSQLDB) / Bugs / #24 issues with storing objects
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am not very sure if the following is bug or not. 
I have attached a java file. Please execute it and u 
will find the bug or error. I will try to explain the 
four cases of my program
My motive is to store a string as an object type 
of the hsql database.
Case 1:
1.) create table temp (name varchar(25), data object)
2.) stored a string in first column of table and 
hashtable in the second column. 
3.) works fine
Case 2:
1.) create table temp (name varchar(25), data varchar
(20))
2.) store string in first column of table and store 
another string using setString() of preparedstatement 
class.
3.) works fine.
Case 3:
1.) create table temp (name varchar(25), data object)
2.) store string in first column of table and store 
another string using setString() of preparedstatement 
class.
3.) Behaviour not understood. (Please see output to 
understand)
Case 4:
1.) create table temp (name varchar(25), data object)
2.) store string in first column of table and store 
another string using setObject() of preparedstatement 
class.
3.) I get an error.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/25
HyperSQL Database Engine (HSQLDB) / Bugs / #25 multiply doesn't seem to work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm migrating my MySQL application to use HSQLDB. I 
already fixed most of the problems but one still 
remains. I try to multiply values in a simple SQL 
statement 'select *,(count*price) from purchase'. This 
statement however throws me :
or This function is not supported: 12 in statement
or a NumberFormatException
Anyway, keep up the VERY good work guys
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/26
HyperSQL Database Engine (HSQLDB) / Bugs / #26 Several Date/Time Functions Fail
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Most of the date/time methods -- year, month, 
dayofyear, dayofweek, hour, minute, and second -- fail 
with java.lang.NumberFormatException when used with a 
DATETIME column.
CREATE TABLE Test (c1 DATETIME)
INSERT INTO Test VALUES ({ts '2001-07-31 01:23:45'})
SELECT {fn year (c1)} FROM Test
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/27
HyperSQL Database Engine (HSQLDB) / Bugs / #27 Long.MIN_VALUE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a row of type BIGINT and I submit a SQL 
statement putting Long.toString(Long.MIN_VALUE) into 
that row.
Then the following exception happens.
I suspect, that the Tokenizer steals the values sign 
to apply it after parsing, so that 
java.lang.Long.parseLong ends up parsing the negative 
of Long.MIN_VALUE, which is just out of range for long 
(Long.MAX_VALUE+1).
Sorry, I have no idea, where to look for the version. 
I just have the hsql.jar here, and ther is nor version 
in the MANIFEST
java.lang.NumberFormatException: 9223372036854775808
at java.lang.Long.parseLong(Unknown Source)
at java.lang.Long.&lt;init&gt;(Unknown Source)
at org.hsql.Tokenizer.getAsValue
(Tokenizer.java:139)
at org.hsql.Parser.read(Parser.java:753)
at org.hsql.Parser.readTerm(Parser.java:680)
at org.hsql.Parser.readFactor(Parser.java:646)
at org.hsql.Parser.readSum(Parser.java:629)
at org.hsql.Parser.readConcat(Parser.java:619)
at org.hsql.Parser.readCondition
(Parser.java:549)
at org.hsql.Parser.readAnd(Parser.java:525)
at org.hsql.Parser.readOr(Parser.java:515)
at org.hsql.Parser.parseExpression
(Parser.java:510)
at org.hsql.Parser.getValue(Parser.java:491)
at org.hsql.Parser.processInsert
(Parser.java:219)
at org.hsql.Database.execute(Database.java:122)
at
org.hsql.jdbcConnection.executeStandalone
(jdbcConnection.java:693)
at org.hsql.jdbcConnection.execute
(jdbcConnection.java:543)
at org.hsql.jdbcStatement.fetchResult
(jdbcStatement.java:499)
at org.hsql.jdbcStatement.executeUpdate
(jdbcStatement.java:52)
at
org.hsql.jdbcPreparedStatement.executeUpdate
(jdbcPreparedStatement.java:114)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/28
HyperSQL Database Engine (HSQLDB) / Bugs / #28 Double.NaN
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We use a row of type DOUBLE and put in the value 
Double.NaN, via the JDBC interface. This results in an 
exception complaining that NaN is not a valid row 
name. We think that Double.NaN should mapped to SQL 
value NULL and vice versa.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/29
HyperSQL Database Engine (HSQLDB) / Bugs / #29 ResultSet incomplete - lying ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
i was verry happy when I found HSQLDB, looked through 
the documentation and was even more happy.
I tested it and requested a Updateable, srollable 
Result Set and got no error.
Then I tried to used the promided functionality and 
got something like &quot;Sorry not implemented yet!&quot; for 
features like lastRow(), firstRow() or setRow().
In my opinion that's essential for a scrollable Result 
Set and it felt like lying to me when HSQLDB excepted 
the request for an Srollable ResultSet and didn't 
provide the elementary functionality.
First I thought I'm doing something wrong but after a 
while I looked into the Source code and all the 
functions where Documented with what they should do 
but implemented as a simple Return of &quot;Not Yet !&quot;.
I took a deeper look and I don't know how to implement 
the functionality without reading a lot of the sources.
So the question is:
When will the implementation of ResultSet keep the 
Prommise to be Scrollable maybe Updateable ?
It would make things a lot easyier for me ... .
Sugestion: Till then you should shange the Code so 
that it gives an error if someone is requesting a 
ResultSet with not implemented Features (Scrolable, 
Updateable). That's the way other Databases handle 
that ... .
You should mention it in the Docu to, that would have 
saved me a lot of time ;-).
Anyway: Good work, seams to be quiet complete and the 
docu is really good (Ok, not always if it comes to the 
Javadocs ...).
Knut Pape
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/30
HyperSQL Database Engine (HSQLDB) / Bugs / #30 Droping tables drops the database
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The sequence of the database CREATE TABLE statements 
determine the order of INSERT statatements. This is 
dependant on Referential Integrity within the created 
tables.
I have a table which is in the heart of the database 
(holds the core PK) and desire to add an additional 
column at a later date (which has arrived), the 
existing DB has been populated so the procedure would 
be to:
1. create a tmp table that includes the new column
2. do an INSERT SELECT to copy the existing data over 
to the tmp table, but adding the default value for the 
new column at the same time
3. DROP the old table
4. CREATE a new table with the old table name but with 
the additional column
5. do an INSERT SELECT to copy the tmp data over to 
the new table 
6. DROP the tmp table
Right, now the bug - when re-creating the new table 
(point 4) the statement is inserted at the end of all 
the other CREATE TABLE statments; this means that the 
INSERT (point 6) statements are also at the end of the 
INSERT statements.
And because of that sequence HSQL DB thinks the DB is 
currupt because the INSERT statements prior to newly 
inserted ones a refering to something that does not 
come into existances until it reaches the bottom of 
the script. The result is a NullPointerException.
Do you have a way to re-order the script file while it 
is in memory?
You help is much appreciated.
Keith
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/31
HyperSQL Database Engine (HSQLDB) / Bugs / #31 [TIMESTAMP]second function
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
&quot;SECOND&quot; function return 0 from DATE and TIMESTAMP 
fields and throws an IllegalArgumentException from 
TIME fields.
Try:
CREATE TABLE TEST (C1 DATE,C2 TIME ,C3 TIMESTAMP)
INSERT INTO TEST VALUES
('2001-08-22', '10:00:05','2001-08-22 10:00:06.20')
SELECT SECOND(C1) FROM TEST -&gt; return &quot;0&quot;
SELECT SECOND(C2) FROM TEST -&gt; IllegalArgumentException
SELECT SECOND(C3) FROM TEST -&gt; return &quot;0&quot;
In Library.java the method &quot;second&quot; expect a Date 
parameter.
If you change:
public static int second(java.sql.Date d) {
return getDateTimePart(d, Calendar.SECOND);
}
with:
public static int second(java.sql.Time t) {
return getDateTimePart(t, Calendar.SECOND);
}
the results are:
SELECT SECOND(C1) FROM TEST -&gt; IllegalArgumentException
SELECT SECOND(C2) FROM TEST -&gt; return &quot;5&quot;
SELECT SECOND(C3) FROM TEST -&gt; return &quot;6&quot; (if apply 
fix for bug 446415 else return NumberFormatException)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/32
HyperSQL Database Engine (HSQLDB) / Bugs / #32 Error in the jdbc documentation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In the 'operating modes' documentation page (/hsqldb_v.1.61/doc/internet/hSql.html), the URL to connect to the hsql server in &quot;Server&quot; mode is written as
jdbc:hsqldb:hsqldb://hsqldbsrv
it should be
jdbc:hsqldb:hsql://hsqldbsrv
Ź
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/33
HyperSQL Database Engine (HSQLDB) / Bugs / #33 TINYINT: ClassCastException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I ran into a problem when converting a mySQL databse 
to hsqldb with the Transfer tool. The mySQL database 
has columns of type TINYINT, which cause a 
ClassCastException. I tracked down the problem to 
(what appears to me) an inconsistency between the 
jdbcPreparedStatement class and the Column class. The 
Column class uses a Short for both a TINYINT and 
SMALLINT, while the jdbcPreparedStatement class uses a 
Byte for TINYINT and a Short for SMALLINT. The 
jdbcPreparedStatement.setObjectIntype(..) then 
receives a Short where it expects a Byte, causing the 
ClassCastException.
For now, I patched the jdbcPreparedStatement to also 
use a Short for both TINYINT and SMALLINT, however I 
am not sure if this is the right procedure. I could 
also patch the Column class to use a Byte for TINYINT.
If anyone could give me advice on the way to go, I 
will submit a patch.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/34
HyperSQL Database Engine (HSQLDB) / Bugs / #34 Problem with CONSTRAINT PRIMARY KEY
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have been testing the 1.6.1 version of the HSQL 
database and have come across a problem. The steps to 
replicate the problem are:
1. Run the DBManager and select a database URL 
something like &quot;jdbc:hsqldb:message&quot;
2. Execute the following SQL statements in order:
CREATE CACHED TABLE MESSAGE ( 
ID_message int IDENTITY, 
CD_guid varchar NULL, 
XM_message varchar NULL, 
CONSTRAINT PK_MESSAGE PRIMARY KEY (ID_message) );
CREATE CACHED TABLE MESSAGE_AUDIT ( 
ID_message_audit int IDENTITY, 
ID_message int NULL, 
DS_status_message varchar NULL, 
CONSTRAINT PK_MESSAGE_AUDIT PRIMARY KEY 
(ID_message_audit), 
CONSTRAINT FK1_MESSAGE_AUDIT FOREIGN KEY 
(ID_message) REFERENCES MESSAGE (ID_message) );
INSERT INTO MESSAGE VALUES(1, '1', NULL);
3. Check the inserted record:
SELECT * FROM MESSAGE
4. Close the DBManager
5. Open the DBManager again selecting the same JDBC 
URL as before
6. At this point, a stack trace should appear in the 
DBManager window, complaining about a string index out 
of bounds exception.
7. Check for the previously inserted record:
SELECT * FROM MESSAGE
No records will be returned from this query.
I have found a work-around, which is to specify a 
primary key using the syntax 
CREATE CACHED TABLE MESSAGE ( 
ID_message int IDENTITY PRIMARY KEY, ...
instead of using the CONSTRAINT PRIMARY KEY syntax.
I assume that what I have found is actually 2 bugs, 
because if you repeat the process and create the 
message table only, no stack trace appears, but the 
previously inserted data is still lost.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/35
HyperSQL Database Engine (HSQLDB) / Bugs / #35 Minor typo in build.bat
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Build.bat contains following line:
@echo example: classpath=c:\jkd1.1.8\lib\classes.zip
It should be:
@echo example: classpath=c:\jdk1.1.8\lib\classes.zip
This may sound like a minor detail, but it caused me 
some gray hair as the (Finnish?) saying goes... :)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/36
HyperSQL Database Engine (HSQLDB) / Bugs / #36 Java 1.1 error in Log.java
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Log.java contains a non-conditional call of 
setProperty function, which doesn't compile on JDK 
1.1.8:
pProperties.setProperty(&quot;version&quot;, 
Is should be:
//#ifdef JAVA2
pProperties.setProperty(&quot;version&quot;, 
jdbcDriver.VERSION);
//#else
pProperties.put(&quot;version&quot;, jdbcDriver.VERSION);
//#endif
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/37
HyperSQL Database Engine (HSQLDB) / Bugs / #37 Recovery commits broken transactions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When HSQL restarted after a system crash, it will made 
the changes made by the last *uncommited* -- thus 
possibly inclompete -- transaction permanent. HSQL 
should drop all changes after the last succesfull 
commit from the log (providing that auto commit was 
set to off).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/38
HyperSQL Database Engine (HSQLDB) / Bugs / #38 SOUNDEX
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, 
Soundex function is not complaint with Soundex Algorithem.
According to the Algorithem,
The vowels are not used. 
If two or more adjacent (not separated by a vowel) letters have the same numeric value, only one 
is used.
But in your implementation it is using same numeric value.
If there are not three digits after the consonants are convert, the code is filled out with zeros. The 
name Lee has no consonants after the L, so the soundex code would be L000. 
But in your implementatiion it will give only &quot;L&quot;, basically is not padding with Zero's.
It can be easily fixed. I modified the soundex function and attached to it. you can check in to 
the repository.
you are doing good work.
Regards
Aravilli Srinivasa Rao
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/39
HyperSQL Database Engine (HSQLDB) / Bugs / #39 Soundex 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i, 
Soundex function is not complaint with Soundex Algorithem.
According to the Algorithem,
The vowels are not used. 
If two or more adjacent (not separated by a vowel) letters have the same numeric value, only one 
is used.
But in your implementation it is using same numeric value.
If there are not three digits after the consonants are convert, the code is filled out with zeros. 
The 
name Lee has no consonants after the L, so the soundex code would be L000. 
But in your implementatiion it will give only &quot;L&quot;, basically is not padding with Zero's.
It can be easily fixed. I modified the soundex function and attached to it. you can check in to 
the repository.
Regards
Aravilli Srinivasa Rao 
I had problem with attachment i.e why i am attaching code function here)
---------------------------------------------------------------------
public static String soundex(String s) {
if (s == null) {
return s;
}
s = s.toUpperCase();
int len = s.length();
char b[] = new char[4];
b[0] = s.charAt(0);
int j = 1;
for (int i = 1; i &lt; len &amp;&amp; j &lt; 4; i++) {
char c = s.charAt(i);
if (&quot;BFPV&quot;.indexOf(c) != -1) {
if (b[j-1] != '1')
b[j++] = '1';
} else if (&quot;CGJKQSXZ&quot;.indexOf(c) != -1) {
if (b[j-1] != '2')
b[j++] = '2';
} else if (c == 'D' || c == 'T') {
if (b[j-1] != '3')
b[j++] = '3';
} else if (c == 'L') {
if (b[j-1] != '4')
b[j++] = '4';
} else if (c == 'M' || c == 'N') {
if (b[j-1] != '5')
b[j++] = '5';
} else if (c == 'R') {
if (b[j-1] != '6')
b[j++] = '6';
}
}
String result = new String(b, 0, j);
while(result.length() != 4) {
result +=&quot;0&quot;;
}
return result;
}
----------------------------------------------------
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/40
HyperSQL Database Engine (HSQLDB) / Bugs / #40 JDBC URL for server documented incorrect
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In the 1.61 release, the file doc/internet/hSql.html
states
that the URL for a Server connection is:
jdbc:hsqldb:hsqldb://hsqldbsrv
This should be:
jdbc:hsqldb:hsql://hsqldbsrv
This is expected in the source code file
jdbcConnection.java line 675, which is:
} else if (s.toUpperCase().startsWith(&quot;HSQL://&quot;))
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/41
HyperSQL Database Engine (HSQLDB) / Bugs / #41 Group by
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I have a table with two column that pile data 
(serAccess, month). i am triyng to count the number of 
serAccess by month by doing the following SQL command:
SELECT month, count(serAccess)
FROM statistique
GROUP BY month;
When i run it using the demo application it run ok but 
when i run from my JSP application, i only get 1,0 as 
result!
Please help!
Nicaud Bourgault
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/42
HyperSQL Database Engine (HSQLDB) / Bugs / #42 GROUP BY in 1.6.1 still broken
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following forum thread indicates that the GROUP BY 
with aggregate functions bug was fixed:
http://sourceforge.net/forum/message.php?msg_id=177086
Based on the results of some of my queries, it looks 
like it's still not working correctly.
My db table is as follows:
CREATE TABLE jiveMessage (
messageID INTEGER NOT NULL,
parentMessageID INTEGER NULL,
threadID INTEGER NOT NULL,
forumID INTEGER NOT NULL,
userID INTEGER NULL,
subject VARCHAR(255) NULL,
body LONGVARCHAR NULL,
modValue INTEGER NOT NULL,
rewardPoints INTEGER NOT NULL,
creationDate VARCHAR(15) NOT NULL,
modifiedDate VARCHAR(15) NOT NULL,
CONSTRAINT jiveMessage_pk PRIMARY KEY (messageID)
);
The query I'm running is:
SELECT threadID, count(1) AS msgCount FROM jiveMessage 
WHERE modifiedDate &gt; ? GROUP BY threadID ORDER BY 
msgCount DESC
Results in hsqldb:
threadID | count
1 2
2 4
in mysql:
threadID | count
2 4
1 2
What appears to be happening is that the grouping 
logic is done last in the order of events, but done 
first in mysql.
Has anyone else noticed this problem in the 1.6.1 
codebase?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/43
HyperSQL Database Engine (HSQLDB) / Bugs / #43 Applet is incompatible with Java Plug In
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I just got this mail from a contractor of Sun:
Dear Thomas,
We are about to release a new version of Java Plug In 
which supports all Java applets, including those based 
on older versions of Java. We expect this version to 
be widely distributed and to replace all older 
versions of Java. After extensive testing of existing 
applets, we have done our best to fix all 
compatibility issues. However, we have found the 
following problem in running your applet, which cannot
easily be fixed on our end. Whenever available, we 
suggest a solution that will allow your applet to run 
with this new version of Java Plug-in.
You can find the early-access version of Java Plug-in 
at
http://developer.java.sun.com/developer/earlyAccess/j2s
dk131_01a/
in order for you to do your own testing.
Thank you,
The Java Plug-in Team
Sun Microsystems
URL
http://javaboutique.internet.com/HypersonicSQL/ 
Problem
access denied
Suggested solution
Broken because of security model changes in Java 2. 
Migrate the applets to Java 2 security model.
Jennifer.Lozzio@Sun.COM
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/44
HyperSQL Database Engine (HSQLDB) / Bugs / #44 GROUP BY FAILS WITH ALIAS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version 143
GROUP BY on a column select alias fails but works if 
the actual column name is used (order by works using 
an alias).
Ex. FAILS
select customer.name as customer_name, place.name as 
customer_addr
from customer, place
where customer.place = place.code
group by customer_addr
Ex. WORKS
select customer.name as customer_name, place.name as 
customer_addr
from customer, place
where customer.place = place.code
group by place.name
Ex. WORKS
select customer.name as customer_name, place.name as 
customer_addr
from customer, place
where customer.place = place.code
order by customer_addr
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/45
HyperSQL Database Engine (HSQLDB) / Bugs / #45 Connection is broken for objects &amp;gt; 32k
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After creating a prepared statement and using it's setObject() method with an Object (size&gt; 32k) I receive a &quot;SQLException: Connection is broken&quot; error
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/46
HyperSQL Database Engine (HSQLDB) / Bugs / #46 poor INSERT INTO implementation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When processing:
SELECT select_expression INTO tablename FROM table_list
...
statements, Database.linkTable() is not performed until
after inserting data into new INTO table. This means
that a very large selection operation may be performed,
only to fail due to the fact that a table with the same
name as the INTO table already exists. 
Example:
Suppose TEST exists and contains 1,000,000 rows, then:
SELECT TEST.* INTO TEST FROM TEST
will select all 1,000,000 rows from the existing table
named TEST, create a new table called TEST, insert the
1,000,000 rows in the new table, and only then attempt
to link the table into the database, at which point the
operation will fail due to the restriction on duplicate
table names that Database.linkTable() imposes.
With a simple change to the code, that is: attempting
to link the new table into the database immediately
after it is created and before the selection result is
retriveived, the example statement will return
immediately with a &quot;TABLE ALREADY EXISTS&quot; SQL
exception, saving much time and overhead.
-- Will be provding patch, including support for
equivalent CREATE TABLE AS syntax extention.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/47
HyperSQL Database Engine (HSQLDB) / Bugs / #47 StringIndexOutOfBoundsException: -10
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Running Standalone mode from JBoss I get this from 
time to time. After this has occurred the database 
needs to be deleted to avoid hanging on further use. 
How do you properly shutdown in standalone mode? I 
assume that the DB file are being left corrupted by 
not closing down properly with a shutdown hook?
[Default] java.lang.StringIndexOutOfBoundsException: 
String index out of range: -10
[Default] at java.lang.String.substring
(String.java:1503)
[Default]
[Default] at org.hsqldb.Table.setIndexRoots
(Table.java:483)
[Default]
[Default] at org.hsqldb.Database.processSet
(Database.java:1179)
[Default]
[Default] at org.hsqldb.Database.execute
(Database.java:274)
[Default]
[Default] at org.hsqldb.Log.runScript
(Log.java:837)
[Default]
[Default] at org.hsqldb.Log.open(Log.java:223)
[Default]
[Default] at org.hsqldb.Database.&lt;init&gt;
(Database.java:96)
[Default]
[Default] at 
org.hsqldb.jdbcConnection.openStandalone
(jdbcConnection.java:926)
[Default]
[Default] at org.hsqldb.jdbcConnection.&lt;init&gt;
(jdbcConnection.java:682)
[Default]
[Default] at org.hsqldb.jdbcDriver.connect
(jdbcDriver.java:116)
[Default]
[Default] at java.sql.DriverManager.getConnection
(DriverManager.java:517)
[Default]
[Default] at java.sql.DriverManager.getConnection
(DriverManager.java:177)
[Default]
[Default] at 
org.jboss.pool.jdbc.xa.wrapper.XADataSourceImpl.getXACo
nnection(XADataSourceImpl.java:118)
[Default]
[Default] at 
org.jboss.pool.jdbc.xa.wrapper.XADataSourceImpl.getXACo
nnection(XADataSourceImpl.java:151)
[Default]
[Default] at 
org.jboss.pool.jdbc.xa.XAConnectionFactory.createObject
(XAConnectionFactory.java:267)
[Default]
[Default] at 
org.jboss.pool.ObjectPool.createNewObject
(ObjectPool.java:842)
[Default]
[Default] at org.jboss.pool.ObjectPool.getObject
(ObjectPool.java:587)
[Default]
[Default] at org.jboss.pool.ObjectPool.getObject
(ObjectPool.java:538)
[Default]
[Default] at 
org.jboss.pool.jdbc.xa.XAPoolDataSource.getConnection
(XAPoolDataSource.java:178)
[Default]
[Default] at 
org.jboss.jdbc.XADataSourceLoader.startService
(XADataSourceLoader.java:407)
[Default]
[Default] at 
org.jboss.util.ServiceMBeanSupport.start
(ServiceMBeanSupport.java:107)
[Default]
[Default] at java.lang.reflect.Method.invoke
(Native Method)
[Default]
[Default] at 
com.sun.management.jmx.MBeanServerImpl.invoke
(MBeanServerImpl.java:1628)
[Default]
[Default] at 
com.sun.management.jmx.MBeanServerImpl.invoke
(MBeanServerImpl.java:1523)
[Default]
[Default] at 
org.jboss.configuration.ConfigurationService$ServicePro
xy.invoke(ConfigurationService.java:836)
[Default]
[Default] at $Proxy0.start(Unknown Source)
[Default]
[Default] at org.jboss.util.ServiceControl.start
(ServiceControl.java:81)
[Default]
[Default] at java.lang.reflect.Method.invoke
(Native Method)
[Default]
[Default] at 
com.sun.management.jmx.MBeanServerImpl.invoke
(MBeanServerImpl.java:1628)
[Default]
[Default] at 
com.sun.management.jmx.MBeanServerImpl.invoke
(MBeanServerImpl.java:1523)
[Default]
[Default] at org.jboss.Main.&lt;init&gt;(Main.java:210)
[Default]
[Default] at org.jboss.Main$1.run(Main.java:116)
[Default]
[Default] at 
java.security.AccessController.doPrivileged(Native 
Method)
[Default]
[Default] at org.jboss.Main.main(Main.java:112)
[Default]
[Default] java.lang.StringIndexOutOfBoundsException: 
String index out of range: -7
[Default] at java.lang.String.substring
(String.java:1503)
[Default]
[Default] at org.hsqldb.Table.setIndexRoots
(Table.java:483)
[Default]
[Default] at org.hsqldb.Database.processSet
(Database.java:1179)
[Default]
[Default] at org.hsqldb.Database.execute
(Database.java:274)
[Default]
[Default] at org.hsqldb.Log.runScript
(Log.java:837)
[Default]
[Default] at org.hsqldb.Log.open(Log.java:223)
[Default]
[Default] at org.hsqldb.Database.&lt;init&gt;
(Database.java:96)
[Default]
[Default] at 
org.hsqldb.jdbcConnection.openStandalone
(jdbcConnection.java:926)
[Default]
[Default] at org.hsqldb.jdbcConnection.&lt;init&gt;
(jdbcConnection.java:682)
[Default]
[Default] at org.hsqldb.jdbcDriver.connect
(jdbcDriver.java:116)
[Default]
[Default] at java.sql.DriverManager.getConnection
(DriverManager.java:517)
[Default]
[Default] at java.sql.DriverManager.getConnection
(DriverManager.java:177)
[Default]
[Default] at 
org.jboss.pool.jdbc.xa.wrapper.XADataSourceImpl.getXACo
nnection(XADataSourceImpl.java:118)
[Default]
[Default] at 
org.jboss.pool.jdbc.xa.wrapper.XADataSourceImpl.getXACo
nnection(XADataSourceImpl.java:151)
[Default]
[Default] at 
org.jboss.pool.jdbc.xa.XAConnectionFactory.createObject
(XAConnectionFactory.java:267)
[Default]
[Default] at 
org.jboss.pool.ObjectPool.createNewObject
(ObjectPool.java:842)
[Default]
[Default] at org.jboss.pool.ObjectPool.getObject
(ObjectPool.java:587)
[Default]
[Default] at org.jboss.pool.ObjectPool.getObject
(ObjectPool.java:538)
[Default]
[Default] at 
org.jboss.pool.jdbc.xa.XAPoolDataSource.getConnection
(XAPoolDataSource.java:178)
[Default]
[Default] at 
org.jboss.jdbc.XADataSourceLoader.startService
(XADataSourceLoader.java:407)
[Default]
[Default] at 
org.jboss.util.ServiceMBeanSupport.start
(ServiceMBeanSupport.java:107)
[Default]
[Default] at java.lang.reflect.Method.invoke
(Native Method)
[Default]
[Default] at 
com.sun.management.jmx.MBeanServerImpl.invoke
(MBeanServerImpl.java:1628)
[Default]
[Default] at 
com.sun.management.jmx.MBeanServerImpl.invoke
(MBeanServerImpl.java:1523)
[Default]
[Default] at 
org.jboss.configuration.ConfigurationService$ServicePro
xy.invoke(ConfigurationService.java:836)
[Default]
[Default] at $Proxy0.start(Unknown Source)
[Default]
[Default] at org.jboss.util.ServiceControl.start
(ServiceControl.java:81)
[Default]
[Default] at java.lang.reflect.Method.invoke
(Native Method)
[Default]
[Default] at 
com.sun.management.jmx.MBeanServerImpl.invoke
(MBeanServerImpl.java:1628)
[Default]
[Default] at 
com.sun.management.jmx.MBeanServerImpl.invoke
(MBeanServerImpl.java:1523)
[Default]
[Default] at org.jboss.Main.&lt;init&gt;(Main.java:210)
[Default]
[Default] at org.jboss.Main$1.run(Main.java:116)
[Default]
[Default] at 
java.security.AccessController.doPrivileged(Native 
Method)
[Default]
[Default] at org.jboss.Main.main(Main.java:112)
[Default]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/48
HyperSQL Database Engine (HSQLDB) / Bugs / #48 Self Referencing Table bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Initial Comment:
This create table statement should be legal. I need to 
create a hierarchical set of entities. As a workaround 
I suppose I could modify the table after creation but 
this shouldn't be necessary! Is this possible even? 
How do I add a foreign key as an afterthought?
create cached table TNODE
(
ID INT IDENTITY PRIMARY KEY,
PARENT_ID INT,
NAME VARCHAR(64) NOT NULL,
FOREIGN KEY (PARENT_ID) REFERENCES TNODE(ID),
CONSTRAINT NAME UNIQUE(NAME, PARENT_ID)
);
java.sql.SQLException: Table not found: TNODE in 
statement [create cached table TNODE
(
ID INT IDENTITY PRIMARY KEY,
PARENT_ID INT,
NAME VARCHAR(64) NOT NULL,
FOREIGN KEY (PARENT_ID) REFERENCES TNODE(ID),
CONSTRAINT NAME UNIQUE(NAME, PARENT_ID)
)]
at org.hsqldb.Trace.getError(Trace.java:180)
at org.hsqldb.jdbcResultSet.&lt;init&gt;
(jdbcResultSet.java:2645)
at org.hsqldb.jdbcConnection.executeStandalone
(jdbcConnection.java:994)
at org.hsqldb.jdbcConnection.execute
(jdbcConnection.java:721)
at org.hsqldb.jdbcStatement.fetchResult
(jdbcStatement.java:686)
at org.hsqldb.jdbcStatement.executeUpdate
(jdbcStatement.java:85)
at 
com.borland.dx.sql.dataset.Database.executeStatement
(Unknown Source)
at com.borland.dbtools.jdbcx.sqlpanel.SqlBean.a
(Unknown Source)
at com.borland.dbtools.jdbcx.sqlpanel.SqlBean.a
(Unknown Source)
at com.borland.dbtools.jdbcx.sqlpanel.SqlBean.b
(Unknown Source)
at 
com.borland.dbtools.jdbcx.sqlpanel.b.actionPerformed
(Unknown Source)
at 
javax.swing.AbstractButton.fireActionPerformed
(AbstractButton.java:1450)
at 
javax.swing.AbstractButton$ForwardActionEvents.actionPe
rformed(AbstractButton.java:1504)
at 
javax.swing.DefaultButtonModel.fireActionPerformed
(DefaultButtonModel.java:378)
at javax.swing.DefaultButtonModel.setPressed
(DefaultButtonModel.java:250)
at 
javax.swing.plaf.basic.BasicButtonListener.mouseRelease
d(BasicButtonListener.java:216)
at java.awt.Component.processMouseEvent
(Component.java:3717)
at java.awt.Component.processEvent
(Component.java:3546)
at java.awt.Container.processEvent
(Container.java:1164)
at java.awt.Component.dispatchEventImpl
(Component.java:2595)
at java.awt.Container.dispatchEventImpl
(Container.java:1213)
at java.awt.Component.dispatchEvent
(Component.java:2499)
at 
java.awt.LightweightDispatcher.retargetMouseEvent
(Container.java:2451)
at 
java.awt.LightweightDispatcher.processMouseEvent
(Container.java:2216)
at java.awt.LightweightDispatcher.dispatchEvent
(Container.java:2125)
at java.awt.Container.dispatchEventImpl
(Container.java:1200)
at java.awt.Window.dispatchEventImpl
(Window.java:912)
at java.awt.Component.dispatchEvent
(Component.java:2499)
at java.awt.EventQueue.dispatchEvent
(EventQueue.java:319)
at java.awt.EventDispatchThread.pumpOneEvent
(EventDispatchThread.java:103)
at java.awt.EventDispatchThread.pumpEvents
(EventDispatchThread.java:93)
at java.awt.EventDispatchThread.run
(EventDispatchThread.java:84)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/49
HyperSQL Database Engine (HSQLDB) / Bugs / #49 supporting &amp;quot;default&amp;quot; in create table?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
in 1.6.0, the following sql command fails because of 
the &quot;default&quot; keyword:
CREATE TABLE Objects (
title varchar(255),
owner varchar(100),
created timestamp(14),
last_modified timestamp(14),
path varchar(255),
mime_type varchar(255),
annotation varchar(2048),
thinking_type int(11),
object_id varchar(100) default '' ,
PRIMARY KEY (object_id)
);
possible to support?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/50
HyperSQL Database Engine (HSQLDB) / Bugs / #50 LIMIT limitations
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In 1.61 LIMIT does not work together with DISTINCT. 
Has now been fixed.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/51
HyperSQL Database Engine (HSQLDB) / Bugs / #51 SELECT .. IN from same table
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In 1.61 queries in the form of SELECT .... FROM atable 
WHERE x IN (SELECT y FROM atable WHERE ...) do not 
work, reporting &quot;Column y not found&quot;. Has now been 
fixed, pending more thorough testing.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/52
HyperSQL Database Engine (HSQLDB) / Bugs / #52 Java MIN VALUE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I get a NumberFormatException when trying to insert a 
Java Long.MIN_VALUE into the normal sql mapping column.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/53
HyperSQL Database Engine (HSQLDB) / Bugs / #53 join/condition bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
following problem:
with the hsql sample data (Database manager), execute 
the following statement:
select * from address adr left outer join document doc 
on (adr.id=doc.addressid )
the problem arises if you add another condition like 
(OR 1=0) which should not change anything, but 
unfortunatly the statement
select * from address adr left outer join document doc 
on (adr.id=doc.addressid OR 1=0 )
will now product a different resultset with less 
recordsets (exactly all records without NULL values in 
addressid)
This definitly seems like a bug, or? 
Any ideas?
/thomas
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/54
HyperSQL Database Engine (HSQLDB) / Bugs / #54 Extraneous quote corrupts database
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If you include an extraneous single quote (') in an 
insert or update statement value, the entire database 
is corrupted. Every record is overwritten with the 
value up to the quote. 
Example:
INSERT INTO FOO F1 VALUES ('It isn't time.')
Result:
Every record is set to 'It isn'.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/55
HyperSQL Database Engine (HSQLDB) / Bugs / #55 Server crash after logging DISCONNECT
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I use hsqldb 1.61
In the situation where the dbengine is running as a 
server, I open a connection via jdbc and close it.
At that moment, the database engine logs a DISCONNECT 
statement in the script file.
If I close the database at that point and restart it,
I get a NullPointerException on the screen:
Server.run/init: java.lang.NullPointerException
java.lang.NullPointerException
at org.hsql.Channel.checkAdmin(Channel.java:69)
at org.hsql.DatabaseInformation.getScript
(DatabaseInformation.java:451)
at org.hsql.Database.getScript
(Database.java:222)
at org.hsql.Log.scriptToFile(Log.java:238)
at org.hsql.Log.writeScript(Log.java:494)
at org.hsql.Log.close(Log.java:148)
at org.hsql.Log.open(Log.java:128)
at org.hsql.Database.&lt;init&gt;(Database.java:47)
at org.hsql.Server.run(Server.java:69)
at org.hsql.Server.main(Server.java:33)
And the server won't ever respond again normally to 
connections.
This crash can be recovered manually by removing the 
DISCONNECT statement from the .script file.
Of course that will be a big problem in production 
environments. :)
For myself I have solved the problem in Log.java
by adjusting the
void write(Channel c,String s) throws SQLException {
method, so that it doesn't write a DISCONNECT to the 
script file.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/56
HyperSQL Database Engine (HSQLDB) / Bugs / #56 double column names are allowed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Due to an error in my create table script I created a 
table with 2 columns with the same name.
I don't know what the effects of this are, but I think 
it should not be allowed.
Only imagine select .. from .. where a=x
with a the double column name
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/57
HyperSQL Database Engine (HSQLDB) / Bugs / #57 combined conditions don't work correctly
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Okay, here is an example:
Create some tables (I stripped off everything you do 
not need to see the problem).
create cached table USERGROUPS
(
ID integer
);
create cached table USERS
(
ID integer
);
create cached table UG
(
FK_USER integer,
FK_USERGROUP integer,
TEST  bit,
foreign key (FK_USER) references USERS(ID),
foreign key (FK_USERGROUP) references USERGROUPS(ID),
unique (FK_USER, FK_USERGROUP)
);
Now insert some test data.
insert into USERGROUPS values (0);
insert into USERS values (0);
insert into UG values (0, 0, true);
Well, now if you do an
- select * from UG where FK_USER=0 and FK_USERGROUP=0 -
or 
- update UG set TEST = true where FK_USER=0 and 
FK_USERGROUP=0 -
there is no result!
If you use just one of the conditions
- select * from UG where FK_USER=0 -
or
- select * from UG where FK_USERGROUP=0 -
it works. If you don't create the foreign key FK_USER 
or the UNIQUE clause, everything is just fine.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/58
HyperSQL Database Engine (HSQLDB) / Bugs / #58 Version 1.62 patch breaks selftest
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The suggested patches for version 1.62 includes a 
patch for bug 471711 by fredt. This patch generate a 
column not found error when running the selftest 
program.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/59
HyperSQL Database Engine (HSQLDB) / Bugs / #59 EOFException executing UPDATE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
(HSQLDB v1.61)
I was running an application making lots of inserts,
selects and updates and got the following stack dump. 
I know this is not a lot to go on, but I have only seen
it once. This happened while executing a query like
the following:
UPDATE profile SET last_time = now() WHERE id IN
(1944,1887,1876,1876,1957,1957,1886,1886,1921,
1921,1893,1849,1849)
The number of ids in the query varies.
I will post again if I get any more information.
Thanks,
Stack dump:
java.io.EOFException
at
java.io.RandomAccessFile.readInt(RandomAccessFile.java(Compiled
Code))
at org.hsqldb.Cache.getRow(Cache.java(Compiled Code))
at org.hsqldb.Row.getNode(Row.java(Compiled Code))
at org.hsqldb.Index.delete(Index.java(Compiled Code))
at org.hsqldb.Index.delete(Index.java(Compiled Code))
at org.hsqldb.Table.deleteNoCheck(Table.java:965)
at org.hsqldb.Table.deleteNoCheck(Table.java:949)
at
org.hsqldb.Parser.processUpdate(Parser.java(Compiled Code))
at
org.hsqldb.Database.execute(Database.java(Compiled Code))
at
org.hsqldb.jdbcConnection.executeStandalone(jdbcConnection.java:994)
at
org.hsqldb.jdbcConnection.execute(jdbcConnection.java:721)
at
org.hsqldb.jdbcStatement.fetchResult(jdbcStatement.java:686)
at
org.hsqldb.jdbcStatement.executeUpdate(jdbcStatement.java:85)
at
com.myco.ADBConnection.executeUpdate(ADBConnection.java:337)
at
com.myco.server.HSQLDatabase.updateQueuedAProfiles(HSQLDatabase.java:471)
at
com.myco.server.StandardDatabase$DBInsertDaemon.run(StandardDatabase.java(Compiled
Code))
at java.lang.Thread.run(Thread.java:498)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/60
HyperSQL Database Engine (HSQLDB) / Bugs / #60 Inserting Objects
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm having problems storing java.lang.Integer and 
java.lang.String objects in hsqldb 1.60. 
Here is the table I have created: 
CREATE CACHED TABLE PREFERENCE 
( 
User_Id INTEGER NOT NULL, 
Pref_Name VARCHAR(30) NOT NULL, 
Pref_Value OBJECT NOT NULL, 
DateCreated DATETIME NOT NULL, 
PRIMARY KEY(User_Id, Pref_Name), 
FOREIGN KEY(User_Id) REFERENCES USER(User_Id) 
) 
I am inserting Objects using a PreparedStatment. All 
other objects I insert (user defined objects that is) 
seem to work fine. No exceptions are being thrown 
while inserting. When I open the database in 
DatabaseManager, The preference name has been written, 
but the serialized object field is blank.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/61
HyperSQL Database Engine (HSQLDB) / Bugs / #61 Null Pointer thrown from jdbcResultSet
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The method getBinaryStream() throws a NullPointer 
exception if the data in the database is null. This 
is because it tries instantiate a ByteArrayInputStream 
with a null value (the result from getBytes())
This should be changed so that the method retuns null 
and does not throw the exception.
See line 438 of jdbcResultSet.
Maybe something like this...
public InputStream getBinaryStream(int column) 
throws SQLException
{
InputStream returnStream = null;
byte[] bytes = getBytes(column);
if (bytes != null)
returnStream = new ByteArrayInputStream(bytes);
return returnStream;
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/62
HyperSQL Database Engine (HSQLDB) / Bugs / #62 NPE on connect.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
v1.61
We got the following stack trace once while our 
application was trying to connect to HSQL.
java.lang.NullPointerException
at org.hsqldb.Log.writeLine(Log.java:904)
at org.hsqldb.Log.write(Log.java:355)
at org.hsqldb.Database.connect
(Database.java:155)
at org.hsqldb.jdbcConnection.openStandalone
(jdbcConnection.java:937)
at org.hsqldb.jdbcConnection.&lt;init&gt;
(jdbcConnection.java:682)
at org.hsqldb.jdbcDriver.connect
(jdbcDriver.java:116)
at java.sql.DriverManager.getConnection
(DriverManager.java:523)
at java.sql.DriverManager.getConnection
(DriverManager.java:152)
...
at java.lang.Thread.run(Thread.java:498)
It looks like w was null:
private static void writeLine(Writer w, String s) 
throws IOException {
w.write(StringConverter.unicodeToAscii(s) 
+ &quot;\r\n&quot;);
}
We only saw this once, so I was not able to narrow it 
down at all.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/63
HyperSQL Database Engine (HSQLDB) / Bugs / #63 Extraneous sleep  in Log class
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In version 1.61 of hsqldb in the Log.isAlreadyOpen() method there is a 3 second sleep that seems to be there to do some sort of concurrency checking. I could not find anyplace where the lock file is actually created. I believe this is unnecessary code and can be removed. It would significantly improve start-up time.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/64
HyperSQL Database Engine (HSQLDB) / Bugs / #64 Unprotected system tables
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Here's a good chuckle for anyone who's interested:
- open the DatabaseManager against any hsql(db)
database (you don't even have to be an admin user for
this)
- create a table SYSTEM_CONNECTIONINFO( ID INT )
- refresh tree
Ha, ha, ha...wimper... (:-(
Here's another good one:
- in same session, now drop table SYSTEM_CONNECTIONINFO
- refresh tree (all is good again)
- create table SYSTEM_TABLES(int id)
- create table TEST(int id)
- refresh tree
Hey! Where did test go? I just created it, but it
doesn't show up in the treeeeeeee.
The fix is simple:
hsql(db) needs to disable creation of user tables with
the same names as system tables. A really naive
implementation only needs to do a
getSystemTable(create_table_name) != null to check
this, although it is a waste to do it that way.
BTW
inserts, updates, deletes are also allowed against
system tables, but since the tables are regenerated on
each use, the DML is completely without observablke
effect (but does consume processing time). These
actions should be disabled too, if not too expensive...
Campbell
PS
yes: I know that nobody with even a little hsqldb
knowlege is going to do this (on purpose or
otherwise). But what about the case where someone is
migrating to hsqldb, they are fairly green, and their
previous naming conventions were *unfortunate*? What
about automated environments, where software chooses
the names for table creation?
PPS
I've known about this one for ~6 months now (basically,
since I first downloaded the product and took my first
skim through the source). Sorry about not posting
earlier
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/65
HyperSQL Database Engine (HSQLDB) / Bugs / #65 Exception while shutdown compact
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello we use HSQL in a production system.
The usage is very heavy msg traffic.
When we try to shutdown immediately from the Admin
console 
We observed the following exception:
ava.lang.NullPointerException
at org.hsql.Channel.checkAdmin(Channel.java:69)
at org.hsql.Database.processShutdown
(Database.java:642)
at org.hsql.Database.execute(Database.java:156)
at org.hsql.ServerConnection.run
(ServerConnection.java:58)
ava.lang.NullPointerException
at org.hsql.Log.writeLine(Log.java:493)
at org.hsql.Log.write(Log.java:197)
at org.hsql.Database.execute(Database.java:168)
at org.hsql.ServerConnection.run
(ServerConnection.java:58)
Then the server does not quit.
We have to hit ctrl C and then edit the properties
file to modified = NO and restart the server to 
run.
How does one restore from a previous backup file.
Thank you
--
Raman
rkannan@govpx.com
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/66
HyperSQL Database Engine (HSQLDB) / Bugs / #66 problem inserting data &gt;30k
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a problem when I want to insert data &gt;30kb into 
a longvarbinary field. For inserting I use a 
preparedStatement and the setBytes() method. There is 
no error code, the program &quot;stops&quot; only...
The error occurs when hsql runs in &quot;server&quot;-mode. I 
tried the same insert of large data with the hsql 
standalone version and it works!
Please help me, if you know a solution or hint.
Peter
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/67
HyperSQL Database Engine (HSQLDB) / Bugs / #67 NumberFormatException DECIMAL
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is this a bug ?
http://sourceforge.net/forum/forum.php?
thread_id=623572&amp;forum_id=73674
I am using hsqldb_v.1.61
Boerries
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/68
HyperSQL Database Engine (HSQLDB) / Bugs / #68 commit does not work with multiple con.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are not sure if this is a limitation of hsqldb or a
bug. Please clarify:
We use 3 connections:
connection1.setAutoCommit(false); 
//connection1.commit(); 
connection2.setAutoCommit(false); 
//connection1.commit(); 
connection3.setAutoCommit(false);
//connection1.commit(); 
con3: INSERT INTO TABLE Row with ID 2
con1: SELECT * FROM TABLE 
-&gt; shows Row with ID 2
connection2.commit();
connection3.commit(); 
connection1.commit();
If we reread the TABLE after finishing this test
program, the new Row is not in the TABLE anymore!
If we do one of the following changes, all works as
expected (Row stays in the TABLE):
- Remove comment from the lines connection1.commit()
OR
- Change commit statements at the end of the program
to:
connection3.commit(); 
connection2.commit();
connection1.commit();
Can you please clarify this issue? 
Thanks a lot!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/69
HyperSQL Database Engine (HSQLDB) / Bugs / #69 foreign key problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Suppose:
table B has a foreign key on table A field nr 1 (both
tables are cached)
If table A is dropped, it is still possible do to
selects in table B, but when the database is stopped
and restarted table B is deleted.
In my opinion here is something wrong. I have 3 options :
1. It should not be possible to drop table A. At the
moment it is not possible to delete records in table A
which are referenced in table B.
2. If you can drop table A, table B should be impacted
immediatly, not after a restart of the database.
3. In my opinion the best would be to put table B in a
mode not accessible to the users, (but it should not be
deleted, as it happens now), until table A is recreated
with the correct foreign keys. If table A is recreated
table b should be again accessible for select/update by
the users.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/70
HyperSQL Database Engine (HSQLDB) / Bugs / #70 {fn hour ()} Returns 0 through 11
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The hour function returns zero through eleven, instead 
of zero through twenty-three, because the hour method 
in Library.java used Calendar.HOUR instead of 
Calendar.HOUR_OF_DAY. I've made this mistake many 
times myself. Source fix:
public static int hour(java.sql.Time t) {
return getDateTimePart(t, Calendar.HOUR_OF_DAY);
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/71
HyperSQL Database Engine (HSQLDB) / Bugs / #71 {fn month()} returns 0 through 11
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The month function returns zero through eleven instead 
of one through twelve. It's always seemed odd to me 
that the Calendar.MONTH returns zero through eleven 
instead of one through twelve. Here's a source fix to 
Library.java:
public static int month(java.sql.Date d) {
return getDateTimePart(d, Calendar.MONTH) + 1;
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/72
HyperSQL Database Engine (HSQLDB) / Bugs / #72 Memory problems with cached tables
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We've been using HSQL for a little while for internal 
testing and such. However, we've had some trouble 
loading large quantities of data to cached tables.
Since the HSQL code uses integer values to perform its 
seeks into the data file, theoretically you should be 
able to store a gig or more of data. In practice, 
however, it seems that all the data you load remains 
in memory, even when using cached tables.
I've attached a Java class written by one of my co-
workers that demonstrates this. No matter how large 
or small the row size, it always craps out after 
consuming the available memory. It appears that the 
Cache class is supposed to maintain a limited number 
of rows in memory and persist the rest to disk, but I 
don't think it really performs that function. I've 
tried changing the value governing the size of the 
cache (even setting it as low as 20 rows), but the 
amount of memory consumed remains the same. In 
addition, running an analyzer reveals that Row objects 
are never garbage collected.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/73
HyperSQL Database Engine (HSQLDB) / Bugs / #73 Shutdown
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Im trying to use HSQL. I've configured it and it seems to meet my needs in all but one respect.
I'd like to create a JRun-style admin tool which allows the user to start and stop the database 
server at the click of a button. I've done this with McKoi, another Java database. 
The problem I'm having with HSQL is restarting the database server after the user has shut it 
down. The SQL &quot;Shutdown&quot; command appears to mean something other than shutdown for HSQL.
After issuing the shutdown command on it, attempting to restart it causes it to issue the 
following...
java.net.BindException: Address already in use: JVM_Bind
... and kill whatever process it's in. 
I'm no expert in this area but I think this is possibly an indication that the server port is still in use.
I think it might mean that the database never fully shuts down. This hurts me in the admin tool 
scenario because I'm running the database server as a thread within the admin tool process. When 
the above exception is thrown the entire admin tool process is killed. The user just sees his admin 
tool disappear. The exception is flagged, the user hits OK, the database dies and says I'm going to 
kill everybody near me. AAAAAAAAARRRRRRRRRRRGGGGGGGGHHHHH!!!!!!!!!
Any thoughts on this would be greatly appreciated.
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/74
HyperSQL Database Engine (HSQLDB) / Bugs / #74 *must* fix logging w.r.t. object names
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It has come to my attention that there are several 
outstanding issues w.r.t. case preservation, 
extraneous quotes corupting the log, etc.
My latest experiment shows that yet another case is 
not handled correctly
Say one issues the statement:
CREATE TABLE &quot;test&quot;&quot;er&quot;(ID INTEGER)
which is perfectly legal and reults in a table named:
test&quot;er
then the statement is logged as:
CREATE TABLE test&quot;er(ID INTEGER)
When the database is restarted, all statments 
pretaining to this table, of course, fail.
My suggestion is that (if we continue with the current 
log format) we should double-quote all object names in 
the log and escape internal double-quotes in the 
standard manner by doubling them, as in:
CREATE TABLE &quot;test&quot;&quot;er&quot;(&quot;ID&quot; INTEGER)
INSERT INTO &quot;test&quot;&quot;er&quot;(&quot;ID&quot;) VALUES(1)
...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/75
HyperSQL Database Engine (HSQLDB) / Bugs / #75 StringIndexOutOfBound Exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I got the following Exception with HSQL v1.61:
java.lang.StringIndexOutOfBoundsException: String 
index out of range: -7
at java.lang.String.substring(String.java:1503)
at org.hsqldb.Table.setIndexRoots
(Table.java:483)
at org.hsqldb.Database.processSet
(Database.java:1179)
at org.hsqldb.Database.execute
(Database.java:274)
at org.hsqldb.Log.runScript(Log.java:837)
at org.hsqldb.Log.open(Log.java:223)
at org.hsqldb.Database.&lt;init&gt;(Database.java:96)
at org.hsqldb.jdbcConnection.openStandalone
(jdbcConnection.java:926)
at org.hsqldb.jdbcConnection.&lt;init&gt;
(jdbcConnection.java:682)
at org.hsqldb.jdbcDriver.connect
(jdbcDriver.java:116)
at java.sql.DriverManager.getConnection
(DriverManager.java:517)
at java.sql.DriverManager.getConnection
(DriverManager.java:146)
at com.ibm.ivj.eab.dab.DatastoreJDBC.connect
(DatastoreJDBC.java:255)
with the following database schema:
CREATE CACHED TABLE amov (
primkey CHAR (10) NOT NULL ,
cod CHAR (1) ,
type CHAR (1) ,
pgdir VARCHAR (255) ,
pgname VARCHAR (255) ,
dirname VARCHAR (255) ,
filename VARCHAR (255),
dname VARCHAR (5) ,
mountext VARCHAR (255) ,
CONSTRAINT PK___8__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE dappli (
primkey CHAR (10) NOT NULL ,
pgname VARCHAR (255) ,
param VARCHAR (255) ,
CONSTRAINT PK___8__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE docfile (
primkey CHAR (10) NOT NULL ,
cod CHAR (1) ,
type CHAR (1) ,
pgdir VARCHAR (255) ,
pgname VARCHAR (255) ,
dirname VARCHAR (255) ,
filename VARCHAR (255) ,
CONSTRAINT PK___6__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE filedb (
primkey CHAR (10) NOT NULL ,
cod CHAR (1),
type CHAR (1) ,
pgdir VARCHAR (255) ,
pgname VARCHAR (255) ,
filename VARCHAR (255) ,
data LONGVARBINARY ,
CONSTRAINT PK___6__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE mailfile (
primkey CHAR (10) NOT NULL ,
cod CHAR (1) ,
type CHAR (1) ,
pgdir VARCHAR (255) ,
pgname VARCHAR (255) ,
dirname VARCHAR (255) ,
filename VARCHAR (255) ,
CONSTRAINT PK___6__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE maildb (
primkey CHAR (10) NOT NULL , 
cod CHAR (1), 
type CHAR (1) ,
pgdir VARCHAR (255) ,
pgname VARCHAR (255) ,
filename VARCHAR (255) ,
data LONGVARBINARY ,
CONSTRAINT PK___6__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE docurl (
primkey CHAR (10) NOT NULL ,
urlstr VARCHAR (255) NOT NULL ,
CONSTRAINT PK___9__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE hierar (
elemkey CHAR (10) NOT NULL ,
parekey CHAR (10) ,
chilnb INT ,
sallekey CHAR (10) ,
armkey CHAR (10) ,
doskey CHAR (10) ,
claskey CHAR (10) ,
interkey1 CHAR(10),
interkey2 CHAR(10),
interkey3 CHAR(10),
interkey4 CHAR(10),
interkey5 CHAR(10),
interkey6 CHAR(10),
interkey7 CHAR(10),
interkey8 CHAR(10),
foldkey CHAR (10) ,
creation date NOT NULL ,
modif date NOT NULL ,
lastacc date NOT NULL ,
tlastacc time NOT NULL,
dupcop date NOT NULL ,
tdupcop time NOT NULL ,
tmodif time NOT NULL ,
etat CHAR (1) NOT NULL ,
protacc CHAR (1) ,
CONSTRAINT PK___5__11 PRIMARY KEY (elemkey));
CREATE CACHED TABLE task (
primkey CHAR (10) NOT NULL ,
etat CHAR (1) NOT NULL ,
debut date NOT NULL ,
fin date NOT NULL ,
intitule VARCHAR (255) ,
description VARCHAR (255) ,
resultat VARCHAR (255) ,
CONSTRAINT PK___3__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE telem (
primkey CHAR (10) NOT NULL ,
type CHAR (1) NOT NULL ,
nicon SMALLINT NOT NULL,
name VARCHAR (255) NOT NULL ,
dirname VARCHAR (255) ,
typelem VARCHAR (40) ,
ref1 VARCHAR (40) ,
ref2 VARCHAR (40) ,
ref3 VARCHAR (40) ,
nbcont INT NOT NULL ,
postit VARCHAR (255) ,
objet VARCHAR (255) ,
modest CHAR (1) NOT NULL ,
cod CHAR (1) NOT NULL ,
CONSTRAINT PK___4__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE prgname (
configname CHAR (20) NOT NULL ,
extension CHAR (10) NOT NULL ,
directoryname VARCHAR (255) ,
filename VARCHAR (255) NOT NULL,
nicon SMALLINT NOT NULL ,
CONSTRAINT PK___7__11 PRIMARY KEY 
(configname,extension));
CREATE CACHED TABLE tacces (
primkey CHAR (10) NOT NULL ,
acckey CHAR (10) NOT NULL ,
urlnm VARCHAR (255) ,
CONSTRAINT PK___9__11 PRIMARY KEY (primkey));
CREATE CACHED TABLE tusnber (
depcod CHAR (2) NOT NULL ,
usercod CHAR (3) NOT NULL ,
CONSTRAINT PK_tusnber_1__11 PRIMARY KEY(depcod));
CREATE CACHED TABLE tkeynber (
depcod CHAR (2) NOT NULL ,
usercod CHAR (3) NOT NULL ,
serialcod CHAR(5) NOT NULL,
CONSTRAINT PK_tkeynber_1__11 PRIMARY KEY
(depcod,usercod));
CREATE CACHED TABLE tperson (
type CHAR (1) ,
name VARCHAR (40) NOT NULL ,
firstname VARCHAR (30) NOT NULL ,
fonction VARCHAR (60) ,
company VARCHAR (60) ,
streetaddress VARCHAR (70) ,
zipcode VARCHAR (10) ,
city VARCHAR (30) ,
adstate VARCHAR (30) ,
country VARCHAR (30) ,
e_mail VARCHAR (70) ,
tel1 VARCHAR (20) ,
tel2 VARCHAR (20),
fax VARCHAR (20) ,
extension VARCHAR (6) ,
CONSTRAINT PK___2__11 PRIMARY KEY (name, 
firstname));
CREATE CACHED TABLE admbox (
name VARCHAR (40) NOT NULL ,
firstname VARCHAR (30) NOT NULL ,
elemkey CHAR (10) NOT NULL ,
type CHAR (1) NOT NULL ,
title VARCHAR (60) ,
CONSTRAINT PK_admbox_1__11 PRIMARY KEY 
(name,firstname,elemkey));
CREATE CACHED TABLE accesright (
elemkey CHAR (10) NOT NULL ,
name VARCHAR (40) NOT NULL ,
firstname VARCHAR (30) NOT NULL ,
typ CHAR (1) NOT NULL,
cod CHAR (1) NOT NULL,
lastacc date NOT NULL ,
tlastacc time NOT NULL ,
CONSTRAINT PK_right_1__11 PRIMARY KEY 
(elemkey,name,firstname));
CREATE CACHED TABLE author (
elemkey CHAR (10) NOT NULL ,
name VARCHAR (40) NOT NULL ,
firstname VARCHAR (30) NOT NULL ,
typ CHAR (1) NOT NULL,
titre VARCHAR (40),
e_mail VARCHAR (70) , 
maildate date , 
mailkey CHAR (10) ,
CONSTRAINT PK_author_1__11 PRIMARY KEY 
(elemkey,name,firstname,typ),
CONSTRAINT FK___8__11 FOREIGN KEY (elemkey) 
REFERENCES telem (primkey));
CREATE CACHED TABLE persongroup (
teamname VARCHAR (40) NOT NULL ,
teamfirstname VARCHAR (30) NOT NULL ,
membername VARCHAR (40) NOT NULL ,
memberfirstname VARCHAR (30) NOT NULL ,
notes VARCHAR (40),
CONSTRAINT PK_group_1__11 PRIMARY KEY (teamname, 
teamfirstname, membername, memberfirstname),
CONSTRAINT FK___4__11 FOREIGN KEY 
(teamname,teamfirstname) REFERENCES tperson 
(name,firstname),
CONSTRAINT FK___5__11 FOREIGN KEY 
(membername,memberfirstname) REFERENCES tperson 
(name,firstname));
CREATE CACHED TABLE taskelem (
elemkey CHAR (10) NOT NULL ,
taskkey CHAR (10) NOT NULL ,
CONSTRAINT PK_taskelem_1__11 PRIMARY KEY 
(elemkey,taskkey),
CONSTRAINT FK___1__11 FOREIGN KEY (taskkey) 
REFERENCES task (primkey),
CONSTRAINT FK_taskelem_2__11 FOREIGN KEY (elemkey) 
REFERENCES telem (primkey));
CREATE CACHED TABLE taskpers (
name VARCHAR (40) NOT NULL ,
firstname VARCHAR (30) NOT NULL ,
typ CHAR (1) NOT NULL,
taskkey CHAR (10) NOT NULL ,
etat CHAR (1) NOT NULL,
CONSTRAINT PK_taskpers_1__11 PRIMARY KEY
(taskkey,name,firstname),
CONSTRAINT FK___2__11 FOREIGN KEY (taskkey) 
REFERENCES task (primkey));
CREATE CACHED TABLE userconfig (
name CHAR (40) NOT NULL ,
firstname CHAR (30) NOT NULL ,
depcod CHAR (2) NOT NULL ,
usercod CHAR (3) NOT NULL,
bcasekey CHAR (10) NOT NULL ,
bcase1key CHAR (10) NOT NULL ,
trashkey CHAR (10) NOT NULL ,
homekey CHAR (10) NOT NULL,
rmailkey CHAR (10) NOT NULL ,
smailkey CHAR (10) NOT NULL ,
logsmailkey CHAR (10) NOT NULL ,
panel1 CHAR (10) ,
panel2 CHAR (10) ,
panel3 CHAR (10) ,
panel4 CHAR (10) ,
panel5 CHAR (10) ,
modest CHAR NOT NULL ,
cod CHAR NOT NULL ,
useright INT NOT NULL ,
basedir VARCHAR (255) ,
configname CHAR (20) ,
ckey VARCHAR (50) NOT NULL ,
mailuserid VARCHAR (40),
mailpsw VARCHAR (50) , 
mailstorser VARCHAR (70),
mailtransser VARCHAR (70), 
mailstorprot CHAR(10),
mailtransprot CHAR(10),
mailstorclas VARCHAR(70), 
mailtransclas VARCHAR (70),
edition CHAR(10) ,
rfu CHAR(10) ,
CONSTRAINT PK___1__10 PRIMARY KEY (name,firstname));
CREATE CACHED TABLE tquery (
queryname VARCHAR (150) NOT NULL , 
name VARCHAR (40) NOT NULL , 
firstname VARCHAR (30) NOT NULL , 
display CHAR (1) NOT NULL , 
querystring1 VARCHAR (255) NOT NULL , 
querystring2 VARCHAR (255) , 
querystring3 VARCHAR (255) , 
querystring4 VARCHAR (255) , 
CONSTRAINT PK_tquery_1__11 PRIMARY KEY ( queryname, 
name, firstname));
To reproduce the exception:
1- Launch database Manager and execute all the CREATE 
SQL commands to create the database
2 - Quit Database Manager
3 - Launch Database Manager again and connect to the 
database just created. 
Could you help me ?
Thanks a lot.
Rene Levantinh
visual@club-internet.fr
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/76
HyperSQL Database Engine (HSQLDB) / Bugs / #76 SHUTDOWN fails under JVM 1.4.0. beta 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Issuing a SHUTDOWN command to the database does not 
shut it down under version 1.4.0 beta 3 of the JVM.
The server just hangs in some sort of limbo state 
where the server is not accepting queries but is not 
actually shut down either. SHUTDOWN works fine under 
JVMs 1.3.0 and 1.3.1.
Sometimes, SHUTDOWN will work after repeated attempts 
to shutdown/connect to the server from a client.
When this eventually happens, (if run with &quot;-silent 
false&quot;) the message &quot;The database is shutdown&quot; is 
issued once for each time you attempted to shutdown 
the server.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/77
HyperSQL Database Engine (HSQLDB) / Bugs / #77 ABS function unknown
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
unknown function: ABS
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/78
HyperSQL Database Engine (HSQLDB) / Bugs / #78 right join throws SQLException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
SEE:
http://sourceforge.net/forum/forum.php?
thread_id=643937&amp;forum_id=73674
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/79
HyperSQL Database Engine (HSQLDB) / Bugs / #79 Parser error in nested query
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
version : HSQLdb1.61
The parser has some problems with nested queries that 
are combined via 'where in'
try the following :
create table t(id integer not null, name char)
create table u(id integer not null, name char)
insert into u values(1,'Jim')
insert into u values(2,'Pete')
insert into t select * from u where u.id in (select 
u.id from u where u.id=1)
Gives as result :
SQL 
Error 
Column not found: ID in statement [insert into t 
select * from u where u.id in (select u.id from u 
where u.id=1)] / Error Code: 0 / State: S0022 
while
select u.id from u where u.id=1
and
insert into t select * from u where u.id in(1,36)
work both fine.
By the way,
I could work around the problem by rewriting the query.
Alexander
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/80
HyperSQL Database Engine (HSQLDB) / Bugs / #80 Compatability Issues in J2SDK1.4.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
assert is now a keyword within Java2 v1.4.0 and so 
the program will no longer compile.
Thanks
J
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/81
HyperSQL Database Engine (HSQLDB) / Bugs / #81 Updates not being applied
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I send an SQL Update command using executeUpdate
(), I do not get a JDBC error, but the updates are not 
applied. I am issing a commit after the SQL Update.
If close the JDBC connection, or issue a CHECKPOINT, 
the update is applied.
Any ideas?
Thanks,
Dave Connerth
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/82
HyperSQL Database Engine (HSQLDB) / Bugs / #82 Literals in SELECT, not enough results
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version: 1.61
I'm trying to insert data using a INSERT INTO ... 
SELECT ... GROUP BY ... statement. As part of the 
statement, I need literal values. If the literals are 
placed before a SUM() expression, I only get a single 
row returned. If after the expression, I get how every 
many the SUM() returns. MSSQL returns the same number 
in either case.
Example:
create table x ( oid integer, value integer );
insert into x values ( 1, 1 );
insert into x values ( 1, 2 );
insert into x values ( 1, 3 );
insert into x values ( 2, 1 );
insert into x values ( 2, 2 );
insert into x values ( 2, 3 );
select sum(value) from x
group by oid;
3
1
4
3
1
select 'x', sum(value) from x
group by oid
12
select sum(value), 'x' from x
group by oid
3 x
1 x
4 x
3 x
1 x
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/83
HyperSQL Database Engine (HSQLDB) / Bugs / #83 GROUP BY returns row of NULLs
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using a INSERT INTO ... SELECT ... GROUP BY ...
statement. Getting 'Cannot insert NULL' when SELECT
should return nothing. It appears that the GROUP BY
clause causes the SELECT return a row of NULLs when 
nothing is found.
eg.
create table x ( oid integer );
select oid
from x;
OID
---------
&lt;nothing&gt;
select oid
from x
group by oid;
OID
------
(null)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/84
HyperSQL Database Engine (HSQLDB) / Bugs / #84 Index names not local to table
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
1.7.0 RC 1 alpha
CREATE TABLE x ( oid INTEGER, value VARCHAR(80) );
CREATE TABLE y ( oid INTEGER, value VARCHAR(80) );
CREATE INDEX name_index on x ( value );
-- OK
CREATE INDEX name_index on y ( value );
-- Index already exists: S0011 ...
This problem did not exist in 1.61!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/85
HyperSQL Database Engine (HSQLDB) / Bugs / #85 probs with CodeSwitcher
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I tried to run CodeSwitcher to switch to JDK11 on
hsqldb_v_1_70_RC1alfa
(I am not sure whether it is still allowed to use
CodeSwitcher. I havent installed Ants yet.)
I got the following errors:
~/hypersonicsql/hsqldb_v_1_70_RC1alfa&gt; java -classpath
$CLASSPATH:. org.hsqldb.util.CodeSwitcher . -JAVA2
-TRACE -TRACESYSTEMOUT
................................
ERROR: '#endif' without '#ifdef'
in file ./org/hsqldb/jdbcResultSet.java !
..........................................
ERROR: '#ifdef' not allowed inside '#ifdef'
in file ./org/hsqldb/util/Transfer.java !
.....
And there is a double //#endif JAVA2 in line 1263 of
jdbcResultSet.java.
Regards,
Ulrich
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/86
HyperSQL Database Engine (HSQLDB) / Bugs / #86 multiple null values violate unique cons
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As far as I know, NULL values should not be considered
when checking if an insert satisfies the unique
constraints defined on a table. For instance:
create table test (
x integer not null primary key,
y integer,
constraint uniq_y unique (y)
)
The following should be allowed:
insert into test(x, y) values (1, null)
insert into test(x, y) values (2, null)
However, with hsqldb (v 1.61), the second insert fails
because of the unique constraint on y. 
Will this be corrected in a future version?
Kind regards,
Tijmen
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/87
HyperSQL Database Engine (HSQLDB) / Bugs / #87 NullPointerException in getBinaryStream
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I try to access a column that has been set to NULL
with getBinaryStream, I get a NullPointerException.
Obviously HSQLDB tries to create a ByteArrayInputStream
from a null-Pointer.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/88
HyperSQL Database Engine (HSQLDB) / Bugs / #88 compile errors with J2SDK 1.4.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
with hsqldb 1.61 and J2SDK 1.4.0, I did the following
steps:
1. ant switchtojdk11 - no problem
2. ant -verbose jar
Ant version 1.4.1 compiled on October 11 2001
Buildfile: build.xml
Detected Java version: 1.4 in: /usr/lib/j2sdk1.4.0/jre
Detected OS: Linux
parsing buildfile
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/build.xml
with URI =
file:/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/build.xml
Project base dir set to:
/home/ulrivo/hypersonicsql/hsqldb_v.1.61
Build sequence for target `jar' is [init, prepare,
classes, jar]
Complete build sequence is [init, prepare, classes,
jar, codeswitcher, switchtojdk12, switchtojdk11, help,
clean, cleanall]
init:
prepare:
classes:
Property ${build.debug} has not been set
Property ${build.optimize} has not been set
[javac] hsqlServlet.java added as
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/classes/hsqlServlet.class
is outdated.
....[ the list of outdated files] ....
[javac] org/hsqldb/util/TriggerSample.java added as
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/classes/org/hsqldb/util/TriggerSample.class
is outdated.
[javac] Compiling 54 source files to
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/classes
[javac] Using modern compiler
[javac] Compilation args: -d
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/classes
-classpath
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/classes:/home/ulrivo/hypersonicsql/hsqldb_v.1.61:/home/ulrivo/hypersonicsql/hsqldb_v.1.61/lib:/usr/local/jakarta-ant-1.4.1/lib/jaxp.jar:/usr/local/jakarta-ant-1.4.1/lib/crimson.jar:/usr/local/jakarta-ant-1.4.1/lib/ant.jar:/usr/lib/java:/usr/lib/java/lib/tools.jar
-sourcepath
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src -g:none
[javac] Files to be compiled:
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/hsqlServlet.java
....[ the list of files to be compile ] ....
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/util/TriggerSample.java
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/Cache.java:382:
warning: as of release 1.4, assert is a keyword, and
may not be used as an identifier
[javac] Trace.assert(!r.bChanged);
[javac] ^
.... [ and a lot of error messages more concerning
Trace] ....
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcConnection.java:76:
org.hsqldb.jdbcConnection should be declared abstract;
it does not define createStatement(int,int) in
org.hsqldb.jdbcConnection
[javac] public class jdbcConnection implements
Connection {
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcResultSet.java:95:
org.hsqldb.jdbcResultSet should be declared abstract;
it does not define getColumnClassName(int) in
org.hsqldb.jdbcResultSet
[javac] public class jdbcResultSet implements
ResultSet, ResultSetMetaData {
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcDatabaseMetaData.java:61:
org.hsqldb.jdbcDatabaseMetaData should be declared
abstract; it does not define supportsResultSetType(int)
in org.hsqldb.jdbcDatabaseMetaData
[javac] public class jdbcDatabaseMetaData
implements DatabaseMetaData {
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcStatement.java:53:
org.hsqldb.jdbcStatement should be declared abstract;
it does not define setFetchDirection(int) in
org.hsqldb.jdbcStatement
[javac] public class jdbcStatement implements
Statement {
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcPreparedStatement.java:115:
org.hsqldb.jdbcPreparedStatement should be declared
abstract; it does not define getBigDecimal(int) in
org.hsqldb.jdbcPreparedStatement
[javac] public class jdbcPreparedStatement extends
jdbcStatement
[javac] ^
[javac] Note: Some input files use or override a
deprecated API.
[javac] Note: Recompile with -deprecation for
details.
[javac] 5 errors
[javac] 37 warnings
BUILD FAILED
Same error messages appear when I did in advance
ant switchtojdk12
Regards,
Ulrich
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/89
HyperSQL Database Engine (HSQLDB) / Bugs / #89 no compile for JDK11
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I tried with hsqldb 1.61 and JDK 1.3
ant switchtojdk11
ant jar
and got the following error messages:
Buildfile: build.xml
init:
prepare:
classes:
[javac] Compiling 54 source files to
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/classes
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcConnection.java:76:
org.hsqldb.jdbcConnection should be declared abstract;
it does not define createStatement(int,int) in
org.hsqldb.jdbcConnection
[javac] public class jdbcConnection implements
Connection {
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcResultSet.java:95:
org.hsqldb.jdbcResultSet should be declared abstract;
it does not define getColumnClassName(int) in
org.hsqldb.jdbcResultSet
[javac] public class jdbcResultSet implements
ResultSet, ResultSetMetaData {
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcDatabaseMetaData.java:61:
org.hsqldb.jdbcDatabaseMetaData should be declared
abstract; it does not define supportsResultSetType(int)
in org.hsqldb.jdbcDatabaseMetaData
[javac] public class jdbcDatabaseMetaData
implements DatabaseMetaData {
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcStatement.java:53:
org.hsqldb.jdbcStatement should be declared abstract;
it does not define setFetchDirection(int) in
org.hsqldb.jdbcStatement
[javac] public class jdbcStatement implements
Statement {
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/hsqldb_v.1.61/src/org/hsqldb/jdbcPreparedStatement.java:115:
org.hsqldb.jdbcPreparedStatement should be declared
abstract; it does not define getBigDecimal(int) in
org.hsqldb.jdbcPreparedStatement
[javac] public class jdbcPreparedStatement extends
jdbcStatement
[javac] ^
[javac] Note: Some input files use or override a
deprecated API.
[javac] Note: Recompile with -deprecation for
details.
[javac] 5 errors
BUILD FAILED
Regards,
Ulrich
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/90
HyperSQL Database Engine (HSQLDB) / Bugs / #90 setProperty() in Log.java
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
just as a reminder:
There is still the quick hack for version 1.61 in the
code of 1.70 at line 182: setProperty() which is not
defined for JDK 1.1
Regards,
Ulrich
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/91
HyperSQL Database Engine (HSQLDB) / Bugs / #91 IF EXISTS in hsqldb 1.70
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Trying to submit
DROP TABLE foo IF EXISTS
leads to
SQL
Error 
Unexpected token: IF in statement [DROP TABLE Bad IF
EXISTS] / Error Code: 0 / State: 37000 
or without a defined table foo to
Table not found: FOO in statement [DROP TABLE foo IF
EXISTS] / Error Code: 0 / State: S0002 
Regards,
Ulrich
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/92
HyperSQL Database Engine (HSQLDB) / Bugs / #92 SUM() + GROUP BY give unwanted NULL rows
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Similar to previously raised bug re: GROUP returning a 
single row of NULL(s) when its corresponding SELECT 
returns nothing.
Although 1.7 RC 2 fixes that bug, the following causes 
the same problem:
CREATE TABLE x ( oid INTEGER );
SELECT oid FROM x GROUP By oid;
OID
---
&lt;nothing&gt;
SELECT SUM(oid) FROM x GROUP By oid;
OID
---
NULL
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/93
HyperSQL Database Engine (HSQLDB) / Bugs / #93 Transfer corrupted / Error Code: -19 / State:40001
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
v1.7 RC1 &amp; RC2 both have the following bug:
Operating in client/server mode on localhost
After executing the select statement
select id, code, name, administrator_yn from dj_users 
order by code
I get an exception:
Transfer corrupted / Error Code: -19 / State: 40001
java.sql.SQLException: Transfer corrupted
at org.hsqldb.Trace.getError(Trace.java:205)
at org.hsqldb.Trace.error(Trace.java:256)
at org.hsqldb.Result.&lt;init&gt;(Result.java:176)
at org.hsqldb.jdbcConnection.executeHSQL
(jdbcConnection.java:1007)
at org.hsqldb.jdbcConnection.execute
(jdbcConnection.java:815)
at org.hsqldb.jdbcStatement.fetchResult
(jdbcStatement.java:741)
at org.hsqldb.jdbcStatement.executeQuery
(jdbcStatement.java:125)
at 
org.hsqldb.jdbcPreparedStatement.executeQuery
(jdbcPreparedStatement.java:196)
If I leave out the order by it works OK.
The table was created with the following script:
CREATE CACHED TABLE dj_users (
id decimal(15, 0) NOT NULL ,
code varchar (30) NOT NULL ,
name varchar (50) NOT NULL ,
administrator_yn varchar (1) NOT NULL
,CONSTRAINT PK_dj_users PRIMARY KEY
(
id
)
);
-----
You can reproduce the error by executing the table 
create, and then
insert into dj_users (id, code, name, administrator_yn)
values (1, 'sa', 'admin', 'Y');
followed by
select * from dj_users order by code
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/94
HyperSQL Database Engine (HSQLDB) / Bugs / #94 delete problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i tried to use HSQLDB 1.7.0..
there was a delete problem.
when i restart the HSQLDB Server after i delete rows,
all the rows which have the same data were deleted.
for example,
there were rows like below:
no name
1 car
2 plain
2 plain 
i deleted the second row only.
i looked i did work fine.
but when i reatsrted the server ,
the rows were changed like below:
no name
1 car
two rows were deleted which have the same data.
colud you please consider of this problem...?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/95
HyperSQL Database Engine (HSQLDB) / Bugs / #95 V1.70RC3: build error with jdk 1.1.8 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I downloaded v1.70RC3 and found the new build.xml great
(thanx to Fred).
The build runs without any problems with 
java version &quot;1.3.0&quot;
Java(TM) 2 Runtime Environment, Standard Edition (build
1.3.0)
Classic VM (build 1.3.0, J2RE 1.3.0 IBM build
cx130-20000623 (JIT enabled: jitc))
and without problems with
java version &quot;1.4.0&quot;
Java(TM) 2 Runtime Environment, Standard Edition (build
1.4.0-b92)
Java HotSpot(TM) Client VM (build 1.4.0-b92, mixed
mode)
But, I got an error when building for/with JDK 1.1.8
under Linux:
-------------------------------------------------------------
ulrivo@ulrivo:~/hypersonicsql/v170rc3/build&gt; ant
-verbose jar
Ant version 1.4.1 compiled on October 11 2001
Buildfile: build.xml
Detected Java version: 1.1 in: /usr/lib/java
Detected OS: Linux
parsing buildfile
/home/ulrivo/hypersonicsql/v170rc3/build/build.xml with
URI =
file:/home/ulrivo/hypersonicsql/v170rc3/build/build.xml
Project base dir set to:
/home/ulrivo/hypersonicsql/v170rc3
Build sequence for target `jar' is [init, javaversion,
prepare, util, codeswitcher, switchtojdk11,
switchtojdk12, switchtojdk14, classes12, classes14,
classes, jar]
Complete build sequence is [init, javaversion, prepare,
util, codeswitcher, switchtojdk11, switchtojdk12,
switchtojdk14, classes12, classes14, classes, jar,
preparedoc, javadoc, test, jartest, clean, cleanall,
help, jarmain]
init:
javaversion:
[available] Unable to load class java.util.Set to set
property ant.java.iscjava12
[available] Unable to load class java.nio.Buffer to set
property ant.java.iscjava14
prepare:
[mkdir] Created dir:
/home/ulrivo/hypersonicsql/v170rc3/classes
util:
Property ${build.debug} has not been set
Property ${build.optimize} has not been set
[javac] CodeSwitcher.java added as
/home/ulrivo/hypersonicsql/v170rc3/classes/CodeSwitcher.class
doesn't exist.
[javac] ConnectionDialog.java added as
/home/ulrivo/hypersonicsql/v170rc3/classes/ConnectionDialog.class
doesn't exist.
[javac] DatabaseManager.java added as
/home/ulrivo/hypersonicsql/v170rc3/classes/DatabaseManager.class
doesn't exist.
[javac] Grid.java added as
/home/ulrivo/hypersonicsql/v170rc3/classes/Grid.class
doesn't exist.
[javac] jdbcSystem.java added as
/home/ulrivo/hypersonicsql/v170rc3/classes/jdbcSystem.class
doesn't exist.
[javac] QueryTool.java added as
/home/ulrivo/hypersonicsql/v170rc3/classes/QueryTool.class
doesn't exist.
[javac] ScriptTool.java added as
/home/ulrivo/hypersonicsql/v170rc3/classes/ScriptTool.class
doesn't exist.
[javac] Transfer.java added as
/home/ulrivo/hypersonicsql/v170rc3/classes/Transfer.class
doesn't exist.
[javac] Tree.java added as
/home/ulrivo/hypersonicsql/v170rc3/classes/Tree.class
doesn't exist.
[javac] Compiling 9 source files to
/home/ulrivo/hypersonicsql/v170rc3/classes
[javac] Using classic compiler
[javac] Compilation args: -d
/home/ulrivo/hypersonicsql/v170rc3/classes -classpath
/home/ulrivo/hypersonicsql/v170rc3/classes:/usr/local/jakarta-ant-1.4.1/lib/jaxp.jar:/usr/local/jakarta-ant-1.4.1/lib/crimson.jar:/usr/local/jakarta-ant-1.4.1/lib/ant.jar:/home/ulrivo/hypersonicsql/v170rc3:/usr/lib/java:/usr/lib/java/lib/classes.zip:/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util
[javac] Files to be compiled:
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/CodeSwitcher.java
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/ConnectionDialog.java
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/DatabaseManager.java
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Grid.java
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/jdbcSystem.java
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/QueryTool.java
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/ScriptTool.java
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Tree.java
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/jdbcSystem.java:88:
Method setLogWriter(java.io.PrintWriter) not found in
class java.sql.DriverManager.
[javac] 
DriverManager.setLogWriter(newPrintWriter);
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:307:
No variable ARRAY defined in class java.sql.Types.
[javac] JDBCtypes.put(new
Integer(Types.ARRAY), &quot;ARRAY&quot;);
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:308:
No variable BLOB defined in class java.sql.Types.
[javac] JDBCtypes.put(new
Integer(Types.BLOB), &quot;BLOB&quot;);
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:309:
No variable CLOB defined in class java.sql.Types.
[javac] JDBCtypes.put(new
Integer(Types.CLOB), &quot;CLOB&quot;);
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:310:
No variable DISTINCT defined in class java.sql.Types.
[javac] JDBCtypes.put(new
Integer(Types.DISTINCT), &quot;DISTINCT&quot;);
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:311:
No variable JAVA_OBJECT defined in class
java.sql.Types.
[javac] JDBCtypes.put(new
Integer(Types.JAVA_OBJECT), &quot;JAVA_OBJECT&quot;);
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:312:
No variable REF defined in class java.sql.Types.
[javac] JDBCtypes.put(new
Integer(Types.REF), &quot;REF&quot;);
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:313:
No variable STRUCT defined in class java.sql.Types.
[javac] JDBCtypes.put(new
Integer(Types.STRUCT), &quot;STRUCT&quot;);
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:1653:
No variable BLOB defined in class java.sql.Types.
[javac] if (t == Types.BLOB) {
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:1654:
Class org.hsqldb.util.Blob not found in type
declaration.
[javac] Blob b = r.getBlob(i + 1);
[javac] ^
[javac]
/home/ulrivo/hypersonicsql/v170rc3/src/org/hsqldb/util/Transfer.java:1654:
Method getBlob(int) not found in interface
java.sql.ResultSet.
[javac] Blob b = r.getBlob(i + 1);
[javac] ^
[javac] Note: 3 files use deprecated APIs. 
Recompile with &quot;-deprecation&quot; for details.
[javac] 11 errors, 1 warning
BUILD FAILED
--------------------------------
Regards,
Ulrich
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/96
HyperSQL Database Engine (HSQLDB) / Bugs / #96 GROUP BY with ORDER BY
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
after inserting the test data in DatabaseManager, I
submitted the
following query:
select productid, name, sum(quantity)
from position, product
where productid = id
group by productid
order by name
But, the result set is NOT ordered by name.
Regards,
Ulrich
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/97
HyperSQL Database Engine (HSQLDB) / Bugs / #97 Int &amp; Double problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version: hsqldb_v.1.61.
Here is script
CREATE TABLE sometable ( int_col INTEGER, doub_col 
DOUBLE );
INSERT INTO sometable ( int_col, doub_col ) VALUES ( 
2, 4.0 );
UPDATE sometable SET doub_col=int_col/2.0 WHERE 
int_col=2;
which cause a problem:
java.lang.NumberFormatException: 2.0
at java/lang/Integer.parseInt
at java/lang/Integer.&lt;init&gt;
at org/hsqldb/Column.convertString
at org/hsqldb/Expression.getValue
at org/hsqldb/Expression.getValue
at org/hsqldb/Expression.getValue
at org/hsqldb/Parser.processUpdate
at org/hsqldb/Database.execute
at org/hsqldb/jdbcConnection.execute
at org/hsqldb/jdbcStatement.fetchResult
at org/hsqldb/jdbcStatement.execute
at org/hsqldb/util/DatabaseManager.execute
at 
org/hsqldb/util/DatabaseManager.actionPerformed
at java/awt/Button.processActionEvent
at java/awt/Button.processEvent
at java/awt/Component.dispatchEventImpl
at java/awt/Component.dispatchEvent
at java/awt/EventDispatchThread.run
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/98
HyperSQL Database Engine (HSQLDB) / Bugs / #98 ASC / DESC  with DISTINCT does not work.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The ASC / DESC functions when used with DISTINCT have 
no effect. 
To reproduce..
SELECT DISTINCT x FROM y ORDER BY z ASC;
or
SELECT DISTINCT x FROM y ORDER BY z DESC;
This bug seems to have been present for quite some 
time, and hopefully will be fixed with 1.7.0.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/99
HyperSQL Database Engine (HSQLDB) / Bugs / #99 server.properties file not accessed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
server.properties file is not loaded.
I downloaded 1.7 release candidate to work on long var 
strings. Database would not read our current script 
file because the server.properties file was being 
ignored.
Recommend modifying Server.java to load properties 
from server.properties.
1. change &quot;server.properties&quot; to &quot;server&quot;
2. add serverProperties.load();
Code fragments:
//Current Server.java:
void setProperties(HsqlProperties props) {
serverProperties = new HsqlServerProperties
(&quot;server.properties&quot;);
serverProperties.addProperties(props);
//Suggested Server.java
void setProperties(HsqlProperties props) {
serverProperties = new HsqlServerProperties
(&quot;server&quot;);
try{
serverProperties.load();
}catch(Throwable theError){
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/100
HyperSQL Database Engine (HSQLDB) / Bugs / #100 Win2000 - Multi-byte char. issue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
HSQL latest stable version is garbling the multi-byte 
characters in the following scenario.
Platform:
Win2000 Japanese Edition
1. Start HSQL server by using runHSQLDB.bat.
2. Start Database manager by using &quot;run 
DatabaseManager&quot;.
+ HSQL :Standalone DB or WebServer DB
+ URL : jdbc:hsqldb:http://localhost:9001
3. Insert a data with Japanese character into any 
sample table,say, EMPLOYEE.
4. Check the table data by using &quot;SELECT * FROM 
EMPLOYEE&quot;. The data has no problem till now.
5. Stop the Server and Database manager.
6. Re-start the Server and Database manager (Same 
as 1 and 2).
7. Check the table of EMPLOYEE.
The first multi-byte character has changed to 
unicode as &quot;\uxxxx&quot; format. 
This is reproducible always and is happening 
continuosly. Please contact me at 
sanjayag@india.hp.com for more details.
Thanks
Sanjay
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/101
HyperSQL Database Engine (HSQLDB) / Bugs / #101 jdbcConnection.getAutoCommit broken
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
jdbcConnection.getAutoCommit fails to take into 
account SET AUTOCOMMIT statments, reflecting only the 
last value passed to jdbcConnection.setAutoCommit.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/102
HyperSQL Database Engine (HSQLDB) / Bugs / #102 Wrong update decomposition in script
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I recently installed the hsqldb 1.7.0RC3. After some 
time of testing/using it I found the following bug (?):
In some cases (couldn't find out under which 
circumstances exactly) when hsqldb writes the UPDATE 
command into the script file and decomposes it into 
DELETE, INSERT sequence, it distorts the WHERE clause. 
This happens in the following way: it compares the 
correct column, but with incorrect value, ie. with 
value of the first updated column (or the first column 
in the table definition?). As the value is of 
different type, the next time hsqldb is started, it
throws the &quot;java.sql.SQLException: Unexpected token: 
37000 Unexpected token: 08&quot; exception.
Here is some example:
This command is called upon hsqldb server (hsqldb 
console printout):
3:UPDATE custom_kniekniha SET evidence = '966', autor 
= 'Osif Michal', nazev =
'Windows 95', keywords = 'Windows 95', dat_vydani 
= '1955', dat_porizeni = '
1996', cena = '161,90', poznamka = 'pokus', p_read 
= 'transoft', p_modify = 'k
nihovna', g_muser='ts.martin', g_mdatetime = '2002-04-
09 09:36:14.6', g_deleted
= 0 WHERE id=16
And these are corresponding rows from the script file:
/*C4*/DELETE FROM CUSTOM_KNIEKNIHA WHERE ID=2002-03-26 
08:20:41.0
INSERT INTO CUSTOM_KNIEKNIHA VALUES('2002-04-09 
09:36:14.6',16,'1996','knihovna','transoft','966','Wind
ows 95','Windows 95','161,90','Osif 
Michal','1955',0,'ts.martin','pokus')
Martin Stepanek
(abrasax@wo.cz)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/103
HyperSQL Database Engine (HSQLDB) / Bugs / #103 Connection reset by peer
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In client/server mode of RC4:
When my client closes the connection (and then 
terminates) I get the following exception on the 
server side console:
java.net.SocketException: Connection reset by peer: 
JVM_recv in socket input stream read
at java.net.SocketInputStream.socketRead
(Native Method)
at java.net.SocketInputStream.read
(SocketInputStream.java:86)
at java.io.BufferedInputStream.fill
(BufferedInputStream.java:186)
at java.io.BufferedInputStream.read
(BufferedInputStream.java:204)
at java.io.DataInputStream.readInt
(DataInputStream.java:338)
at org.hsqldb.ServerConnection.run
(ServerConnection.java:163)
at java.lang.Thread.run(Thread.java:484)
This is new in RC4, the previous RC's did not have 
this trace.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/104
HyperSQL Database Engine (HSQLDB) / Bugs / #104 bug in reading LONGVARCHAR
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
JavaDocs in jdbcResultSet.getAsciiStream says:
&quot;This method is particularly suitable for retrieving 
large LONGVARCHAR values.&quot;
getAsciiStream makes internal call to getUnicodeStream
and here is the definition of that method:
public InputStream getUnicodeStream(int column) 
throws SQLException {
return new ByteArrayInputStream(getBytes
(column));
}
Now the source of getBytes method:
public byte[] getBytes(int column) throws 
SQLException {
Object o = getColumnInType(--column, 
Types.BINARY);
return o == null ? null
: ((ByteArray) o).byteValue();
}
Did you saw the problem?
When I try to invoke getAsciiStream it will throw 
SQLException because I'll try to field, defined as 
LONGVARCHAR but I'm actually reading it as BINARY.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/105
HyperSQL Database Engine (HSQLDB) / Bugs / #105 SELECT -- an invisible value?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I've encountered a strange behavior of hsqldb, first 
in the RC3, but I didn't pay attention to it then. Now 
with the hsqldb 1.7.0RC4a, I have to face it again and 
I believe, it's a bug.
I have a table Hierarchy with a column named Path. One 
of the rows in this table has Path='/intranet'. When I 
execute the following query:
SELECT * FROM Hierarchy WHERE Path='/intranet'
I get an empty result set.
However, when I use the LIKE clause:
SELECT * FROM Hierarchy WHERE Path LIKE '/intranet%'
I get really all the paths beginning with '/intranet', 
including the '/intranet' one.
It seems like the string '/intranet' would have added 
some invisible character(s) in the end, but this can't 
be the case, bacause of the result of the following 
query:
SELECT LENGTH(Path) FROM Hierarchy WHERE Path 
LIKE '/intranet%'
which is 9 for '/intranet'.
Please, consider the possible sources of this. I can 
send the database on demand (I don't wanna to send it 
here to public).
Thanks
Martin Stepanek
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/106
HyperSQL Database Engine (HSQLDB) / Bugs / #106 Subselect error with same column names
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This was sent to me by David Moles and applies to 1.61 
and to all RC releases of 1.7.0 up to RC4. (has not 
yet been fixed):
I discovered another interesting quirk. Say I have the
following two tables:
create table trees
(
id integer primary key,
name varchar not null
);
create table fruits
(
id integer primary key,
name varchar not null,
tree_id integer not null,
foreign key (tree_id) references trees(id)
);
And say further that I have the following records:
insert into trees (id, name) values (1, 'apple');
insert into fruits (id, name, tree_id) values 
(1, 'pippin', 1);
insert into fruits (id, name, tree_id) values 
(2, 'granny smith, 1);
If I do the following query:
select id from fruits where tree_id in
(select id from trees where name = 'apple');
I get no records. But if I change it to:
select id from fruits where tree_id in
(select id from trees where trees.name = 'apple');
It works, and I get 2 records, same as if I just id
select id from fruits where tree_id = 1;
or even
select id from fruits where tree_id in (1);
Apparently, the problem is some kind of collision 
between fruits.name and trees.name.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/107
HyperSQL Database Engine (HSQLDB) / Bugs / #107 Duplicate index names rejected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have just downloaded hsqldb version 1.7rc4a. 
I notice that I may not create indexes with duplicate 
names. This behaviour is different to the previous 
version of hsqldb that I was using (1.6) where I could 
do just that. I am attempting to do this through the 
database manager application supplied.
So, the following will work in 1.6, but not in 1.7rc4a:
create table foo (col1 int)
create table bar (cola varchar)
create index ix1 on foo (col1)
create index ix1 on bar (cola)
The error message is:
Index already exists: S0011 Index already exists: IX1 
in statement [create index ix1 on bar(cola)]/Error 
Code: -23/State: S0011
Chris Cockrell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/108
HyperSQL Database Engine (HSQLDB) / Bugs / #108 Trouble with Jakarta Avalon Apps 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I've tried to simply upgrade the jakarta avalon apps
from the 1.6 to the last release (1.7RC5pre2) and I'm
getting some troubles with the
HsqlSocketRequestHandler.handleConnection(socket);
It seems that the SocketHandler doesnt handle the
connection...
Here is a short synospis of the code:
m_DatabaseName =
&quot;C:\JabberServer\apps\avalon-hsql\JabberDB&quot;;
m_HsqlSocketRequestHandler =
HsqlServerFactory.createHsqlServer(m_DatabaseName,
true, false);
// I get the usual &quot;server.properties not found, using
command line or default properties&quot; ...
/// ... (avalon stuff here, to get a socket listener) ...
m_HypersonicSocketRequestHandler.handleConnection(socket);
When I use a client with server jdbc connection, the
connection process get thru the 'handleConnection' but
I get a &quot;Connection is broken&quot; in the demo/runManager.
Also when I use the demo/runServer with the runManager
its works.
Regards
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/109
HyperSQL Database Engine (HSQLDB) / Bugs / #109 Server mode &amp;  Access denied
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Good evening from France,
My web app opens a connection to an existing Hsqldb 
database (server mode, hsql protocol).
But when a query is executed, I get the 
SQLException &quot;Access denied&quot;. I don't understand why 
because I've kept &quot;sa&quot; as username and &quot;&quot; as password
bertrand
(rougierb@users)
NB : another class creates and fills the Hsql DB from 
Oracle but its execution is terminated before (and 
without error!)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/110
HyperSQL Database Engine (HSQLDB) / Bugs / #110 &quot;SELECT x.y AS z&quot; DOESNT WORK
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Is there any reason why statements such as the 
following dont work properly?
SELECT CUSTOMER.NAME AS CNAME FROM CUSTOMER
The alias is completely ignored and the result is an 
error stating 'column CNAME not found'.
I cant find anything anywhere regarding this but i 
apolagise if i have missed something.
Regards,
Mark Raynes
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/111
HyperSQL Database Engine (HSQLDB) / Bugs / #111 select count(distinct field) .... 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following request doesn't work :
select count(distinct O.ID) as COUNT from (...)
What I get :
Unexpected token: 37000 Unexpected token: DISTINCT in 
statement [select count(distinct O.ID) as COUNT from 
(...)
bertrand
(rougierb@users.sourceforge.net)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/112
HyperSQL Database Engine (HSQLDB) / Bugs / #112 Join-syntax documentation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using 1.7rc4a.
1/ The syntax documentation reads that the pattern of 
a tablelist in a SELECT statement is tableList: 
table [ { INNER | LEFT [OUTER] } JOIN table ON 
Expression ] [, ...] 
I may be reading it wrong, but that seems to imply 
that the 'OUTER' is optional in 'LEFT OUTER JOIN', but 
that is not accepted when I try it. I find that
'INNER JOIN' and 'LEFT OUTER JOIN' only are accepted.
Also, the error message reads:
Unexpected token: 37000 Unexpected token: corrent 
syntax is: OUTER JOIN table ON....
but using OUTER on its own is also rejected, so that 
is a little misleading.
2/ I also got the impression (from the source) that 
brackets could be used around the expression , so that 
either
... LEFT OUTER JOIN table on ( col_a = col_b) OR
... LEFT OUTER JOIN table on col_a = col_b 
could were acceptable. In fact only the second 
(without brackets) is accepted.
3/ This is just a question - am I correct in thinking 
that hsqldb intentionally only supports expressions of 
the type 'col_a = col_b' when specifying the join 
expression? When I try 'col_a &gt; col_b', for instance, 
that is rejected. Also, it seems that only ONE join 
expression of the form: 'col_a = col_b' can be made, 
and that 'col_a = col_b AND col_c = col_d' is not 
allowed. Is that intentional?
Thanks for your help
Chris Cockrell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/113
HyperSQL Database Engine (HSQLDB) / Bugs / #113 compile errors for jdk1.1.8 with v170rc5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
when compiling v170rc5pre2, I got an error concerning
SwingCommon.java which should not be compiled for jdk
1.1.8
So, I changed line 118 from
&lt;exclude name=&quot;*Swing.java&quot;/&gt;
to
&lt;exclude name=&quot;*Swing*.java&quot;/&gt;
to exclude SwingCommon.java from being compiled.
But I got some more errors later, see the messages
below.
Regards,
Ulrich
cd /home/ulrivo/hypersonicsql/hsqldb170rc5pre2/build/
ant
-Dbuffer=/home/ulrivo/hypersonicsql/hsqldb170rc5pre2/build/build.xml
-emacs jar -find
/home/ulrivo/hypersonicsql/hsqldb170rc5pre2/build/build.xml 
Searching for
/home/ulrivo/hypersonicsql/hsqldb170rc5pre2/build/build.xml
...
Buildfile:
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/build/build.xml
init:
javaversion:
prepare:
codeswitcher:
switchtojdk11:
..........
switchtojdk12:
switchtojdk14:
util:
Compiling 22 source files to
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/classes
Note: 3 files use deprecated APIs. Recompile with
&quot;-deprecation&quot; for details.
1 warning
classes12:
classes14:
classes:
Compiling 8 source files to
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/classes
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/src/org/hsqldb/jdbcConnection.java:1702:
class org.hsqldb.Map is defined in jdbcSystem.java.
Because it is used outside of its source file, it
should be defined in a file called &quot;Map.java&quot;.
public Map getTypeMap() throws SQLException {
^
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/src/org/hsqldb/jdbcResultSet.java:4432:
Class java.util.Map not found in type declaration.
public Object getObject(int i, java.util.Map map)
throws SQLException {
^
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/src/org/hsqldb/jdbcResultSet.java:4468:
class org.hsqldb.Ref is defined in jdbcSystem.java.
Because it is used outside of its source file, it
should be defined in a file called &quot;Ref.java&quot;.
public Ref getRef(int i) throws SQLException {
^
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/src/org/hsqldb/jdbcResultSet.java:4501:
class org.hsqldb.Blob is defined in jdbcSystem.java.
Because it is used outside of its source file, it
should be defined in a file called &quot;Blob.java&quot;.
public Blob getBlob(int i) throws SQLException {
^
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/src/org/hsqldb/jdbcResultSet.java:4534:
class org.hsqldb.Clob is defined in jdbcSystem.java.
Because it is used outside of its source file, it
should be defined in a file called &quot;Clob.java&quot;.
public Clob getClob(int i) throws SQLException {
^
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/src/org/hsqldb/jdbcResultSet.java:4567:
class org.hsqldb.Array is defined in jdbcSystem.java.
Because it is used outside of its source file, it
should be defined in a file called &quot;Array.java&quot;.
public Array getArray(int i) throws SQLException {
^
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/src/org/hsqldb/jdbcResultSet.java:4613:
Class java.util.Map not found in java.lang.Object
getObject(java.lang.String, org.hsqldb.Map).
return getObject(findColumn(colName), map);
^
2 errors, 5 warnings
BUILD FAILED
//home/ulrivo/hypersonicsql/hsqldb170rc5pre2/build/build.xml:153:
Compile failed, messages should have been provided.
Total time: 16 seconds
Compilation exited abnormally with code 1 at Fri May 10
20:39:58
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/114
HyperSQL Database Engine (HSQLDB) / Bugs / #114 DELETE fails ArrayIndexOutOfBoundsEx
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hsqldb 1.7.0 RC5
CLIENT (Servlet) STACK TRACE:
java.sql.SQLException: General error: S1000 General 
error java.lang.ArrayIndexOutOfBoundsException in 
statement [DELETE FROM ADDRESSBOOK_CATEGORY WHERE 
USER_ID = 0 AND CATEGORY_ID = 1 ]
at org.hsqldb.Trace.getError(Trace.java:220)
at org.hsqldb.Result.(Result.java:154)
at org.hsqldb.jdbcConnection.executeHSQL
(jdbcConnection.java:2809)
at org.hsqldb.jdbcConnection.execute
(jdbcConnection.java:2524)
at org.hsqldb.jdbcStatement.fetchResult
(jdbcStatement.java:1795)
at org.hsqldb.jdbcStatement.executeUpdate
(jdbcStatement.java:227)
at 
org.hsqldb.jdbcPreparedStatement.executeUpdate
(jdbcPreparedStatement.java:419)
(a record with the specified key exists)
SERVER STACK TRACE:
java.lang.ArrayIndexOutOfBoundsException
at org.hsqldb.Index.comparePartialRowNonUnique
(Index.java:940)
at org.hsqldb.Index.findSimple(Index.java:572)
at org.hsqldb.Constraint.findFkRef
(Constraint.java:434)
at org.hsqldb.Table.checkCascadeDelete
(Table.java:1430)
at org.hsqldb.Table.delete(Table.java:1489)
at org.hsqldb.Parser.processDelete
(Parser.java:470)
at org.hsqldb.Database.execute
(Database.java:438)
at org.hsqldb.ServerConnection.run
(ServerConnection.java:211)
at java.lang.Thread.run(Thread.java:536)
Table defs:
CREATE TABLE USER (
USER_ID INTEGER NOT NULL,
LOGIN_ID VARCHAR(128) NOT NULL,
USER_NAME VARCHAR(254) DEFAULT ' ' NOT NULL,
// some fields omitted...
CREATE_DATE TIMESTAMP 
DEFAULT 'CURRENT_TIMESTAMP' NOT NULL,
UPDATE_DATE TIMESTAMP 
DEFAULT 'CURRENT_TIMESTAMP' NOT NULL,
LAST_ACCESS_DATE TIMESTAMP,
CONSTRAINT ixuq_LOGIN_ID0 UNIQUE (LOGIN_ID),
PRIMARY KEY (USER_ID)
);
CREATE TABLE ADDRESSBOOK_CATEGORY (
USER_ID INTEGER NOT NULL,
CATEGORY_ID INTEGER DEFAULT '0' NOT NULL,
CATEGORY_NAME VARCHAR(60) DEFAULT '' NOT NULL,
PRIMARY KEY (USER_ID, CATEGORY_ID),
CONSTRAINT fk_ADRBKCAT1 FOREIGN KEY (USER_ID)
REFERENCES USER (USER_ID) ON DELETE CASCADE
);
CREATE TABLE ADDRESSBOOK (
USER_ID INTEGER NOT NULL,
ADDRESSBOOK_ID INTEGER NOT NULL,
CATEGORY_ID INTEGER DEFAULT '0' NOT NULL,
FIRST VARCHAR(64) DEFAULT '' NOT NULL,
LAST VARCHAR(64) DEFAULT '' NOT NULL,
// some fields omitted
NOTE VARCHAR(128) DEFAULT '' NOT NULL,
PRIMARY KEY (USER_ID, ADDRESSBOOK_ID),
CONSTRAINT fk_ADRBOOK1 FOREIGN KEY (USER_ID, 
CATEGORY_ID)
REFERENCES ADDRESSBOOK_CATEGORY 
(USER_ID, CATEGORY_ID) ON DELETE CASCADE
);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/115
HyperSQL Database Engine (HSQLDB) / Bugs / #115 ALTER TABLE ADD COLUMN modifies indexes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The ALTER TABLE ADD COLUMN command seems to be 
modifying the definition of existing indexes on the 
table.
For example, create a table and an index:
CREATE CACHED TABLE TEST (PK BIGINT NOT NULL PRIMARY 
KEY, F1 INTEGER)
CREATE INDEX TESTF1 ON TEST(F1)
Then, add a column:
ALTER TABLE TEST ADD COLUMN F2 TIMESTAMP
Now, the definition of the index includes both 
columns F1 and PK.
If another column is added, PK is added to the index 
again:
ALTER TABLE TEST ADD COLUMN F3 VARCHAR(255)
Now, the index definition is TEST(F1, PK, PK). This 
results in an invalid index definition and the 
database cannot be opened.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/116
HyperSQL Database Engine (HSQLDB) / Bugs / #116 Swing - DatabaseManager &amp; Transfer Tool
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I could not get either the DataBaseManagerSwing or 
TransferSwing to work from the 1.70RC5 distribution 
jar file. I traced it down to the loading of the icon 
image in both classes. After commenting out the 
getIcon method call and rebuilding the jar, they both 
worked. The gif image in the distribution is also no 
good. I couldn't load it into any graphics program.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/117
HyperSQL Database Engine (HSQLDB) / Bugs / #117 Text Tables - 1.70 RC5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I've spent several hours debugging text table support 
in the 1.70 RC5 distribution. I was trying to create 
a temporary text table with the following statements:
create temp text table ImportTemp (f1 varchar, f2, 
varchar, f3 varchar)
set table ImportTemp source &quot;c:/temp/app/import.csv&quot;
When the set table statement was executed, it returned 
the following SLQException:
java.sql.SQLException: Table not found: S0002 Table 
not found in statement [set table ImportTemp 
source &quot;C:/temp/app/import.csv&quot;]
By removing &quot;temp&quot; from the create staement, all 
worked well.
I also noticed that after dropping the table and doing 
a shutdown compact, the &quot;csv&quot; file was deleted from 
it's directory. I'm not sure what the rationale for 
this behavior might be. If this is the planned 
default behavior, I would like to see a database 
property where it could be turned off, much like the 
property for setting the absolute path to the text 
files (i.e. not in the same folder as the database).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/118
HyperSQL Database Engine (HSQLDB) / Bugs / #118 Error in creating text table with PK
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
With hsqldb-rc5, I tried the following statement
(trying the text table functionality)
CREATE TEXT TABLE B (id integer not null primary key, 
name varchar)
And this gave the following error :
Attempt to define a second primary key: S0011 Attempt 
to define a second primary key in statement [CREATE 
TEXT TABLE B (id integer not null primary key, name 
varchar)] / Error Code: -24 / State: S0011 
When I omit the 'TEXT' keyword it works fine.
Alexander
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/119
HyperSQL Database Engine (HSQLDB) / Bugs / #119 ByteArray needs to be Serializable
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Example:
stmt.executeUpdate(
&quot;CREATE MEMORY TABLE y (a VARCHAR, b OBJECT)&quot;);
PreparedStatement ps = conn.prepareStatement(
&quot;INSERT INTO y VALUES (?, ?)&quot;);
ps.setString(1,&quot;key1&quot;);
ps.setObject(2, new Integer(1), Types.OTHER);
ps.executeUpdate();
This fails because ByteArray does not implement 
java.io.Serializable. Making ByteArray implement 
Serializable does seem to solve the problem, at least 
for the example above.
Otherwise a *nifty* tool.
Thank you.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/120
HyperSQL Database Engine (HSQLDB) / Bugs / #120 backslash not escaped in script file
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Try this: Write this string to any table with varchar
&quot;\á&quot;
Note the backslash and the icelandic á character
(ascii E1)
This is what gets written in the script file:
'\\u00e1'
Stop the program and restart it
The script file now contains:
'\\u005cu00e1'
And everytime you start the program another u005c 
gets appended.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/121
HyperSQL Database Engine (HSQLDB) / Bugs / #121 functions, operators fail in create view
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
You probably know, but ...
your new implementation of views (RC5C) does
not support caluclated column values.
That is (assuming persons) ...
create view xxx as select pid, pid + 10 from persons
results in error:
SQL Error 
---------
Table not found: S0002 Table not found: in statement 
[create view xxx as select pid, pid + 10 from 
persons] / Error Code: -22 / State: S0002 
1 row(s) in 10 ms
This seems to be a parsing error where there is 
anything present in the select clause except columns
from the referenced tables.
Is what you plan for the 1st view implementation?
Thanks,
Joe
------------------------------------
CREATE TABLE PERSONS(PID INTEGER PRIMARY KEY,MOTHER 
INTEGER,FATHER INTEGER,LNAME VARCHAR,FNAME 
VARCHAR,MNAME VARCHAR,ONAME VARCHAR,OCHAR 
VARCHAR,ANAME VARCHAR,SEX CHAR,BORN TIMESTAMP,DIED 
TIMESTAMP,NICKNAME VARCHAR,MOBIL VARCHAR,EMAIL 
VARCHAR,OID INTEGER)
INSERT INTO PERSONS VALUES
(34,41,42,'Haggerty','Thomas','Eugene',NULL,NULL,'Hagge
rty','M','1875-01-01 
00:00:00.0',NULL,NULL,NULL,NULL,71)
INSERT INTO PERSONS VALUES
(35,41,42,'Haggerty','Edward','Charles',NULL,NULL,'Hagg
erty','M','1872-01-01 
00:00:00.0',NULL,NULL,NULL,NULL,71)
INSERT INTO PERSONS VALUES
(38,41,42,'Haggerty','Francis','Joseph',NULL,NULL,'Hagg
erty','M','1870-01-01 
00:00:00.0',NULL,NULL,NULL,NULL,71)
INSERT INTO PERSONS VALUES
(39,41,42,'Haggerty','William','R.',NULL,NULL,'Haggerty
','M','1868-01-01 00:00:00.0',NULL,NULL,NULL,NULL,71)
INSERT INTO PERSONS VALUES
(40,41,42,'Hassett','Katherine',NULL,NULL,NULL,'Haggert
y','F','1854-01-01 00:00:00.0',NULL,NULL,NULL,NULL,71)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/122
HyperSQL Database Engine (HSQLDB) / Bugs / #122 LEFT OUTER JOIN
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Following is a bug report for a bug that happens on 
hsqldb 1.7.0 RC5c but no problem on hsql1.6.1
I have two tables defined as folows:
create CACHED table prod (
id int not null,
name varchar(200) not null,
price numeric(18,2) not null,
group_id int not null
);
create unique index prod_pk on prod ( id );
create CACHED table prod_detail (
id int not null,
prod_id int not null,
name varchar(200) not null
);
create unique index prod_detail_pk on prod_detail ( 
id );
For hsqldb version 1_7_0_RC5c 
When I did a qury as
SELECT 
prod.id,prod.name,prod.price,prod.group_id,prod_detail.
id FROM prod LEFT OUTER JOIN prod_detail ON
(prod.id=prod_detail.prod_id) WHERE prod.id = 4
I got an error message as
java.sql.SQLException: Unexpected token: 37000 
Unexpected token: correct syntax is: OUTER JOIN table 
ON table.col=tab2.col in statement [SELECT 
prod.id,prod.name,prod.price,prod.group_id,prod_detail.
id FROM prod LEFT OUTER JOIN prod_detail ON
(prod.id=prod_detail.prod_id) WHERE prod.id = 4]
It works fine for hsqldb version 1.6.1
This query is automatically generated by Castor (A 
Object to Relation DB mapping tool) in its 
examples/jdo/Test.java.
Anyway You have done a greate job on the hsqldb 
project. Thanks a lot.
hl
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/123
HyperSQL Database Engine (HSQLDB) / Bugs / #123 org.hsqldb.DatabaseInformation.getSystem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm working on migrating my MS access database to 
hsql with JBuilder 5 but when I get this error
when I try to run the code hsql-1.7.0.rc5:
$ java.lang.NullPointerException
at 
org.hsqldb.DatabaseInformation.getSystemTable
(DatabaseInformation.jav
a:516)
at org.hsqldb.Database.getTable
(Database.java:629)
at org.hsqldb.Parser.parseTableFilter
(Parser.java:1141)
at org.hsqldb.Parser.parseSelect
(Parser.java:872)
at org.hsqldb.Parser.processSelect
(Parser.java:132)
at org.hsqldb.Database.execute
(Database.java:426)
at org.hsqldb.ServerConnection.run
(ServerConnection.java:211)
at java.lang.Thread.run(Thread.java:536)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/124
HyperSQL Database Engine (HSQLDB) / Bugs / #124 Total Loss of Data
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There appears to be a spontaneous re-intitialization of 
the .script file Still occuring :(
I'm getting a 
*** java.sql.SQLException: User not found: ***
exception on an increasingly regular basis.
When I check the .script file, the data itself is gone, 
leaving the CREAT ALIAS stuff.
I haven't been able to force this error to occur; either 
locally or on mycgiserver.
Anybody else had this problem again lately?
Any comments most welcome
Cheers - Stan
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/125
HyperSQL Database Engine (HSQLDB) / Bugs / #125 SELECT LIMIT 0 10 * INTO ....
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When you do a statement like &quot;SELECT LIMIT 0 10 * 
INTO newtable FROM oldtable where blah blah&quot; it 
ignores the limit clause and adds all records that meet 
the blah blah caluse instead of limiting them like it 
should.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/126
HyperSQL Database Engine (HSQLDB) / Bugs / #126 &quot;SELECT * INTO&quot; not writing CREATE TABLE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I just noticed that in the newest version it doesn't write 
the CREATE TABLE entry on a SELECT * INTO
Here's the code that it wrote in the .script file
INSERT INTO ESG_CONCEPTS VALUES(52,20118)
/*C1*/CONNECT USER sa PASSWORD &quot;&quot;
drop table ESG_CONCEPTS
/*C2*/CONNECT USER sa PASSWORD &quot;&quot;
INSERT INTO ESG_CONCEPTS VALUES(34,20118)
I drop the table using:
drop table ESG_CONCEPTS
Then I create the new table using
select CS.CONCEPTID, CS.SENTENCETEXTID into 
ESG_CONCEPTS from CONCEPT_SENTENCE CS 
where CS.CONCEPTID in 
(34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,
58)
and it write the above code, but it should write:
INSERT INTO ESG_CONCEPTS VALUES(52,20118)
/*C1*/CONNECT USER sa PASSWORD &quot;&quot;
drop table ESG_CONCEPTS
CREATE TABLE ESG_CONCEPTS(CONCEPTID 
INTEGER,SENTENCETEXTID INTEGER)
/*C2*/CONNECT USER sa PASSWORD &quot;&quot;
INSERT INTO ESG_CONCEPTS VALUES(34,20118)
because it freaks out when ESG_CONCEPTS doesn't 
exist.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/127
HyperSQL Database Engine (HSQLDB) / Bugs / #127 NullPointerException when using IN
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
You guys should love me for this. I made a nice 
simple test case and everything.
create table test1 (id int not null, testa varchar);
create table test2 (t1id int not null, testb varchar);
insert into test1 (id, testa) values (1, '1');
insert into test2 (t1id, testb) values (1, null);
select distinct testa, testb from test1 t1 left join 
test2 t2 on t1.testa = t2.testb where t2.testb in 
( '0', '1' );
-mike
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/128
HyperSQL Database Engine (HSQLDB) / Bugs / #128 jdbc primary key query failed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I use the version hsqldb_1_7_0_RC5c
The error arises, if I query over jdbc the primarykeys of a 
table;
The same if i try it with the dababase manager
select * from system_primarykeys
The origin is the line 515 in the file DababaseInformation
it returns a null
Index index = table.getIndex(&quot;SYSTEM_PK&quot;);
And following line failed with null pointer exception
int cols[] = index.getColumns();
java.lang.NullPointerException
at org.hsqldb.DatabaseInformation.getSystemTable
(DatabaseInformation.java:516)
at org.hsqldb.Database.getTable
(Database.java:629)
at org.hsqldb.Parser.parseTableFilter
(Parser.java:1141)
at org.hsqldb.Parser.parseSelect(Parser.java:872)
at org.hsqldb.Parser.processSelect
(Parser.java:132)
at org.hsqldb.Database.execute(Database.java:426)
at org.hsqldb.ServerConnection.run
(ServerConnection.java:211)
at java.lang.Thread.run(Thread.java:536)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/129
HyperSQL Database Engine (HSQLDB) / Bugs / #129 Errror when creating table with UNIQUE a
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following schema raise 37000 Unexpected 
token...error:
CREATE CACHED TABLE amov (
primkey CHAR (10) NOT NULL ,
cod CHAR (1) ,
type CHAR (1) ,
pgdir VARCHAR (255) ,
pgname VARCHAR (255) ,
dirname VARCHAR (255) ,
filename VARCHAR (255),
dname VARCHAR (5) ,
mountext VARCHAR (255) ,
UNIQUE(primkey));
CREATE CACHED TABLE lickey (
primkey CHAR (10) NOT NULL ,
originkey CHAR (10) NOT NULL ,
type CHAR (1) NOT NULL ,
release CHAR (1) NOT NULL,
version CHAR (1) ,
name CHAR (40) ,
firstname CHAR (30) ,
globalkey VARCHAR (30) NOT NULL UNIQUE,
UNIQUE (primkey));
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/130
HyperSQL Database Engine (HSQLDB) / Bugs / #130 quoting problems
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Quoting in SQL statements is somewhat
buggy. I believe that the user should be able to
single-quote 
any table name or file name to escape munging/normalizing,
but several times I
have had to settle with the munged entity name because
hsqldb can't find out where a quoted string begins and
ends. Examples:
create table 't3' (i1 int, c1 varchar) 
Unexpected token: 37000 Unexpectred token: 't3 in
statement... 
set table t2 source 't2.csv' 
beyla$ ls
't2.csv T2.TXT db1.data db1.properties db1.script
beyla$ 
Notice that in the first sample I did not type 't3, I
typed 't3'; and in the second, the database created the
file &quot;'t2.csv&quot; instead of &quot;t2.csv&quot;.
I do not know if this is an engine problem. That's just my
first guess. If nobody else jumps in, I'll troubleshoot it
farther and/or make a fix once I make some headway with
my other hsqldb work.
Problem experience with 1.7.0rc5.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/131
HyperSQL Database Engine (HSQLDB) / Bugs / #131 Ungraceful In-Memory Text Table File err
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
With in-memory database:
SET TABLE mynewtable SOURCE filename.csv
General error: S1000 General error
java.lang.NullopinterException in statement [SET ...
Error Code -40
Trace shows:
java.lang.NullPointerException
at
org.hsqldb.Database$Logger.openTextCache(Database.java:2777)
at
org.hsqldb.TextTable.openCache(TextTable.java:80)
at
org.hsqldb.TextTable.setDataSource(TextTable.java:162)
at
org.hsqldb.Database.processSet(Database.java:2114)
at org.hsqldb.Database.execute(Database.java:446)
at
org.hsqldb.jdbcConnection.executeStandalone(jdbcConnection.java:2915)
at
org.hsqldb.jdbcConnection.execute(jdbcConnection.java:2504)
at
org.hsqldb.jdbcStatement.fetchResult(jdbcStatement.java:1777)
at
org.hsqldb.jdbcStatement.execute(jdbcStatement.java:728)
at
org.hsqldb.util.DatabaseManager.execute(DatabaseManager.java:725)
at
org.hsqldb.util.DatabaseManager.actionPerformed(DatabaseManager.java:453)
at
java.awt.Button.processActionEvent(Button.java:381)
at java.awt.Button.processEvent(Button.java:350)
at
java.awt.Component.dispatchEventImpl(Component.java:3526)
at
java.awt.Component.dispatchEvent(Component.java:3367)
at
java.awt.EventQueue.dispatchEvent(EventQueue.java:445)
at
java.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:190)
at
java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:144)
at
java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
at
java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:130)
at
java.awt.EventDispatchThread.run(EventDispatchThread.java:98)
I do realize that trying to set a file path with an
in-memory 
DB engine is a bad thing to do. I'm just suggesting
that IMO some checking should be done to prevent
misleading 
runtime errors like this.
1.7.0rc5
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/132
HyperSQL Database Engine (HSQLDB) / Bugs / #132 doc errors in TextTables.html
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I come to these opinions empirically. I've verified
that WRT
1.7.0rc5, the following statements are wrong.
SET TABLE SOURCE &lt;&quot;file&quot;&gt; {DESC}
The table name must appear between &quot;TABLE&quot; and
&quot;SOURCE&quot;.
SELECT &lt;&gt; INTO TEXT TABLE &lt;tablename&gt;
The command fails if you use the keyword &quot;TABLE&quot;.
In addition, a SET command specifies the file and the
separator character that the Text table uses:
SET TABLE SOURCE &lt;&quot;file&quot;&gt; {DESC}
This is not &quot;wrong&quot;, just incomplete. I GUESS that &quot;DESC&quot; 
stands for description, but I have no clue how to set the
delimiter character(s).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/133
HyperSQL Database Engine (HSQLDB) / Bugs / #133 minor doc error in hSqlSyntax.html
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The file says
The types on the same line are equivalent
and VARCHAR_IGNORECASE and VARCHAR are on the
same line. A few lines latter the document says
VARCHAR_IGNORECASE is a special case-insensitive 
type of VARCHAR.
Are VARCHAR and LONGVARCHAR equivalent in hsqldb?
(According to hSqlSyntax.html they are different).
In any case, for hsqldb-specific stuff (like custom
datatype
such as VARCHAR_IGNORECASE, and size limitations) it
would be good to give the users enough information to make
use of the types.
I notice that VARCHAR_IGNORECASE does not store case-
insensitive data, as one could imply by the name, but that
the behavior of some test expressions (at least) is
altered.
No problem with that, as long as it is disclosed.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/134
HyperSQL Database Engine (HSQLDB) / Bugs / #134 Tools throw null ptr ex if disconnected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Both DatabaseManager and QueryTool will give a null 
pointer trace stack upon exiting the programs if the user
happens to have given the SQL command &quot;disconnect&quot;.
java.lang.NullPointerException
at org.hsqldb.Session.checkAdmin(Session.java:230)
at
org.hsqldb.Database.processShutdown(Database.java:2285)
at org.hsqldb.Database.execute(Database.java:500)
at
org.hsqldb.jdbcConnection.executeStandalone(jdbcConnection.java:2915)
at
org.hsqldb.jdbcConnection.execute(jdbcConnection.java:2504)
at
org.hsqldb.jdbcConnection.closeStandalone(jdbcConnection.java:2873)
at
org.hsqldb.jdbcConnection.close(jdbcConnection.java:1040)
at
org.hsqldb.util.QueryTool.windowClosing(QueryTool.java:602)
at
org.hsqldb.util.QueryTool.actionPerformed(QueryTool.java:647)
at
java.awt.MenuItem.processActionEvent(MenuItem.java:588)
at
java.awt.MenuItem.processEvent(MenuItem.java:548)
at
java.awt.MenuComponent.dispatchEventImpl(MenuComponent.java:285)
at
java.awt.MenuComponent.dispatchEvent(MenuComponent.java:273)
at
java.awt.MenuComponent.dispatchEventImpl(MenuComponent.java:288)
at
java.awt.MenuComponent.dispatchEvent(MenuComponent.java:273)
at
java.awt.EventQueue.dispatchEvent(EventQueue.java:447)
at
java.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:190)
at
java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:144)
at
java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)
at
java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:130)
at
java.awt.EventDispatchThread.run(EventDispatchThread.java:98)
SQLException: SQLState(S1000) vendor code(-40)
1.7.0rc5. Standalone engine.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/135
HyperSQL Database Engine (HSQLDB) / Bugs / #135 Buggy getImportedKeys
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
First, thanks for a great product!
I saw that there is now finally better metadata support in 
hsqldb_1_7_0_RC6c:
http://sourceforge.net/tracker/index.php?
func=detail&amp;aid=556366&amp;group_id=23316&amp;atid=378134
However, it seems the implementation is buggy. I have 
three tables:
CREATE TABLE persons(
person_id INT NOT NULL,
first_name VARCHAR(32) NOT NULL,
last_name VARCHAR(32) NOT NULL,
PRIMARY KEY( person_id )
) TYPE=INNODB;
CREATE TABLE flights(
flight_id INT NOT NULL,
name VARCHAR(32) NOT NULL,
departure_utc DATETIME NOT NULL,
arrival_utc DATETIME NOT NULL,
PRIMARY KEY( flight_id )
) TYPE=INNODB;
CREATE TABLE reservations(
reservation_id INT NOT NULL,
person_id_fk INT NOT NULL,
flight_id_fk INT NOT NULL,
registration_utc DATETIME NOT NULL,
comment TEXT,
PRIMARY KEY(reservation_id,person_id_fk,flight_id_fk),
INDEX person_ind(person_id_fk),
INDEX flight_ind(flight_id_fk),
FOREIGN KEY (person_id_fk) REFERENCES persons
(person_id),
FOREIGN KEY (flight_id_fk) REFERENCES flights
(flight_id)
) TYPE=INNODB;
When I call getImportedKeys on the reservations table, I 
get an empty resultset. If I call getImportedKeys on the 
flights table, I get a resultset with one row. (the same 
happens for flights).
I'm quite sure this is wrong. A correct implementation of 
getImportedKeys would do the opposite. There should 
be a resultset with two rows for reservations and an 
empty resultset for persons and flights. (At least that's 
what all other drivers I've seen do).
Aslak
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/136
HyperSQL Database Engine (HSQLDB) / Bugs / #136 cannot create table with DEFAULT values
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The create script below worked with 
1.7.0RC5 but not with 1.7.0 RC6c
java.sql.SQLException: 
Wrong data type or data too long in DEFAULT 
clause: 37000 Wrong data type or data too long 
in DEFAULT clause: - in statement [
CREATE TABLE MAIL_USER(
USER_ID INTEGER NOT NULL PRIMARY KEY,
LOGIN_ID VARCHAR(128) NOT NULL,
IMAP_USER_ID VARCHAR(254) NOT NULL,
IMAP_PASSWORD VARCHAR(100) NOT NULL,
USER_NAME VARCHAR(254) DEFAULT ' ' NOT 
NULL,
REPLY_TO VARCHAR(254),
LOCALE VARCHAR(40) DEFAULT 'en' NOT 
NULL,
FOOTER VARCHAR(200),
REPLY_LINE_PREFIX VARCHAR(20) 
DEFAULT '&gt; ' NOT NULL,
SHOW_FULL_HEADERS CHAR(1) DEFAULT 'N' 
NOT NULL,
PREF_ITEMCOUNT_PER_PAGE INTEGER 
DEFAULT 30 NOT NULL,
PREF_ADDRESSCOUNT_PER_PAGE INTEGER 
DEFAULT 20 NOT NULL,
PREF_USERCOUNT_PER_PAGE INTEGER 
DEFAULT 30 NOT NULL,
PREF_ADDRESS_CATEGORY INTEGER 
DEFAULT -1 NOT NULL,
PREF_SEND_CHARSET VARCHAR(30),
PREF_ATTACHMENTS_PER_MAIL INTEGER 
DEFAULT 3 NOT NULL,
PREF_SAVE_COPY_TO_SENT CHAR(1) 
DEFAULT 'Y' NOT NULL,
CREATE_DATE TIMESTAMP 
DEFAULT 'CURRENT_TIMESTAMP' NOT NULL,
UPDATE_DATE TIMESTAMP 
DEFAULT 'CURRENT_TIMESTAMP' NOT NULL,
LAST_ACCESS_DATE TIMESTAMP,
CONSTRAINT IXUQ_LOGIN_ID0 UNIQUE
(LOGIN_ID)
)
]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/137
HyperSQL Database Engine (HSQLDB) / Bugs / #137 script corrupt: negative DEFAULT values
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
HSQL 1.7.0 RC5, RC6c
(this bug is related to bug 565189)
A table column with a negative default value
will cause the .script file to be unusable:
negative integer or double values are written to
the .script file *without* quotes. After a 
shutdown of the database, the .script file cannot
be parsed anymore.
eg. This will corrupt the .script file:
DROP TABLE QUOTED IF EXISTS;
CREATE CACHED TABLE QUOTED (
COL_NEGATIVE INTEGER DEFAULT '-1' NOT NULL
)
-- not stop the database and reconnect: 
gives error &quot;37000 Wrong data type or data too long in 
DEFAULT clause&quot;
I believe the root cause lies with the Tokenizer
class. Instead of treating every single '-' character
as a SPECIAL, maybe only a sequence of two '-'
characters are SPECIAL (a line comment)?
Or a '-' character followed by a numeric character
could be parsed as being part of a numeric value?
I am not sure if this would be correct (I'm not sure
if line comments are the only reason why
'-' characters are SPECIALS)
Instead of fixing the Tokenizer class, how about
patching the DatabaseScript class to surround
*all* DEFAULT values with quotes? (See below)
Or would that cause other problems?
---------
org/hsqldb/DatabaseScript.java
line
399 if (column.getDefaultString() != null) {
400 a.append(&quot; DEFAULT &quot;);
401 a.append(Column.createSQLString
(column.getDefaultString(),
402 column.getType()));
403 }
patch:
if (column.getDefaultString() != null) {
a.append(&quot; DEFAULT &quot;);
String value = Column.createSQLString(
column.getDefaultString(), column.getType
());
if (!value.startsWith(&quot;'&quot;)) {
a.append('\'');
}
a.append(value);
if (!value.endsWith(&quot;'&quot;)) {
a.append('\'');
}
}
-----------
I've attached a JUnit test that identifies the
problem. The test fails with RC5 and RC6c.
The test works after applying the patch.
You can run the test inside JUnit or standalone with
java -cp .;hsqldb.jar;junit.jar 
org.hsqldb.test.TestGrammarKeywordDefault
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/138
HyperSQL Database Engine (HSQLDB) / Bugs / #138 cannot compile the db
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When compiling with jdk1.4 the compiler gives the 
following error:
C:\Program Files\hsql\hsqldb_v.1.61\src&gt;javac -O -
classpath ;.;..\lib *.java org
\hsqldb\*.java org\hsqldb\util\*.java
org\hsqldb\Cache.java:382: warning: as of release 1.4, 
assert is a keyword, and
may not be used as an identifier
Trace.assert(!r.bChanged);
^
org\hsqldb\Channel.java:319: warning: as of release 1.4, 
assert is a keyword, an
d may not be used as an identifier
Trace.assert(!
bNestedTransaction, &quot;beginNestedTransaction&quot;);
^
org\hsqldb\Channel.java:338: warning: as of release 1.4, 
assert is a keyword, an
d may not be used as an identifier
Trace.assert
(bNestedTransaction, &quot;endNestedTransaction&quot;);
^
org\hsqldb\Constraint.java:98: warning: as of release 
1.4, assert is a keyword,
and may not be used as an identifier
Trace.assert(cmain.length == cref.length);
^
org\hsqldb\Constraint.java:172: warning: as of release 
1.4, assert is a keyword,
and may not be used as an identifier
Trace.assert(false, &quot;could not replace&quot;);
^
org\hsqldb\Database.java:236: warning: as of release 
1.4, assert is a keyword, a
nd may not be used as an identifier
Trace.assert(!channel.isNestedTransaction());
^
org\hsqldb\Expression.java:640: warning: as of release 
1.4, assert is a keyword,
and may not be used as an identifier
Trace.assert(false, &quot;Expression.swapCondition&quot;);
^
org\hsqldb\Expression.java:845: warning: as of release 
1.4, assert is a keyword,
and may not be used as an identifier
Trace.assert(eArg2 == null, &quot;Expression.test&quot;);
^
org\hsqldb\Expression.java:906: warning: as of release 
1.4, assert is a keyword,
and may not be used as an identifier
Trace.assert(false, &quot;Expression.test2&quot;);
^
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/139
HyperSQL Database Engine (HSQLDB) / Bugs / #139 SELECT MAX(ID) not working
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi !
I tested the latest version: HypersonicSQL 1.7.0 RC6
with this piece of code (which works with hsqldb_v.1.61 )
ResultSet rs = stat.executeQuery(&quot;SELECT MAX(ID) 
FROM cdType&quot;);
if(rs.next()){
maxCDTypesID = rs.getInt(1);
}
It gives -1 all the time (it returns &gt;0 with the other 
version)
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/140
HyperSQL Database Engine (HSQLDB) / Bugs / #140 Problems under Linux and different JDK's
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I had this exception on linux only (it's ok on windows os):
java.sql.SQLException: General error: S1000 General 
error java.lang.NullPointerException in statement 
[INSERT INTO jahia_filemgr_files(id_jahia_file, 
filemgrid_jahia_file, fldid_jahia_file, uploaduser_jahia_file, 
pageid_jahia_file, is_public_jahia_file, 
realname_jahia_file, storagename_jahia_file, 
lastmodifdate_jahia_file, size_jahia_file, type_jahia_file, 
title_jahia_file, descr_jahia_file) VALUES(1, 1, 
1, 'siteadmin:1', 1, 
1, 'JahiaAdministrationGuide.pdf', 'FILEB81ZEWo2Z1Jahi
aAdministrationGuide.pdf', 1021543854000, 
913397, 'application/pdf', '', '')]
I think that there is a limit for the instruction size, 
because there is no problems with instruction 
INSERT INTO jahia_filemgr_files VALUES(1, 1, 
1, 'siteadmin:1', 1, 
1, 'JahiaAdministrationGuide.pdf', 'FILEB81ZEWo2Z1Jahi
aAdministrationGuide.pdf', 1021543854000, 
913397, 'application/pdf', '', '')
For you info, the structure of this table is 
CREATE TABLE jahia_filemgr_files(id_jahia_file 
INTEGER,filemgrid_jahia_file INTEGER,fldid_jahia_file 
INTEGER,uploaduser_jahia_file 
VARCHAR,pageid_jahia_file 
INTEGER,is_public_jahia_file 
INTEGER,realname_jahia_file 
VARCHAR,storagename_jahia_file 
VARCHAR,lastmodifdate_jahia_file 
BIGINT,size_jahia_file BIGINT,type_jahia_file 
VARCHAR,title_jahia_file VARCHAR,descr_jahia_file 
VARCHAR)
Cheers,
Philippe
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/141
HyperSQL Database Engine (HSQLDB) / Bugs / #141 JSDK 1.4 Compliance
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As some may have noticed, HSQLDB wont compile on 
JSDK1.4. This should be easy to fix as only a few 
methods are added to driver. I am also getting lots of 
deprecation warnings - the methods with deprecated 
tags are used in the code itself!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/142
HyperSQL Database Engine (HSQLDB) / Bugs / #142 calculated values for substr etc
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
In 170rc6g ... Statemets like:
select substr(dbname,1,length(dbname)-1), * from sets
produce:
This function is not supported: IM001 This function is not 
supported: org.hsqldb.Library.substring: 
java.lang.IllegalArgumentException: argument type 
mismatch in statement [select substr(dbname,1,length
(dbname)-1), * from sets] / Error Code: -20 / State: 
IM001 
This seems to stem from the fact that the substring
and other functions are looking for Integer and
that was not passed ... or top level did not reduce
to Integer.
Thanks,
Joe
p.s. sets was:
CREATE TEXT TABLE SETS(SET CHAR,ATTRIBUTE 
CHAR,SEQ INTEGER,DBNAME CHAR,DBTYPE 
CHAR,DBATTRIB CHAR,REFTYPE CHAR)
SET TABLE SETS 
SOURCE &quot;sets.csv;ignore_first=true;quoted=true&quot;
SET TABLE SETS INDEX '0 0'
Set,Attribute,Seq,DBName,DBType,DBAttrib,RefType
Meals,Meal ID,1,MID,int,identity,pk
Meals,Meal Name,2,Name,char(64),not null,
Meals,Type of Meal,3,MealType,int,not null,fk
Meals,Author,4,AID,int,not null,fk
Meals,Description of Meal,5,Description,longvarchar,,
Meals,Reference/Version Date ,6,AsOf,date,,
Meals,PK,7,MID,,,
MealCourseDishes,Meal ID,1,MID,int,not null,&quot;pk, fk&quot;
MealCourseDishes,Course,2,CID,int,not null,&quot;pk, fk&quot;
MealCourseDishes,Recipe ID,3,RID,int,not null,&quot;pk, fk&quot;
MealCourseDishes,PK,4,&quot;MID, CID, RID&quot;,,,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/143
HyperSQL Database Engine (HSQLDB) / Bugs / #143 Missing things for views
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi again,
During our testing we noted:
Views show in SYSTEM_TABLES as tables
and there is no ALTER VIEW xxx RENAME to yyy
Joe
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/144
HyperSQL Database Engine (HSQLDB) / Bugs / #144 timestamp bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
It seems that timestamp columns still have 
problems.
In version 1.7.1RC6 I did the following:
- create table t (name varchar, time timestamp)
- instert into t values('a', 2002-12-23)
-&gt; generates a date but not the correct one
as I saw, the parser does not recognize that this 
is a date format
- instert into t values('a', 2002-12-23 12:00:00.00)
-&gt; throws an exception
This problem was reported earlier in
http://sourceforge.net/tracker/index.php?
func=detail&amp;aid=423114&amp;group_id=23316&amp;atid=3
78131
he also fixed the source! But it still is not in the 
current version :(((
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/145
HyperSQL Database Engine (HSQLDB) / Bugs / #145 NT -Database is already in use
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I have more than one process accessing the 
database I get the following error.
The stackTrace is 
ERROR - Failed to get JDBC connection
java.sql.SQLException: The database is already in use 
by another process
at org.hsqldb.Trace.getError(Trace.java:225)
at org.hsqldb.Trace.error(Trace.java:276)
at org.hsqldb.Log.open(Log.java:290)
at org.hsqldb.Database$Logger.openLog
(Database.java:2603)
at org.hsqldb.Database.&lt;init&gt;(Database.java:203)
at org.hsqldb.jdbcConnection.openStandalone
(jdbcConnection.java:2849)
at org.hsqldb.jdbcConnection.&lt;init&gt;
(jdbcConnection.java:2428)
at org.hsqldb.jdbcDriver.connect(jdbcDriver.java:176)
at java.sql.DriverManager.getConnection(Unknown 
Source)
at java.sql.DriverManager.getConnection(Unknown 
Source)
at com.prismt.jdbc.a.l(Unknown Source)
at com.prismt.util.v.h(Unknown Source)
at com.prismt.util.v.g(Unknown Source)
at com.prismt.jdbc.a.s(Unknown Source)
at com.prismt.jdbc.c.getPooledConnection(Unknown 
Source)
at 
com.prismt.j2ee.connector.jdbc.ManagedConnectionImpl
.for(Unknown Source)
at 
com.prismt.j2ee.connector.jdbc.ManagedConnectionImpl
.new(Unknown Source)
at 
com.prismt.j2ee.connector.jdbc.ManagedConnectionImpl
.getConnection(Unknown Source)
at com.prismt.j2ee.connector.jdbc.g.allocateConnection
(Unknown Source)
at 
com.prismt.j2ee.connector.jdbc.ConnectionFactoryImpl.g
etConnection(Unknown Source)
at com.prismt.jdbc.Database.case(Unknown Source)
at com.prismt.jdbc.Database.void(Unknown Source)
at com.prismt.jdbc.Database.&lt;init&gt;(Unknown Source)
at com.prismt.j2ee.jndi.a.a(Unknown Source)
at com.prismt.j2ee.jndi.cache.JDBCCacheAdapter.a
(Unknown Source)
at 
com.prismt.j2ee.jndi.cache.JDBCCacheAdapter.&lt;init&gt;
(Unknown Source)
at com.prismt.j2ee.jndi.OpenFusionSPI.a(Unknown 
Source)
at com.prismt.j2ee.jndi.OpenFusionSPI.&lt;init&gt;(Unknown 
Source)
at 
com.prismt.j2ee.jndi.OpenFusionCtxFactory.getInitialCon
text(Unknown Source)
at javax.naming.spi.NamingManager.getInitialContext
(Unknown Source)
at javax.naming.InitialContext.getDefaultInitCtx
(Unknown Source)
at javax.naming.InitialContext.init(Unknown Source)
at javax.naming.InitialContext.&lt;init&gt;(Unknown Source)
at com.prismt.j2ee.jms.Management.a(Unknown 
Source)
at com.prismt.j2ee.jms.Management.a(Unknown 
Source)
at com.prismt.j2ee.jms.Management.init(Unknown 
Source)
at com.prismt.j2ee.jms.Management.init(Unknown 
Source)
at com.prismt.openfusion.orb.JavaObject.a(Unknown 
Source)
at com.prismt.openfusion.orb.Service.byte(Unknown 
Source)
at com.prismt.openfusion.orb.Service.new(Unknown 
Source)
at com.prismt.openfusion.orb.Service.main(Unknown 
Source)
ERROR - Retring ...
From the Hsqldb-developers mail list the following thread 
http://www.mail-archive.com/hsqldb-
developers@lists.sourceforge.net/msg00085.html
discusses the problem.
From: Kevin A. Burton 
Subject: [Hsqldb-developers] MORE The database is 
already in use by another process 
Date: Thu, 07 Mar 2002 13:19:16 -0800 
--------------------------------------------------------------------------------
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1
OK...
I spent some type patching isAlreadyOpen and 
distributing updates .jar files to
my users.
Here is what I learned.
- - it isn't a synchronization issue in isAlreadyOpen. I 
created a synchronized
block around Log.class and it still fails.
- - the file DOES exist.
- - the delete() == false call is what is causing this.
- - canRead and canWrite both return true :(
I think the problem is the way that the file is opened.
Java states that on
some systems an open file is exclusive.
I think the problem is that on Windows, file operations in 
Java under Windows
are exclusive.
Maybe we should rewrite (make sense) Log.java to 
make sure that we don't try to
load the properties file while we are trying to save it.
Looking at the current
code, it appears that someone could call open in one 
thread (DBConnection) while
isAlreadyOpen is trying to be called in another thread.
Under UNIX/Linux... these are not exclusive and at least 
from Java, there is no
way to make them operate so.
So... my thinking (no suggestion yet) is that we just use 
a static synchronizer
so that the properties file is not written to during another 
write/read
operation.
Does that make sense? It looks like we only have to 
modify isAlreadyOpen,
loadProperties and saveProperties...
As an aside. Could a DB connection pool raise this 
issue? It seems that it
might. I am using Turbine's DB connection pool with 20 
connections. This
seems to work fine under Linux... obviously not find 
under Windows :)
Kevin
- -- 
Kevin A. Burton ( burton@apache.org, 
burton@openprivacy.org, burtonator@acm.org )
Location - San Francisco, CA, Cell - 
415.595.9965
Jabber - burtonator@jabber.org, Web - 
http://relativity.yi.org/
I have downloaded the latest 1.7 candidate and the 
problem still exists. I have had a look for the bug on the 
HSQLDB bug list but can't find it, but I would have 
thought that it would have been raised previously as it is 
discussed on the HSQLDB developers mail list.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/146
HyperSQL Database Engine (HSQLDB) / Bugs / #146 Simple SQL query equaling two columns fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Create a table
CREATE TABLE taxon ( tax_id INTEGER PRIMARY 
KEY, tax_par_id INTEGER );
Insert data
INSERT INTO taxon { VALUES ( 1, 1 ) };
INSERT INTO taxon { VALUES ( 2, 1 ) };
INSERT INTO taxon { VALUES ( 3, 2 ) };
INSERT INTO taxon { VALUES ( 4, 2 ) };
INSERT INTO taxon { VALUES ( 5, 3 ) };
Check data
SELECT * FROM taxon;
Test following query
SELECT * FROM taxon WHERE tax_id = tax_par_id;
Returns the following error:
SQL Error: Column not found: S0022 Column not 
found: TAX_PAR_ID in statement [SELECT * FROM 
taxon WHERE tax_id = tax_par_id;] / Error Code: -28 / 
State: S0022 
But should work!
Workaround:
SELECT * FROM taxon WHERE tax_id + 0 = 
tax_par_id + 0;
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/147
HyperSQL Database Engine (HSQLDB) / Bugs / #147 Can not store objects &gt; 64 Kb
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
I'm using JBoss 3.0 application server with embedded 
HSQL database (I do not know, what version of hsql 
JBoss uses).
I have a troubles when I want to store CMP entity bean 
that have a field &gt; 64 Kb.
Thats, I have no troubles, when I'm storing StringBuffer 
object with capacity = 15000 (~62Kb), or empty 
ImageIcon, but I receive such message, when want to 
store StringBuffer with capacity = 20000 (or ImageIcon 
with image data):
java.sql.SQLException: Connection is broken
at org.hsqldb.Trace.getError(Trace.java:180)
at org.hsqldb.Trace.getError(Trace.java:144)
at org.hsqldb.Trace.error(Trace.java:205)
at org.hsqldb.jdbcConnection.executeHSQL
(jdbcConnection.java:904)
at org.hsqldb.jdbcConnection.execute
(jdbcConnection.java:718)
at org.hsqldb.jdbcStatement.fetchResult
(jdbcStatement.java:686)
at org.hsqldb.jdbcStatement.executeUpdate
(jdbcStatement.java:85)
at 
org.hsqldb.jdbcPreparedStatement.executeUpdate
(jdbcPreparedStatement.java:152)
at 
org.jboss.resource.adapter.jdbc.local.LocalPreparedState
ment.executeUpdate(LocalPreparedStatement.java:308)
at 
org.jboss.ejb.plugins.cmp.jdbc.JDBCCreateEntityComman
d.insertEntity(JDBCCreateEntityCommand.java:196)
at 
org.jboss.ejb.plugins.cmp.jdbc.JDBCCreateEntityComman
d.execute(JDBCCreateEntityCommand.java:131)
at 
org.jboss.ejb.plugins.cmp.jdbc.JDBCStoreManager.create
Entity(JDBCStoreManager.java:450)
at 
org.jboss.ejb.plugins.CMPPersistenceManager.createEntit
y(CMPPersistenceManager.java:253)
at 
org.jboss.resource.connectionmanager.CachedConnectio
nInterceptor.createEntity
(CachedConnectionInterceptor.java:270)
at 
org.jboss.ejb.EntityContainer.createLocalHome
(EntityContainer.java:579)
at 
sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
Method)
at 
sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
at 
sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke
(Method.java:324)
at 
org.jboss.ejb.EntityContainer$ContainerInterceptor.invoke
Home(EntityContainer.java:1116)
at 
org.jboss.ejb.plugins.AbstractInterceptor.invokeHome
(AbstractInterceptor.java:73)
at 
org.jboss.ejb.plugins.EntitySynchronizationInterceptor.inv
okeHome(EntitySynchronizationInterceptor.java:257)
at 
org.jboss.resource.connectionmanager.CachedConnectio
nInterceptor.invokeHome
(CachedConnectionInterceptor.java:215)
at 
org.jboss.ejb.plugins.EntityInstanceInterceptor.invokeHo
me(EntityInstanceInterceptor.java:134)
at 
org.jboss.ejb.plugins.EntityLockInterceptor.invokeHome
(EntityLockInterceptor.java:79)
at 
org.jboss.ejb.plugins.EntityCreationInterceptor.invokeHo
me(EntityCreationInterceptor.java:44)
at 
org.jboss.ejb.plugins.AbstractTxInterceptor.invokeNext
(AbstractTxInterceptor.java:98)
at 
org.jboss.ejb.plugins.TxInterceptorCMT.runWithTransacti
ons(TxInterceptorCMT.java:167)
at 
org.jboss.ejb.plugins.TxInterceptorCMT.invokeHome
(TxInterceptorCMT.java:52)
at 
org.jboss.ejb.plugins.SecurityInterceptor.invokeHome
(SecurityInterceptor.java:104)
at 
org.jboss.ejb.plugins.LogInterceptor.invokeHome
(LogInterceptor.java:109)
at org.jboss.ejb.EntityContainer.invokeHome
(EntityContainer.java:487)
at 
org.jboss.ejb.plugins.local.BaseLocalContainerInvoker.inv
okeHome(BaseLocalContainerInvoker.java:227)
at 
org.jboss.ejb.plugins.local.LocalHomeProxy.invoke
(LocalHomeProxy.java:110)
at $Proxy23.create(Unknown Source)
at 
ru.narod.kimerinn.galaxy.earth.core.EarthManagerBean.r
egisterServer(EarthManagerBean.java:109)
at 
sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
Method)
at 
sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
at 
sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke
(Method.java:324)
at 
org.jboss.ejb.StatefulSessionContainer$ContainerInterce
ptor.invoke(StatefulSessionContainer.java:823)
at 
org.jboss.ejb.plugins.SecurityInterceptor.invoke
(SecurityInterceptor.java:129)
at 
org.jboss.resource.connectionmanager.CachedConnectio
nInterceptor.invoke
(CachedConnectionInterceptor.java:186)
at 
org.jboss.ejb.plugins.StatefulSessionInstanceInterceptor.i
nvoke(StatefulSessionInstanceInterceptor.java:266)
at 
org.jboss.ejb.plugins.AbstractTxInterceptor.invokeNext
(AbstractTxInterceptor.java:96)
at 
org.jboss.ejb.plugins.TxInterceptorCMT.runWithTransacti
ons(TxInterceptorCMT.java:167)
at 
org.jboss.ejb.plugins.TxInterceptorCMT.invoke
(TxInterceptorCMT.java:61)
at org.jboss.ejb.plugins.LogInterceptor.invoke
(LogInterceptor.java:166)
at 
org.jboss.ejb.StatefulSessionContainer.invoke
(StatefulSessionContainer.java:380)
at org.jboss.ejb.Container.invoke
(Container.java:705)
at 
org.jboss.mx.server.MBeanServerImpl.invoke
(MBeanServerImpl.java:491)
at 
org.jboss.invocation.jrmp.server.JRMPInvoker.invoke
(JRMPInvoker.java:362)
at 
sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
Method)
at 
sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
at 
sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke
(Method.java:324)
at sun.rmi.server.UnicastServerRef.dispatch
(UnicastServerRef.java:261)
at sun.rmi.transport.Transport$1.run
(Transport.java:148)
at java.security.AccessController.doPrivileged
(Native Method)
at sun.rmi.transport.Transport.serviceCall
(Transport.java:144)
at 
sun.rmi.transport.tcp.TCPTransport.handleMessages
(TCPTransport.java:460)
at 
sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.r
un(TCPTransport.java:701)
at java.lang.Thread.run(Thread.java:536)
This bug prevents me to store ImageIcons with picture 
data and a large objects as a table fields :(( Is there a 
way to win this bug?
Kimerinn
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/148
HyperSQL Database Engine (HSQLDB) / Bugs / #148 Transfer Tool - no target in v1.61
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hSQL: v1.61
jdk: 1.3.1_03
OS: Windows2000 5.00.2195 Svc Pak 2
RAM: 512MB (in case it matters)
I noticed that if you launch the Transfer Tool directly it 
will only give you a window to select the Source, you do 
NOT get one to select the Target.
If you launch this from the DB Manager, you will get 
both windows in the proper order. 
Any questions: drop me a line at paul.m.boos@saic.com
Paul
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/149
HyperSQL Database Engine (HSQLDB) / Bugs / #149  powerbuilder connect to HSQL
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
using powerbuilder connect to HSQL Database by 
jdbc,arises &quot;memory can't read &quot;err,why?
Do you try powerbuilder connect to HSQL?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/150
HyperSQL Database Engine (HSQLDB) / Bugs / #150 Types with functions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using RC6i
Trying 
select substr(ci, 1, (locate(',', ci) + 2) ), * from holdfile 
works
trying
select substr(ci, 1, (locate(',', ci) - 1) ), * from holdfile 
gives
SQL Error -------------------------------------------------------------------
----------------------------------------------------------------------------------
------------------------------------------------------------------------- 
This function is not supported: IM001 This function is not 
supported: org.hsqldb.Library.substring: 
java.lang.reflect.InvocationTargetException in statement 
[select substr(ci, 1, (locate(',', ci) - 1) ), * from holdfile] / 
Error Code: -20 / State: IM001 
1 row(s) in 10 ms
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/151
HyperSQL Database Engine (HSQLDB) / Bugs / #151 limit on size of sql for view
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It looks like the select statement for a view can only be 
about 840 characters --- runs ok on create but stored 
truncated. Tried something like:
create view pass1 as
select casewhen( locate(',',ci) &lt; 1, 
ci, 
substr(ltrim(ci), 1, locate(',',ci)-1) 
) lname,
casewhen( locate(',',ci) &lt; 1, 
' ', 
substr(rtrim(ci), locate(',',ci)+1) 
) fname,
casewhen( right(replace(rtrim(cm),',',' '), 3) like ' __', 
right(rtrim(cm), 2), 
casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', 
right(rtrim(cl), 2), 
casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', 
right(rtrim(ck), 2), 
casewhen( right(replace(rtrim
(cj),',',' '), 3) like ' __', 
right(rtrim(cj), 2), 
'' 
)
)
)
) st,
casewhen( right(replace(rtrim(cm),',',' '), 3) like ' __', 
substr(cm, 1, length(rtrim(cm))-3),
casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', 
substr(cl, 1, length(rtrim(cl))-3),
casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', 
substr(ck, 1, length(rtrim(ck))-
3),
casewhen( right(replace(rtrim
(cj),',',' '), 3) like ' __', 
substr(cj, 1, length(rtrim
(cj))-3),
'' 
)
)
)
) city,
casewhen( right(replace(rtrim(cm),',',' '), 3) like ' __', 
3, 
casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', 
2, 
casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', 
1, 
casewhen( right(replace(rtrim
(cj),',',' '), 3) like ' __', 
0, 
0 
)
)
)
) li,
* 
from holdfile
union
select casewhen( locate(',',ci) &lt; 1, 
ci, 
substr(ltrim(ci), 1, locate(',',ci)-1) 
) lname,
casewhen( locate(',',ci) &lt; 1, 
' ', 
substr(rtrim(ci), locate(',',ci)+1) 
) fname,
casewhen( right(replace(rtrim(cm),',',' '), 3) like ' __', 
right(rtrim(cm), 2), 
casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', 
right(rtrim(cl), 2), 
casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', 
right(rtrim(ck), 2), 
casewhen( right(replace(rtrim
(cj),',',' '), 3) like ' __', 
right(rtrim(cj), 2), 
'' 
)
)
)
) st,
casewhen( right(replace(rtrim(cm),',',' '), 3) like ' __', 
substr(cm, 1, length(rtrim(cm))-3),
casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', 
substr(cl, 1, length(rtrim(cl))-3),
casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', 
substr(ck, 1, length(rtrim(ck))-
3),
casewhen( right(replace(rtrim
(cj),',',' '), 3) like ' __', 
substr(cj, 1, length(rtrim
(cj))-3),
'' 
)
)
)
) city,
casewhen( right(replace(rtrim(cm),',',' '), 3) like ' __', 
3, 
casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', 
2, 
casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', 
1, 
casewhen( right(replace(rtrim
(cj),',',' '), 3) like ' __', 
0, 
0 
)
)
)
) li,
* 
from hold3
union
select casewhen( locate(',',ci) &lt; 1, 
ci, 
substr(ltrim(ci), 1, locate(',',ci)-1) 
) lname,
casewhen( locate(',',ci) &lt; 1, 
' ', 
substr(rtrim(ci), locate(',',ci)+1) 
) fname,
casewhen( right(replace(rtrim(cm),',',' '), 3) like ' __', 
right(rtrim(cm), 2), 
casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', 
right(rtrim(cl), 2), 
casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', 
right(rtrim(ck), 2), 
casewhen( right(replace(rtrim
(cj),',',' '), 3) like ' __', 
right(rtrim(cj), 2), 
'' 
)
)
)
) st,
casewhen( right(replace(rtrim(cm),',',' '), 3) like ' __', 
substr(cm, 1, length(rtrim(cm))-3),
casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', 
substr(cl, 1, length(rtrim(cl))-3),
casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', 
substr(ck, 1, length(rtrim(ck))-
3),
casewhen( right(replace(rtrim
(cj),',',' '), 3) like ' __', 
substr(cj, 1, length(rtrim
(cj))-3),
'' 
)
)
)
) city,
casewhen( right(replace(rtrim(cm),',',' '), 3) like ' __', 
3, 
casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', 
2, 
casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', 
1, 
casewhen( right(replace(rtrim
(cj),',',' '), 3) like ' __', 
0, 
0 
)
)
)
) li,
* 
from hold3
in DB script was:
CREATE VIEW PASS1 AS select casewhen( locate
(',',ci) &lt; 1, ci, substr(ltrim(ci), 1, 
locate(',',ci)-1) ) lname, casewhen( locate(',',ci) 
&lt; 1, ' ', substr(rtrim(ci), locate
(',',ci)+1) ) fname, casewhen( right(replace
(rtrim(cm),',',' '), 3) like ' __', right(rtrim(cm), 
2), casewhen( right(replace(rtrim(cl),',',' '), 3) 
like ' __', right(rtrim(cl), 
2), casewhen( right(replace(rtrim
(ck),',',' '), 3) like ' __', right
(rtrim(ck), 2), casewhen( right
(replace(rtrim(cj),',',' '), 3) like ' 
__', right(rtrim(cj), 2),
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/152
HyperSQL Database Engine (HSQLDB) / Bugs / #152 Exception reconnecting / foreign key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Everytime I reconnect to a database created with the
following statements, I get an exception. It seems to
be due to the foreign key
constraint originating from a non-primary key-attribute.
I'm using the binary version from the web-site of
HSQLDB 1.7.0 RC6 Revision i with JDK1.4-01 under linux.
create cached table VEREIN
(
VCODE CHAR(10) not null,
primary key (VCODE)
);
create unique index VEREIN_PK on VEREIN (VCODE);
create cached table BEWERB
(
VCODE CHAR(10) 
not null,
ID SMALLINT not null ,
primary key (ID)
);
create unique index BEWERB_FK2 on BEWERB(ID);
create unique index BEWERB_FK1 on BEWERB(VCODE);
alter table BEWERB
add constraint bv foreign key (VCODE) references VEREIN
(VCODE);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/153
HyperSQL Database Engine (HSQLDB) / Bugs / #153 getColumnName (continued)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello all!
I had once outlined that getColumnName() in the 
jdbcResultSet class returned the column name instead 
of the alias of the column (which is the way most jdbc 
drivers use).
A patch has been done for that (thanks, by the way), but 
it doesn't work in a client/server environment.
- Problem:
The patch has been applied at the Jdbc client level.
On the other hand, it uses a *database* property named 
jdbc.get_column_name.
In a client/server environment, the client and the 
database are in two separate JVMs (and possibly on 
two different machines), so the client doesn't see the 
database property (which is on the server).
So, as a result, even if you set the property to false on 
the server, the getColumnName on the client still returns 
the real column name, and not the alias. And you 
cannot set the property on the client because there is 
no server and no database there (and you can set the 
property only if you start a database).
Fix:
I have two main ways of fixing this.
It involves a bit of thinking about the design. Should the 
*database* be patched to behave in the way we want to 
(i.e. return the label instead of the column name), or 
should the *jdbc client* only be patched to behave like 
that?
These are completely different designs. With the second 
one, each client might behave differently on the same 
database.
So let's have a look at the first solution (database patch):
the jdbc.get_column_name property should affect the 
getColumnName() method in class Expression. To 
make that work, the &quot;get_column_name&quot; boolean in 
jdbcResultSet should be moved to Expression. Then, 
the getColumnName() method in Expression should be 
patched to return the label instead of the column name if 
the get_column_name boolean is false.
Right, let's have a look at the second solution (jdbc 
client patch): we need the client to get properties 
somewhere. I don't mind where these properties should 
come from (another configuration file, or simply in the 
url), but the setGetColumnName(boolean) method 
should be called within the jdbc driver itself (while 
initializing the driver, or while connecting with the URL).
Note that the best fix might be a combination of both 
solutions: have a parameter on the database AND 
another parameter on the jdbc client.
I let you see what's best from your point of view. As for 
me, I think that the patch should be applied at the 
database level (and not at the jdbc level). Anyway, this 
affects only people who set the property to false.
Thanks!
JY.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/154
HyperSQL Database Engine (HSQLDB) / Bugs / #154 Bugs in test suites
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The classes in org.hsqldb.test (v1.7.0RC6i) contain a 
couple of bugs.
The main methods of the classes 
org.hsqldb.test.TestSqlPersistent and 
org.hsqldb.test.TestSql are useless since they don't report 
the failures. If junit.*ui.TestRunner is used instead of the 
main methods, then class org.hsqldb.test.TestSqlPersistent 
should additionally define a suite() method, since otherwise 
the TestRunner detects the test*() methods inherited from 
the superclass, which I think is not intended.
The last statement of org.hsqldb.test.TestSql.testMetaData() 
should read assertEquals(result3, result4); instead of 
assertEquals(result2, result4);
Method org.hsqldb.test.TestSqlPersistent.testInsertObject(): 
the arrays arrayValue and arrayValueResult cannot be 
compared with arrayValue.equals(arrayValueResult). Must 
iterate over their elements or use java.util.Arrays.equals
((Double[]) arrayValue, (Double[]) arrayValueResult).
Class org.hsqldb.test.TestSubselect: Resource dataset-
subselect.xml is missing.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/155
HyperSQL Database Engine (HSQLDB) / Bugs / #155 Oracle chokes on &quot;;&quot; at end of select 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using the transfer tool with 1.7 RC6i and oracle 8i as
the source DB.
The semi-colon added to the select statement on line
126 of TransferTable.java cause Oracle to throw an
exception with an &quot;Invalid character&quot; message. Removing
the semi-colon solves the problem.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/156
HyperSQL Database Engine (HSQLDB) / Bugs / #156 Missing servlet.jar in classpath
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
in buildJDK14.bat you seem to be missing the servlet.jar 
file in the classpath even though that jar is included in 
the distribution. Here's my corrected version.
This is from 1.70RC6. Perhaps other scripts have this 
issue also?
@echo HSQLDB build file for jdk 1.4
@echo *** we recommend the use of the ANT build.xml 
instead of this method
@echo for all jdk's include the path to jdk1.x.x\bin in 
your system path statement
cd ..\
md classes
del /s classes\*.class
cd src
javac -O -nowarn -d ../classes -classpath %
classpath%;../classes;../lib;../lib/servlet.jar;. ./*.java 
org/hsqldb/*.java org/hsqldb/lib/*.java 
org/hsqldb/util/*.java
cd ..\classes
copy ..\src\org\hsqldb\util\hsqldb.gif org\hsqldb\util
jar -cf ../lib/hsqldb.jar *.class org/hsqldb/*.class 
org/hsqldb/lib/*.class org/hsqldb/util/*.class
cd ..\build
pause
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/157
HyperSQL Database Engine (HSQLDB) / Bugs / #157 Typo in getIndexInfo (ORDINAL_POSITON)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
getIndexInfo returns ORDINAL_POSITON not 
ORDINAL_POSITION (the third 'I' is missing).
P.S. This bug was found in the project LDBC, see also 
http://ldbc.sourceforge.net
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/158
HyperSQL Database Engine (HSQLDB) / Bugs / #158 Missing hsqldb.gif
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The batch commands for building are missing 
the ...../util/hsqldb.gif for the swing DatabaseManager
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/159
HyperSQL Database Engine (HSQLDB) / Bugs / #159 Primary key should not allow null values
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The standard says (at least, most if not all other 
databases do that), the primary keys columns don't 
allow null values. HSQLDB allows null values. I think this 
behaviour should be changed.
This bug was found in the LDBC project.
Thomas
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/160
HyperSQL Database Engine (HSQLDB) / Bugs / #160 DELETE FROM does not update database
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After a DELETE FROM order on a table, records stay visible (and selectable) until database is closed.
When re-openning database, records are correctly deleted.
Here my code :
Connection conn = DriverManager.getConnection(...)
PreparedStatement st = conn.prepareStatement(&quot;DELETE FROM MYTABLE WHERE ID=?&quot;);
st.setString(1,sId);
int ret = st.executeUpdate();
// here, ret is equal to 1, that is expected
conn.commit(); // not needed, as far as AUTO_COMMIT is set to TRUE
now, this returns the deleted row
PreparedStatement st = conn.prepareStatement(&quot;SELECT ID FROM MYTABLE WHERE ID=?&quot;);
st.setString(1,sId);
ResultSet rs = st.executeQuery();
Any idea ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/161
HyperSQL Database Engine (HSQLDB) / Bugs / #161 SELECT COUNT(...) with no rows fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If you select the count of column in a table that has no 
rows, it throws a &quot;No data available&quot; SQLException 
rather than returning 0.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/162
HyperSQL Database Engine (HSQLDB) / Bugs / #162 Error processing SET INDEX on script
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Some of the SET INDEX clauses that are generated by the
engine in the [DB]script file are throwing a
NumberFormatException in the setIndexRoot method of the
Table class when the engine is started. It seems that
there is an inconsistency between the internal index
count for a table, and the entries generated for those
indexes in the aforementioned clause.
For example if the internal index count is 1 and the
set index clause goes like &quot;SET TABLE [table] INDEX '-1
-1 -1 0'&quot;, an attempt is made to parse &quot;-1 -1 0&quot; to get
the identity index root, throwing the indicated Exception.
I just try-catched the problematic line, and set the
identity index root to 0 (as far as I have tested, no
problems are generated for this patch, but I don't know
if the solution is entirely correct).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/163
HyperSQL Database Engine (HSQLDB) / Bugs / #163 when shutdown compact is issued server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
java.lang.ArrayIndexOutOfBoundsException: 5 &gt;= 5
at java.util.Vector.elementAt(Vector.java:417)
at org.hsqldb.Server.closeAllServerConnections
(Server.java:283)
at org.hsqldb.Server.update(Server.java:306)
at java.util.Observable.notifyObservers
(Observable.java:142)
at org.hsqldb.ServerConnection.close
(ServerConnection.java:144)
at org.hsqldb.ServerConnection.run
(ServerConnection.java:228)
at java.lang.Thread.run(Thread.java:484)
---------
when shutdown compact is issued server throws an
exception as shown above.
Sometimes script is flushed and is in good
condition sometimes it is not.
Sometimes it works properly.
version 1.7.1
DB hsqldb
Thank you very much 
Raman Kannan
rkannan@govpx.com
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/164
HyperSQL Database Engine (HSQLDB) / Bugs / #164 create view problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Create view allows for ...
select ... into xxx ...
this causes a race condition.
Don't know if you should stop or just say don't do it
cause it hurts.
Fix if you do it is to edit .script file and delete view.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/165
HyperSQL Database Engine (HSQLDB) / Bugs / #165 ClassCastException in preparedStatement
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm using v1.7.0 , ( v 1.7.1ALPHA also bugged)
I found a bug in the method 
static Object convertObject(Object o, int type)
in Column class, when sqltype is SMALLINT or TINYINT ,
this method return a Integer object.
And when, I call a preparedStatement.setObject(int
parameterIndex, Object x, int targetSqlType) 
with 'x' intanceof java.lang.Byte and targetSqlType
equals to java.sql.Types.TINYINT ( or 'x' intanceof
java.lang.Short and targetSqlType equals to
java.sql.Types.SMALLINT ), I get the error :
java.lang.ClassCastException: java.lang.Integer
at
org.hsqldb.jdbcPreparedStatement.setObjectInType(jdbcPreparedStatement.java:4994)
at
org.hsqldb.jdbcPreparedStatement.setObject(jdbcPreparedStatement.java:1130)
at HSQLbug.main(HSQLbug.java:73)
I modify Column.java to return the correct type ( just
put a line for converting Integer to Byte / Short )
and my program runs fine ( driver workes, but I don't
know if this patch add bugs to server )
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/166
HyperSQL Database Engine (HSQLDB) / Bugs / #166 Win98 crash can corrupt script file
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Windows 98, HSQLDB v1.7.0, Java 1.3.1
1. Start database server
2. Perform a minimum of activity, it appears not to 
matter what exactly
3. Pull the power plug from the machine
4. Database refuses to start on reboot
We have not had this problem on Win 2000 which struck 
us as odd, but it happens every time on 98.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/167
HyperSQL Database Engine (HSQLDB) / Bugs / #167 LENGTH(NULL) should return NULL
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It currently returns 0, that is not ANSI standard.
The bug is in Library.java:
public static int length(String s) {
return ((s == null) || (s.length() &lt; 1)) ? 0 : s.length();
}
Should be something like:
public static Integer length(String s) {
return s==null ? null : new Integer(s.length());
}
This bug was found in the LDBC project 
(ldbc.sourceforge.net)
Thomas
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/168
HyperSQL Database Engine (HSQLDB) / Bugs / #168 IN fails with BIGINT literal values
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
For a table defined as follows:
CREATE TABLE RESOURCES(VALUE BIGINT NOT 
NULL,UNIQUE(VALUE))
The following SQL fails:
SELECT * FROM RESOURCES R WHERE R.VALUE 
IN (225216536312565046, 5117217460229781974)
The Exception is as follows:
java.sql.SQLException: Unexpected token: 
225216536312565046 in statement [SELECT * FROM 
RESOURCES R WHERE R.VALUE IN 
(225216536312565046, 5117217460229781974)]
The workaround is to enclose the BIGINT literals within 
single quotes, but this compensates my cross-platform 
SQL.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/169
HyperSQL Database Engine (HSQLDB) / Bugs / #169 poolman cannot connect
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When i try to connect with poolman to the 1.7.0 version 
of hsqldb i get the error:
SQLException occurred in JDBCPool: 
java.sql.SQLException: This function is not supported
params: org.hsqldb.jdbcDriver, 
jdbc:hsqldb:hsql://localhost. Please check your 
username, password and other connectivity info.
java.sql.SQLException: SQLException occurred in 
JDBCPool: java.sql.SQLException: This function is not 
supported
params: org.hsqldb.jdbcDriver, 
jdbc:hsqldb:hsql://localhost. Please check your 
username, password and other connectivity info.
at com.codestudio.util.JDBCPool.create
(Unknown Source)
at com.codestudio.util.ObjectPool.checkOut
(Unknown Source)
at 
com.codestudio.util.JDBCPool.requestConnection
(Unknown Source)
at 
com.codestudio.util.SQLManager.requestConnection
(Unknown Source)
at com.codestudio.sql.PoolMan.connect
(Unknown Source)
When i use version 1.6.1 with the exact same settings 
this works fine.
poolman.xml:
.........
&lt;dbname&gt;agenda&lt;/dbname&gt;
&lt;jndiName&gt;jndi-agenda&lt;/jndiName&gt;
&lt;driver&gt;org.hsqldb.jdbcDriver&lt;/driver&gt;
&lt;url&gt;jdbc:hsqldb:hsql://localhost&lt;/url&gt;
&lt;username&gt;sa&lt;/username&gt;
&lt;password&gt;&lt;/password&gt;
&lt;initialConnections&gt;1&lt;/initialConnections&gt;
........
Regards,
Edwin Eversidjk
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/170
HyperSQL Database Engine (HSQLDB) / Bugs / #170 Insert Not Working Consistently
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We are using HSQL 1.61. Through SQL scripts we first 
create a schema. Then with another script we attempt 
to populate the database. When I run the full population 
script it fails with the message &quot;Try to insert into a non-
nullable column in statement ...&quot; on the very first insert.
If I run insert statements in isolation they execute just 
fine. Thanks.
Andy
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/171
HyperSQL Database Engine (HSQLDB) / Bugs / #171 Trigger classes not loading
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Bug in HSQL:
Loading a trigger class from anywhere except %
JAVA_HOME%\jre\lib\ext doesn't
work. Example stack trace:
java.lang.ClassNotFoundException: TriggerSample
at java.net.URLClassLoader$1.run
(URLClassLoader.java:198)
at java.security.AccessController.doPrivileged
(Native Method)
at java.net.URLClassLoader.findClass
(URLClassLoader.java:186)
at java.lang.ClassLoader.loadClass
(ClassLoader.java:306)
at java.lang.ClassLoader.loadClass
(ClassLoader.java:262)
at java.lang.ClassLoader.loadClassInternal
(ClassLoader.java:322)
at java.lang.Class.forName0(Native Method)
at java.lang.Class.forName(Class.java:130)
at org.hsqldb.Database.processCreateTrigger
(Database.java:1131)
at org.hsqldb.Database.processCreate
(Database.java:838)
at org.hsqldb.Database.execute(Database.java:468)
at org.hsqldb.jdbcConnection.executeStandalone
(jdbcConnection.java:2927)
at org.hsqldb.jdbcConnection.execute
(jdbcConnection.java:2516)
at org.hsqldb.jdbcStatement.fetchResult
(jdbcStatement.java:1786)
at org.hsqldb.jdbcStatement.execute
(jdbcStatement.java:728)
at org.hsqldb.util.DatabaseManager.execute
(DatabaseManager.java:741)
at 
org.hsqldb.util.DatabaseManager.actionPerformed
(DatabaseManager.java:
461)
at java.awt.Button.processActionEvent
(Button.java:381)
at java.awt.Button.processEvent(Button.java:350)
at java.awt.Component.dispatchEventImpl
(Component.java:3526)
at java.awt.Component.dispatchEvent
(Component.java:3367)
at java.awt.EventQueue.dispatchEvent
(EventQueue.java:445)
at 
java.awt.EventDispatchThread.pumpOneEventForHierarc
hy(EventDispatchTh
read.java:191)
at 
java.awt.EventDispatchThread.pumpEventsForHierarchy
(EventDispatchThre
ad.java:144)
at java.awt.EventDispatchThread.pumpEvents
(EventDispatchThread.java:138)
at java.awt.EventDispatchThread.pumpEvents
(EventDispatchThread.java:130)
at java.awt.EventDispatchThread.run
(EventDispatchThread.java:98)
Reason is that the class loader used is 
sun.misc.Launcher$ExtClassLoader@f38798
in Database.processCreateTrigger().
To fix, use:
Class cl = Class.forName(sClassName, true, 
ClassLoader.getSystemClassLoader());
The system class loader is then: 
sun.misc.Launcher$AppClassLoader@2f6684.
Environment:
- Windows 2000, SP3
- HSQLDB 1.7.0
- JDK 1.4.0_01-b03
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/172
HyperSQL Database Engine (HSQLDB) / Bugs / #172 server.dbname or server.database key?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After lookin at the sourcecode and noticed the the 
following use pattern on database property.
Should HsqlServerFactory use &quot;server.database&quot; 
property name as well?
HsqlServerFactory.createHsqlServer method:
props.setProperty(&quot;server.dbname&quot;, dbFilePath);
Server.setProperties method:
serverProperties.setPropertyIfNotExists
(&quot;server.database&quot;, &quot;test&quot;);
Server.openDB() method:
String database = serverProperties.getProperty
(&quot;server.database&quot;);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/173
HyperSQL Database Engine (HSQLDB) / Bugs / #173 getScale returns wrong value
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This bug refers to release 1.7.0-RC3.
Suppose you have a table with a field like this:
quantity decimal(10,4)
If you do a select on this table and look into the 
ResultSetMetadata you can find that the getScale 
method returns always 0 instead of 4 (the getColumns 
method in DatabaseMetadata reports the correct value of 
4)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/174
HyperSQL Database Engine (HSQLDB) / Bugs / #174 ArrayIndexOutOfBoundsException in RC2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
JBuilders Database Pilot came up with this exception
(recreated by the attached script):
java.lang.ArrayIndexOutOfBoundsException: 0 &gt;= 0
at java.util.Vector.elementAt(Vector.java:427)
at org.hsqldb.Table.getIndex(Table.java:1479)
at org.hsqldb.DatabaseInformation.getSystemTable
(DatabaseInformation.java:557)
at org.hsqldb.Database.getTable 
Database.java:656)
at org.hsqldb.Parser.parseTableFilter
(Parser.java:1162)
at org.hsqldb.Parser.parseSelect(Parser.java:882)
at org.hsqldb.Parser.processSelect
(Parser.java:134)
at org.hsqldb.Database.execute(Database.java:442)
at org.hsqldb.ServerConnection.run
(ServerConnection.java:203)
at java.lang.Thread.run(Thread.java:536)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/175
HyperSQL Database Engine (HSQLDB) / Bugs / #175 jdbc.get_column_name=false in 1.7.1RC3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Don't think jdbc.get_column_name=false is
working in rc3, did work in 1.7.0
Joe
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/176
HyperSQL Database Engine (HSQLDB) / Bugs / #176 org.hsqldb.Library.left
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
call left('hello',2)
SQL 
Error 
-----------------------------------------
-----------------------------------------
--------- 
Unexpected token: LEFT in statement [call left
('hello',2)] / Error Code: -11 / State: 37000 
1 row(s) in 0 ms
This is using 1.7.1 RC1. Is this still an issue in 
RC3?
I assume this is a collision between LEFT JOIN and 
the left(s,count) library method.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/177
HyperSQL Database Engine (HSQLDB) / Bugs / #177 Wrong results in LEFT OUTER JOIN
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
A LEFT OUTER JOIN does deliver wrong results when 
filtering for IS NULL. The example is using the following 
simple ER and data: 
CREATE TABLE a (id INTEGER PRIMARY KEY);
CREATE TABLE b (id INTEGER, aid INTEGER);
ALTER TABLE b ADD CONSTRAINT fk FOREIGN 
KEY (aid) REFERENCES a (id);
INSERT INTO a VALUES (0, 'aName0');
INSERT INTO a VALUES (1, 'aName1');
INSERT INTO b VALUES (0, 'bName', 0);
The following SQL works fine:
SELECT * FROM a LEFT OUTER JOIN b ON (a.id = 
b.aid);
and returns:
0, 0, 0
1, &lt;NULL&gt;, &lt;NULL&gt;
The following doesn't:
SELECT * FROM a LEFT OUTER JOIN b ON (a.id = 
b.aid) WHERE b.id IS NULL;
returns:
0, &lt;NULL&gt;, &lt;NULL&gt;
1, &lt;NULL&gt;, &lt;NULL&gt;
I would expect:
1, &lt;NULL&gt;, &lt;NULL&gt;
Leaving off ALTER TABLE, PRIMARY KEY does not 
change anything.
Using v1.7.1rc1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/178
HyperSQL Database Engine (HSQLDB) / Bugs / #178 RC3 and &quot;Statement Unreachable&quot;
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
classes14:
[javac] Compiling 2 source files to C:\hsqldb\classes
[javac] C:\hsqldb\src\org\hsqldb\Session.java:431: 
unreachable statement
[javac] return bReadOnly || 
dDatabase.bReadOnly;;
[javac] ^
[javac] Note: Some input files use or override a 
deprecated API.
[javac] Note: Recompile with -deprecation for details.
[javac] 1 error
JDK 1.4.1 FCS, ANT 141.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/179
HyperSQL Database Engine (HSQLDB) / Bugs / #179 Forte 4: SQLState exception in 1.7.1RC3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I get this exception when Forte 4 starts up. I don't know
what I can do to get some more detailed information about
the exception.
0:trying to connect user
SQLException: SQLState(S1000) vendor code(-37)
1:trying to connect user sa
1:DISCONNECT
2:trying to connect user sa
2:DISCONNECT
1:disconnected sa
2:disconnected sa
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/180
HyperSQL Database Engine (HSQLDB) / Bugs / #180 Including null in select with where &gt;or&lt;
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hsqldb seems to include rows with null value for 
attributes with a WHERE equal/smaller/bigger operation 
as in this example:
create table testme ( a INTEGER );
insert into testme values ( -1 );
insert into testme values ( 0 );
insert into testme values ( 1 );
insert into testme values ( null );
select count(*) from testme where ( a &lt; 0 );
Both Oracle as well as mySQL return 1 (the -1 value) 
and do not include the &quot;null&quot; value, which &quot;seems 
logical&quot; as well. However, hsqldb returns 2. I believe 
this is a bug.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/181
HyperSQL Database Engine (HSQLDB) / Bugs / #181 default_pk name &quot;SYSTEM_ID&quot; problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i have do test hsqldb version 1.7.0 with eXist (xml db) 
but when eXist use RDBMS as storage for itself,
eXists create a table named &quot;documents&quot;.
In this &quot;documents&quot; table has &quot;SYSTEM_ID&quot; column for 
XML Document's doc-type id.
followings are the DDL for this table.
Create CACHED TABLE documents (
name varchar(100) DEFAULT '' NOT NULL,
doc_id integer DEFAULT '0' PRIMARY KEY,
children integer DEFAULT '0' NOT NULL,
doctype varchar(200),
public_id varchar(250),
system_id varchar(250),
);
you can see system_id column of this....
can i ask to change org.hsqldb.Table.DEFAULT_PK 's 
value with other value can not have chance to conflict... 
next version of hsqldb...?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/182
HyperSQL Database Engine (HSQLDB) / Bugs / #182 hsqlServlet not working with Resin
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I had some problems using the hsqlServlet in the Resin 
application server. 
See:
http://www.caucho.com/quercus/bugtrack/view.xtp?
bugreport_id=658
It seems that the servlet code is not correct. I already 
included the code that fixes the problem.
I hope it can be fixed.
regards,
Dennis
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/183
HyperSQL Database Engine (HSQLDB) / Bugs / #183 1.7.1 RC 4: type conversion no longer works
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
sqlline&gt; create table foo (id int)
0 rows affected
sqlline&gt; insert into foo values (10)
1 rows affected
sqlline&gt; select * from foo where id=10
---
ID 
---
10 
---
2 rows selected
sqlline&gt; select * from foo where id=10.0
Error -16: Wrong data type: 37000 Wrong data type: 10.0
in statement [select * from foo where id=10.0]
(state=37000)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/184
HyperSQL Database Engine (HSQLDB) / Bugs / #184 shutdown compact destroys database
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
During a SHUTDOWN COMPACT; I get the following 
error;
Error: java.sql.SQLException: File input/output error: 
File input/output error: reading: java.io.EOFException in 
statement [SET TABLE EDGES INDEX '1981936 
1461232 2430320 9578'] in statement [SET MAXROWS 
100;shutdown compact]
The error occurs in very particular circumstances, when 
a ALTER TABLE is used to add a CONSTRAINT to an 
existing table, and something (?) with the order of table 
generation is not as HSQLDB might expect. 
It took me some time to deduce a reproducible example. 
So the following test, creating TABLE vertices, then 
TABLE edges, works find:
--- BEGIN TEST_OK.SQL ---
DROP TABLE vertices IF EXISTS;
DROP TABLE edges IF EXISTS;
CREATE CACHED TABLE vertices (
id INTEGER IDENTITY,
name VARCHAR NOT NULL,
rank INTEGER NOT NULL,
type VARCHAR NOT NULL
);
CREATE CACHED TABLE edges (
id INTEGER IDENTITY,
parent_id INTEGER NOT NULL,
child_id INTEGER NOT NULL,
role_id INTEGER,
recursive_id INTEGER,
rank INTEGER
);
ALTER TABLE edges 
ADD CONSTRAINT fk_parent 
FOREIGN KEY (parent_id) 
REFERENCES vertices (id)
;
INSERT INTO vertices (name, rank, type) { 
VALUES ('v1', 0, 't1') 
};
INSERT INTO vertices (name, rank, type) { 
VALUES ('v2', 0, 't2') 
};
INSERT INTO edges (parent_id, child_id) { 
VALUES (0, 1) 
};
SHUTDOWN COMPACT;
--- END TEST_OK.SQL ---
However, the following case, making edges first, then 
vertices, leads to a corrupted db:
--- BEGIN TEST_BUG.SQL ---
DROP TABLE vertices IF EXISTS;
DROP TABLE edges IF EXISTS;
CREATE CACHED TABLE edges (
id INTEGER IDENTITY,
parent_id INTEGER NOT NULL,
child_id INTEGER NOT NULL,
role_id INTEGER,
recursive_id INTEGER,
rank INTEGER
);
CREATE CACHED TABLE vertices (
id INTEGER IDENTITY,
name VARCHAR NOT NULL,
rank INTEGER NOT NULL,
type VARCHAR NOT NULL
);
ALTER TABLE edges 
ADD CONSTRAINT fk_parent 
FOREIGN KEY (parent_id) 
REFERENCES vertices (id)
;
INSERT INTO vertices (name, rank, type) { 
VALUES ('v1', 0, 't1') 
};
INSERT INTO vertices (name, rank, type) { 
VALUES ('v2', 0, 't2') 
};
INSERT INTO edges (parent_id, child_id) { 
VALUES (0, 1) 
};
SHUTDOWN COMPACT;
--- END TEST_BUG.SQL ---
They both sould work as expected.
I am using 1.7.1rc5, but I met this bug already before in 
version 1.7.0, but was not able to deduce it at that time.
Thanks
Daniel Frey
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/185
HyperSQL Database Engine (HSQLDB) / Bugs / #185 Function invocation error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The invocation on stored procedures -
Function.getValue() - convert its data members using
the the Column.convertObject(Object, int) method. 
There are two problems with this invocation.
First: All numeric SQL types gets passed into the
reflection as Integers. Every attempt to use a stored
procedure that has byte, short or float arguments will
fail with a 'Function not supported' error. 
Secondly: Byte arrays gets passed passed to the
invocation as org.hsqldb.ByteArray objects instead of
byte[] instances. (This error can easily be
circumvented with a type check immediately before
invocation in the Function.getValue() method.)
Thanks for your good work
- Lars J. Nilsson
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/186
HyperSQL Database Engine (HSQLDB) / Bugs / #186 issue with system id column visibility
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi Fred. Not sure if this should be considered a 
bug or a patch suggestion. I provide no code, but a 
discussion of the motivation, so here it is on Bugs:
Was just thinking a tiny bit about what you said re: 
hiding SYSTEM_ID column by renaming it to: &quot;&quot;
Here's my little test:
create table sysid_test(id int)
insert into sysid_test values(1)
select &quot;&quot; as SYSTEM_ID, * from sysid_test
SYSTEM_ID ID 
--------- -- 
0 1 
create table system_id_test ( &quot;&quot; int, id int)
SQL 
Error 
-----------------------------------------
-----------------------------------------
----------------------------------- 
Column already exists: in statement [create table 
system_id_test ( &quot;&quot; int, id int)] / Error Code: -27 / 
State: S0021 
So, its still not completely hidden: do we want to 
take the next step to unsure that it really is fully 
hidden from SQL? 
I realize that it is now pretty unlikely that anyone in 
their right mind will &quot;discover&quot; the above 
undocumented &quot;features&quot; (unless they read this ;-).
But, I presume the column still has all the quirks it 
had when it was named SYSTEM_ID and visible, so, 
in the interest of attaining true closure, I am 
wondering if there is not some very brief and 
simple additional code we could add to truly make 
it innaccessible from SQL. My initial thought on 
the matter is that one could assign the column a 
null HsqlName.name. I'm reasonably sure there is 
no way to assign or get a match to a null column 
name from SQL, so this would permanently hide it 
as well as allowing &quot;&quot; as a column name on tables 
with a system id column in the same way that it is 
allowed on tables without a system id column (yes: 
I know that is ridiculous, but at least it is 
consistent behaviour), without having to add some 
silly crutch rules to the column expression 
resolution mechanism. Are there caveats to this 
approach? If not, this is not much more than a one-
liner patch that shuts the door permanently on the 
issue, so I think we should do it.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/187
HyperSQL Database Engine (HSQLDB) / Bugs / #187 wrong value from HOUR( date )
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Have table with create_dt DATE NOT NULL column. 
Note: The time is around 10:50am machine time.
First:
update table
set create_dt = NOW();
Then did:
select CREATE_DT
, HOUR( CREATE_DT ) 
, HOUR( NOW() ) from table;
returns 2002-10-16, 19, 10
The return of 19 from the HOUR( CREATE_DT ) looks 
like a bug. 
HsqlSyntax.html documentation shows HOUR(time) but 
has no indication that function is overloaded as 
HOUR(date). I would think it should be.
--------CONDITIONS
For select, I was using HSQL Database Manager as SA 
user, autocommit: true, readonly: false
Was hsqldb version, hsqldb_1_7_1_RC5 inside of hsql-
avalon application.
Machine Windows 2000 2.0 ghz
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/188
HyperSQL Database Engine (HSQLDB) / Bugs / #188 Text or mem. tables, read only db files
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using text or memory tables if *.data file is missing
and database files are read only causes errors even if
tables are small and are not modified.
In Standalone mode,
If &quot;readonly&quot; property is false, error message pops up:
File input/output error: tests/database1.properties
java.io.FileNotFoundException:
tests\database1.properties (Access is denied)
If &quot;readonly&quot; property is true, error message pops up
(depending on table type):
File input/output error: File input/output error: error
java.io.FileNotFoundException: tests/database1.data
(The system cannot find the file specified) opening
tests/database1.data in statement
[CREATE [TEXT] TABLE ...]
Workaround is to add 0 length *.data file and set
&quot;readonly&quot; to true
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/189
HyperSQL Database Engine (HSQLDB) / Bugs / #189 ? trace in CachedRow
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
While testing 1.7.1 release ...
init would fail on inputstream error for
text table ...
the same db was o.k. with 1.7.1 RC5
change in CachedRow (339)
n = n.nNext;
}
oData = in.readData(tTable.getColumnTypes());
Trace.check(in.readIntData() == iPos, 
Trace.INPUTSTREAM_ERROR);
iLastAccess = iCurrentAccess++;
}
}
was commented out and tests ran o.k. ...
Did not try to figure out what the trace was for ...
Please advise.
Thanks,
Joe
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/190
HyperSQL Database Engine (HSQLDB) / Bugs / #190 Outer join syntax fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following SQL statement works fine in HSQL 1.6.1 
but it fails in HSQL 1.7.x.
The statement:
SELECT 
ULS.STRUCT_ID,ULS.NEXT_STRUCT_ID,ULS.CHLD_ST
RUCT_ID,ULS.CHAN_ID,ULS.NAME,ULS.TYPE,ULS.HI
DDEN,ULS.UNREMOVABLE,ULS.IMMUTABLE,USP.ST
RUCT_PARM_NM,USP.STRUCT_PARM_VAL
FROM 
UP_LAYOUT_STRUCT ULS 
LEFT OUTER JOIN UP_LAYOUT_PARAM USP ON 
ULS.USER_ID = USP.USER_ID AND ULS.STRUCT_ID 
= USP.STRUCT_ID
WHERE ULS.USER_ID=1 AND ULS.LAYOUT_ID=1 
ORDER BY ULS.STRUCT_ID
The error message:
Unexpected token: AND in statement [SET MAXROWS 
1000;SELECT 
ULS.STRUCT_ID,ULS.NEXT_STRUCT_ID,ULS.CHLD_ST
RUCT_ID,ULS.CHAN_ID,ULS.NAME,ULS.TYPE,ULS.HI
DDEN,ULS.UNREMOVABLE,ULS.IMMUTABLE,USP.ST
RUCT_PARM_NM,USP.STRUCT_PARM_VAL
FROM 
UP_LAYOUT_STRUCT ULS 
LEFT OUTER JOIN UP_LAYOUT_PARAM USP ON 
ULS.USER_ID = USP.USER_ID AND ULS.STRUCT_ID 
= USP.STRUCT_ID
WHERE ULS.USER_ID=1 AND ULS.LAYOUT_ID=1 
ORDER BY ULS.STRUCT_ID]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/191
HyperSQL Database Engine (HSQLDB) / Bugs / #191 Incorrect resultsetmetadata
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
All numeric types have all scale factors and displaywidths 
set to 0 when retrieved as their types. Work fine when 
retrieved as string.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/192
HyperSQL Database Engine (HSQLDB) / Bugs / #192 values in date fields change values
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I compiled hsqldb v. 1.7.1 on linux with Sun's jdk
1.4.1_01 and javac. I created 3 tables with one column
of type Date and insert 2 rows.
On MS Windows 98 with Sun's jre 1.4.1_01 and produced 
database when i change time zone stored dates changes
values.
On linux GMT+2
1-1-2002 (dd-MM-yyyy)
On Windows GMT+1 (or GMT+3, but not the same as on linux)
31-12-2002
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/193
HyperSQL Database Engine (HSQLDB) / Bugs / #193 Text Table Bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have been testing the CREATE Text Table. When I enter
all INTEGER colums and shutdown the database and again
restart it , the values of the last column keeps
increasing by 7 in every row. 
My Jdk is 1.4.1 
OS Windows 2000 professional
SQL Statements were generated using the Database Manager
Hsql was started in Server mode.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/194
HyperSQL Database Engine (HSQLDB) / Bugs / #194 cannot select from Text Table in1.7.1 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I've used Text Tables with versin 1.7.0 in a small project.
All works fine (except outer join bug).
After switching to current 1.7.1 using Text Tables no 
more 
possible. I've experimented with several different settings
without better results.
I can create an new Text Table using &quot;select * into text 
xxx from yyy&quot;
and select data from new table. (I think all doing is in 
memory until here.)
But after disconnect/connet receiving this Error 
&quot;File input/output error: reading: java.sql.SQLException: 
InputStream error in statement [SET MAXROWS 
100;select * from CCCVCCC]&quot;
when I use sthe same select.
On the other hand the meta- data of the table can be 
shown.
My Jdk is 1.3.1 
OS Windows NT
SQL Statements were generated using the Database 
Manager 
Hsql was started in Standalone mode.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/195
HyperSQL Database Engine (HSQLDB) / Bugs / #195 Referential integrity check fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The referential integrity check fails when a column with a 
FK is updated!
Create these tables:
CREATE TABLE A (
NAME VARCHAR(32) NOT NULL,
CONSTRAINT PK_A PRIMARY KEY (NAME)
);
CREATE TABLE B (
NAME VARCHAR(32) NOT NULL,
REF VARCHAR(32),
CONSTRAINT PK_B PRIMARY KEY (NAME),
CONSTRAINT FK1_B FOREIGN KEY (REF) 
REFERENCES A (NAME)
);
and insert these data:
INSERT INTO A VALUES ('a');
INSERT INTO B (NAME) VALUES ('b');
then HSQLDB accepts this
UPDATE B SET REF='b' where NAME='b';
but that violates the FK constraint in table B
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/196
HyperSQL Database Engine (HSQLDB) / Bugs / #196 implicit type conversion ?!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I've expected that the result of following statements
in all cases will return 3.3
select 33/10 from test; fails 3
select (33-0.1+0.1)/10 from test; o.k. 3.3
select 33/10-0.1+0.1 from test; fails 3.0
select 33*0.1 from test; o.k. 3.3
Im using v1.7.1 in standard or memory mode
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/197
HyperSQL Database Engine (HSQLDB) / Bugs / #197 transaction not rolled back
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using Hsqldb 1.7.1 (latest stable). The database is
in multi-user mode with the following flags:
-trace &quot;true&quot; -silent &quot;false&quot;
If a JDBC client is interrupted abruptly then his
undergoing transaction(autocommit = false) is not
aborted (rolled back), although the server displays the
fact that it has disconnected this interrupted client!
So, the server is aware of the transaction voidness but
doesn't roll it back.
There's another thing to add here. The DatabaseMetaData
for hsql says that it supports ONLY the READ_UNCOMMITED
level of transaction isolation.
Isn't it a pitty? I personally like Hsql for it's light
load in terms of memory and cpu time.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/198
HyperSQL Database Engine (HSQLDB) / Bugs / #198 features webpage needs update
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
One of your online documentation pages - 
http://hsqldb.sourceforge.net/2/DocsandDev/features.html -
states that a range of _current_ restrictions _will_ be
solved by summer _2002_ (I put that paragraph at the
end of this posting).
By now, it is December-2002.
Some visitors might draw false conclusions from that
with regard to the health of this project. One might
think, that work stopped, or that work proceeds much
slower now, or that documentation is out of date. 
Eitherway, this doesn't add to the visitors (especially
hasty ones) trust into this project positively. 
BTW, from looking at various indicators I can see that
this project is proceeding very well indeed.
Additionally some visitors might be left
confused/insecure as to what restrictions there
_really_ are currently.
Thanks for your works.
Best regards.
&lt;snip&gt; 
Current restrictions are:
* GROUP BY is limited (solved by June, 2002)
* HAVING, ANY, ALL are currently not implemented
(solved by August, 2002)
* No triggers and views (some functionality here
for v .1.7 of hsqldb, coming within days)
* The size of Binary data is limited to about 32 KB
(because UTF is used) (solved by June, 2002)
* No server side cursors (here is a workaround for
selecting big results) (may already be solved)
* Empty space in the database file is not always
reused (here are the details and a workaround) (solved
by June, 2002)
* Does not yet conform to ACID or true SQL-92 or
JDBC 2 or 3 (targeted for June, 2002) 
&lt;/snip&gt;
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/199
HyperSQL Database Engine (HSQLDB) / Bugs / #199 Column.java  BINARY type bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is wrong:
hTypes.put(&quot;B[&quot;, new Integer(Types.BINARY));
it should be:
hTypes.put(&quot;[B&quot;, new Integer(Types.BINARY));
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/200
HyperSQL Database Engine (HSQLDB) / Bugs / #200 Strange problem with text table
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I try to create a text table with following code:
public static void main(String[] args) throws Exception {
Class.forName ( &quot;org.hsqldb.jdbcDriver&quot; );
Connection userDBConn = 
DriverManager.getConnection(&quot;jdbc:hsqldb:&quot; 
+ &quot;userTestDB&quot;, &quot;SA&quot;, &quot;&quot;);
Statement stmt = userDBConn.createStatement();
stmt.execute(&quot;CREATE TEXT TABLE ACCOUNT
(USERNAME CHAR(20) NOT NULL,&quot; +
&quot;PASSWORD CHAR(20) NOT NULL, &quot; +
&quot;PRIMARY KEY(USERNAME))&quot;);
stmt.execute(&quot;SET TABLE ACCOUNT SOURCE&quot; 
+ &quot;\&amp;quot;testAccounts.db;fs=|\&amp;quot;&quot;);
stmt.execute(&quot;insert into ACCOUNT&quot; 
+ &quot;(USERNAME,PASSWORD) values('foo','bar')&quot;);
ResultSet rs = stmt.executeQuery(
&quot;select * from ACCOUNT&quot;);
while(rs.next()) {
System.out.println(&quot;Row: &quot; + rs.getString(1) + 
rs.getString(2));
}
stmt.close();
userDBConn.close();
}
Table is created ok and value foo/bar is added to the 
table. After code is executed, size of testAccounts.db is 
5 bytes, it contains only text foo and line change after it. 
Password column's value bar is not added to the file. If I 
select * from account after that code is executed, it 
returns only foo for username and 0 for password. If I 
use memory table (remove &quot;text&quot; from create table 
command) everything works ok.
I have tested this with hsqldb version 1.7.1 and 1.7.2 
alpha H. Same problem with both versions. Is this just a 
stupid user error?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/201
HyperSQL Database Engine (HSQLDB) / Bugs / #201 Text file sql infinitely slow response
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was excited about the text file sql capabilities. so I decided 
to try v 1.7.1 on a 28000 record file and noted the response 
time for a select count(*) at about 4 secs on a 384MB 
850Mhz NT machine; HOWEVER, on a 350000 record file 
the response time was ghastly - the query never returned 
after 5 minutes. 
Anybody have similar problems?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/202
HyperSQL Database Engine (HSQLDB) / Bugs / #202 VIEWS and aggregate function no results (172_I)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have discovered this fast/small SQL engine yesterday - 
this is exactly I would like to use in home projects. This 
will prevent me using Access for which I have to log with 
ODBC. An other good alternative would be to choose 
mySQL but I think it too big for such a small project !
Great product - I immediately thought trying my small 
application over it transfering data (it is easy with 
transfer even if there is no Views support).
Unfortunately I was using &quot;Having&quot; and &quot;aggregate&quot; 
functions (SELECT X1,sum(X2) as Y FROM Z HAVING 
sum(X2) &gt; 0) - in 1.7.2_I you can define views with those 
functions but they don't show anything when run !
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/203
HyperSQL Database Engine (HSQLDB) / Bugs / #203 Exception on insert with select from..
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Unexpected token: ( in statement [insert
test case:
create table test_table
( num integer, str varchar)
create table test_table_src
( num_src integer, str_src varchar)
insert into test_table_src
( num_src, str_src)
values
(123, 'qwe')
insert into test_table
( num, str)
(select 123, str_src from test_table_src )
and result is
SQL 
Error  
Unexpected token: ( in statement [insert into test_table
( num, str)
(select 123, str_src from test_table_src )
] / Error Code: -11 / State: 37000 1 row(s) in 0 ms
Serg
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/204
HyperSQL Database Engine (HSQLDB) / Bugs / #204 dup idx name on diff. tbls not allowed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If the following 4 SQL commands are issued via JDBC the
last one will result in an SQLException. Since the 2nd
index is on the table bar it should not conflict with
one of the same name on foo.
CREATE TABLE foo (myColumn int, foocol int, primary
key (myColumn, foocol));
CREATE TABLE bar (myColumn int, barcol int, primary
key (myColumn, barcol));
CREATE INDEX IdxMyCol on foo (myColumn);
CREATE INDEX IdxMyCol on bar (myColumn);
Error:
SQLException(Index already exists in statement [CREATE
INDEX IdxMyCol on bar (myColumn)])
Details:
Server was started out of the box using the
runServer.bat on a Win2K machine. 2 tests were
conducted. Both the in memory database and the on disk
database. For the on dist test a database name of
&quot;test&quot; was used.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/205
HyperSQL Database Engine (HSQLDB) / Bugs / #205 previous() does't work when afterlast
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When you do this:
...
System.out.println(&quot;next next next&quot;);
while(rset.next())
System.out.println(...);
System.out.println(&quot;previous previous previous&quot;);
while(rset.previous())
System.out.println(...);
the output must be:
next next next
1
2
3
4
...
previous previous previous
...
4
3
2
1
It doesn't work because previous returns false when 
afterLast condition ocurrs.
I think the problem is the order of condition evaluation at 
jdbcResultSet.java. 
If you move up afterlast condition evaluation (before 
Empty resultset or no valid row) and recompile the 
output is OK. I don't know why.
HSQLDB version is 1.7.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/206
HyperSQL Database Engine (HSQLDB) / Bugs / #206 GROUP BY with SUM() returns fantom row
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using ALPHA-J on Win2K, Sun JDK 1.4.1_01
When the GROUP BY and SUM() are used on an empty table
a row of nulls is returned.
create table foo (word varchar(20), fooi integer);
select word, sum(fooi) from foo group by word;
returns... (null,null)
select word from foo group by word;
returns an empty result set.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/207
HyperSQL Database Engine (HSQLDB) / Bugs / #207 Boolean object failed to be serialized
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey I guess Fred,
the following tests failed with the exception down.
Class.forName(&quot;org.hsqldb.jdbcDriver&quot;);
Connection conn = DriverManager.getConnection
(&quot;jdbc:hsqldb:hsql://localhost&quot;, &quot;sa&quot;, &quot;&quot;);
String sqlStatement = &quot;insert into AVMerkmalszustand 
(ID_Parent, ID_AttributeDefinition, Value, 
SerializedObject) Values (?, ?, ?, ?)&quot;;
PreparedStatement stat = conn.prepareStatement
(sqlStatement);
stat.setObject(1, new Integer(1)); // ID_Parent
stat.setObject(2, new Integer(1)); // 
ID_AttributeDefinition
stat.setObject(3, new String (&quot;Ein Test&quot;));
stat.setObject(4, new Boolean (true)); // OTHER
stat.execute();
The coloumn 4 is from type Other.
The exception is:
java.sql.SQLException: Invalid escape character: 
hexadecimal string contains non hex character in 
statement [insert into AVMerkmalszustand (ID_Parent, 
ID_AttributeDefinition, Value, SerializedObject) Values 
(1, 1, 'Ein Test', TRUE)]
If I use a 
stat.setObject(4, new Boolean (true), Types.OTHER);
It works fine.
Alex
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/208
HyperSQL Database Engine (HSQLDB) / Bugs / #208 GRANT before CREATE VIEW + ISNULL
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In my test application, I have re-written some fine views - 
and noticed these 2 points :
1-In script file, GRANT SELECT ON view_XY TO 
PUBLIC is done before CREATE VIEW view_XY AS ... 
this means, I got often errors and I've to correct the 
script file before starting database server (I am running in 
server mode).
2. How is working ISNULL(x,y) - as I didn't make it - I've 
used CASEWHEN(x,y,z) ! What do you think ? Is this 
command broken or I should exercice a bit more ?
Yours
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/209
HyperSQL Database Engine (HSQLDB) / Bugs / #209 Slow query
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have provided a DB and query. The query executes 
very slowly. However, if I break it up into several smaller 
queries that do the same thing, they execute much 
faster (also included). Both queries create only 448 
rows. My assumption is that the query optimizer isn't 
working correctly.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/210
HyperSQL Database Engine (HSQLDB) / Bugs / #210 Incorrect number of rows in GROUP BY query
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
A query with a MIN() aggregate function and a GROUP BY 
clause, where there are no rows that qualify for the 
WHERE clause, returns one row with only null values.
According to ISO 9075:1999, part 2, subclause 7.11,
&quot;&lt;query specification&gt;&quot;, general rule 1bI, such a query 
should return no rows:
&quot;If T has 0 (zero) groups, then the result of the &lt;query 
specification&gt; is an empty table&quot;.
Example:
SELECT id, MIN(date_of_birth)
FROM person
GROUP BY id
This query returns a row with two null values, when table 
&quot;person&quot; is empty.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/211
HyperSQL Database Engine (HSQLDB) / Bugs / #211 Unhappy with group by
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Technically this is a bug, because of the documentation, but
it may be an oversight:
our SQL generator uses &quot;...group by x...&quot; where x is a 
column number containing an expression. 
Under HSQLDB if the expression is a date operator (e.g 
quarter(&lt;date&gt;) ) this does not work (SQL error).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/212
HyperSQL Database Engine (HSQLDB) / Bugs / #212 Index not dropped when table dropped.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have an application that will periodically drop and
recreate a table. I find that in one particular case
this seem to fail regularly as an index gets left behind. 
When I execute the following script it will
consistantly fail.
create table WordTable( excludeWord INTEGER(1), soundex
varchar(4), word varchar(215), primary key( word ));
create index WTsoundexIdx on WordTable( soundex );
create index WTexcludeIdx on WordTable( excludeWord );
drop table WordTable;
create table WordTable( excludeWord INTEGER(1), soundex
varchar(4), word varchar(215), primary key( word ));
create index WTsoundexIdx on WordTable( soundex );
create index WTexcludeIdx on WordTable( excludeWord );
I get the following when the above is executed...
01:38:22] Using Driver Class(org.hsqldb.jdbcDriver)
Version 1.7
[01:38:22] Driver States that it is not JDBC Compliant,
Some Functions May Not Work Correctly
[01:38:23] Connection to iSQL Service [hsqldb] is
sucessful.
[01:38:37] Executing Statement (create table WordTable(
excludeWord INTEGER(1), soundex varchar(4), word
varchar(215), primary key( word ))).
[01:38:37] Rows Affected (0).
[01:38:37] Executing Statement (create index
WTsoundexIdx on WordTable( soundex )).
[01:38:37] Rows Affected (0).
[01:38:37] Executing Statement (create index
WTexcludeIdx on WordTable( excludeWord )).
[01:38:37] Rows Affected (0).
[01:38:37] Executing Statement (drop table WordTable).
[01:38:37] Rows Affected (0).
[01:38:37] Executing Statement (create table WordTable(
excludeWord INTEGER(1), soundex varchar(4), word
varchar(215), primary key( word ))).
[01:38:37] Rows Affected (0).
[01:38:37] Executing Statement (create index
WTsoundexIdx on WordTable( soundex )).
[01:38:37] frmiSQLMain::handleSQLException()
[01:38:37] Exception :: SQLException(Index already
exists in statement [create index WTsoundexIdx on
WordTable( soundex )])
[01:38:37] Executing Statement (create index
WTexcludeIdx on WordTable( excludeWord )).
[01:38:37] Rows Affected (0).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/213
HyperSQL Database Engine (HSQLDB) / Bugs / #213 foreign-key constraint test failed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following foreign-key constraint test failed:
// hsqldb version Version 1.7.1 released on 5 October 
2002 
// overview test:
// create table person
// insert row
// create table address
// insert row
// insert row
// -- start test--
// insert row which should fail 
// update row which should fail, turns out to be 
successful !
// -- end test --
// drop table Address;
// drop table Person;
create table Person (
personID INTEGER,
firstname VARCHAR(30),
lastname VARCHAR(30),
dateOfBirth DATE,
constraint person_pk primary key (personID),
constraint person_sk1 unique(firstname, lastname)
);
insert into person (personID, firstname, lastname, 
dateOfBirth)
values (1, 'albert', 'everts', '1961-01-01');
create table Address (
addressID INTEGER,
streetname VARCHAR(30),
housenumber INTEGER,
city VARCHAR(30),
personID INTEGER,
constraint address_pk primary key (addressID),
constraint address_sk1 unique(streetname, 
housenumber, city),
constraint address_person_fk foreign key (personID) 
references person(personID)
);
insert into address (addressID, streetname, 
housenumber, city, personID)
values (1, 'street', 123, 'amsterdam', 1);
insert into address (addressID, streetname, 
housenumber, city, personID)
values (2, 'lane', 987, 'amsterdam', 1);
SET AUTOCOMMIT FALSE;
SET READONLY FALSE;
SET REFERENTIAL_INTEGRITY TRUE;
-- this should fail because personID 123 does not exist
insert into address (addressID, streetname, 
housenumber, city, personID)
values (3, 'square', 456, 'amsterdam', 123);
-- OK : Integrity constraint violation: 
ADDRESS_PERSON_FK
-- this should fail because personID 123 does not exist
update address 
set
personID = 123
where addressID = 1;
-- FAIL: the test failed, because the update was 
successful !!!
COMMIT;
CHECKPOINT;
Can you please solve this issue? 
(btw: other tests concerning foreign keys I tried, were 
successful ! )
Thanks!
Regards,
Albert
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/214
HyperSQL Database Engine (HSQLDB) / Bugs / #214 Binary data and 'in' operator
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Actually, I've found two bugs. Please, see the following 
script:
-------------------------------------------------------------------
--Create two tables (same structure)
create table test_a (oid BINARY(2),data varchar(10));
create table test_b (oid BINARY(2),data varchar(10));
--Insert data into table_a
insert into test_a values('0001','A' );
insert into test_a values('0002','B' );
insert into test_a values('0003','C' );
insert into test_a values('0004','D' );
--Insert data into table_b (first and second rows of 
table_a)
insert into test_b values('0001','A' );
insert into test_b values('0002','B' );
-------------------------------------------------------------------
The following statements must produce the same
results (each statement must produce two rows):
-------------------------------------------------------------------
-- Set 1
select * from test_b where data in (select data from 
test_a);
select * from test_a where data in (select data from 
test_b);
-- Set 2
select * from test_b where oid in (select oid from test_a);
select * from test_a where oid in (select oid from test_b);
-- Set 3
select * from test_b where rawtohex(oid) in (select 
rawtohex(oid) from test_a);
select * from test_a where rawtohex(oid) in (select 
rawtohex(oid) from test_b);
-- Set 4
select * from test_b where rawtohex(test_b.oid) in 
(select rawtohex(test_a.oid) from test_a);
select * from test_a where rawtohex(test_a.oid) in 
(select rawtohex(test_b.oid) from test_b);
-------------------------------------------------------------------
However, the output is:
Set 1 (works fine)
-------------------------------------------------------------------
OID DATA 
--------- ---- 
[B@158bb8 A 
[B@7f4ec B 
2 row(s) in 10 ms
OID DATA 
--------- ---- 
[B@1836ed A 
[B@3e0ebb B 
2 row(s) in 10 ms
-------------------------------------------------------------------
Set 2 (doesn't work. Problem with binary data and using 
of 'in'? BUG 1!):
-------------------------------------------------------------------
OID DATA 
--- ---- 
0 row(s) in 0 ms
OID DATA 
--- ---- 
0 row(s) in 0 ms
-------------------------------------------------------------------
Set 3 (Trying to work arround set 2. Works horrible. 
I think rawtohex confuses the inner select &quot;oid&quot; with the 
outer &quot;oid&quot; and allways returns true. BUG 2!)
-------------------------------------------------------------------
OID DATA 
--------- ---- 
[B@158bb8 A 
[B@7f4ec B 
2 row(s) in 10 ms
OID DATA 
--------- ---- 
[B@1836ed A 
[B@3e0ebb B 
[B@39443f C 
[B@2fae45 D 
4 row(s) in 0 ms
-------------------------------------------------------------------
Set 4 (trying to work around Set 3 + Set 1 problem) 
works fine (output == set 1)
-------------------------------------------------------------------
OID DATA 
--------- ---- 
[B@158bb8 A 
[B@7f4ec B 
2 row(s) in 10 ms
OID DATA 
--------- ---- 
[B@1836ed A 
[B@3e0ebb B 
2 row(s) in 20 ms
-------------------------------------------------------------------
Ok, that's all. I hope you solve this soon as possible.
Cheers.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/215
HyperSQL Database Engine (HSQLDB) / Bugs / #215 Text Table Problems
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When using text tables, the last column doesn't (on my 
system) get persisted to the files. When the server is 
shutdown and restarted, the missing column causes an 
exception.
My System:
Win2k SP3
Java 1.4.1
HSQLDB 1.7.1
To Reproduce Bug:
Start attached DB in Server Mode
Open Manager and send CHECKPOINT cmd
Shutdown DB
Examine the CSV and note the absence of the last 
column.
Start DB
Open Manager app
SELECT * FROM groupone
Exception thrown in server window:
java.lang.ClassCastException
at org.hsqldb.DatabaseRowOutput.writeData
(Unknown Source)
at org.hsqldb.Result.getBytes(Unknown Source)
at org.hsqldb.ServerConnection.run(Unknown 
Source)
at java.lang.Thread.run(Thread.java:536)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/216
HyperSQL Database Engine (HSQLDB) / Bugs / #216 Text Table Field Concatenation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version: 1.7.2 Alpha L 
Zero-length characters fields when concatenated with 
non-null fields yield result in null or zero-length string.
For example:
SELECT (Brand + Description + Info) AS Descr from 
MODEL
If any of the concatenantion fields are zero-length then 
Descr will be zero-length.
Using the parameter: empty_is_null=false
Thank You
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/217
HyperSQL Database Engine (HSQLDB) / Bugs / #217 shutdown compact corrupts data
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After doing a &quot;shutdown compact&quot; in Version 1.72aL I 
read the lines
error in /project/db/mp3.script line: 2
General error in statement [CREATE CACHED TABLE 
ARTIST ...
at System.out.
After that all data files are gone and the unprocessed 
tables are not in the script any more.
It was possible to track it somewhat down; it seems an 
index gets inserted which wasn't removed in
org.hsqldb.Database$DatabaseObjectNames.addName
DDL to reproduce:
CREATE CACHED TABLE base (
base int not null primary key,
name varchar not null,
path varchar not null,
removable bit not null
);
CREATE CACHED TABLE artist (
artist int not null primary key,
name varchar not null,
simplename varchar not null,
unique (name)
);
CREATE INDEX artistsimplename ON artist
(simplename);
CREATE CACHED TABLE title (
title int not null primary key,
name varchar not null,
simplename varchar not null,
unique (name)
);
CREATE INDEX titlesimplename ON title(simplename);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/218
HyperSQL Database Engine (HSQLDB) / Bugs / #218 dates are not being normalized in CURDATE()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently, the DATE SQL type is being treated exactly 
like the TIMESTAMP type. Instead, the DATE data 
should be &quot;normalized&quot;, as per the java.sql.Date class 
documentation:
&quot;To conform with the definition of SQL DATE, the 
millisecond values wrapped by a java.sql.Date 
instance must be 'normalized' by setting the hours, 
minutes, seconds, and milliseconds to zero in the 
particular time zone with which the instance is 
associated.&quot;
The function curdate() is not normalizing the dates it 
returns. This allows for an &quot;invalid&quot; date to be created. 
Here is an example of this bug:
create table date_bug( date DATE )
insert into date_bug values ( curdate() )
select * from date_bug where date &lt;= curdate()
-- should return 1 row - works ok
select * from date_bug where date &gt;= curdate()
-- should return 1 row - returns none
select * from date_bug where date &lt;= '2003-01-23'
-- manually specifying today´s date should yield one 
row, but instead none are returned
select * from date_bug where date &gt;= '2003-01-23
-- manually specifying today´s date should yield one 
row, works ok
Hope this helps. If you need further information, 
contact me at sieira@usa.net.
Thanks for the great program.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/219
HyperSQL Database Engine (HSQLDB) / Bugs / #219 Group By returning null values
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If you create a simple table like this:
create table test (a varchar(100),b numeric)
and then you execute this:
select a, sum(b)
from test
group by a
you will get a single row with null values. The expected 
result is no rows.
If you execute 
select a, sum(b)
from test
you will get a single row with null values. The expected 
result is a SQL error like this &quot;not a single-group group 
function&quot;.
Cheers.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/220
HyperSQL Database Engine (HSQLDB) / Bugs / #220 LEFT JOIN regression from Alpha J =&gt; L
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In Alpha J, I had built several queries using LEFT JOIN 
to detect inequality in table1.id = table2.id such a way 
table2.id is returned null !
On application testing with (Alpha L), I got bad results 
(null are not shown) : Alpha K, Alpha L and even latest 
Alpha M !
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/221
HyperSQL Database Engine (HSQLDB) / Bugs / #221 now() doesn't work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Whats happened with now()? It doesn't work in alpha_m.
Some changes at Tokenizer.wasValue() are in conflict 
with &quot;now()&quot;. If you execute:
select now() from dual
will get:
Unexpected token: ( in statement [select now() from 
dual] / Error Code: -11 / State: 37000
To solve this problem I removed sToken.equals(&quot;NOW&quot;) 
from return (at line 253 of Tokenizer.java). It works but I 
don't know the effects of this change.
Why &quot;NOW&quot; is there? Future features like Oracle's 
SYSDATE?
Cheers.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/222
HyperSQL Database Engine (HSQLDB) / Bugs / #222 Log-Thread not exiting if any connect fails before
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, 
Using the henplus JDBC Shell 
&lt;http://henplus.sourceforge.net/&gt; 
I noticed, that the Logger thread in hsqldb is not exiting 
properly, if any of the connect attempts to a database 
failed because of user/password failure for instance. 
Why I noticed this with henplus is, because henplus first 
tries to connect to the database just with the JDBC-URL 
alone and if this fails, prompts for the password. 
This means, that the first connect will always fail, while 
the second will succeed, if the user/password is right. 
The problem is, that hsqldb starts the Logger thread with 
the first attempt to connect to the database and 
increments the usage count .. however that connection 
never gets used, because connecting fails and throws 
an SQL-Exception (see 
jdbcConnection::openStandalone()). This means, that the 
usage count is always the number of all _attempted_ 
connects not real connects. 
I did a simple fix, see attached patch. This patch 
initializes the usage count with zero and _after_ the 
connect is successful (i.e. if no Exception has been 
thrown), the usage count is incremented. This will make 
sure, that the last active connection, that is close()ed, 
will shut down the Logger thread correctly. 
Note, however, that this is not a complete fix to the 
problem. If we get _any_ connection that connection that 
connects correcly, then this solution will work, since the 
database is removed and the Logger thread is closed in 
the close() of that very connection if the usage count 
turns out to be zero. However, if _no_ connection will 
succeed, then we will still have one database in the 
hashtable since no close() will run through (this is 
another problem: in finalize(), close() is called; however if 
this is a jdbcConnection that failed to connect, then the 
session is 'null' and executing a shutdown on that 
session will fail as well -- so the finalizer thread throws a 
NullPointerException. The finalaizer-Thread better should 
catch any Throwable instead of only a SQL-Exception).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/223
HyperSQL Database Engine (HSQLDB) / Bugs / #223 LEFT JOIN AND Null Values (ALPHA J)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Example :
DROP TABLE T_BOSS IF EXISTS;
DROP TABLE T_EMPLOYEE IF EXISTS;
CREATE TABLE T_BOSS (FIRST VARCHAR,LAST 
VARCHAR);
CREATE TABLE T_EMPLOYEE (FIRST 
VARCHAR,LAST VARCHAR);
INSERT INTO T_BOSS VALUES ('Ludovic','ANCIAUX');
INSERT INTO T_EMPLOYEE VALUES 
('Ludovic','ANCIAUX');
INSERT INTO T_EMPLOYEE VALUES ('Bill','GATES');
SELECT * FROM T_EMPLOYEE LEFT JOIN T_BOSS 
ON 
T_EMPLOYEE.FIRST = T_BOSS.FIRST WHERE 
T_BOSS.FIRST is Null;
You should have
&quot;Bill&quot;,&quot;Gates&quot;,Null,Null
but instead you got :
&quot;Ludovic&quot;,&quot;Anciaux&quot;,Null,Null
&quot;Bill&quot;,&quot;Gates&quot;,Null,Null
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/224
HyperSQL Database Engine (HSQLDB) / Bugs / #224 Error with aggregate functions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The statement 
select sum(field1) * sum(field2) from table1 
..works if field1 and field2 is of type FLOAT, but if it is of 
type BIGINT, it does not work. The I get this error: 
S1000 General error java.lang.ClassCastException: 
java.lang.Long in statement ...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/225
HyperSQL Database Engine (HSQLDB) / Bugs / #225 Strange Exceptions with Alpha M
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey,
I'm using the 1.7.2 since a couple of days in my test 
enviorment. So far everything fine.
Since yesterday I'm getting strange exceptions:
java.sql.SQLException: General error
at 
sun.jdbc.odbc.JdbcOdbc.throwGenericSQLException
(JdbcOdbc.java:6235)
at sun.jdbc.odbc.JdbcOdbc.SQLFreeEnv
(JdbcOdbc.java:2776)
at sun.jdbc.odbc.JdbcOdbcDriver.closeConnection
(JdbcOdbcDriver.java:839)
at sun.jdbc.odbc.JdbcOdbcConnection.close
(JdbcOdbcConnection.java:733)
at 
de.tc.base.datasourceManager.DatasourceConnection.cl
ose(DatasourceConnection.java:129)
at 
de.tc.base.datasourceManager.DatasourceConnection.fi
nalize(DatasourceConnection.java:156)
at java.lang.ref.Finalizer.invokeFinalizeMethod
(Native Method)
These General error exceptions occours too if I try to 
run the following script at once. If I do it in two steps it 
works.
drop table Literaturreferenz if exists;
create cached table Literaturreferenz
(
ID int not null identity,
ID_Literaturverweis int not null,
ID_Merkmalsgruppe int not null,
ID_Taxonomie int not null,
ID_Qualifier int null
);
alter table Literaturreferenz ADD CONSTRAINT 
fkLiteraturverweis foreign key (ID_Literaturverweis) 
references Literaturverweis (ID) on delete cascade;
alter table Literaturreferenz ADD CONSTRAINT 
fkMerkmalsgruppe foreign key (ID_Merkmalsgruppe) 
references Merkmalsgruppe (ID) on delete cascade;
alter table Literaturreferenz ADD CONSTRAINT 
fkTaxonomie foreign key (ID_Taxonomie) references 
Taxonomie (ID) on delete cascade;
alter table Literaturreferenz ADD CONSTRAINT 
fkQualifier foreign key (ID_Qualifier) references Qualifier 
(ID) on delete cascade;
If I do the constraints into the create table definition the 
whole create won't work.
These general Exception seemed not to be very 
important becauseI can still work with the database and 
be happy. But these exception above occoured after an 
insert of 32.000 records and that's was strange because 
all records are in the database (for my luck)
Alex
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/226
HyperSQL Database Engine (HSQLDB) / Bugs / #226 Driver.connect not verifying user/password
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Build: 1.7.2 
Email: kyle@lucentradius.com
If I connect to the Server with an invalid user or
invalid password (with a good username) I get a
connection, but the next db access via the connection
fails with a:
java.sql.SQLException: User not found: SAS
This exception should be thrown from the connect method.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/227
HyperSQL Database Engine (HSQLDB) / Bugs / #227 Transaction, UK constraint, Rolback produce lost of data
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I found some problems while using last stable version of 
hsqldb (1.7.1.).
Transaction and Unique Constraint violation and 
Rollback could produce unreliable db, and lost of data.
I try this (from Database Manager):
CREATE TABLE TUKR(
ID integer NOT NULL PRIMARY 
KEY,
NAME varchar(20) NOT NULL,
VALUE integer,
CONSTRAINT TUKR01
UNIQUE (NAME)
);
INSERT INTO TUKR(ID, NAME, VALUE)VALUES
(1, 'Name 1', 1);
INSERT INTO TUKR(ID, NAME, VALUE)VALUES
(2, 'Name 2', 2);
INSERT INTO TUKR(ID, NAME, VALUE)VALUES
(3, 'Name 3', 3);
INSERT INTO TUKR(ID, NAME, VALUE)VALUES
(4, 'Name 4', 4);
SET AUTOCOMMIT FALSE;
UPDATE TUKR
SET NAME='Name 1'
WHERE ID=4;
// unique constraint violation occures
// off course in general case try:
ROLLBACK;
//S1000 General error java.lang.NullPointerException 
in ... Code -40/S1000
After that depend of the amount and type of data in 
destination table (in this case TUKR), some data would 
be lost, additonaly many other commands produce 
same S1000 error (including SHTUDOWN).
From JDBC connection behaviour is exactly the same.
PK violation lads to similar results.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/228
HyperSQL Database Engine (HSQLDB) / Bugs / #228 DatabaseManagerSwing
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I recently downloaded/installed hsqldb(1_7_1). I 
tried running the DatabaseManagerSwing class and 
get the following:
Exception in thread &quot;main&quot; 
java.lang.NullPointerException at 
javax.swing.ImageIcon.&lt;init&gt;(ImageIcon.java:138)
at org.hsqldb.util.CommonSwing.getIcon(Unknown 
Source)
at org.hsqldb.util.DatabaseManagerSwing.main
(Unknown Source)
at org.hsqldb.util.DatabaseManagerSwing.main
(Unknown Source)
It apppears&quot;hsqldb.gif&quot; is not in the jar. Where did I 
go wrong or was it mistakenly left out of the package?
Thanks,
Frank
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/229
HyperSQL Database Engine (HSQLDB) / Bugs / #229 Foreign key constraint error with trees
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The foreign key constraint does not work correctely
when used within one table.
Example: The table A below is used to create a tree
structure in a database table.
DROP TABLE A;
CREATE TABLE A (
ID INTEGER PRIMARY KEY,
ID_PARENT INTEGER,
PAYLOAD VARCHAR( 100 ),
CONSTRAINT TREE_CONST FOREIGN KEY( ID_PARENT )
REFERENCES A( ID )
);
It should be possible to fill the table with the nodes
of the tree:
INSERT INTO A VALUES (1,1,'ROOT');
INSERT INTO A VALUES (2,1,'NODE 1' );
INSERT INTO A VALUES (3,1,'NODE 2' );
...
Though the first insert would create a legal table
contents, it creates an SQL Error: 
--------------------------------------------------------------------------------------------------------------------------------------
Integrity constraint violation: TREE_CONST table: A in
statement [INSERT INTO A VALUES (1,1,'ROOT');
] / Error Code: -8 / State: 23000 
Workaround:
insert the first line directely into the hsqldb.script
file, restart hsqldb. This creates the root node, all
other inserts work.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/230
HyperSQL Database Engine (HSQLDB) / Bugs / #230 error 23000 after alter table with PK
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
I am using HSQLDB version 1.7.1.
I am running the following:
//-----------------------------------------------------
//drop table b;
//drop table a;
create table a
(
id integer primary key
);
create table b 
(
id integer, 
id_a integer,
CONSTRAINT constraint1 
FOREIGN KEY(id_a) REFERENCES a(id)
);
insert into a (id) values (1);
insert into a (id) values (2);
insert into b (id,id_a) values(100,1);
alter table a add column amount integer default 0 not 
null;
insert into b (id,id_a) values(100,2);
//-----------------------------------------------------
The last insert to table b fails with error 23000 - Integrity 
constrains Violation.
Only stopping HSQLDB, and starting it again will allow 
that insert to work properly.
It looks like a BUG to me.
Any suggestions?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/231
HyperSQL Database Engine (HSQLDB) / Bugs / #231 IDENTITY skips numbers when table updated
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I think I found a bug in ALPHA M:
I have noticed in my application that a table with an 
IDENTITY column skips numbers when any row of the 
table is updated. Here is an example:
CREATE CACHED TABLE Test
(
id INTEGER IDENTITY
str VARCHAR(80)
)
INSERT INTO Test (str) VALUES ('foo')
CALL IDENTITY() --- reports 0
INSERT INTO Test (str) VALUES ('foo')
CALL IDENTITY() --- reports 1
UPDATE Test SET str='bar' WHERE id=0
INSERT INTO Test (str) VALUES ('foo')
CALL IDENTITY() --- reports 4 instead of 2
Here is the final contents of the table:
ID STR 
-- --- 
0 bar 
1 foo 
4 foo 
Contact me at sieira@usa.net if further clarifications 
are needed.
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/232
HyperSQL Database Engine (HSQLDB) / Bugs / #232 Foreign-key constraint fails on update
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have encountered a problem with foreign keys. I´ve 
read that others have mentioned this problem before me 
and that it has been fixed in later versions.
I first used hsqldb_1_7_1 and then tried the same in 
hsqldb_1_7_2_alpha but with the same result.
I´ve created to tables:
CREATE TABLE team(name VARCHAR(20) NOT NULL 
PRIMARY KEY)
CREATE TABLE user(username VARCHAR(15) NOT 
NULL PRIMARY KEY,level INTEGER NOT 
NULL,password VARCHAR(20) NOT NULL,teamname 
VARCHAR(20) NOT NULL, CONSTRAINT fk_teamname 
FOREIGN KEY(teamname) REFERENCES team(name))
I then add a team and some users (on inserts-
statements the constraint works fine), when I try to 
update a user and changing his team to one that does 
not exist, it still works. That is the constraint has no 
effect.
Questions:
Is there any way I can work around this problem, or 
write the syntax in another way?
Is this problem supposed to be solved in the 
1_7_2_alpha-version?
Best regards / Philip
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/233
HyperSQL Database Engine (HSQLDB) / Bugs / #233 DatabaseManagerSwing misses Icon
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When starting org.hsqldb.util.DatabaseManager I get a
NullPointerException:
java.lang.NullPointerException
at javax.swing.ImageIcon.&lt;init&gt;(ImageIcon.java:134)
at org.hsqldb.util.CommonSwing.getIcon(Unknown Source)
at org.hsqldb.util.DatabaseManagerSwing.main(Unknown
Source)
at org.hsqldb.util.DatabaseManagerSwing.main(Unknown
Source)
The reason is quite simple: There is no hsqldb.gif
under org/hsqldb/util in the JAR file (or anywhere else
in the 1.7.1 release distribution).
Could you please add that image file (and maybe even
add that icon to the AWT Database Manager)?
Otherwise your database is great. I currently use it to
replace a big fat Oracle database during development
work and regression testing :-)
Hendrik Wördehoff
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/234
HyperSQL Database Engine (HSQLDB) / Bugs / #234 NullPointerException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello 
we are using Hsqldb 1.7.2. The database is 
in multi-user mode with the following flags: 
-trace &quot;true&quot; -silent &quot;false&quot;
We are getting NullPointerException in database 
window.The following test condition is observed:
To reproduce the bug, make sure HSQL database is 
running for very long time and DB is quite big.ie size of 
the database is 
FileName Size
Database.backup---&gt;22.8 MB
Database.script-----&gt;10.3 MB
Database.data------&gt;40.2 MB 
Logged in to DB as Administrator
We are using Connection pool to update 3 hsqldb 
database using type 4 driver of hsqldb.
Right below the line &quot;Listening for connections... we get..
java.lang.NullPointerException
at org.hsqldb.Session.check(Unknown 
Source)
at org.hsqldb.Parser.parseTableFilter
(Unknown Source)
at org.hsqldb.Parser.parseSelect(Unknown 
Source)
at org.hsqldb.Parser.processSelect(Unknown 
Source)
at org.hsqldb.Database.execute(Unknown 
Source)
at org.hsqldb.serverconnection.run(Unknown 
Source)
at java.lang.Thread.run(Thread.java.484)
The above error occurs even for latest alpha versions 
too..
Database.properties contents are shown below:
#HSQL database
#Sat Feb 22 23:23:40 GMT+05:30 2003
sql.strict_fk=true
readonly=false
sql.strong_fk=true
hsqldb.version=1.7.2
hsqldb.log_type=0
version=1.7.2
hsqldb.cache_scale=14
sql.compare_in_locale=false
sql.month=true
hsqldb.log_size=200
modified=yes
hsqldb.cache_version=1.7.0
hsqldb.original_version=1.7.2
hsqldb.compatible_version=1.7.2
sql.enforce_size=false
Is there any workaround to solve this. 
Thanks in advance
Neppo/Srini
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/235
HyperSQL Database Engine (HSQLDB) / Bugs / #235 ClassLoader problem causing file lock error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If you attempt to open a connection on Windows 
through two seperate ClassLoader(CL) who each have 
their parent set to null you will get the &quot;DB in use by 
another process error&quot;. This occurs even if the first CL 
has been null'd because either the lock hasn't been 
GC'd or it has to do with Windows not releasing the lock 
properly.
The easiest way to reproduce this is to create two JUnit 
tasks which both attempt to open a connection then run 
those JUnit tasks through ANT.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/236
HyperSQL Database Engine (HSQLDB) / Bugs / #236 PowerBuilder 8.01 crashed when trying to connect to Hsqldb
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The issue could be PowerBuilder itself, but I post it here 
to see if it rings any belt.
From PowerBuilder 8 IDE, I can connect to Oracle 8,
Informix 7, and SqlAnywhere (ASA) 6 JDBC drivers.
But, when I connect to Hsqldb 1.72 rev M, then PB will 
crash.
Is it because Hsqldb does not implement 
getColumnDisplaySize nor schema? I don't know.
Ben
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/237
HyperSQL Database Engine (HSQLDB) / Bugs / #237 Problems Running on NetWare 6
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
O/S: Novell NETWARE v.6.0SP2 patched to updates (noted
below)
JVM: JVM Version 1.3.1_06 patched to level noted below.
First confirmed as a JVM (*see below*) problem by
original submitter, Dick Hildreth, in the Open
discussion forum and currently under study. Mr.
Hildreth's detailed report of the problem follows,
followed by further posts from Mr. Hildreth and
Maintainer. Original Forum thread is at:
https://sourceforge.net/forum/message.php?msg_id=1912883
Problem report follows:
Background
Rows were disappearing from the hSQLdb 1.7.1 run
database. When a record was updated, all records with
key values (char type key) lexically before the
selected one would disappear. No deletes were found in
the .script file yet after doing a SELECT query, the
records would be missing. Also, running a script
command in the DatabaseManager and looking at the
resultant file, the records
would also be missing. This only occurred when the
hSQLdb client was running on the NetWare server (either
a calling program or hSQLdb's DataBaseManager program
running in the NetWare GUI). A client running on a
Windows box could run the update without exhibiting the
problem.
Running System
The above occurred on a Netware 6.0 server patched to
service pack level 2. Two post sp2 patches had been
applied: the NSS patch dated 02-01-2003/11:37AM and the
TCP patch version 6.15o. The JVM was version 1.3.1
service pack level 3 which showed the following
information under the Netware command module
java:
ˇ JVM Version 1.3.1_06
ˇ Build 03011414
ˇ Version 1.31c
ˇ Dated January 14, 2003
The problem was replicated on another server with the same 
configuration with the exception of the two post sp2
patches.
Fix
Applying a different JVM has removed this problem from
the server. The new 1.4.0 JVM (and the required new
LIBC from March 2003) has the following attributes
displayed under the Netware command module java:
ˇ JVM Version 1.4.0_02
ˇ Build 03012714
ˇ Version 1.40.03
ˇ Dated January 27, 2003
With this sole change, the loss of records ceased.
Bug report filed by dedmike.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/238
HyperSQL Database Engine (HSQLDB) / Bugs / #238 InputStream error with unique indexes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version 1.7.1 with Sun JDK 1.4.0.03 on Windows 2000:
I'm getting inputStream errors and sometimes 
numberformat exceptions on startup of a database.
To reproduce create a new database run the attached 
create.sql script in the manager and restart the 
database. I get this error :
Server.run/init: java.sql.SQLException: InputStream 
error: InputStream error in
statement [SET TABLE IMAGE INDEX '128 128 128 1']
java.sql.SQLException: InputStream error: InputStream 
error in statement [SET TA
BLE IMAGE INDEX '128 128 128 1']
at org.hsqldb.Trace.getError(Unknown Source)
at org.hsqldb.Log.runScript(Unknown Source)
at org.hsqldb.Log.open(Unknown Source)
at org.hsqldb.Database$Logger.openLog(Unknown 
Source)
at org.hsqldb.Database.open(Unknown Source)
at org.hsqldb.Database.&lt;init&gt;(Unknown Source)
at org.hsqldb.Server.openDB(Unknown Source)
at org.hsqldb.Server.run(Unknown Source)
at org.hsqldb.Server.main(Unknown Source)
Sometimes I get Numberformat-Exceptions when SET 
TABLE IMAGE INDEX '-1 0 -1 0' contains negative 
numbers.
If i leave out the unique index it is running fine.
Achim
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/239
HyperSQL Database Engine (HSQLDB) / Bugs / #239 Thread SQL Scripts in Help Forum
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Enclosed is the SQL Script that I do not manage to have
run by the ScriptTool. It is the same that produces the
&quot;Wrong data type or data too long in DEFAULT clause&quot;
error from my DatabaseManager thread.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/240
HyperSQL Database Engine (HSQLDB) / Bugs / #240 Wrong math
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using hsqldb 1.71.
Following is an example that the engine can produce
wrong math. This may be the result of data type (or
data precision/scale) conversion error:
drop table test4
create table test4 (id integer, cost numeric (12,2))
insert into test4 values (1, 1)
insert into test4 values (2, 2.0)
insert into test4 values (3, 3.81)
select sum(cost), sum(cost)/3 wrong, sum(cost)/3.0 
right from test4
COST WRONG RIGHT 
**** ***** ***** 
6.81 1.97 2.27 
Ben
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/241
HyperSQL Database Engine (HSQLDB) / Bugs / #241 Problem with &quot;UPDATE ...&quot;
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I haven't had time to investigate this fully, so apologies 
for the lack of detail.
I have some code which uses the HSQLDB in stand-alone 
mode. I find that when I use UPDATE to modify an entry 
in a table and subsequently COMMIT it, the modification 
is visible only for the life time of the run time. Closing 
the application and reloading it causes the pre-UPDATE 
data to be retrieved. I have tried switching to CACHED 
tables which had no effect. Looking at the .script file 
produced when the tables were uncached seemed to 
imply that the behaviour for UPDATE was implemented 
through the use of DELETE followed by INSERT and that 
the SQL that did this was not produced correctly 
(DELETEd all records in table then INSERTed the same 
record three times!).
By changing my code to use DELETE and INSERT instead 
of UPDATE. I can now get data to remain modified. I 
may have missed something here.
I look forward to seeing the inclusion of 
CONCUR_UPDATABLE. This would have made the coding 
much easier. Not complaining though. I currently have a 
RDMS for an application and it saves me from the 
nightmare of using JDBC-ODBC -&gt; Microsoft JET... which 
didn't really appeal. Keep up the good work guys!
Jon S
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/242
HyperSQL Database Engine (HSQLDB) / Bugs / #242 echo_ scripts not found
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I don't know what system you use to develop hsqldb but
echo_failure, echo_warning and similar commands are not
present on my GNU/Linux Debian system. I'm using stable
hsqldb version.
Regards,
Max
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/243
HyperSQL Database Engine (HSQLDB) / Bugs / #243 BIGINT corrupts very big negative long values.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi all:
I can't store very big negative long values 
(generated by a hash function) into bigint column 
data type.
Please test it:
sql&gt; create table zz (key bigint);
sql&gt; insert into zz values (-
1514143584757176268);
sql&gt;insert into zz values (-
2578977450198231102);
sql&gt; select * from zz;
Result zz:
-1818449868
1295062978
Very big positive longs seem to be work OK.
I solve my problem storing long values as String, 
but long stored in native form will be better.
Best regards, Marcelo.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/244
HyperSQL Database Engine (HSQLDB) / Bugs / #244 SQL SELECT IN operator does not work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
IN operator used as part of expression in SELECT sql
statement does not work with 1.7.1.a version.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/245
HyperSQL Database Engine (HSQLDB) / Bugs / #245 standalone is not exclusive
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello!
I'm using hsqldb 1.7.1 and don't figure out what's
wrong with the standalone database url.
Why is it possible to connect with DatabaseManagerSwing
to a hsql database in STANDALONE (IN-PROCES) mode
several times simultaneously??? And I can also start a
server for the same database, simultaneously , too?
Looks like a bug (the database is the same for sure).
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/246
HyperSQL Database Engine (HSQLDB) / Bugs / #246 database script file order error 1.7.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i don't know if there's any special reason why in the 
class DatabaseScript, more exactly in the method 
getScript(), the first thing you do is to iterate the vector 
tTable, ignoring temps and views....
then you dump users, and their grants to the script file
and finally you iterate one more time on tTable, to dump 
the views creation script
the problem is:
suppose sa creates tables, views, and a user, then 
grants permission for the new user on a view
if you connect as the new user you can access the 
view, but if you shutdown the engine, the next time you 
start it up it finds the grant .... on &lt;view&gt; statement 
before it finds the create view statement, so an error 
appears saying that the view is an unknown table
i suppose there's a reason about not dumping the views, 
when you dump the tables (there's a line saying &quot;// 
fredt@users 20020221 - patch 513005 by 
sqlbob@users (RMP)&quot;)
hope you fix it soon... actually i'm changing the order in 
the script manually
thanks in advance
Alejandro Gomez
agomez@cibermatica.net
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/247
HyperSQL Database Engine (HSQLDB) / Bugs / #247 ResultSetMetaData getColumnType error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ResultSetMetaData.getColumnType() returns null 
pointer exception when called, but however returns 
correct value sometimes (in another test program). 
The application program was checked using jdb to 
ensure that the correct parameter was passed to 
getColumnType. The metadata was used to implement 
the Java Swing AbstractTableModel. Other metadata 
functions also failed to return a proper value except 
getColumnCount() which returned the correct count. 
Another short program was written to test 
ResultSetMetaData.getColumnType(i) shows that the 
function worked perfectly in this case.
lks@webpres.com.my
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/248
HyperSQL Database Engine (HSQLDB) / Bugs / #248 Column size ignored
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I created a table with a char(1) column and the DB had 
no problem to insert values of much greater length.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/249
HyperSQL Database Engine (HSQLDB) / Bugs / #249 out of memory
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Also I created the tabled as &quot;cached&quot; the database ran 
out of memory (test.data ~25MB)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/250
HyperSQL Database Engine (HSQLDB) / Bugs / #250 count distinct rolls back when no records counted
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
executing a count distinct query, when there are no 
records counted, fails. a rollback is executed an null is 
returned.
trace when there are records:
1049962192937|0|0|statement|SELECT count(distinct 
A0.ID) FROM IBANX_PERMIT A0|SELECT count
(distinct A0.ID) FROM IBANX_PERMIT A0
1049962192937|0|0|commit||
trace when there are no records:
1049962192781|16|0|statement|SELECT count(distinct 
A0.ID) FROM IBANX_PERMIT A0|SELECT count
(distinct A0.ID) FROM IBANX_PERMIT A0
1049962192796|0|0|rollback||
roger janssen
roger.janssen@ibanx.nl
iBanx
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/251
HyperSQL Database Engine (HSQLDB) / Bugs / #251 Failure to fire trigger on table insert
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Operating System: Windows 2000
Service Pack: Service Pack 3
HSQL 1.7.1
IDE: Oracles JDeveloper 
JDK 1.3
Jave Compiler: Oracles's 
Hi,
I have created a database that has 2 triggers that 
should be fired on deletes and inserts operations on a 
table called FILE. The trigger for deletions works fine, 
however the trigger for insertion fails to be fired. I have 
tried various combinations i.e. be fired before and after 
insertion - but the trigger for insertion never gets fired.
I have enclosed a zip file that have the following 
directories:
.../mywork/Slide/database - conatins the HSQL 
database files. The *.bat are what is used to startup the 
database. 
../mywork/slide/slidebank/src/... all database related 
java source files for commicating to the database. 
Any further information or help - please email me
Cheers
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/252
HyperSQL Database Engine (HSQLDB) / Bugs / #252 cannot have foreign key constraint on same table
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is it possible to have cascading records? Each record has 
a parent record. The root record references itself.
Consider the create table statement below (which 
works), however you cannot insert the first record 
because cnt_parentid is defined not null.
create table confignodetype (
cnt_nodetypeid numeric(10) not null primary key
,cnt_parentid numeric(10) not null
,cnt_name varchar(40) not null
,constraint fk_cnt_parentid foreign key (cnt_parentid) 
references confignodetype(cnt_nodetypeid));
This does not work:
INSERT INTO confignodetype VALUES (-1,-1,'prj');
The foreign key is violated, because record id -1 does not 
exist.
Thanks
tomsk
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/253
HyperSQL Database Engine (HSQLDB) / Bugs / #253 cannot use self join on unique column
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Found in production 1.7.1 and in ALPHA_M.
This bug is related to #722442
To reproduce do the following:
* create a table with two text fields
CREATE TABLE CONFIGUSER(USR_USERID NUMERIC NOT 
NULL PRIMARY KEY,USR_USERNAME VARCHAR NOT 
NULL,USR_PASSWORD VARCHAR NOT NULL)
* insert some values
INSERT INTO CONFIGUSER VALUES(-5,'guest','guest')
INSERT INTO CONFIGUSER VALUES(-4,'user','user')
INSERT INTO CONFIGUSER VALUES(-3,'owner','owner')
INSERT INTO CONFIGUSER VALUES(-2,'admin','xxx')
INSERT INTO CONFIGUSER VALUES(-1,'sadmin','xxx')
* select all users with their username as password
select * from configuser where usr_username = 
usr_password
OK: 3 rows selected
* create a unique index on one column
CREATE UNIQUE INDEX IDX_USERNAME ON 
CONFIGUSER(USR_USERNAME)
* select all users with their username as password
select * from configuser where usr_username = 
usr_password
ERROR: Column not found USR_PASSWORD
-------------------------------------------
I have cascading records in several tables - each record 
has a parent record in the same table - the root has 
itself as parent.
I cannot define the parent id as foreign key of the id from 
the same table.
Thanks 
tomsk
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/254
HyperSQL Database Engine (HSQLDB) / Bugs / #254 CHECKPOINT DEFRAG fails on Alpha_J
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If there was no prior data activity in the script file as in:
GRANT ALL ON CLASS &quot;java.lang.Math&quot; TO PUBLIC
GRANT ALL ON CLASS &quot;org.hsqldb.Library&quot; TO PUBLIC
CREATE USER SA PASSWORD &quot;&quot; ADMIN
CREATE ALIAS MINUTE FOR &quot;org.hsqldb.Library.minute&quot;
CREATE ALIAS MONTHNAME 
FOR &quot;org.hsqldb.Library.monthname&quot;
CREATE ALIAS RIGHT FOR &quot;org.hsqldb.Library.right&quot;
CREATE ALIAS LOG10 FOR &quot;org.hsqldb.Library.log10&quot;
CREATE ALIAS BITOR FOR &quot;org.hsqldb.Library.bitor&quot;
CREATE ALIAS HEXTORAW 
FOR &quot;org.hsqldb.Library.hexToRaw&quot;
CREATE ALIAS CONCAT FOR &quot;org.hsqldb.Library.concat&quot;
CREATE ALIAS BITAND FOR &quot;org.hsqldb.Library.bitand&quot;
CREATE ALIAS MOD FOR &quot;org.hsqldb.Library.mod&quot;
CREATE ALIAS FLOOR FOR &quot;java.lang.Math.floor&quot;
CREATE ALIAS TAN FOR &quot;java.lang.Math.tan&quot;
CREATE ALIAS RTRIM FOR &quot;org.hsqldb.Library.rtrim&quot;
CREATE ALIAS CEILING FOR &quot;java.lang.Math.ceil&quot;
CREATE ALIAS UPPER FOR &quot;org.hsqldb.Library.ucase&quot;
CREATE ALIAS PI FOR &quot;org.hsqldb.Library.pi&quot;
CREATE ALIAS DEGREES FOR &quot;java.lang.Math.toDegrees&quot;
CREATE ALIAS YEAR FOR &quot;org.hsqldb.Library.year&quot;
CREATE ALIAS EXP FOR &quot;java.lang.Math.exp&quot;
CREATE ALIAS SIGN FOR &quot;org.hsqldb.Library.sign&quot;
CREATE ALIAS NOW FOR &quot;org.hsqldb.Library.now&quot;
CREATE ALIAS SPACE FOR &quot;org.hsqldb.Library.space&quot;
CREATE ALIAS DAYOFYEAR 
FOR &quot;org.hsqldb.Library.dayofyear&quot;
CREATE ALIAS ROUND FOR &quot;org.hsqldb.Library.round&quot;
CREATE ALIAS USER FOR &quot;org.hsqldb.Library.user&quot;
CREATE ALIAS RAND FOR &quot;java.lang.Math.random&quot;
CREATE ALIAS ATAN2 FOR &quot;java.lang.Math.atan2&quot;
CREATE ALIAS LEFT FOR &quot;org.hsqldb.Library.left&quot;
CREATE ALIAS ACOS FOR &quot;java.lang.Math.acos&quot;
CREATE ALIAS DATABASE 
FOR &quot;org.hsqldb.Library.database&quot;
CREATE ALIAS ASIN FOR &quot;java.lang.Math.asin&quot;
CREATE ALIAS DAYOFMONTH 
FOR &quot;org.hsqldb.Library.dayofmonth&quot;
CREATE ALIAS INSERT FOR &quot;org.hsqldb.Library.insert&quot;
CREATE ALIAS SQRT FOR &quot;java.lang.Math.sqrt&quot;
CREATE ALIAS SUBSTRING 
FOR &quot;org.hsqldb.Library.substring&quot;
CREATE ALIAS TRUNCATE 
FOR &quot;org.hsqldb.Library.truncate&quot;
CREATE ALIAS LENGTH FOR &quot;org.hsqldb.Library.length&quot;
CREATE ALIAS RAWTOHEX 
FOR &quot;org.hsqldb.Library.rawToHex&quot;
CREATE ALIAS RADIANS FOR &quot;java.lang.Math.toRadians&quot;
CREATE ALIAS LOG FOR &quot;java.lang.Math.log&quot;
CREATE ALIAS ROUNDMAGIC 
FOR &quot;org.hsqldb.Library.roundMagic&quot;
CREATE ALIAS WEEK FOR &quot;org.hsqldb.Library.week&quot;
CREATE ALIAS REPEAT FOR &quot;org.hsqldb.Library.repeat&quot;
CREATE ALIAS LCASE FOR &quot;org.hsqldb.Library.lcase&quot;
CREATE ALIAS COT FOR &quot;org.hsqldb.Library.cot&quot;
CREATE ALIAS IDENTITY FOR &quot;org.hsqldb.Library.identity&quot;
CREATE ALIAS CURDATE 
FOR &quot;org.hsqldb.Library.curdate&quot;
CREATE ALIAS COS FOR &quot;java.lang.Math.cos&quot;
CREATE ALIAS LOCATE FOR &quot;org.hsqldb.Library.locate&quot;
CREATE ALIAS ABS FOR &quot;org.hsqldb.Library.abs&quot;
CREATE ALIAS LTRIM FOR &quot;org.hsqldb.Library.ltrim&quot;
CREATE ALIAS ASCII FOR &quot;org.hsqldb.Library.ascii&quot;
CREATE ALIAS HOUR FOR &quot;org.hsqldb.Library.hour&quot;
CREATE ALIAS DIFFERENCE 
FOR &quot;org.hsqldb.Library.difference&quot;
CREATE ALIAS SECOND FOR &quot;org.hsqldb.Library.second&quot;
CREATE ALIAS SIN FOR &quot;java.lang.Math.sin&quot;
CREATE ALIAS DAYOFWEEK 
FOR &quot;org.hsqldb.Library.dayofweek&quot;
CREATE ALIAS SOUNDEX 
FOR &quot;org.hsqldb.Library.soundex&quot;
CREATE ALIAS QUARTER 
FOR &quot;org.hsqldb.Library.quarter&quot;
CREATE ALIAS SUBSTR 
FOR &quot;org.hsqldb.Library.substring&quot;
CREATE ALIAS CURTIME 
FOR &quot;org.hsqldb.Library.curtime&quot;
CREATE ALIAS DAYNAME 
FOR &quot;org.hsqldb.Library.dayname&quot;
CREATE ALIAS UCASE FOR &quot;org.hsqldb.Library.ucase&quot;
CREATE ALIAS ATAN FOR &quot;java.lang.Math.atan&quot;
CREATE ALIAS MONTH FOR &quot;org.hsqldb.Library.month&quot;
CREATE ALIAS POWER FOR &quot;java.lang.Math.pow&quot;
CREATE ALIAS CHAR FOR &quot;org.hsqldb.Library.character&quot;
CREATE ALIAS LOWER FOR &quot;org.hsqldb.Library.lcase&quot;
CREATE ALIAS REPLACE 
FOR &quot;org.hsqldb.Library.replace&quot;
set autocommit false
commit
The &quot;checkpoint defrag&quot; statement fails as follows:
java.lang.NullPointerException
at org.hsqldb.Log.checkpoint(Unknown Source)
at org.hsqldb.Database$Logger.checkpoint(Unknown 
Source)
at org.hsqldb.Database$Logger.access$000(Unknown 
Source)
at org.hsqldb.Database.processCheckpoint(Unknown 
Source)
at org.hsqldb.Database.execute(Unknown Source)
at org.hsqldb.ServerConnection.run(Unknown Source)
at java.lang.Thread.run(Thread.java:536)
Unfortunately this is a tough one to figure a workaround for.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/255
HyperSQL Database Engine (HSQLDB) / Bugs / #255 Delete not commited
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using hsqldb version 1.7.1 as standalone database and 
JDBC driver to access. Java application is single-user, so only 
one connection is created at program start and its shared (no 
threads) until the end of application. After deleting more than one 
record from some table, only one is deleted, others can be 
visible in next select. Database is in (default) auto commit mode 
and to making me sure, I have added conn.commit() after delete 
operation. But &quot;delete problem&quot; appears again.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/256
HyperSQL Database Engine (HSQLDB) / Bugs / #256 CREATE ALIAS issues for java.lang.Math.(min,max)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
see next comment
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/257
HyperSQL Database Engine (HSQLDB) / Bugs / #257 HAVING exception using TAG: latest pre ALPHA_N updates 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi Fred.
I ran into a defect that I thought initially I had 
caused with the code tagged &quot;pre ALPHA_N 
refactored code&quot;
The incident does NOT manifest in the ALPHA M 
files download.
However, after some frustrating work and not being 
able to find anything in my added/refactored code 
that would cause this defect, I decided to do a 
checkout that consists of a snapshot of what was 
in the hsqldb-dev CVS, just prior to the &quot;pre 
ALPHA_N refactored code&quot; tagged updates. Lo and 
behold, the same defect manifests as in my local 
working checkout.
there are a few related defects, but the following 
illustrates the biggest part of the problem, which I 
believe is related to Expression.setTrue() or 
possibly an incorrectly calculated iHavingIndex and 
some unwanted interaction with aggregating value:
Say, after performing the database manager &quot;insert 
test data,&quot; I do a select like:
select firstname, count(*) as &quot;count(*)&quot; from 
Customer group by firstname
This is fine. I get the expected result:
FIRSTNAME count(*) 
--------- -------- 
Laura 5 
Susanne 5 
Anne 2 
Michael 3 
Sylvia 4 
James 4 
Andrew 4 
Julia 4 
George 3 
Bill 5 
John 2 
Janet 3 
Bob 2 
Mary 2 
Robert 2 
However, say I issue the same query but with 
a &quot;having&quot; clause involving the &quot;count(*)&quot; term (any 
operator and value will do...perhaps any aggregate 
expression as well...I haven't tested that far yet).
Then I get:
select firstname, count(*) from Customer group by 
firstname having count(*) &gt; n 
SQL 
Error 
-----------------------------------------
-----------------------------------------
-----------------------------------------
-----------------------------------------
-------------------------------- 
S1000 General error java.lang.ClassCastException: 
java.lang.Boolean in statement [select firstname, 
count(*) from Customer group by firstname having 
count(*) &gt; 1] / Error Code: -40 / State: S1000 
With a stack trace like this:
java.lang.ClassCastException: java.lang.Boolean
at org.hsqldb.Column.compare
(Column.java:945)
at org.hsqldb.Expression.getAggregatedValue
(Expression.java:1418)
at org.hsqldb.Select.buildResult
(Select.java:561)
at org.hsqldb.Select.getResult(Select.java:327)
at org.hsqldb.Parser.processSelect
(Parser.java:135)
at org.hsqldb.Database.execute
(Database.java:495)
at 
org.hsqldb.jdbcConnection.executeStandalone
(jdbcConnection.java:3122)
at org.hsqldb.jdbcConnection.execute
(jdbcConnection.java:2661)
at org.hsqldb.jdbcStatement.fetchResult
(jdbcStatement.java:1768)
at org.hsqldb.jdbcStatement.execute
(jdbcStatement.java:728)
at org.hsqldb.util.DatabaseManager.execute
(DatabaseManager.java:776)
at 
org.hsqldb.util.DatabaseManager.actionPerformed
(DatabaseManager.java:472)
at java.awt.Button.processActionEvent
(Button.java:382)
at java.awt.Button.processEvent
(Button.java:350)
at java.awt.Component.dispatchEventImpl
(Component.java:3614)
at java.awt.Component.dispatchEvent
(Component.java:3476)
at java.awt.EventQueue.dispatchEvent
(EventQueue.java:456)
at 
java.awt.EventDispatchThread.pumpOneEventForHie
rarchy(EventDispatchThread.java:201)
at 
java.awt.EventDispatchThread.pumpEventsForHierar
chy(EventDispatchThread.java:151)
at java.awt.EventDispatchThread.pumpEvents
(EventDispatchThread.java:145)
at java.awt.EventDispatchThread.pumpEvents
(EventDispatchThread.java:137)
at java.awt.EventDispatchThread.run
(EventDispatchThread.java:100)
So this proves that the defect was in the pre Alpha 
N CVS *BEFORE* the last update.
I would list the stack trace using the latest CVS, so 
that you don't have to translate the line numbers, 
except that I can't build the latest hsqldb-dev CVS 
due to its missing the Token.java file in 
org/hsqldb. Would you please commit this to the 
CVS? 
Thanks,
Campbell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/258
HyperSQL Database Engine (HSQLDB) / Bugs / #258 Error on using full qualified column names in insert command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Trying to update a table by using full qualified column 
names like &lt;table name&gt;.&lt;column name&gt; we get 
a &quot;Column not found&quot; error. Example code:
db.update(&quot;INSERT INTO sample_table
(sample_table.str_col, sample_table.num_col) VALUES
('Ford', 100)&quot;);
java.sql.SQLException: Column not found: 
SAMPLE_TABLE.STR_COL in statement [INSERT 
INTO sample_table(sample_table.str_col,num_col) 
VALUES('Ford', 100)]
Is this a bug? Do you think this syntax could be 
supported in future?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/259
HyperSQL Database Engine (HSQLDB) / Bugs / #259 Serialization failure
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi.
Here is bug scenario:
0) I'm starting application with in-process hsqldb server.
1) I'm creating sample table (REGISTRATIONS).
2) I'm inserting sample object into it.
3) I'm shutdowning hsqldb server using &quot;SHUTDOWN&quot;
command and exciting application;
4) Second time, when I trying to start application with
existing database, a &quot;java.sql.SQLException:
Serialization failure&quot; exception occurs while creating
a connection to database.
I have debugged hsqldb code and checked that method
&quot;readLongVarString()&quot; in TextDatabaseRowInput.readOther
probably returns incorrect value. It reads object's
binary data only until first carriage return in binary
data occurs.
I've created demo which is packed into errorSample.zip.
Here is full error stacktrace:
java.sql.SQLException: Serialization failure
at org.hsqldb.Trace.getError(Unknown Source)
at org.hsqldb.Trace.error(Unknown Source)
at org.hsqldb.ByteArray.deserialize(Unknown Source)
at org.hsqldb.TextDatabaseRowInput.readOther(Unknown
Source)
at org.hsqldb.DatabaseRowInput.readData(Unknown Source)
at org.hsqldb.CachedRow.&lt;init&gt;(Unknown Source)
at org.hsqldb.TextCache.makeRow(Unknown Source)
at org.hsqldb.Cache.getRow(Unknown Source)
at org.hsqldb.Table.setIndexRoots(Unknown Source)
at org.hsqldb.Table.setIndexRoots(Unknown Source)
at org.hsqldb.TextTable.openCache(Unknown Source)
at org.hsqldb.TextTable.setDataSource(Unknown Source)
at org.hsqldb.Database.processSet(Unknown Source)
at org.hsqldb.Database.execute(Unknown Source)
at org.hsqldb.Log.runScript(Unknown Source)
at org.hsqldb.Log.open(Unknown Source)
at org.hsqldb.Database$Logger.openLog(Unknown Source)
at org.hsqldb.Database.open(Unknown Source)
at org.hsqldb.Database.&lt;init&gt;(Unknown Source)
at org.hsqldb.jdbcConnection.openStandalone(Unknown
Source)
at org.hsqldb.jdbcConnection.&lt;init&gt;(Unknown Source)
at org.hsqldb.jdbcDriver.connect(Unknown Source)
at
java.sql.DriverManager.getConnection(DriverManager.java:512)
at
java.sql.DriverManager.getConnection(DriverManager.java:171)
at hsqldbtest.ErrorSample.main(ErrorSample.java:12)
java.sql.SQLException: File input/output error: File
input/output error: reading: java.sql.SQLException:
Serialization failure in statement [SET TABLE
REGISTRATIONS SOURCE &quot;REGISTRATIONS.csv&quot;]
at org.hsqldb.Trace.getError(Unknown Source)
at org.hsqldb.Log.runScript(Unknown Source)
at org.hsqldb.Log.open(Unknown Source)
at org.hsqldb.Database$Logger.openLog(Unknown Source)
at org.hsqldb.Database.open(Unknown Source)
at org.hsqldb.Database.&lt;init&gt;(Unknown Source)
at org.hsqldb.jdbcConnection.openStandalone(Unknown
Source)
at org.hsqldb.jdbcConnection.&lt;init&gt;(Unknown Source)
at org.hsqldb.jdbcDriver.connect(Unknown Source)
at
java.sql.DriverManager.getConnection(DriverManager.java:512)
at
java.sql.DriverManager.getConnection(DriverManager.java:171)
at hsqldbtest.ErrorSample.main(ErrorSample.java:12)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/260
HyperSQL Database Engine (HSQLDB) / Bugs / #260 PreparedStatement.execute(sql) works but should not
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
According to the specs, &quot;If any of the
PreparedStatement execute methods is called with an SQL
string as a parameter, an SQLException is thrown.&quot; See
jdbc-3_0-fr-spec.pdf, page 101, 13.2.4 Executing a
PreparedStatement Object. (-fr- stands for Final
Release, not France). You can get this document here:
http://java.sun.com/products/jdbc/download.html.
Currently, HSQLDB executes the statement, but it should
throws an Exception. This bug was found using LDBC
(ldbc.sourceforge.net).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/261
HyperSQL Database Engine (HSQLDB) / Bugs / #261 OutOfMemoryError when inserting into LONGVARBINARY column
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I create a table that has a LONGVARBINARY 
column and try to insert data from a file in the file 
system, the java.lang.OutOfMemoryError exception 
occurs.
The documentation says that the max size of a 
LONGVARBINARY column is Integer.MAXVALUE, but 
the problem is happening for me with a Word document 
that is about 2.8 MB.
The attached Java program shows how to reproduce the 
bug. When the JFileChooser dialog shows up, just 
make sure you pick a large Word document or 
Powerpoint presentation file.
Unfortunately, the OutOfMemoryError exception is not 
propogated properly, meaning, I am unable to &quot;catch&quot; it. 
I simply see the error reported in the Java console.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/262
HyperSQL Database Engine (HSQLDB) / Bugs / #262 Problem with &quot;NOT NULL&quot; constraints on UPDATE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version : HSQLDB 1.7.2 Alpha M
The &quot;NOT NULL&quot; constraints don't work in update 
statements.
Test :
CREATE CACHED TABLE THEME
(
idTheme integer IDENTITY,
libelle VARCHAR NOT NULL,
description VARCHAR
);
insert into theme(libelle, description) values
('ESSAI', 'ESSAI');
Data -&gt; 1 ESSAI ESSAI
update theme set libelle = null where idtheme = 1;
Data -&gt; 1 (null) ESSAI
This problem was not in 1.7.1 version of HSQLDB.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/263
HyperSQL Database Engine (HSQLDB) / Bugs / #263 LEFT JOIN not work with 2 primary keys in a table
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
For example:
create table emp(company_id varchar(10),id varchar
(20),supervisor_id varchar(20), primary key 
(company_id,id));
insert into emp values ('01','1000',null);
insert into emp values ('01','1001','1000')
select id,supervisor_id from emp e left join emp s on 
e.company_id = s.company_id and e.supervisor_id = s.id
will return
1001,1000
should be
1000,null
1001,1000
I tried with only one key and it works.I am using 1.7.2 
ALPHA M
-andy santosa
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/264
HyperSQL Database Engine (HSQLDB) / Bugs / #264 Connection.close() does not release TCP/IP port
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When using Connection.close() to close a connection
with a HSQLDB server, the TCP/IP connection is not
closed until the client JVM is terminated. 
This can easily be checked using netstat under Windows.
Open a connection (Keep the client running)
-&gt; connection to port 9001 is visible in netstat /a
Close the connection (keep the client JVM running!)
-&gt; connection to port 9001 is still visible in netstat /a
Any attempt to issue a statement using the Connection
inside the Java client will result in an error
close client JVM 
-&gt; connection disappears
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/265
HyperSQL Database Engine (HSQLDB) / Bugs / #265 error selecting primary key column with itself
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Create the following table
CREATE CACHED TABLE qss_function (
object_id int NOT NULL,
name varchar(200));
then you can issue the followings select
select * from qss_function where object_id = object_id
And it works!
But now create the following table with object_id as a
PRIMARY KEY
CREATE CACHED TABLE qss_function_p (
object_id int NOT NULL PRIMARY KEY,
name varchar(200))
and issue the same command
select * from qss_function_p where object_id = object_id
and get the following error
Column not found: OBJECT_ID in statement [select * from
qss_function_p where object_id = object_id] / Error
Code: -28 / State: S0022
hsqldb version 1.7.1
mel@1it.com.au
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/266
HyperSQL Database Engine (HSQLDB) / Bugs / #266 CASEWHEN bug (with hibernate)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
With Hibernate &quot;joined-subclass&quot;, a statement like this
one is generated:
select parent.id as id, casewhen(parent_1.id is not
null, 1, casewhen(parent.id is not null, 0, null)) as
clazz_, parent.name as name0_, parent.address as
address0_, parent.phone as phone0_, parent_1.toy as
toy1_ from PARENT parent left outer join CHILD parent_1
on parent.id=parent_1.id
The problem comes with the 3rd argument of the inner
casewhen function (null): the data type returned is
always set to 0 and the switch in
DatabaseRowOutput.writeData(int l, int types[], Object
data[]) falls into:
default :
throw Trace.error(Trace.FUNCTION_NOT_SUPPORTED, t);
This error occur in HSQL mode (not in STANDALONE mode).
I have patched Expression.resolve(TableFilter f) this way:
instead of,
case IFNULL :
case CASEWHEN :
iDataType = eArg2.iDataType;
break;
I'm using,
case IFNULL :
case CASEWHEN :
iDataType = (eArg2.iDataType == 0) ? eArg.iDataType :
eArg2.iDataType;
break;
Everything works fine with this modification (but they
are maybe some side effects I cannot figure out).
Regards,
F. Wolff.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/267
HyperSQL Database Engine (HSQLDB) / Bugs / #267 assert is a keyword
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
warning: as of release 1.4, assert is a keyword, and
may not be used as an identifier
Example:
Trace.assert(!bNestedTransaction,&quot;beginNestedTransaction&quot;);
A simple solution is to change the 'assert' to
'cassert' in all files. That is what I did to solve
the problem.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/268
HyperSQL Database Engine (HSQLDB) / Bugs / #268 Count Aggregate function  is giving wrong results sometimes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am using HSQL database in my project.
I am using following SQL query to retrieve count
of packets in database.
The database contains two tables RSPPdu0 and
RSPSegment0.
I need to retrieve the number of pdus( pduKey) per
output port
Select RSPPdu0.outputport As outputPort,
Count(RSPSegment0.pduKey) As SegmentCount From
RSPSegment0,RSPPdu0 where
RSPSegment0.pduKey=RSPPdu0.pduId and
RSPPdu0.outputport &lt;&gt; -1 Group By RSPPdu0.outputport
The above query works fine in most of the cases. But
for two different samples it is giving incorrect
count of packet
In one case it gives
68002 instead of giving 68000
In other case
12802 instead of 12800
Also, this behavior is inconsistent on Solaris/Linux
and window platform. Sometimes the same query gives
correct results , sometimes incorrect.
It is highly unpredictible when it will give correct
result
Can u please help me in this regard ? Is this a bug
related to HSQL database or am I wrong somewhere in
forming SQL query.
An immediate response will be helpful.
Contact id : riti@agere.com
Thanks
Riti
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/269
HyperSQL Database Engine (HSQLDB) / Bugs / #269 Error with UPPER() in ORDER BY
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was using 1.7.2 Alpha M and I did this SQL:
&quot;SELECT ct.concepttypeid, tc.textcontent FROM 
concepttype ct, (select textid,textcontent from 
textcontent where languageid=1) tc WHERE 
ct.nametextid = tc.textid ORDER BY ct.SORTORDER, 
upper(tc.textcontent)&quot;
And it gave me this error even though it's valid SQL and 
works in version 1.7.1:
Here's the stacktrace:
java.sql.SQLException: Cannot be in ORDER BY clause: 
FUNCTION org.hsqldb.Function@19ee8a in statement 
[SELECT ct.concepttypeid, tc.textcontent FROM 
concepttype ct, (select textid,textcontent from 
textcontent where languageid=1) tc WHERE 
ct.nametextid = tc.textid ORDER BY ct.SORTORDER, 
upper(tc.textcontent)]
at org.hsqldb.Trace.getError(Unknown Source)
at org.hsqldb.jdbcResultSet.&lt;init&gt;(Unknown 
Source)
at org.hsqldb.jdbcConnection.executeStandalone
(Unknown Source)
at org.hsqldb.jdbcConnection.execute(Unknown 
Source)
at org.hsqldb.jdbcStatement.fetchResult(Unknown 
Source)
at org.hsqldb.jdbcStatement.executeQuery
(Unknown Source)
at 
com.tallgroup.util.DataMain.executeThrowableSelect
(DataMain.java:933)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/270
HyperSQL Database Engine (HSQLDB) / Bugs / #270 1.7.1 Engine's LEFT method does not work.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The use of the &quot;LEFT&quot; alias doesn't work:
SQL Error
------------------------------------------------------
------------------------------------------------- 
Unexpected token: LEFT in statement [select left('mike', 
3) from test] / Error Code: -11 / State: 37000 
1 row(s) in 0 ms
If we create a new alias w/ a different name:
CREATE ALIAS LEFTSTR FOR &quot;org.hsqldb.Library.left&quot;
it works just fine:
select leftstr('mike', 3) from test
--- 
mik 
mik 
mik 
3 row(s) in 10 ms
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/271
HyperSQL Database Engine (HSQLDB) / Bugs / #271 Group By and Binary columns
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
HSQL has a problem comparing binary columns in 
grouped queries.
I use binary columns to represent object IDs. Check this:
select &quot;oid&quot;,sum(&quot;amount&quot;) as &quot;result&quot;
from &quot;test&quot;
group by &quot;oid&quot;
If you have 30 rows with te same oid (a binary column) 
you will get a result set with 30 rows.
I think the problem is related to HsqlHashMap. It uses a 
HashTable in order to store groups. Unfortunately two 
byte arrays with the same content will have a difrent 
hashcode. HsqlHashMap assumes different groups.
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/272
HyperSQL Database Engine (HSQLDB) / Bugs / #272 Incorrect SQL execution
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This bug has been described in the help forum -- please
see
https://sourceforge.net/forum/forum.php?thread_id=886130&amp;forum_id=73674
Attached is a .tgz file containing the database in
question. Its user/password is sa/admin.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/273
HyperSQL Database Engine (HSQLDB) / Bugs / #273 negative BIGINT are wrong
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi I tried the following:
create table test (id BIGINT)
insert into test values(-1000000000000000000)
and
select * from test
gives back the following:
id
1486618624
the value which I gave to id is a valid java.lang.Long
value. Is there a fix to that already ?
Thanks
Michele Laghi
laghi@swissinfo.org
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/274
HyperSQL Database Engine (HSQLDB) / Bugs / #274 erroneous fk constraint violation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using hsqldb 1.7.1.
Attached to this message is a db that exhibits
erroneous (as far as I can
tell) behaviour. It's a little difficult for me to
strip out all of the
superfluous (for this problem) tables, so please just
consider the
PX_IDENTITY, PX_MEMBERSHIP and PX_CONTACT tables. There
are only 3 rows total
in the entire db, so it's fairly easy to see the issue.
PX_MEMBERSHIP is a simple many-to-many join table that
has fk constraint from
PX_IDENTITY to PX_IDENTITY. PX_MEMBERSHIP is
***empty****. However, if I:
1) delete from PX_CONTACT; commit;
2) delete from PX_IDENTITY; commit;
I get:
Integrity constraint violation: FK3BE8AA6D6968D5F
table: PX_MEMBERSHIP in
statement [delete from PX_IDENTITY] / Error Code: -8 /
State: 23000
How can this be, when PX_MEMBERSHIP is empty??
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/275
HyperSQL Database Engine (HSQLDB) / Bugs / #275 BIG script works on standalone but server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I tried to insert some data by using a BIG script.
It was working for standalone database but failed in 
server mode database.
HSQLDB : 1.7.1, virgin, no patches
Java : IBM J2SDK 1.4.0
Linux : redhat 8.0
How I did it:
* Run demo/runManager.sh
* Open connection, standalone or server mode 
accordingly
* Made a new table.
CREATE TABLE kuisikon (
id IDENTITY PRIMARY KEY,
topik CHAR(20), 
tingkat INTEGER,
kuis VARCHAR(255), 
ikon VARCHAR(100), 
pilihan VARCHAR(100));
CREATE INDEX topik ON kuisikon (topik);
CREATE INDEX tingkat ON kuisikon (tingkat);
* Open the script (attached) and execute it.
* Try to execute select * from kuisikon.
Submitted by:
k0c1l@hotmail.com
PS: the database information is in Indonesian language, 
I'm sorry for not translating it, but I hope it does not 
matter.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/276
HyperSQL Database Engine (HSQLDB) / Bugs / #276 Connection Problems in standalone mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hypersonic DB when running in standalone(In-process - 
not in memory) mode does not allow the Process which 
created the DB to use nested transcation(nested 
connection) or transcation across threads and throws 
the below Error
ERROR: The database is already in use by another 
process
ERROR: Cannot open connection
java.sql.SQLException: The database is already in 
use by another process
Let me explain the scenario.
1. Gets the DB connection with security user 
(Username=security1, pwd=&quot;pwd&quot;, 
url=jdbc:hsqldb:myDB&quot;). Get all the necessary data. 
close the connection. 
2. Now get the DB connection with real user 
(Username=real, pwd=&quot;123&quot;, url=jdbc:hsqldb:myDB&quot;). Do 
a lot of initialization.
3. Now I have this part of code which executes a nested 
transaction. And I get the above error when the inner 
transcation is executed.
{
getConnection() 
beginTranscation()
doWork
{
some work......
getConnection() --------
--- fails here with above mentioned error. 
beginTranscation()
doWork
{
some work.....
} 
} 
So when i tried to debug hsqldb, I found the following 
bug with the implementation.
1. org.hsqldb.jdbcConnection holds a static instance of 
HashTable-tdatabase(url,org.hsqldb.Database Objects). 
When closing connection the corresponding entry is 
removed and the Database objects goes out of scope.
2. Now when i reconnect to the same DB, it creates an 
entry in tdatabase. And if the finalizer for the previously 
freed Database objects is called now the entry in the 
tdatabase(jdbcConnection class) is removed and if you 
try to get any more connection it reports with the above 
bug as it tries to create a new instance of DB instead of 
creating a new connection(openStandalone(...) method 
in jdbcConnection Class).
Solution.
1. We must not depend on the finalizer method as we 
have no controll over it.
2. never call close to a connection(will be a bad 
solution).
3. As a temporary solution i have commented method 
lines in removeDatabase(...) in jdbcConnection Class and 
everything appears to work fine for me. 
Other Details.
jdk - 1.4.1_01
hiberate - 2.0 --- which gives a connection pool
hypersonic - 1.7.1
my stack trace example.
Creating DB : org.hsqldb.Database@1594a88 -- 
jdbc:hsqldb:myDB user-security1 pwd-pwd
Closing DB org.hsqldb.Database@1594a88 in thread 
Thread[main,5,main] -- -- jdbc:hsqldb:myDB user-
security1 pwd-pwd
Creating DB : org.hsqldb.Database@11d2066 ---- 
jdbc:hsqldb:myDB user-real pwd-123
Closing DB org.hsqldb.Database@1594a88 in thread 
Thread[Finalizer,8,system]
TW1 -- Top level Transcation started
Trying to start inner Transcation 
ERROR: The database is already in use by another 
process
ERROR: Cannot open connection
java.sql.SQLException: The database is already in 
use by another process
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/277
HyperSQL Database Engine (HSQLDB) / Bugs / #277 Column not found
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Executing the below query and when getting the result 
the below error occurs.
ResultSet rs = query.execute(&quot;select c.configid as 
configid, c.name as name, c.description as descript3_ 
from ks_configs c where (c.name='Basic' )&quot;);
String conf = rs.getString(&quot;configid&quot;);
throws the below exception
java.sql.SQLException: Column not found
at org.hsqldb.jdbcDriver.sqlException(Unknown 
Source)
at org.hsqldb.jdbcDriver.sqlException(Unknown 
Source)
at org.hsqldb.jdbcResultSet.findColumn
(Unknown Source)
at org.hsqldb.jdbcResultSet.getString(Unknown 
Source)
Solution.
findColumn(..) in jdbcResultSet.java uses equals(..) in 
line number 3631 instead of equalsIgnoreCa
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/278
HyperSQL Database Engine (HSQLDB) / Bugs / #278 ResultSet down not move backwards!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was able to move in both directions when using 
resultset in hsqldb1.7.1, but with the code from hsqldb-
dev throws the below exception when attempted to 
move backwards... I am using hibernate 2.0 to access 
hypersonic.
java.sql.SQLException: ResultSet was set to forward only
at org.hsqldb.jdbcDriver.sqlException(Unknown 
Source)
at org.hsqldb.jdbcDriver.sqlException(Unknown 
Source)
at org.hsqldb.jdbcResultSet.previous(Unknown 
Source)
Solution.
jdbcResultSet.rsType can be set to 
jdbcStatement.rsType when creating the ResultSet. This 
will enable movement in both direction of the ResultSet.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/279
HyperSQL Database Engine (HSQLDB) / Bugs / #279 NPE on SHUTDOWN when created by HsqlServerFactory
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If the HSQLDB Server is created using the
HsqlServerFactory then its internal socket instance
variable is never set. If a &quot;SHUTDOWN&quot; command is then
issued, a NPE will be thrown within the Server.notify
method on the &quot;socket.close()&quot; command. The code just
needs to check to see whether or not socket is set
before attempting to close it. See the patch to fix
this below. This is in the current release version 1.7.1
Cheers,
Leif
Index: Server.java
RCS file:
/cvsroot/hsqldb/hsqldb/src/org/hsqldb/Server.java,v
retrieving revision 1.8
diff -u -r1.8 Server.java
--- Server.java 18 Oct 2002 14:07:19 -0000 1.8
+++ Server.java 17 Jul 2003 15:11:54 -0000
@@ -310,11 +310,14 @@
closeAllServerConnections();
- // fredt@users - this is used to exit the loop
in this.run()
- try {
- socket.close();
- } catch (IOException e) {
- traceError(&quot;Exception when closing the
main socket&quot;);
+ // The server's socket is not created if the
server is created by the HsqlServerFactory.
+ if (socket != null) {
+ // fredt@users - this is used to exit the
loop in this.run()
+ try {
+ socket.close();
+ } catch (IOException e) {
+ traceError(&quot;Exception when closing the
main socket&quot;);
+ }
}
serverProperties = null;
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/280
HyperSQL Database Engine (HSQLDB) / Bugs / #280 SQLEx closing Connection that is closed by server.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have been working on getting HSQLDB running within my
application in server mode. The database is then
connected to using a pool of JDBC Connections. 
Everything works great until I call SHUTDOWN as the
server is shutting down.
As the server shuts down, one if its tasks is to go
through and close all of the Connections in the JDBC
pool. The problem is that the HSQLDB JDBC driver
throws and SQLException with the message, &quot;Connection
is broken&quot; for each connection as it is closed. This
is because the socket has already been closed by HSQLDB
on the server side. It makes sense to throw this
exception if a query is being made. I know this is a
matter of opinion. But if the client is
attempting to close the connection and the JDBC driver
detects that the connection is already closed. It
seems like it should just fall through gracefully as
the desired outcome was achieved.
The following patch modifies jdbcConnection.java to do
this.
This is with the current released version 1.7.1
Cheers,
Leif
Index: jdbcConnection.java
RCS file:
/cvsroot/hsqldb/hsqldb/src/org/hsqldb/jdbcConnection.java,v
retrieving revision 1.8
diff -u -r1.8 jdbcConnection.java
--- jdbcConnection.java 18 Oct 2002 14:07:21 -0000 
1.8
+++ jdbcConnection.java 17 Jul 2003 15:32:25 -0000
@@ -1052,7 +1052,17 @@
if (iType == STANDALONE) {
closeStandalone();
} else {
- execute(&quot;DISCONNECT&quot;);
+ try {
+ execute(&quot;DISCONNECT&quot;);
+ } catch (SQLException e) {
+ String msg = e.getMessage();
+ if ((msg != null) &amp;&amp;
(msg.indexOf(&quot;Connection is broken&quot;) &gt;= 0)) {
+ // This just means that the server
already closed the connection. No
+ // problem since we wanted to
close it anyway.
+ } else {
+ throw e;
+ }
+ }
}
bClosed = true;
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/281
HyperSQL Database Engine (HSQLDB) / Bugs / #281 Strange results in UNION
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, UNION seems to work fine with not null values:
create table dual (x varchar(1))
insert into dual values('x')
--Query 1
select 'aaa' as A, 'ddd' as B from dual
union all
select 'ccc' as A, 'bbb' as B from dual
A B
aaa ddd
ccc bbb
However, nulls produce strange results:
--Query 2
select 'aaa' as A, null as B from dual
union all
select 'ccc' as A, 'bbb' as B from dual
A B
aaa &lt;null&gt;
ccc &lt;null&gt; (why???)
--Query 3
select 'aaa' as A, 'ddd' as B from dual
union all
select 'ccc' as A, null as B from dual
A B
aaa ddd
ccc &lt;null&gt;
The strangest thing: [Query 2] breaks server 
connections!!!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/282
HyperSQL Database Engine (HSQLDB) / Bugs / #282 CREATE VIEW + GRANT failes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Found in 1.7.1
If you execute the attached script and then restart the
database, you get an error and the database cannot be
used anymore, because the CREATE VIEW will be after the
GRANT in the script file
CREATE TABLE BF_DOMAIN(ID INTEGER NOT NULL IDENTITY
PRIMARY KEY,NAME VARCHAR(100) NOT NULL,DESCRIPTION
VARCHAR(1024),CREATION_DATE TIMESTAMP NOT
NULL,MODIFICATION_DATE TIMESTAMP NOT NULL,CONSTRAINT
BF_DOM_UQ UNIQUE(NAME))
CREATE TABLE BF_USER(ID INTEGER NOT NULL IDENTITY
PRIMARY KEY,DOMAIN_ID INTEGER NOT NULL,FIRST_NAME
VARCHAR(50) NOT NULL,LAST_NAME VARCHAR(50) NOT
NULL,PHONE VARCHAR(20) NOT NULL,FAX VARCHAR(20) NOT
NULL,ADDRESS VARCHAR(1024) NOT NULL,EMAIL VARCHAR(50)
NOT NULL,LOGIN_NAME VARCHAR(30) NOT NULL,PASSWORD
VARCHAR(50) NOT NULL,LOGIN_ENABLED INTEGER DEFAULT '0'
NOT NULL,SUPER_USER INTEGER DEFAULT '0' NOT
NULL,INTERNAL_USER INTEGER DEFAULT '0' NOT
NULL,CREATION_DATE TIMESTAMP NOT NULL,MODIFICATION_DATE
TIMESTAMP NOT NULL,CONSTRAINT BF_USR_LOGIN_UQ
UNIQUE(LOGIN_NAME),CONSTRAINT BF_USR_EMAIL_UQ
UNIQUE(EMAIL),CONSTRAINT BF_USR_FK FOREIGN
KEY(DOMAIN_ID) REFERENCES BF_DOMAIN(ID) ON DELETE CASCADE)
CREATE TABLE BF_BFSESSION(ID INTEGER NOT NULL IDENTITY
PRIMARY KEY,DOMAIN_ID INTEGER NOT NULL,USER_ID INTEGER
NOT NULL,GEN_CODE VARCHAR(50) NOT NULL,CLIENT_IP
VARCHAR(20) NOT NULL,BROWSER_TYPE
VARCHAR(100),CREATION_DATE TIMESTAMP NOT
NULL,CONSTRAINT BF_SESS_UQ UNIQUE(GEN_CODE),CONSTRAINT
BF_BFSESS_DID_FK FOREIGN KEY(DOMAIN_ID) REFERENCES
BF_DOMAIN(ID) ON DELETE CASCADE,CONSTRAINT
BF_BFSESS_UID_FK FOREIGN KEY(USER_ID) REFERENCES
BF_USER(ID) ON DELETE CASCADE)
CREATE VIEW BF_BFSESSION_VIEW AS select
BF_BFSESSION.ID as ID, BF_USER.ID as USER_ID,
BF_USER.DOMAIN_ID as DOMAIN_ID, BF_USER.FIRST_NAME,
BF_USER.LAST_NAME, BF_USER.LOGIN_NAME, BF_USER.PHONE,
BF_USER.FAX, BF_USER.EMAIL, BF_USER.LOGIN_ENABLED,
BF_USER.SUPER_USER, BF_BFSESSION.GEN_CODE,
BF_BFSESSION.CLIENT_IP, BF_BFSESSION.BROWSER_TYPE,
BF_BFSESSION.CREATION_DATE from BF_BFSESSION, BF_USER
where BF_USER.ID = BF_BFSESSION.USER_ID and
BF_USER.DOMAIN_ID = BF_BFSESSION.DOMAIN_ID
GRANT ALL ON BF_BFSESSION_VIEW TO SA
COMMIT
produces script file
CREATE TABLE BF_DOMAIN(ID INTEGER NOT NULL IDENTITY
PRIMARY KEY,NAME VARCHAR(100) NOT NULL,DESCRIPTION
VARCHAR(1024),CREATION_DATE TIMESTAMP NOT
NULL,MODIFICATION_DATE TIMESTAMP NOT NULL,CONSTRAINT
BF_DOM_UQ UNIQUE(NAME))
CREATE TABLE BF_USER(ID INTEGER NOT NULL IDENTITY
PRIMARY KEY,DOMAIN_ID INTEGER NOT NULL,FIRST_NAME
VARCHAR(50) NOT NULL,LAST_NAME VARCHAR(50) NOT
NULL,PHONE VARCHAR(20) NOT NULL,FAX VARCHAR(20) NOT
NULL,ADDRESS VARCHAR(1024) NOT NULL,EMAIL VARCHAR(50)
NOT NULL,LOGIN_NAME VARCHAR(30) NOT NULL,PASSWORD
VARCHAR(50) NOT NULL,LOGIN_ENABLED INTEGER DEFAULT '0'
NOT NULL,SUPER_USER INTEGER DEFAULT '0' NOT
NULL,INTERNAL_USER INTEGER DEFAULT '0' NOT
NULL,CREATION_DATE TIMESTAMP NOT NULL,MODIFICATION_DATE
TIMESTAMP NOT NULL,CONSTRAINT BF_USR_LOGIN_UQ
UNIQUE(LOGIN_NAME),CONSTRAINT BF_USR_EMAIL_UQ
UNIQUE(EMAIL),CONSTRAINT BF_USR_FK FOREIGN
KEY(DOMAIN_ID) REFERENCES BF_DOMAIN(ID) ON DELETE CASCADE)
CREATE TABLE BF_BFSESSION(ID INTEGER NOT NULL IDENTITY
PRIMARY KEY,DOMAIN_ID INTEGER NOT NULL,USER_ID INTEGER
NOT NULL,GEN_CODE VARCHAR(50) NOT NULL,CLIENT_IP
VARCHAR(20) NOT NULL,BROWSER_TYPE
VARCHAR(100),CREATION_DATE TIMESTAMP NOT
NULL,CONSTRAINT BF_SESS_UQ UNIQUE(GEN_CODE),CONSTRAINT
BF_BFSESS_DID_FK FOREIGN KEY(DOMAIN_ID) REFERENCES
BF_DOMAIN(ID) ON DELETE CASCADE,CONSTRAINT
BF_BFSESS_UID_FK FOREIGN KEY(USER_ID) REFERENCES
BF_USER(ID) ON DELETE CASCADE)
GRANT ALL ON CLASS &quot;org.hsqldb.Library&quot; TO PUBLIC
GRANT ALL ON CLASS &quot;java.lang.Math&quot; TO PUBLIC
CREATE USER SA PASSWORD &quot;&quot; ADMIN
GRANT ALL ON BF_BFSESSION_VIEW TO SA
CREATE ALIAS DAYNAME FOR &quot;org.hsqldb.Library.dayname&quot;
CREATE ALIAS SPACE FOR &quot;org.hsqldb.Library.space&quot;
CREATE ALIAS SUBSTRING FOR &quot;org.hsqldb.Library.substring&quot;
CREATE ALIAS HEXTORAW FOR &quot;org.hsqldb.Library.hexToRaw&quot;
CREATE ALIAS SQRT FOR &quot;java.lang.Math.sqrt&quot;
CREATE ALIAS ABS FOR &quot;org.hsqldb.Library.abs&quot;
CREATE ALIAS POWER FOR &quot;java.lang.Math.pow&quot;
CREATE ALIAS CHAR FOR &quot;org.hsqldb.Library.character&quot;
CREATE ALIAS CONCAT FOR &quot;org.hsqldb.Library.concat&quot;
CREATE ALIAS PI FOR &quot;org.hsqldb.Library.pi&quot;
CREATE ALIAS RAWTOHEX FOR &quot;org.hsqldb.Library.rawToHex&quot;
CREATE ALIAS SECOND FOR &quot;org.hsqldb.Library.second&quot;
CREATE ALIAS TRUNCATE FOR &quot;org.hsqldb.Library.truncate&quot;
CREATE ALIAS MONTH FOR &quot;org.hsqldb.Library.month&quot;
CREATE ALIAS LOWER FOR &quot;org.hsqldb.Library.lcase&quot;
CREATE ALIAS ATAN2 FOR &quot;java.lang.Math.atan2&quot;
CREATE ALIAS REPEAT FOR &quot;org.hsqldb.Library.repeat&quot;
CREATE ALIAS DAYOFMONTH FOR &quot;org.hsqldb.Library.dayofmonth&quot;
CREATE ALIAS TAN FOR &quot;java.lang.Math.tan&quot;
CREATE ALIAS RADIANS FOR &quot;java.lang.Math.toRadians&quot;
CREATE ALIAS FLOOR FOR &quot;java.lang.Math.floor&quot;
CREATE ALIAS NOW FOR &quot;org.hsqldb.Library.now&quot;
CREATE ALIAS ACOS FOR &quot;java.lang.Math.acos&quot;
CREATE ALIAS DAYOFWEEK FOR &quot;org.hsqldb.Library.dayofweek&quot;
CREATE ALIAS CEILING FOR &quot;java.lang.Math.ceil&quot;
CREATE ALIAS DAYOFYEAR FOR &quot;org.hsqldb.Library.dayofyear&quot;
CREATE ALIAS LCASE FOR &quot;org.hsqldb.Library.lcase&quot;
CREATE ALIAS WEEK FOR &quot;org.hsqldb.Library.week&quot;
CREATE ALIAS SOUNDEX FOR &quot;org.hsqldb.Library.soundex&quot;
CREATE ALIAS ASIN FOR &quot;java.lang.Math.asin&quot;
CREATE ALIAS LOCATE FOR &quot;org.hsqldb.Library.locate&quot;
CREATE ALIAS EXP FOR &quot;java.lang.Math.exp&quot;
CREATE ALIAS MONTHNAME FOR &quot;org.hsqldb.Library.monthname&quot;
CREATE ALIAS YEAR FOR &quot;org.hsqldb.Library.year&quot;
CREATE ALIAS LEFT FOR &quot;org.hsqldb.Library.left&quot;
CREATE ALIAS ROUNDMAGIC FOR &quot;org.hsqldb.Library.roundMagic&quot;
CREATE ALIAS BITOR FOR &quot;org.hsqldb.Library.bitor&quot;
CREATE ALIAS LTRIM FOR &quot;org.hsqldb.Library.ltrim&quot;
CREATE ALIAS COT FOR &quot;org.hsqldb.Library.cot&quot;
CREATE ALIAS COS FOR &quot;java.lang.Math.cos&quot;
CREATE ALIAS MOD FOR &quot;org.hsqldb.Library.mod&quot;
CREATE ALIAS SIGN FOR &quot;org.hsqldb.Library.sign&quot;
CREATE ALIAS DEGREES FOR &quot;java.lang.Math.toDegrees&quot;
CREATE ALIAS LOG FOR &quot;java.lang.Math.log&quot;
CREATE ALIAS SIN FOR &quot;java.lang.Math.sin&quot;
CREATE ALIAS CURTIME FOR &quot;org.hsqldb.Library.curtime&quot;
CREATE ALIAS DIFFERENCE FOR &quot;org.hsqldb.Library.difference&quot;
CREATE ALIAS INSERT FOR &quot;org.hsqldb.Library.insert&quot;
CREATE ALIAS SUBSTR FOR &quot;org.hsqldb.Library.substring&quot;
CREATE ALIAS DATABASE FOR &quot;org.hsqldb.Library.database&quot;
CREATE ALIAS MINUTE FOR &quot;org.hsqldb.Library.minute&quot;
CREATE ALIAS HOUR FOR &quot;org.hsqldb.Library.hour&quot;
CREATE ALIAS IDENTITY FOR &quot;org.hsqldb.Library.identity&quot;
CREATE ALIAS QUARTER FOR &quot;org.hsqldb.Library.quarter&quot;
CREATE ALIAS CURDATE FOR &quot;org.hsqldb.Library.curdate&quot;
CREATE ALIAS BITAND FOR &quot;org.hsqldb.Library.bitand&quot;
CREATE ALIAS USER FOR &quot;org.hsqldb.Library.user&quot;
CREATE ALIAS UCASE FOR &quot;org.hsqldb.Library.ucase&quot;
CREATE ALIAS RTRIM FOR &quot;org.hsqldb.Library.rtrim&quot;
CREATE ALIAS LOG10 FOR &quot;org.hsqldb.Library.log10&quot;
CREATE ALIAS RIGHT FOR &quot;org.hsqldb.Library.right&quot;
CREATE ALIAS ATAN FOR &quot;java.lang.Math.atan&quot;
CREATE ALIAS UPPER FOR &quot;org.hsqldb.Library.ucase&quot;
CREATE ALIAS ASCII FOR &quot;org.hsqldb.Library.ascii&quot;
CREATE ALIAS RAND FOR &quot;java.lang.Math.random&quot;
CREATE ALIAS LENGTH FOR &quot;org.hsqldb.Library.length&quot;
CREATE ALIAS ROUND FOR &quot;org.hsqldb.Library.round&quot;
CREATE ALIAS REPLACE FOR &quot;org.hsqldb.Library.replace&quot;
CREATE VIEW BF_BFSESSION_VIEW AS select
BF_BFSESSION.ID as ID, BF_USER.ID as USER_ID,
BF_USER.DOMAIN_ID as DOMAIN_ID, BF_USER.FIRST_NAME,
BF_USER.LAST_NAME, BF_USER.LOGIN_NAME, BF_USER.PHONE,
BF_USER.FAX, BF_USER.EMAIL, BF_USER.LOGIN_ENABLED,
BF_USER.SUPER_USER, BF_BFSESSION.GEN_CODE,
BF_BFSESSION.CLIENT_IP, BF_BFSESSION.BROWSER_TYPE,
BF_BFSESSION.CREATION_DATE from BF_BFSESSION, BF_USER
where BF_USER.ID = BF_BFSESSION.USER_ID and
BF_USER.DOMAIN_ID = BF_BFSESSION.DOMAIN_ID
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/283
HyperSQL Database Engine (HSQLDB) / Bugs / #283 Max Aggregate Causes null row to be returned
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In the query...
select max(t1.col_a), t2.col_a
from Table1 t1, Table t2
where
(t1.col_b = t2.col_b) and
(t1.col_a &gt;= t2.col_a)
group by t2.col_a
... the max aggregate causes a single row of nulls to be 
returned when Table1 and Table2 are empty.
nathanila@hotmail.com
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/284
HyperSQL Database Engine (HSQLDB) / Bugs / #284 Some problems with last alpha
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I had some problems with Timestamps in alpha_M (you 
save 00:00 and retrieve 03:00 -- I'm at GMT-3 --). I've 
downloaded last cvs tree and that problem has been 
solved.
However, I've found new big problems:
- I can't start a server with &quot;-database &lt;dbname&gt;&quot; 
command line argument. (The server always uses &quot;test&quot;)
- I can't load my old database files (created by alpha_M).
- Prepared statements can't execute DDL statements 
(ie.: UNEXPECTED TOKEN: CREATE)
- Problems with Binary columns: I use binary(20) 
columns as Object ID. The error is:
S1000 General error java.lang.ClassCastException: 
org.hsqldb.Binary in statement [insert into &quot;MyTable&quot; 
(&quot;oid&quot;,&quot;dummy&quot;) values (?,?)]
Cheers.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/285
HyperSQL Database Engine (HSQLDB) / Bugs / #285 Cannot use IDENTITY and PRIMARY KEY together
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When specifying a column as an IDENTITY column, it
leads to an exception when the same column is also
specified as a PRIMARY KEY:
java.sql.SQLException: Attempt to define a second
primary ke
y in statement [CREATE TABLE A ( ID integer IDENTITY,
PRIMARY KEY(ID) )]
This is especially troublesome when using Torque to
generate the sql code as Torque does generate both
IDENTITY and PRIMARY KEY (which is the usual
combination with other databases, e.g. MySQL).
Since in this case the column is only overspecified, at
most a warning (if at all) should be issued, but no error.
This error occurs for both the 1.7.1 release and the
1.7.2 alpha (M)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/286
HyperSQL Database Engine (HSQLDB) / Bugs / #286 Error when storing a String object in a LONGVARBINARY column
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When trying to store a String object in a LONGVARBINARY
column while using a prepared statement, a exception
java.sql.SQLException: invalid character encoding
is issued (1.7.2 Alpha M; a similar exception is issued
in 1.7.1). A quick look in the code revealed that it is
tried to convert a string that is assumed to contain
hex-encoded byte s into a byte array (Column:
convertObject -&gt; convertString -&gt; hexToByteArray).
However there is no hex string in the object, just a
normal string, so the conversion is not successful.
This exception is probably raised for BINARY and
VARBINARY, as well (judging from Column.convertObject).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/287
HyperSQL Database Engine (HSQLDB) / Bugs / #287 nulls in prepared statements (alpha_n)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I use hsql to store Tomcat passwords. JDBCRealm seems 
to prepare a statement setting a null value when the 
user tries to access to a protected resource the first 
time.
The cause of this bug (I'm trying to guess) is at 
ValuePool:127 (ValuePool.getString(String val)). This 
method is used to set Strings in 
jdbcPreparedStatement.java.
Rewritting getString like this:
public static synchronized String getString(String val)
{
if(val==null) //added by me
return null; //added by me
if (val.length() &gt; maxStringLength) {
return val;
}
return stringPool.getOrAddString(val);
}
seems to work. 
I don't know if this problem will ocurr with all 
ValuePool.getXXX() methods (I've not tried yet). 
Previous versions of hsql accept null values. 
Please include this bug. (I don't want to rewrite Tomcat 
code.)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/288
HyperSQL Database Engine (HSQLDB) / Bugs / #288 SAVEPOINT and ROLLBACK
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
SAVEPOINT savepoint_name ;
and
ROLLBACK TO SAVEPOINT savepoint_name ;
Are not document in hsqlSyntax.html but exists in
javadoc class org.hsqldb.jdbcConnection. 
Affected versions 1.7, 1.7.1, 1.7.2-alpha M.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/289
HyperSQL Database Engine (HSQLDB) / Bugs / #289 NullPointerException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This happens in 1.7.1 and can be seen in DBManager or 
through JDBC
CREATE TABLE ROLLBACK_TEST
( TEST_COLUMN VARCHAR(50) NOT NULL,
CONSTRAINT TEST_COLUMN_UQ UNIQUE 
(TEST_COLUMN)
)
--- now set auto commit off and execute step by step
--- Just to make sure I set the autocommit off before 
each step since the menu doesn't show it
insert into ROLLBACK_TEST (TEST_COLUMN) values 
('miro')
insert into ROLLBACK_TEST (TEST_COLUMN) values 
('peter')
commit
update ROLLBACK_TEST set TEST_COLUMN = 'peter' 
where TEST_COLUMN = 'miro'
rollback
You get NullPointerException here
java.lang.NullPointerException
at org.hsqldb.Index.child(Unknown Source)
at org.hsqldb.Index.balance(Unknown Source)
at org.hsqldb.Index.insert(Unknown Source)
at org.hsqldb.Table.indexRow(Unknown Source)
at org.hsqldb.Table.insertNoCheck(Unknown 
Source)
at org.hsqldb.Transaction.rollback(Unknown 
Source)
at org.hsqldb.Session.rollback(Unknown Source)
at org.hsqldb.Database.processRollback(Unknown 
Source)
at org.hsqldb.Database.execute(Unknown Source)
at org.hsqldb.jdbcConnection.executeStandalone
(Unknown Source)
at org.hsqldb.jdbcConnection.execute(Unknown 
Source)
at org.hsqldb.jdbcStatement.fetchResult(Unknown 
Source)
at org.hsqldb.jdbcStatement.execute(Unknown 
Source)
at org.hsqldb.util.DatabaseManager.execute
(Unknown Source)
at 
org.hsqldb.util.DatabaseManager.actionPerformed
(Unknown Source)
at java.awt.Button.processActionEvent
(Button.java:381)
at java.awt.Button.processEvent(Button.java:350)
at java.awt.Component.dispatchEventImpl
(Component.java:3639)
at java.awt.Component.dispatchEvent
(Component.java:3480)
at java.awt.EventQueue.dispatchEvent
(EventQueue.java:450)
at 
java.awt.EventDispatchThread.pumpOneEventForHierarch
y(EventDispatchTh
read.java:197)
at 
java.awt.EventDispatchThread.pumpEventsForHierarchy
(EventDispatchThre
ad.java:150)
at java.awt.EventDispatchThread.pumpEvents
(EventDispatchThread.java:144)
at java.awt.EventDispatchThread.pumpEvents
(EventDispatchThread.java:136)
at java.awt.EventDispatchThread.run
(EventDispatchThread.java:99)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/290
HyperSQL Database Engine (HSQLDB) / Bugs / #290 Group By and Binary columns II
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Group by is not working with binary columns in alpha_n. 
Please, test this:
create table test (oid BINARY(2),data numeric);
insert into test values ('0001',1);
insert into test values ('0001',1);
insert into test values ('0001',1);
insert into test values ('0001',1);
insert into test values ('0001',1);
insert into test values ('0002',2);
insert into test values ('0002',2);
insert into test values ('0002',2);
insert into test values ('0002',2);
insert into test values ('0002',2);
select oid,sum(data) from test
group by oid;
The result must be:
0001 5
0002 10
However, it shows:
0001 1
0001 1
0001 1
0001 1
0001 1
0002 2
0002 2
0002 2
0002 2
0002 2
This was fixed previously but the bug is here again.
Cheers.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/291
HyperSQL Database Engine (HSQLDB) / Bugs / #291 saveSorted ... negative seek offset
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I'm using HSQL 1.7.1 with JRE1.3.1_03 in a Windows 
2000 environment. My database contains only one table 
with 8,000,000 rows which used to work fine (database 
size is 1.3 GB). But when I try to create a new index or 
drop an existing index I get the following error message 
after some minutes:
&quot;File input/output error: saveSorted java.io.IOException: 
Negative seek offset in statement [...]&quot;
where statement can be 
&quot;CREATE INDEX idxDevice ON tbl300_DEVICE_LOGS 
(lng_refIDDevice)&quot; or 
&quot;DROP INDEX idxTimeStamp&quot;.
Is there any limitation in database size, table size, row 
count, or index size?
Greetings
Christian
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/292
HyperSQL Database Engine (HSQLDB) / Bugs / #292 implicit DATETIME value change
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, 
I'm using HSQL 1.7.1 with JRE1.3.1_03 in a Windows 
2000 environment. My database contains only one table 
with 8,000,000 rows (database size is 1.3 GB) and an 
indexed DATETIME column. After months of working fine 
the following strange phenomenon occured:
Sometimes all values in the DATETIME column were 
normalized to a value between 0:00 and 1:00, that is 
the time was divided by 24. The date part was kept 
correctly, new values were inserted correctly, too. It 
seems that this occured during recovery procedure after 
killing and restarting the database process.
More greetings 
Christian
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/293
HyperSQL Database Engine (HSQLDB) / Bugs / #293 On delete cascade
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
There is a problem with foreign key constraints with 'on 
delete cascade' option.
Please try this:
---------------------------------------------
drop table testB if exists;
drop table testA if exists;
create table testA(id integer, primary key(id));
create table testB(id integer, parent integer, ref integer, 
data varchar(200),primary key (id),foreign key (parent) 
references testB(id) on delete cascade,foreign key (ref) 
references testA(id) on delete cascade);
insert into testA values(1);
insert into testB values(100,null,1,'xxxx');
insert into testB values(101,100,1,'xxxx');
insert into testB values(102,101,1,'xxxx');
delete from testA where id=1;
---------------------------------------------
The self reference of tableB works fine without the 
reference to tableA. 
The reference to tableA works fine without the self 
reference of table B. 
If both references are present, the script doesn't work.
The error is: AssertFailed/Error code: -38
The stack trace (note: jar with debug info):
org.hsqldb.Trace$TraceException: Trace
at org.hsqldb.Trace.printStack(Trace.java:767)
at org.hsqldb.Trace.doAssert(Trace.java:550)
at org.hsqldb.Trace.doAssert(Trace.java:534)
at org.hsqldb.MemoryNode.getData
(MemoryNode.java:101)
at org.hsqldb.Table.checkCascadeDelete
(Table.java:1983)
at org.hsqldb.Table.delete(Table.java:2357)
at org.hsqldb.Table.delete(Table.java:2325)
at 
org.hsqldb.CompiledStatementExecutor.executeDeleteSta
tement(CompiledStatementExecutor.java:214)
at 
org.hsqldb.CompiledStatementExecutor.executeImpl
(CompiledStatementExecutor.java:128)
at org.hsqldb.CompiledStatementExecutor.execute
(CompiledStatementExecutor.java:89)
at org.hsqldb.Session.sqlExecuteCompiled
(Session.java:836)
at 
org.hsqldb.DatabaseCommandInterpreter.executePart
(DatabaseCommandInterpreter.java:229)
at 
org.hsqldb.DatabaseCommandInterpreter.execute
(DatabaseCommandInterpreter.java:165)
at org.hsqldb.Session.execute(Session.java:784)
at org.hsqldb.jdbcStatement.fetchResult
(jdbcStatement.java:1670)
at org.hsqldb.jdbcStatement.execute
(jdbcStatement.java:680)
at org.hsqldb.util.DatabaseManager.execute
(DatabaseManager.java:776)
at 
org.hsqldb.util.DatabaseManager.actionPerformed
(DatabaseManager.java:472)
at java.awt.Button.processActionEvent(Unknown 
Source)
at java.awt.Button.processEvent(Unknown Source)
at java.awt.Component.dispatchEventImpl
(Unknown Source)
at java.awt.Component.dispatchEvent(Unknown 
Source)
at java.awt.EventQueue.dispatchEvent(Unknown 
Source)
at java.awt.EventDispatchThread.pumpOneEvent
(Unknown Source)
at java.awt.EventDispatchThread.pumpEvents
(Unknown Source)
at java.awt.EventDispatchThread.pumpEvents
(Unknown Source)
at java.awt.EventDispatchThread.run(Unknown 
Source)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/294
HyperSQL Database Engine (HSQLDB) / Bugs / #294 PreparedStatements
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Try this script:
------------------------------------------------------
drop table testA if exists;
drop table testB if exists;
create table testA(oid binary(2), data integer);
create table testB(oid binary(2), data integer);
insert into testA values('0001',1);
insert into testB values('0001',1);
select * from testA as ttt,(select oid,data from testB) 
as tst 
where (tst.oid=ttt.oid)
and (tst.oid='0001');
------------------------------------------------------
The result is:
DATA
------
1
The same script with JDBC:
------------------------------------------------------
Connection con=(...);
Statement stm=con.createStatement();
stm.execute(&quot;drop table testA if exists&quot;);
stm.execute(&quot;drop table testB if exists&quot;);
stm.execute(&quot;create table testA(oid binary(2), data 
integer)&quot;);
stm.execute(&quot;create table testB(oid binary(2), data 
integer)&quot;);
PreparedStatement pstm;
byte[] oid=new byte[]{0,1};
pstm=con.prepareStatement(&quot;insert into testA 
values(?,1)&quot;);
pstm.setBytes(1,oid);
pstm.execute();
pstm=con.prepareStatement(&quot;insert into testB values
(?,1)&quot;);
pstm.setBytes(1,oid);
pstm.execute();
pstm=con.prepareStatement(
&quot;select data from testA as ttt,(select oid,data from 
testB) as tst &quot;
+&quot; where (tst.oid=ttt.oid)&quot;
+&quot; and (tst.oid=?)&quot;
);
pstm.setBytes(1,oid);
ResultSet rset=pstm.executeQuery();
System.out.println(&quot;DATA\n----&quot;);
while(rset.next())
System.out.println(rset.getInt(1));
rset.close();
------------------------------------------------------
The result is:
DATA
-----
(Please note there are no rows).
Why? Is something wrong?
Regards.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/295
HyperSQL Database Engine (HSQLDB) / Bugs / #295 rs.getString(&quot;name&quot;) fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ResultSet rs=executeQuery(&quot;select name,key from tab&quot;);
while (rs.next())
nodename = rs.getString(1);
// nodename = rs.getString(&quot;name&quot;);
The often used first version works alright, however 2nd 
version, which is commented out, throws an 
SQLException (Column name not found).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/296
HyperSQL Database Engine (HSQLDB) / Bugs / #296 select avg(column) - wrong results
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When using select avg(col1) from test, null values are 
incorrect counted as zero.
Nulls shouldn't be counted, so it's 2+4 = 6/2 = average 
of 3 (same in Excel).
Hsqldb, however, apparently makes it 2+0+4= 6 / 3 = 
false average 2.
create table test(col1 integer);
insert into test values(2);
insert into test values(null);
insert into test values(4);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/297
HyperSQL Database Engine (HSQLDB) / Bugs / #297 Reading database from inside jar fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I can't get hsqldb to connect to a read-only database 
inside a jar.
According to the description I created a test.jar with a 
testdata directory containing 
test.hsqldb.script,test.hsqldb.log and 
test.hsqldb.properties.
The test jar also contains a TestInJar class which tries 
to connect to the database.
I Use the url &quot;jdbc:hsqldb:testdata/test.hsqldb&quot; and call 
System.setProperty(&quot;hsqldb.files_in_jar&quot;,&quot;true&quot;).
Start the test with java -cp hsqldb1.7.2N.jar;test.jar 
TestInJar, hsqldb didn't connect to the database inside 
the jar, but created a new database in the current 
directory.
The same happened when I added all the testfiles 
directly to the hsqldb.jar.
Thanks for your help
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/298
HyperSQL Database Engine (HSQLDB) / Bugs / #298 Insert into Table with self FK
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was working with a table which has FK for self.
I found bug with this kind of table managment
when inserting data with FK to self
Here is example of used table creation script:
-----------------------------
create table SELF_FK_TEST (
TEST_ID integer not null, 
FK_ID integer,
constraint SELF_FK_TEST_PK primary key (TEST_ID), 
constraint SELF_FK_TEST_FK foreign key (FK_ID) 
references SELF_FK_TEST (TEST_ID) on delete cascade
)
-----------------------------
Problematic query:
-----------------------------
insert into SELF_FK_TEST (TEST_ID,FK_ID) values (1,1);
-----------------------------
Reported Error:
Error: java.sql.SQLException: Integrity constraint
violation: SELF_FK_TEST_FK table: 
SELF_FK_TEST in statement 
[SET MAXROWS 100;insert into SELF_FK_TEST
(TEST_ID,FK_ID) values (1,1)]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/299
HyperSQL Database Engine (HSQLDB) / Bugs / #299 Delete from table with self FK
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was working with a table which has FK for self.
I found bug with deleting data with FK to self
Here is example of used table creation script
and insert, update row queries
-----------------------------
create table SELF_FK_TEST (
TEST_ID integer not null, 
FK_ID integer,
constraint SELF_FK_TEST_PK primary key (TEST_ID), 
constraint SELF_FK_TEST_FK foreign key (FK_ID) 
references SELF_FK_TEST (TEST_ID) on delete cascade
);
insert into SELF_FK_TEST (TEST_ID,FK_ID) values (1,null);
update SELF_FK_TEST set FK_ID=1 where TEST_ID=1;
----------------------------
Problematic query:
-----------------------------
delete from SELF_FK_TEST where TEST_ID=1;
-----------------------------
Reported Error:
Error: java.lang.StackOverflowError
-----------------------------
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/300
HyperSQL Database Engine (HSQLDB) / Bugs / #300 Delete with FK on delete cascade
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was working with a table which has FK for self on
delete cascade.
I found bug with not correct returned number of updated
rows when deleting.
Here is example of used table creation script and
insert queries for test data:
-----------------------------
create table SELF_FK_TEST (
TEST_ID integer not null, 
FK_ID integer,
constraint SELF_FK_TEST_PK primary key (TEST_ID), 
constraint SELF_FK_TEST_FK foreign key (FK_ID) 
references SELF_FK_TEST (TEST_ID) on delete cascade
)
insert into SELF_FK_TEST (TEST_ID,FK_ID) values (1,null);
insert into SELF_FK_TEST (TEST_ID,FK_ID) values (2,1);
insert into SELF_FK_TEST (TEST_ID,FK_ID) values (3,1);
-----------------------------
Problematic query:
-----------------------------
delete from SELF_FK_TEST where TEST_ID=1;
-----------------------------
Returned not correct info:
1 Rows Updated
Of course 3 rows has been deleted and should be
reported, what is standard for other DB (SapDB)
-----------------------------
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/301
HyperSQL Database Engine (HSQLDB) / Bugs / #301 short form of group by doesn't work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
after creating a little test db:
create table costs (month integer,year integer,value 
double);
insert into costs values (1,2002,88);
insert into costs values (1,2003,50);
insert into costs values (1,2003,100);
insert into costs values (2,2003,56);
insert into costs values (2,2003,99);
select month, year,sum(value) from costs group by 1,2
work in 1.7.1, but not in the current cvs.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/302
HyperSQL Database Engine (HSQLDB) / Bugs / #302 Table not found !
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi all,
I am using Java,JSP and HSQLDB. I ahve used HSQLDB 
as Server and given the url as 
con=DriverManager.getConnection
(&quot;jdbc:hsqldb:hsql://localhost&quot;,&quot;sa&quot;,&quot;&quot;);
With the above connection it takes as the default 
database as test, how do i mention by own database
mail to viswa@infonents.com or viswajit2@yahoo.com
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/303
HyperSQL Database Engine (HSQLDB) / Bugs / #303 compute after aggregation ex) select sum(1)+sum(2)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
general error occurs when this kind of sql is executed.
--
create table test(a int,b int);
insert into test values (10,20);
insert into test values (10,21);
insert into test values (10,23);
select sum(a)+sum(b) from test;
--
and nagative function gives another error
--
select -sum(a) from test;
--
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/304
HyperSQL Database Engine (HSQLDB) / Bugs / #304 computing  within argument of aggregation function  ex) sele
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
computing within argument of aggregation function ex) 
select sum(a+b) ,
S1000 general error java.lang.ClassCastException occurs 
when this kind of sql is executed.
--sql--
create table test(a int,b int);
insert into test values (10,20);
select sum(a+b) from test;
------
if value is created as numeric or double
this kind of error doesn't happen.
--sql--
create table test2(a numeric,b numeric);
insert into test2 values (10,20);
select sum(a+b) from test2;
create table test3(a float,b float);
insert into test3 values (10,20);
select sum(a+b) from test3;
------ 
and explicit casting avoid this kind of error.
--sql--
create table test(a int,b int);
insert into test values (10,20);
select sum(1.0*a+1.0*b) from test;
------
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/305
HyperSQL Database Engine (HSQLDB) / Bugs / #305 Error with Default Value with VARBINARY datatype
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using Alpha N of 1.7.2:
This is my table declaration:
CREATE CACHED TABLE TALLGROUP_PERSON(TALLGROUPID
INTEGER NOT NULL,PERSONID INTEGER NOT NULL,TALLROLEID
INTEGER DEFAULT 1 NOT NULL,TOOLACTIONKEY VARBINARY
DEFAULT FFFFFFFFFFFF
This is the error:
error in script file line: 133 Wrong data type or data
too long in DEFAULT clause: FFFFFFFFFFFF in statement
If I put quotes around the 'FFFFFFFFFFFF' like so, then
it works, but then when I close the database it removes
them and then prints this error the next time I open it.
Dave Johansen
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/306
HyperSQL Database Engine (HSQLDB) / Bugs / #306 SQLException: Column not found
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using Alpha N of 1.7.2:
When I call any of the get methods on a ResultSet
(getString(), getInt() and so on) with anything but the
column name in all uppercase it throws an SQLException.
Is this a change in the way it works or a bug? Because
lower case column names worked in previous versions of
Hypersonic.
Dave Johansen
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/307
HyperSQL Database Engine (HSQLDB) / Bugs / #307 Prepared Statement param is turned to NULL
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Timestamp with TimeZone processed incorrect
hsqldb 172-alpha-n
Try test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/308
HyperSQL Database Engine (HSQLDB) / Bugs / #308 COALESCE caused the client to hang and stack trace in server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version: 1.7.2 alpha N
At the client, enter:
create table T1 (
R1 real,
F1 float
);
insert into t1 values (100, null);
select r1, COALESCE(f1,cast(12.12 as float)) from t1
==&gt; OK
select r1, COALESCE(f1,12.12) from t1; 
==&gt; the client hung and the server outputs 
stack trace
At the server, the following trace came out:
java.lang.ClassCastException: java.math.BigDecimal
at org.hsqldb.DatabaseRowOutput.writeData
(Unknown Source)
at org.hsqldb.Result.write(Unknown Source)
at org.hsqldb.Result.write(Unknown Source)
at org.hsqldb.ServerConnection.run(Unknown 
Source)
at java.lang.Thread.run(Thread.java:536)
Ben
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/309
HyperSQL Database Engine (HSQLDB) / Bugs / #309 Server died on grant select ...
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version 1.7.2 Alpha N
The server will always die if my test.script has 
grant select statements. See the attached file.
Error:
org.hsqldb.HsqlException: error in script file line: 51 
Table not found: SYSTEM_
VIEW_TABLE_USAGE in statement [GRANT SELECT ON 
SYSTEM_VIEW_TABLE_USAGE]
at org.hsqldb.Trace.error(Unknown Source)
at 
org.hsqldb.DatabaseScriptReader.readExistingData
(Unknown Source)
at org.hsqldb.DatabaseScriptReader.readAll
(Unknown Source)
at org.hsqldb.Log.readScript(Unknown Source)
at org.hsqldb.Log.open(Unknown Source)
at org.hsqldb.Logger.openLog(Unknown Source)
at org.hsqldb.Database.reopen(Unknown Source)
at org.hsqldb.Database.open(Unknown Source)
at org.hsqldb.DatabaseManager.getDatabase
(Unknown Source)
at org.hsqldb.DatabaseManager.getDatabase
(Unknown Source)
at org.hsqldb.Server.openDB(Unknown Source)
at org.hsqldb.Server.run(Unknown Source)
at org.hsqldb.Server.access$000(Unknown Source)
at org.hsqldb.Server$ServerThread.run(Unknown 
Source)
In order to circumvent this, I have to remove by hand
all of the grant select statement, and then restart
the server.
Ben
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/310
HyperSQL Database Engine (HSQLDB) / Bugs / #310 PowerBuilder 9.0 can not list any user or system tables
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Below is the trace from the server:
[Server@19298d]: 
2:call &quot;org.hsqldb.Library.getDatabaseProductName&quot;()
[Server@19298d]: 2:SELECT * FROM SYSTEM_TYPEINFO
[Server@19298d]: 2:CALL USER()
[Server@19298d]: 2:CLI:GETCONNECTIONATTRS
[Server@19298d]: 2:CLI:GETCONNECTIONATTRS
[Server@19298d]: 2:SELECT * FROM SYSTEM_TABLES
WHERE 1=1 AND TABLE_SCHEM LIKE
'%' AND TABLE_NAME LIKE '%' AND TABLE_TYPE IN 
('TABLE','VIEW','SYSTEM TABLE','SY
STEM VIEW','ALIAS')
[Server@19298d]: 2:SELECT * FROM 
SYSTEM_PROCEDURES WHERE 1=1 AND 
PROCEDURE_SCHEM LIKE '%' AND PROCEDURE_NAME 
LIKE '%'
I think the problem is that table_schem and 
procedure_schem are being null. I wonder if it hurts 
anywhere else if hsqldb associates the table_schem
and procedure_schem with whomever created those 
tables and procedures.
For example, if I connect as sa, then whatever 
table/procedure I create should be stored under the 
schema sa.
Ben
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/311
HyperSQL Database Engine (HSQLDB) / Bugs / #311 Parametrized SQL with IN in doesn't work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Tested with alpha N. 
This used to work on alpha M and before, e.g.
delete from BF_DOC_TEMPLATE where ID IN (?, ?, ?)]
now I get this exception
java.sql.SQLException: Unexpected token: parametric IN 
list item in statement [delete from BF_DOC_TEMPLATE 
where ID IN (?, ?, ?)]
at org.hsqldb.jdbcDriver.sqlException(Unknown 
Source)
at org.hsqldb.jdbcConnection.prepareStatement
(Unknown Source)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/312
HyperSQL Database Engine (HSQLDB) / Bugs / #312 SET TABLE ADDR_TMP SOURCE &quot;tbl_addr.txt;fs=,;&quot;
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I migrated 1.7.1's data to alpha n, the server
crashed because of lines like the following:
SET TABLE ADDR_TMP SOURCE &quot;tbl_addr.txt;fs=,;&quot;
Notice that there is a trailing &quot;;&quot;. After I manually
removed &quot;;&quot; then the server is happy.
Ben
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/313
HyperSQL Database Engine (HSQLDB) / Bugs / #313 PreparedStatement failure
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using hsqldb_1_7_2_ALPHA_N and have found a problem with PreparedStatement.
I have attached a JUnit test that exemplifies the problem. Basically the PreparedStatement is failing a query that a Statement is successfully executing.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/314
HyperSQL Database Engine (HSQLDB) / Bugs / #314 ResultSetMetaData.isAutoIncrement returns false for IDENTITY
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ResultSetMetaData.isAutoIncrement returns false for 
IDENTITY columns, also in version 1.7.2_N.
From the code I understand that isAutoIncrement is a 
supported feature from version 1.7.2, so I thought I 
should let you know...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/315
HyperSQL Database Engine (HSQLDB) / Bugs / #315 Problem with left join returning null
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
select p.propertytextid, p.internalname,
ptc.textcontent as displayname, pe.expression,
p.defaultexpression, dt.datatypeid, dt.javaclassname from 
(select descriptiontextid, propertytextid,
internalname, datatypeid, defaultexpression from
property where appliestoperson=1) p
left join
(select propertytextid, expression from
propertyexpression where objectid = 1 and objecttypeid
= 7) pe
on p.propertytextid = pe.propertytextid
left join
(select javaclassname, datatypeid from datatype) dt
on p.datatypeid = dt.datatypeid
left join
(select textcontent, textid from textcontent where
languageid = 1) ptc
on p.propertytextid = ptc.textid
This is the entire query that I want to use and it
works just fine with 1.7.1, but for some reason the
DISPLAYNAME column (ptc.textcontent) is null whenever I
do the left join with PROPERTYEXPRESSION. If I remove
the first left join (The one with PROPERTYEXPRESSION),
then it returns the values just fine.
Here's the DDLs for all of the tables:
PROPERTY:
CREATE CACHED TABLE PROPERTY(CATEGORYID INTEGER DEFAULT
NULL,DEFAULTEXPRESSION VARCHAR(4000),MINVALUE DOUBLE
DEFAULT NULL,MAXVALUE DOUBLE DEFAULT
NULL,DESCRIPTIONTEXTID INTEGER DEFAULT
NULL,TRANSLATIONNEEDED TINYINT DEFAULT
NULL,ISSYSTEMDEFINED TINYINT DEFAULT
NULL,ASSIGNABLEBYLEARNINGCONTEXT TINYINT DEFAULT
NULL,FORCOMPONENTSINLAYOUTS TINYINT DEFAULT
NULL,APPLIESTOACTIVITY TINYINT DEFAULT 0 NOT
NULL,APPLIESTOADAPTIVEPATH TINYINT DEFAULT 0 NOT
NULL,APPLIESTOACTIVITYINSTANCE TINYINT DEFAULT 0 NOT
NULL,APPLIESTOACTIVITYSET TINYINT DEFAULT 0 NOT
NULL,APPLIESTOSTAGEMARKER TINYINT DEFAULT 0 NOT
NULL,APPLIESTOCONCEPTLINK TINYINT DEFAULT 0 NOT
NULL,APPLIESTOLOCATION TINYINT DEFAULT 0 NOT
NULL,DATATYPEID INTEGER NOT NULL,PROPERTYTEXTID INTEGER
NOT NULL,INTERNALNAME VARCHAR(100) NOT
NULL,APPLIESTOSCENARIO TINYINT DEFAULT 0 NOT NULL,VITAL
TINYINT DEFAULT 0 NOT NULL,APPLIESTOTALLROLE TINYINT
DEFAULT 0 NOT NULL,APPLIESTOCONCEPT TINYINT DEFAULT 0
NOT NULL,APPLIESTOPERSON TINYINT DEFAULT 0 NOT
NULL,APPLIESTOSKINTHEME TINYINT DEFAULT 0 NOT
NULL,APPLIESTOTALLGROUP TINYINT DEFAULT 0 NOT
NULL,APPLIESTOCONCEPTTYPE TINYINT DEFAULT 0 NOT
NULL,APPLIESTOLAYOUT TINYINT DEFAULT 0 NOT NULL)
PROPERTYEXPRESSION:
CREATE CACHED TABLE PROPERTYEXPRESSION(OBJECTID INTEGER
DEFAULT NULL NOT NULL,LEARNINGCONTEXTID INTEGER DEFAULT
0 NOT NULL,EXPRESSION VARCHAR(4000) DEFAULT 'NULL' NOT
NULL,PROPERTYTEXTID INTEGER NOT NULL,VITAL TINYINT
DEFAULT 0,OBJECTTYPEID INTEGER NOT NULL,CONSTRAINT
PK_PROPERTYEXPRESSION PRIMARY
KEY(LEARNINGCONTEXTID,OBJECTID,OBJECTTYPEID,PROPERTYTEXTID))
DATATYPE:
CREATE CACHED TABLE DATATYPE(DATATYPEID INTEGER NOT
NULL,NAMETEXTID INTEGER,JAVACLASSNAME
VARCHAR(300),DESCRIPTIONTEXTID INTEGER,ISINTERNAL
TINYINT DEFAULT 1 NOT NULL)
TEXTCONTENT
CREATE CACHED TABLE TEXTCONTENT(TEXTID INTEGER DEFAULT
NULL NOT NULL,LANGUAGEID INTEGER DEFAULT NULL NOT
NULL,TEXTCONTENT VARCHAR(4000) NOT NULL,ORIGINAL
TINYINT DEFAULT 0 NOT NULL,FREQUENCYOFUSE TINYINT
DEFAULT NULL,SHOULDTRANSLATE TINYINT DEFAULT 1 NOT
NULL,HASBEENREVIEWED TINYINT DEFAULT 0 NOT
NULL,ISCOURSECONTENT TINYINT DEFAULT 0 NOT
NULL,CONSTRAINT PK_TEXTCONTENT PRIMARY
KEY(LANGUAGEID,TEXTID))
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/316
HyperSQL Database Engine (HSQLDB) / Bugs / #316 Confusing error message with &quot;left join&quot;
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If you have a typo in &quot;left join&quot; then it chops off the
SQL and gives an error message that is very confusing.
I did the following:
select p.internalname, tc.textcontent from
(select propertytextid, internalname from property) p
LEJT JOIN
(select textcontent, textid from textcontent) tc
on p.propertytextid=tc.textid
And it threw an SQLException with an error about
TEXTCONTENT being an invalid column. I think it would
help if it told me that &quot;LEJT JOIN&quot; was invalid.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/317
HyperSQL Database Engine (HSQLDB) / Bugs / #317 In XP can't do a jdbc connect with Manager UI
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
CAN do it programmatically in XP but not by Manager 
UI. I try to connect to HypersonicSQL Server with 
org.hsql.jdbcDriver and 
jdbc:HypersonicSQL:hsql://localhost from the Manager 
UI BUT I get the following java.sql.SQL. Exception 
connection is broken, network subsystem has failed.
Is it just that the version of hsql (circa 2001) just 
doesn't do XP with the UI? My email is dfheinz@aol.com
thanks
Daryl Heinz
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/318
HyperSQL Database Engine (HSQLDB) / Bugs / #318 Server start of 6MB database out of memory
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I tried to start a server with a 6MB database, but it 
failed.
java -cp hsqldb1.7.2N.jar org.hsqldb.Server -port 9999 -
database test -silent false
[org.hsqldb.Server@87816d]: Startup sequence initiated 
from main() method
[org.hsqldb.Server@87816d]: Loading properties from 
[E:\MB\Diss\workspace\Joolap
\server]
[org.hsqldb.Server@87816d]: Could not load properties 
from file
[org.hsqldb.Server@87816d]: Using cli/default properties 
only
[org.hsqldb.Server@87816d]: [Thread[main,5,main]]: 
start() entered
[org.hsqldb.Server@87816d]: [Thread[main,5,main]]: 
waitForStatus() entered
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: run() entered
[org.hsqldb.Server@87816d]: Initiating startup 
sequence...
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: server.database=joolap
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: server.tls=false
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: server.port=9999
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: server.trace=false
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: server.database.0=test
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: 
server.restart_on_shutdown=false
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: 
server.no_system_exit=false
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: server.silent=false
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: 
server.default_page=index.html
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: server.address=any
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: server.dbname.0=
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: server.root=./
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],null]]: openServerSocket() 
entered
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: Got server socket: ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999]
[org.hsqldb.Server@87816d]: Server socket opened 
successfully in 90 ms.
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: openServerSocket() exiting
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: openDB() entered
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: Opening database: [file:test]
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: openDB() exiting
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: notifyStatus() entered
[org.hsqldb.Server@87816d]: [Thread[main,5,main]]: 
waitForStatus() exited
[org.hsqldb.Server@87816d]: [Thread[main,5,main]]: 
start() exiting
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: notifyStatus() exited
[org.hsqldb.Server@87816d]: Startup sequence 
completed in 671 ms.
[org.hsqldb.Server@87816d]: 2003-09-10 09:41:03.977 
HSQLDB server 1.7.2 is onlin
e
[org.hsqldb.Server@87816d]: To close normally, connect 
and execute SHUTDOWN SQL
[org.hsqldb.Server@87816d]: From command line, use 
[Ctrl]+[C] to abort abruptly
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: handleConnection(): Socket
[addr=/127.0.0.1,port=3148,localport=9999]
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: checkRunning() entered
[org.hsqldb.Server@87816d]: [Thread
[org.hsqldb.Server@87816d[LISTENER],5,hsqldb-
hsql-servers][Database[],ServerSocket
[addr=0.0.0.0/0.0.0.0,port=0,localport=9999
]]]: checkRunning() exited
[org.hsqldb.Server@87816d]: [Thread[[Socket
[addr=/127.0.0.1,port=3148,localport=
9999]],5,org.hsqldb.Server@87816d[CONNECTIONS]]]: 
0:trying to connect user null
java.lang.OutOfMemoryError
file sync interval: 59055
file sync: 40
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/319
HyperSQL Database Engine (HSQLDB) / Bugs / #319 Metadata ignorant about new tables
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I ported an hsql1.7.1 database to 1.7.2O and have some 
hava code look inside the metadata for the tablenames:
StringBuffer result = new StringBuffer(&quot;tables:&quot;);
try {
DatabaseMetaData meta = 
con.getMetaData();
ResultSet rs = null;
rs = meta.getTables(null, 
null, null, null);
while (rs.next()) {
result.append
(rs.getObject(3) + &quot; &quot;);
}
rs.close();
} catch (Exception e) {
e.printStackTrace();
}
The old tables show up, but when I create new tables in 
the 1.7.2O DatabaseManager, they aren't listed in the 
metadata in server as well as in-process mode.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/320
HyperSQL Database Engine (HSQLDB) / Bugs / #320 Server shutdown failed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I can't reproduce it, but when issuing shutdown to a 
Hsqldb1.7.2O server, I got the following exception:
[Server@422ede]: 1:shutdown
java.lang.NullPointerException
at org.hsqldb.store.BaseHashMap.getInt(Unknown 
Source)
at org.hsqldb.lib.IntValueHashMap.get(Unknown 
Source)
at 
org.hsqldb.DatabaseManager.releaseAccessCount
(Unknown Source)
at org.hsqldb.SessionManager.closeAllSessions
(Unknown Source)
at org.hsqldb.Database.close(Unknown Source)
at 
org.hsqldb.DatabaseCommandInterpreter.processShutdow
n(Unknown Source)
at 
org.hsqldb.DatabaseCommandInterpreter.executePart
(Unknown Source)
at 
org.hsqldb.DatabaseCommandInterpreter.execute
(Unknown Source)
at org.hsqldb.Session.sqlExecuteDirectNoPreChecks
(Unknown Source)
at org.hsqldb.Session.execute(Unknown Source)
at org.hsqldb.ServerConnection.run(Unknown 
Source)
at java.lang.Thread.run(Thread.java:536)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/321
HyperSQL Database Engine (HSQLDB) / Bugs / #321 1.7.2 ALPHA_O cannot read binary script file
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a database where I converted the .script file to
a binary representation (using 1.7.2 ALPHA M) using set
logtype 1
When I try to open this DB (standalone) with ALPHA_O I
get an exception:
java.sql.SQLException: 
error in script file line: 1 Unexpected token: in
statement []
(actually between &quot;token:&quot; and &quot;in statement&quot; there is
an unreadable character)
When I open the DB with ALPHA_M, set logtype 0 then I
can open the DB with ALPHA_O as well.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/322
HyperSQL Database Engine (HSQLDB) / Bugs / #322 Database works but stops writing to file 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using hsqldb 1.7.1 with Java 1.3.0 on a Solaris
5.8 machine:
SunOS k130s1 5.8 Generic_108528-18 sun4u sparc
SUNW,Ultra-60
For some 10 days the database has obviously worked
correctely but did not write any data to the
hsqldb.script file:
We used our Java database application during this time.
The application does not hold any data outside hsqldb
and I could add and remove entries. However, the
database file date has not changed for 10 days and the
last entry is 10 days back.
Consequentely, on a restart of the database, I lost all
the data.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/323
HyperSQL Database Engine (HSQLDB) / Bugs / #323 Left join - no result
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I used standard left join query.
But this was not working if in ON clause is 
another condition
Example:
create table BASE (ID integer)
create table CHILD(ID integer, BASE_ID integer)
insert into BASE values (1)
insert into CHILD values (1,1)
Correct query:
select BASE.ID,CHILD.ID 
from BASE
left join CHILD 
on CHILD.BASE_ID=BASE.ID
Result:
1,1
Problematic query:
select BASE.ID,CHILD.ID 
from BASE
left join CHILD 
on CHILD.BASE_ID=BASE.ID and CHILD.ID&gt;1
No result !!!
Of course I expect that there will be result like:
1, null
I also found similar reported bug which 
is already closed:
[ 473613 ] join/condition bug
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/324
HyperSQL Database Engine (HSQLDB) / Bugs / #324 Cannot specify a column type + IDENTITY together
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The documentation for CREATE TABLE states:
columnDefinition: 
columnname Datatype [(columnSize[,precision])] [DEFAULT 
'defaultValue'] [[NOT] NULL] [IDENTITY] [PRIMARY KEY] 
The following statement, compliant with the above specification and 
generated by Hibernate's hbm2ddl tool gets rejected:
create table Motion (id BIGINT NOT NULL IDENTITY, idx BIGINT not 
null, startTime TIMESTAMP, endTime TIMESTAMP, sms BIT not null, 
webcamID BIGINT not null)
with the following error message:
Wrong data type: ID in statement [...]
The following statement works, despite that it does not follow the 
grammar rule:
create table Motion (id IDENTITY NOT NULL, idx BIGINT not null, 
startTime TIMESTAMP, endTime TIMESTAMP, sms BIT not null, 
webcamID BIGINT not null)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/325
HyperSQL Database Engine (HSQLDB) / Bugs / #325 NIO IllegalArgumentException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The database using NIO would try to access
a file beyond the length of the buffer causing
an IllegalArgumentException. The code missed
the corner case when the seek position was
equal to the file length. Attached is a modified file
that fixes this. I no longer get the 
IllegalArgumentException.
Also, I took the liberty of expanding the data file
linearly instead of exponentially. This seems to work
in the testing I've done, and it cuts down on disk usage.
Thanks for a great product!
-Tim
tjw3000@bellatlantic.net
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/326
HyperSQL Database Engine (HSQLDB) / Bugs / #326 1.7.2 ALPHA N+O: Query on SYSTEM_SESSIONS throws SQLExc.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I guess there´s a problem with the SYSTEM_SESSIONS 
table.
Here´s a short description of what I did:
1. User 1 connects to a database (served by 
org.hsqldb.Server).
2. User 1 disconnects.
3. User 2 connects to the same database.
4. User 2 posts statement &quot;SELECT * FROM 
SYSTEM_SESSIONS&quot; which results in the following 
SQLException: 
(copied from DatabaseManagerSwing)
&quot;S1000 General error java.lang.NullPointerException in 
statement [SELECT * FROM SYSTEM_SESSIONS] / Error 
Code: 40 / State: S1000&quot;
Details can be found in the attached file.
(&quot;//&quot; lines are my comments)
Udo
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/327
HyperSQL Database Engine (HSQLDB) / Bugs / #327 possible DatabaseManager confusion
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I noticed a special case which can confuse the 
DatabaseManager (1.7.2P) and possibly also destroy a 
database.
When copying a database from one directory to another, 
I only copied test.script, but forgot about the 
test.properties file.
When I tried to open the database with the 
DatabaseManager no tables were shown, the existing 
test.script was ignored and the command &quot;checkpoint&quot; 
or &quot;shutdown&quot; would even overwrite the existing file.
This behaviour is new to 1.7.2P (wasn't in 1.7.2N).
Before I also used to copy .script files around and rely 
on the DatabaseManager to recreate a 
default .properties file as needed. So I guess some users 
might get very confused about this changed behaviour.
I suggest improved exception information (e.g. 
test.script found but no test.properties). (would also be 
good if a properties file is missing is missing inside a jar 
file - see other bug report).
I guess a question like : &quot;Shall I create a default 1.7.2 
properties file&quot; would be ideal.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/328
HyperSQL Database Engine (HSQLDB) / Bugs / #328 maxlength of varchar is ignored
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Class.forName( &quot;org.hsqldb.jdbcDriver&quot; );
java.sql.Connection conn = java.sql.DriverManager.
getConnection( 
&quot;jdbc:hsqldb:c:/Documents and Settings/dima/My 
Documents/java/testdb/data&quot;, &quot;sa&quot;, &quot;&quot; );
java.sql.Statement stat = conn.createStatement();
stat.executeUpdate( &quot;CREATE TABLE TEST (ID 
VARCHAR(10) )&quot; );
stat.executeUpdate( &quot;INSERT INTO TEST (ID) VALUES 
('this is a test value longer than 10 chars')&quot; );
// should throw an exception here
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/329
HyperSQL Database Engine (HSQLDB) / Bugs / #329 NIO lock problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am getting an exception when trying to allocate a
connection. I tried to clean database files before
running the program, with no success. 
It was tested on Compaq Tru64 platform, &quot;java version
&quot;1.4.0&quot;
Java(TM) 2 Runtime Environment, Standard Edition
Fast VM (build 1.4.0-1.p2, native threads, mixed mode,
12/10/2002-19:05)&quot;.
The same code _works_ on Win2000 or Linux (also java
ver 1.4) with no problem, so maybe this is just a buggy
Java NIO API on Tru64. But I need to make it running on
Tru64 somehow. 
Is there any way to avoid using NIO API in hsqldb?
Right now I just commented all code in
org.hsqldb.NIOLockFile in my sources (and it works fine).
WBR,
Maxim
import java.sql.*;
class Test {
public static void main(String args[]) throws
Exception {
Class.forName(&quot;org.hsqldb.jdbcDriver&quot;);
String path = &quot;jdbc:hsqldb:qq&quot;;
Connection conn1 =
DriverManager.getConnection(path, &quot;sa&quot;, &quot;&quot;);
System.out.println(conn1);
}
}
/*
java.io.IOException: No locks available
at sun.nio.ch.FileChannelImpl.lock0(Native Method)
at
sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:528)
at
java.nio.channels.FileChannel.tryLock(FileChannel.java:967)
at
org.hsqldb.NIOLockFile.lockImpl(NIOLockFile.java:82)
at org.hsqldb.LockFile.tryLock(LockFile.java:804)
at org.hsqldb.Logger.acquireLock(Logger.java:343)
at org.hsqldb.Logger.openLog(Logger.java:93)
at org.hsqldb.Database.reopen(Database.java:257)
at org.hsqldb.Database.open(Database.java:220)
at
org.hsqldb.DatabaseManager.getDatabase(DatabaseManager.java:182)
at
org.hsqldb.DatabaseManager.newSession(DatabaseManager.java:100)
at
org.hsqldb.jdbcConnection.&lt;init&gt;(jdbcConnection.java:2418)
at
org.hsqldb.jdbcDriver.getConnection(jdbcDriver.java:214)
at
org.hsqldb.jdbcDriver.connect(jdbcDriver.java:198)
at
java.sql.DriverManager.getConnection(DriverManager.java:512)
at
java.sql.DriverManager.getConnection(DriverManager.java:171)
at Test.main(Test.java:8)
java.sql.SQLException: The database is already in use
by another process:
org.hsqldb.NIOLockFile@c7305c97[file =/home/mve/qq.lck,
exists=true, locked=false, valid=false, fl =null]:
at
org.hsqldb.jdbcDriver.sqlException(jdbcDriver.java:140)
at
org.hsqldb.jdbcConnection.&lt;init&gt;(jdbcConnection.java:2432)
at
org.hsqldb.jdbcDriver.getConnection(jdbcDriver.java:214)
at
org.hsqldb.jdbcDriver.connect(jdbcDriver.java:198)
at
java.sql.DriverManager.getConnection(DriverManager.java:512)
at
java.sql.DriverManager.getConnection(DriverManager.java:171)
at Test.main(Test.java:8)
*/
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/330
HyperSQL Database Engine (HSQLDB) / Bugs / #330 NullPointerException using IN where NULL values in column
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version:
hsqldb_1_7_2_ALPHA_Q
Error message: 
S1000 General error java.lang.NullPointerException
How to reproduce bug:
First create the table and insert some integer values:
create table MYTABLE (MYCOLUMN integer);
insert into MYTABLE (MYCOLUMN) values (1);
insert into MYTABLE (MYCOLUMN) values (2);
The following select runs fine:
select * from MYTABLE where MYCOLUMN in (1,2); 
Now insert a null value:
insert into MYTABLE (MYCOLUMN) values (null);
The following select fails:
select * from MYTABLE where MYCOLUMN in (1,2); 
So I guess you have to do a check for null before 
comparing the data in the table with the values in the IN 
statement.
I know this worked before in 1.7.1, as my code failed 
trying to switch to the latest alpha.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/331
HyperSQL Database Engine (HSQLDB) / Bugs / #331 NullPointerException with VARCHAR and PS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I do the following PreparedStatement:
select TEXTID from TEXTCONTENT where TEXTCONTENT = ?
and LANGUAGEID = ?
I get this NullPointerException when I call
ps.setString(1, &quot;test&quot;)
java.lang.NullPointerException
at
org.hsqldb.jdbcPreparedStatement.checkSetParameterIndex(jdbcPreparedStatement.java:2178)
at
org.hsqldb.jdbcPreparedStatement.setString(jdbcPreparedStatement.java:689)
at
com.tallgroup.business.BTextContent.getTextIDForText(BTextContent.java:267)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/332
HyperSQL Database Engine (HSQLDB) / Bugs / #332 rs.isBeforeFirst() should return false
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
rs.isBeforeFirst() should return false when ResultSet is 
empty.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/333
HyperSQL Database Engine (HSQLDB) / Bugs / #333 Transactions and closing server from dos bug!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
http://sourceforge.net/forum/forum.php?
thread_id=945623&amp;forum_id=73674
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/334
HyperSQL Database Engine (HSQLDB) / Bugs / #334 wrong results with join in ALPHA_Q version
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is how to reproduce the problem:
- unzip the current alpha (ALPHA_Q) in some directory
- execute runServer.bat in the demo directory
- execute runManager to connect to this database
- execute the following script:
CREATE TABLE MEDIUM_CONTAINER(ID VARCHAR(28) NOT NULL
PRIMARY KEY,TITLE VARCHAR(30) NOT NULL)
CREATE TABLE CAZE(ID VARCHAR(28) NOT NULL PRIMARY KEY)
CREATE TABLE SLEEVE(ID VARCHAR(28) NOT NULL PRIMARY KEY)
INSERT INTO MEDIUM_CONTAINER
VALUES('1i1rncBXY3/zutUEEVW4WIGx/GY=','hoi')
INSERT INTO MEDIUM_CONTAINER
VALUES('HCycYbJIM0tNnAuak47DcyRtLi0=','ukguk')
INSERT INTO MEDIUM_CONTAINER
VALUES('U5Po17a9tiwrQWIdO9E0zxh/iBU=','jjjj')
INSERT INTO MEDIUM_CONTAINER
VALUES('ay7XMXKeZSaq6sq1h6FuWOhlERM=','groovy trax')
INSERT INTO MEDIUM_CONTAINER
VALUES('g89gMKcNcrKyuwMmdemfU8qpdYc=','Serious Beats 4')
INSERT INTO MEDIUM_CONTAINER
VALUES('uqYTusxB8LyRyl5CUkzYiYP7Gtw=','giugi')
INSERT INTO CAZE VALUES('1i1rncBXY3/zutUEEVW4WIGx/GY=')
INSERT INTO CAZE VALUES('g89gMKcNcrKyuwMmdemfU8qpdYc=')
INSERT INTO SLEEVE VALUES('HCycYbJIM0tNnAuak47DcyRtLi0=')
INSERT INTO SLEEVE VALUES('U5Po17a9tiwrQWIdO9E0zxh/iBU=')
INSERT INTO SLEEVE VALUES('ay7XMXKeZSaq6sq1h6FuWOhlERM=')
INSERT INTO SLEEVE VALUES('uqYTusxB8LyRyl5CUkzYiYP7Gtw=')
- now execute the following select:
select mediumco0_.id as id,
casewhen(mediumco0__1.id is not null, 1,
casewhen(mediumco0__2.id is not null, 2,
casewhen(mediumco0_.id is not null, 0, -1))) as clazz_,
mediumco0_.title as title0_
from
MEDIUM_CONTAINER mediumco0_
left outer join SLEEVE mediumco0__1 on
mediumco0_.id=mediumco0__1.id
left outer join CAZE mediumco0__2 on
mediumco0_.id=mediumco0__2.id
-&gt; this will return 2 records;
ID CLAZZ_ TITLE0_ 
---------------------------- ------ --------------- 
1i1rncBXY3/zutUEEVW4WIGx/GY= 2 hoi 
g89gMKcNcrKyuwMmdemfU8qpdYc= 2 Serious Beats 4 
2 row(s) in 0 ms
- perform the same operations with the ALPHA_M release
-&gt; the select will return 6 records;
ID CLAZZ_ TITLE0_ 
---------------------------- ------ --------------- 
1i1rncBXY3/zutUEEVW4WIGx/GY= 2 hoi 
HCycYbJIM0tNnAuak47DcyRtLi0= 1 ukguk 
U5Po17a9tiwrQWIdO9E0zxh/iBU= 1 jjjj 
ay7XMXKeZSaq6sq1h6FuWOhlERM= 1 groovy trax 
g89gMKcNcrKyuwMmdemfU8qpdYc= 2 Serious Beats 4 
uqYTusxB8LyRyl5CUkzYiYP7Gtw= 1 giugi 
6 row(s) in 20 ms
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/335
HyperSQL Database Engine (HSQLDB) / Bugs / #335 select with where on unique indexed column doesn't work well
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm working on 1.7.2 alpha_M (I have problems with 
version alpha_R - I wrote about it in the forum)
The test case is:
I have server.properties file with:
'server.database=pecan'
1. run runServer.bat
2. run runManager.bat, connect as user = sa and create 
a new user:
CREATE USER PECAN PASSWORD &quot;PECAN&quot; ADMIN
3. connect to pecan user (from the dbManager).
4. run the following sqls:
----------------
CREATE CACHED TABLE APP (
VARIANT_ID INTEGER (9) NOT NULL,
APP_ID INTEGER (9) NOT NULL,
APP_NAME VARCHAR (35) NOT NULL,
CONSTRAINT PK_APP PRIMARY KEY( VARIANT_ID));
--------------
CREATE INDEX APP ON APP(APP_ID);
--------------
ALTER TABLE APP ADD CONSTRAINT APP_IX1 UNIQUE( 
APP_NAME);
-------------
INSERT INTO APP VALUES (1, 1, 'Shelly');
-------------
INSERT INTO APP VALUES (2, 2, 'Eran');
------------
COMMIT;
------------
SHUTDOWN;
5. run runServer.bat
6. run runManager.bat - connect with user=pecan and 
run the following sqls:
-------------
SELECT * FROM APP;
(you get 2 records back)
------------
SELECT * FROM APP WHERE APP_
NAME = 'Shelly';
(the record is returned)
-----------
SELECT * FROM APP WHERE APP_
NAME = 'Eran';
(nothing is returned !!!)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/336
HyperSQL Database Engine (HSQLDB) / Bugs / #336 create user with jdbc
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
With 1.7.2 R the following jdbc prepared statement
&quot;create user ? password ? admin&quot;
throws SQLException &quot;parameter index out of range: 1&quot;
when trying to substitute the first ? with name using 
setString(1, &quot;name&quot;)
This was warking correctly with 1.7.2M and before
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/337
HyperSQL Database Engine (HSQLDB) / Bugs / #337 select date/time with jdbc
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
our table is
create table date_test
(
DATE_TEST DATE NOT NULL
)
Do following in java
Calendar cal= Calendar.getInstance()
cal.set(1974, 10, 20, 1, 2, 3)
java.sql.Date insertDate = new java.sql.date
(cal.getTimeInMillis())
// now insert this insert date into a table 
insert = prepareStatement(&quot;insert into date_test
(date_test) values(?)&quot;);
insert.setDate(1, insertDate);
commit
now try to select the date back using following code
select = prepareStatement(&quot;select date_test.* from 
date_test where date_test = ?&quot;);
// Notice that I am setting different time then before
// but it shouldn't matter since I am querying just the 
date
cal.set(1974, 10, 20, 2, 3, 4)
java.sql.Date selectDate = new java.sql.date
(cal.getTimeInMillis())
select.setDate(1, selectDate)
The result set returned is empty
If I would set the exact time I set when I inserted the 
date, the result set would contain the record.
The same happens if I want to insert time and then 
select it with different date into a TIME column
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/338
HyperSQL Database Engine (HSQLDB) / Bugs / #338 comparison with LIKE and Pstmts fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi there,
(see below sample code). it seems that &quot;col LIKE ?&quot; is 
broken in the current release. the below code normally 
should return a row, but if I use LIKE the it does not. 
the result of the comparison is always false. if i simply 
use col = ?, it works as expected. seems to be a bug.!? 
.thomas tom@gmx.it
Connection conn = 
DriverManager.getConnection( &quot;jdbc:hsqldb:.&quot;,&quot;sa&quot;,&quot;&quot; );
Statement stmt = 
conn.createStatement();
stmt.executeUpdate(&quot;CREATE TABLE 
test (col VARCHAR(30))&quot;);
stmt.executeUpdate(&quot;INSERT INTO 
test (col) VALUES ('one')&quot;);
stmt.close();
PreparedStatement pstmt = 
conn.prepareStatement( &quot;SELECT * FROM test WHERE ( 
col LIKE ? )&quot; );
pstmt.setString(1,&quot;one&quot;);
ResultSet rs = pstmt.executeQuery();
rs.next();
System.out.println( rs.getString
(&quot;COL&quot;));
conn.close();
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/339
HyperSQL Database Engine (HSQLDB) / Bugs / #339 where column in (select
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Given a table
CREATE TABLE dups(
pk INTEGER NOT NULL PRIMARY KEY,
val VARCHAR NOT NULL);
with content
INSERT INTO dups VALUES (1, 'first');
INSERT INTO dups VALUES (2, 'second');
INSERT INTO dups VALUES (3, 'third');
INSERT INTO dups VALUES (4, 'first');
INSERT INTO dups VALUES (5, 'first');
INSERT INTO dups VALUES (6, 'second');
following statements work as expected:
SELECT distinct(sa.pk) FROM dups sa, dups sb
WHERE sa.val=sb.val AND sa.pk!=sb.pk;
SELECT a.pk, a.val FROM dups a
WHERE a.pk in (1, 2, 4, 5, 6);
The combined statement
SELECT a.pk, a.val FROM dups a 
WHERE a.pk in (SELECT distinct(sa.pk)
FROM dups sa, dups sb 
WHERE sa.val=sb.val AND sa.pk!=sb.pk);
results in
SQL Error 
----------------------------------------------------- 
Column not found: PK / Error Code: -28 / State: S0022 
11 row(s) in 0 ms
in alpha N - R
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/340
HyperSQL Database Engine (HSQLDB) / Bugs / #340 hsqldbmin.jar looking for HSQLClientConnection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Trying to run embedded hsqldbmin.jar, and getting:
java.lang.NoClassDefFoundError: 
org/hsqldb/HSQLClientConnection
This comes from src.org.hsqldb.HSQLClientConnection 
line 1590 (alpha R):
isNetConn = c.sessionProxy instanceof 
HSQLClientConnection;
HSQLClientConnection is not included in hsqldbmin.jar - it 
does implement SessionInterface which is included. A fix 
for embedded mode is:
isNetConn = c.sessionProxy instanceof SessionInterface;
I don't have the background to know if this might have 
any bad side effect in server modes.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/341
HyperSQL Database Engine (HSQLDB) / Bugs / #341 Deletion of .backup file causes db corruption w/JDBC
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I deleted a .backup file (isn't this permitted?). Then I 
opened the db using JDBC (DriverManager.getConnection
()). This results in a &quot;database in use&quot; error, and the db
is corrupted, having 0 bytes.
This sounds like a serious bug, if it is a bug. At any 
rate, the system should never blow away the entire db?
Thanks,
Dave C.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/342
HyperSQL Database Engine (HSQLDB) / Bugs / #342 New bug in Select/Like on primary key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Working with HSQLDB 1.7.2 - S
Following DDL:
CREATE TABLE additionaldata (
function VARCHAR(20) PRIMARY KEY,
value1  int NOT NULL,
value2 int NOT NULL, 
value3 varchar,
description varchar);
If i'm doing the following query:
select * from additionaldata where function like 'G%'
the ResultSet is empty. This is definitly wrong!
Using only 
select * from additionaldata where function like '%'
the whole table will be shown (this is ok)
Removing the &quot;Primary Key&quot; constraint from the DDL in 
the &quot;function&quot;-column causes the SQL-queries to 
perform properly.
Any ideas about that? I'm quite sure, that the version of 
HSQLDB I tried before does not behave like this.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/343
HyperSQL Database Engine (HSQLDB) / Bugs / #343 LIKE error in v. 1.7.2_S
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
I created a simple cached test table:
ID INTEGER IDENTITY
DESC VARCHAR(250) NOT NULL
and an index to DESC column.
I execute a simple Java program to fill the table with 
random numbers (200,000 records). No problem.
I execute this select:
SELECT DESC FROM BIGTABLE 
WHERE DESC = '-579661107'
And works fine:
Execution: 46 ms.
Fetch: 110 ms.
Records: 1
Then I try this select:
SELECT DESC FROM BIGTABLE 
WHERE DESC LIKE '-579661107'
And works fine too:
Execution: 31 ms.
Fetch: 110 ms.
Records: 1
And this select:
SELECT DESC FROM BIGTABLE 
WHERE DESC LIKE '%-5796611%'
And works fine too:
Execution: 7281 ms.
Fetch: 109 ms.
Records: 1
Finally, I try this select:
SELECT DESC FROM BIGTABLE 
WHERE DESC LIKE '-5796611%'
And DON'T WORKS:
Execution: 46 ms.
Fetch: 0 ms.
Records: 0
I try also with LIKE '-57966%07' and don't works
again.
HSQLDB is unable to find the record.
Thanks,
Francesc Rosés
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/344
HyperSQL Database Engine (HSQLDB) / Bugs / #344 (ALPHA_S) Can't compile HsqlDateTime with earlier JDKs
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
One can't compile HsqlDateTime.java with JDK1.3 or earlier 
because it uses Calendar's setTimeInMillis(long) and 
getTimeInMillis() methods, which were protected rather than 
public until JDK1.4 (I think it was). Equivalents, though less 
efficient, in earlier JDKs would be Calendar.setTime(new 
java.util.Date(long)) and 
Calendar.getTime().getTime().
FWIW, I've attached an 
updated HsqlDateTime.java and build.xml which use 
codeswitcher and a wrapper method to use the more efficient 
methods when JDBC3 is defined, the less efficient ones otherwise.
Using a wrapper makes the code simpler (though not so pretty) and 
the optimizer should toss the overhead. Used the 'tempDate' static 
member that was lying around seemingly unused (made it private).
Haven't done regression on it, no warrantee.
Obviously, 
I'm not a developer on the project and throw it away if you like. It's 
just FWIW.
Regards,
--
T.J. Crowder
tjcrowder 
at users
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/345
HyperSQL Database Engine (HSQLDB) / Bugs / #345 Errors in Text Tables
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There is a problem with writing and then reading text
tables.
The problems are related to the field &quot;SystemId&quot; feature.
Seems like the text tables were written without the
last column, and when reading, 
the extra column &quot;SystemId&quot; was created.
When the last column type was not the same type of
SystemId (long, i guess), 
a ClassCastException was thrown, and the server hanged
(as the client).
I studied and fixed this problem in 2 methods:
In class DatabaseRowInput:
public Object[] readData(int[] colTypes) {
int l = colTypes.length;
Object[] data = new Object[l+(makeSystemId ? 1 : 0)];
Object o;
int type;
&lt;...unmodified...&gt;
if (makeSystemId) {
data[l] = new Integer(getPos());
}
return data;
}
and in class DatabaseRowOutput:
public void writeData(Object[] data, Table t)
throws IOException, SQLException {
int[] types = t.getColumnTypes();
int l = types.length;
writeData(l, types, data);
}
Without this (or other fix) to resolve this issue,
using text tables with the 
full life cycle (attaching, updating/inserting, closing
bd, reopening, reading)
will be impossible.
The connection hangup was due to the fact that we were
not expecting a 
ClassCastException in class ServerConnection, method run().
I think a catch(Exception e) statement should be add
after the existing
one for IOException and SQLException, to avoid this
problem.
Best Regards,
Carlos Silva
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/346
HyperSQL Database Engine (HSQLDB) / Bugs / #346 1.7.1 zip missing hsqldb.gif in src/org/hsqldb/util
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After using ant to build the standard jar or any jar 
including Swing, the DatabaseManagerSwing utility will 
fail to load, on a getIcon statement in CommonSwing.
Upon examing the source, I see the .gif mentioned is 
missing from the distro. I found one on the web, put it 
in hsqldb/src/org/hsqldb/util, and reran ant (the ant file 
does mention this gif explicitly for inclusion). This fixes 
the problem (still a bug though, until the distro zip is 
fixed).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/347
HyperSQL Database Engine (HSQLDB) / Bugs / #347 .lck file created for read-only database
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
- The 'readonly' property is set to 'true' in the 
&lt;database name&gt;.properties file.
- This database has been shutdown by the 'SHUTDOWN 
COMPACT' command.
Each connection to the resulting database still creates a 
&lt;database name&gt;.lck file, preventing it to be put in a 
CD-ROM, for example.
This has been tested on 1.7.2 alpha N, R and S versions.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/348
HyperSQL Database Engine (HSQLDB) / Bugs / #348 number of records
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello!
I'm writing from Palermo(Sicilia).
Thanks for your hsqldb database that i'm using for a web 
application with servlet,jsp e javaBean.
The version that i use is 1.7.1 but i have found a bug, i 
think.
I use this method to find the number of records of a 
ResultSet :
public int getRowsCount(){
int i=0;
try{
rs.last();
i= rs.getRow();
rs.first();
} catch (Exception e) {System.out.println
(e.toString());} 
return i;
}
if records are 4 this method return 4 and in ResultSet 
there are 4 records but if i use while loop to print 
records, it prints 3 records if i use before this method, 
and 4 records if i don't use this method before
I use this ResultSet :
st = cConn.createStatement 
(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCU
R_READ_ONLY);
rs = st.executeQuery (&quot;SELECT 
Annunci.Key,Annunci.Data, Annunci.Annuncio,&quot;+ 
&quot;Associazioni.Associazione, 
Associazioni.Sito, Associazioni.Mail,Associazioni.Citta,&quot;+
&quot; Categorie.Categoria FROM 
Categorie,Annunci,Associazioni&quot; +
&quot; WHERE (((Associazioni.KeyCategoria) 
LIKE &quot;+ categoria +&quot;))&quot; + 
&quot; AND (((Associazioni.Citta) LIKE '%&quot;+ 
citta.toUpperCase() +&quot;%'))&quot; + 
&quot; AND 
Associazioni.KeyCategoria=Categorie.Key &quot; + 
&quot;AND Annunci.KeyAssociazione= 
Associazioni.Key order by key desc&quot;);
What can i do to find number of records without to use 
this method ?
Spero di essere stato utile
Ciao e grazie.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/349
HyperSQL Database Engine (HSQLDB) / Bugs / #349 LIKE bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If you create a simple table with version 1.7.2 alpha R :
CREATE TABLE my_table
( name VARCHAR );
INSERT INTO my_table
VALUES ('test');
then this first SELECT statement returns this last 
inserted row:
SELECT name
FROM my_table
WHERE name LIKE 'test';
But this one don't, though it should !
SELECT name
FROM my_table
WHERE name LIKE LOWER('test');
This seems to happen when you use any string function, 
except CONCAT:
SELECT name
FROM my_table
WHERE name LIKE CONCAT('te', 'st');
... returns this row.
However when you include another string function the 
problem reappears:
SELECT name
FROM my_table
WHERE name LIKE CONCAT(SUBSTR('te', 1), 'st');
... does not return any row.
There was not any problem when I used the 1.7.2 alpha 
N version. Alpha T still have this bug.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/350
HyperSQL Database Engine (HSQLDB) / Bugs / #350 alter table... add default not working
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm running the following command in the DatabaseManager:
alter table k alter column vc add default 'dfltval'
It returns &quot;Unexpected token: ADD in statement [alter
table k alter column vc add] / Error Code: -11 / State:
37000.
version A T.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/351
HyperSQL Database Engine (HSQLDB) / Bugs / #351 saveSorted ... negative seek offset (2)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I'm using HSQL 1.7.1 with JRE1.3.1_03 in a Windows 
2000 environment. My database contains only one table 
with 8,000,000 rows (database size is about 1 GB) and 
three indexes on single columns. I had a former problem 
with creating resp. dropping an index which didn't work 
because of an
&quot;File input/output error: saveSorted java.io.IOException: 
Negative seek offset in statement [...]&quot;
error (see bug submission 780397 from 2003-07-30). I 
solved this problem by creating a new database and 
copying the data row by row.
Now I have a more serious problem: The database can't 
start anymore because of the same error (though I used 
a backup which has been successfully compacted 
before). When I remove the &quot;CREATE INDEX&quot; statements 
from the script file I get InputStream-errors (because 
the index roots aren't valid anymore), when I 
remove &quot;CREATE INDEX&quot; and &quot;SET TABLE INDEX&quot; 
commands I get no errors but have no access to the 
data anymore (though the database size stays the 
same).
No my questions:
Is there another workaround for this situation? 
How can I manipulate the &quot;SET TABLE INDEX&quot; command 
manually so it doesn't lead to the errors described above?
Will it be possible to use an index spanning more rows in 
1.7.2?
Greetings,
Christian
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/352
HyperSQL Database Engine (HSQLDB) / Bugs / #352 Create View fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This sequence 
create table bf_user(
id integer not null
)
create table BF_ISSUEDITEM(
inventory_id integer not null,
STILL_ISSUED_COUNT integer not null,
ISSUED_DATE timestamp not null,
recipient integer not null
)
create view BF_USER_STILL_ISSUEDITEM_PART as
select BF_USER.ID as ID,
BF_ISSUEDITEM.INVENTORY_ID as INVENTORY_ID,
sum(BF_ISSUEDITEM.STILL_ISSUED_COUNT) as 
STILL_ISSUED_COUNT,
min(BF_ISSUEDITEM.ISSUED_DATE) as ISSUED_SINCE
from BF_USER, BF_ISSUEDITEM
where BF_USER.ID = BF_ISSUEDITEM.RECIPIENT
AND BF_ISSUEDITEM.STILL_ISSUED_COUNT &gt; 0
group by BF_USER.ID, BF_ISSUEDITEM.INVENTORY_ID 
create view BF_USER_STILL_ISSUEDITEM_FULL as 
select BF_USER.ID as ID,
BF_USER_STILL_ISSUEDITEM_PART.INVENTORY_ID AS 
INVENTORY_ID, 
BF_USER_STILL_ISSUEDITEM_PART.STILL_ISSUED_COUN
T as STILL_ISSUED_COUNT, 
BF_USER_STILL_ISSUEDITEM_PART.ISSUED_SINCE as 
ISSUED_SINCE
from BF_USER, BF_USER_STILL_ISSUEDITEM_PART
where BF_USER.ID = 
BF_USER_STILL_ISSUEDITEM_PART.ID 
generates this exception (works in alpha M)
java.sql.SQLException: Table not found in statement [ 
select BF_USER.ID as ID, BF_USER.DOMAIN_ID as 
DOMAIN_ID, 
BF_USER_STILL_ISSUEDITEM_PART.INVENTORY_ID AS 
INVENTORY_ID, BF_USER.FIRST_NAME as 
FIRST_NAME, BF_USER.LAST_NAME as 
LAST_NAME, BF_USER.LOGIN_NAME as 
LOGIN_NAME, 
BF_USER_STILL_ISSUEDITEM_PART.STILL_ISSUED_COUN
T as STILL_ISSUED_COUNT, 
BF_USER_STILL_ISSUEDITEM_PART.ISSUED_SINCE as 
ISSUED_SINCE from BF_USER, 
BF_USER_STILL_ISSUEDITEM_PART where 
BF_USER.ID = BF_USER_STILL_ISSUEDITEM_PART.ID ]
at org.hsqldb.jdbcDriver.sqlException(Unknown 
Source)
at org.hsqldb.jdbcStatement.fetchResult
(Unknown Source)
at org.hsqldb.jdbcStatement.execute(Unknown 
Source)
at 
org.enhydra.jdbc.core.CoreStatement.execute
(CoreStatement.java:86)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/353
HyperSQL Database Engine (HSQLDB) / Bugs / #353 .new files not removed when using relative path
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If I create a connection to a stand alone database using 
a relative path, when I close the connection the 
backup.new and script.new files do not get removed.
The next time I try to connect to the database and then 
disconnect I get the following exception.
java.sql.SQLException: File input/output 
error: ./db/da_database.script.new in statement 
[SHUTDOWN]
at org.hsqldb.Trace.getError(Unknown Source)
at org.hsqldb.jdbcResultSet.&lt;init&gt;(Unknown 
Source)
at 
org.hsqldb.jdbcConnection.executeStandalone(Unknown 
Source)
at org.hsqldb.jdbcConnection.execute
(Unknown Source)
at org.hsqldb.jdbcConnection.closeStandalone
(Unknown Source)
at org.hsqldb.jdbcConnection.close(Unknown 
Source)
at ca.ewert.da.DBTest.main(DBTest.java:76)
Example:
if I use the following URL: &quot;jdbc:hsqldb:db/da_database&quot; 
the .new files don't get removed. 
But if I used: &quot;jdbc:hsqldb:C:/javaProj/Draft Assist 
2.00/build/db/da_database&quot; it seems to work fine.
using hsqldb 1.7.1 on Win2000
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/354
HyperSQL Database Engine (HSQLDB) / Bugs / #354 't' should be interpreted as 'true' for bit columns
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
inserting the value 't' into a bit column is
interpreted by hsqldb (1.7.2 alpha T) as 'false'.
Example :
create table test (isOk bit);
insert into table test (isOk) values ('t');
The row will now have the value 'false'.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/355
HyperSQL Database Engine (HSQLDB) / Bugs / #355 Corrupted .script file using DatabaseManager
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Generating a database with about 300 tables using 
ScriptTool
generates the database files .properties and .log. After 
using
the DatabaseManager and closing it the data went 
from .log to
the .script file but seems to be corrupted.
The DatabaseManager changes the IDENTITY attribute of
the primary key columns to 
&quot;GENERATED BY DEFAULT AS IDENTITY(START WITH 0).
Using this database in my application leads to the 
following error:
&quot;error in testdb.script line: 1
Unexpected token: GENERATED in statement [CREATE 
TABLE ATTR
(ATTR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY
(START WITH 0) 
NOT NULL PRIMARY &quot;.
Questions:
Is the &quot;GENERATED BY DEFAULT ...&quot; entry of 
DatabaseManager actually 
intended / needed?
How can I avoid this DatabaseManager behaviour? Note 
that the data in the 
.log file seems to match exactly my SQL statement 
without &quot;GENERATED ...&quot; ?
I'm using version 1.72 alpha m.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/356
HyperSQL Database Engine (HSQLDB) / Bugs / #356 JDBC methode &quot;getScale&quot; always returns zero
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There is a bug in connecting of hsqldb and Druid 
(druid.sf.net).
Because of the &quot;not correct/not complete&quot; 
implementation of the &quot;getScale&quot; methode 
of &quot;jdbcResultSetMetaData&quot;. Durid use this methode and 
handle the colum as an Integer and not a decimal.
For more information about the druid bug see:
&quot;[ 838413 ] Exception with JDBC HSQLDB&quot;
or:
https://sourceforge.net/tracker/index.php?
func=detail&amp;aid=838413&amp;group_id=15111&amp;atid=115111
So please correct the implementation.
Thanks a lot!
Jochen
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/357
HyperSQL Database Engine (HSQLDB) / Bugs / #357 TestSelfQueries fails on 1.7.2_ALPHA_T
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I got 3 failures (2 errors) when running the Self test,
specifically on TestSelfQueries.txt.
The first one is:
Opened test script file: E:\hsqldb\data\TestSelfQueries.txt
java.lang.Exception: Line: 22 Expected c/3 but got
error Column not found: USER_
USERNAME in statement [/*c3*/select * from configuser
where usr_password in (use
r_username)] / /*c3*/select * from configuser where
usr_password in (user_userna
me);
at org.hsqldb.test.TestUtil.test(Unknown Source)
at org.hsqldb.test.TestUtil.testScript(Unknown
Source)
at
org.hsqldb.test.TestSelf.testPersistence(Unknown Source)
at org.hsqldb.test.TestSelf.test(Unknown Source)
at org.hsqldb.test.TestSelf.main(Unknown Source)
This one I fixed by changing user_username to usr_username.
The other one is:
java.lang.Exception: Line: 33 Expected c/0 but got
error Column not found: total
in statement [/*c0*/SELECT &quot;kosten&quot; AS &quot;total&quot; FROM
&quot;liste&quot; WHERE &quot;total&quot; &gt; 0 O
RDER BY &quot;total&quot; DESC] / /*c0*/SELECT &quot;kosten&quot; AS
&quot;total&quot; FROM &quot;liste&quot; WHERE &quot;tot
al&quot; &gt; 0 ORDER BY &quot;total&quot; DESC;
at org.hsqldb.test.TestUtil.test(Unknown Source)
at org.hsqldb.test.TestUtil.testScript(Unknown
Source)
at
org.hsqldb.test.TestSelf.testPersistence(Unknown Source)
at org.hsqldb.test.TestSelf.test(Unknown Source)
at org.hsqldb.test.TestSelf.main(Unknown Source)
This is mentioned in the file as:
-- use of column aliases in the where clause
--bug #696595
but it seems like the fix didn't take.
I built hsql Windows 2000, JDK 1.4.2_02. Did I do
something incorrectly when I built? (I have included
the entire test output)
Thanks.
Chris
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/358
HyperSQL Database Engine (HSQLDB) / Bugs / #358 Does a Constraint have an Impact Over the Returned Rows
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
There are two tables - TABLE_A AND TABLE_B and their 
definitions are:
CREATE TABLE table_a( PROCESS_ID BIGINT NOT NULL, 
VERSION BIGINT NOT NULL, DOMAIN VARCHAR(5) NOT 
NULL, TYPE VARCHAR(32) NOT NULL, VALUE VARCHAR
(1990), IDENTIFIER VARCHAR(32), URI VARCHAR(256))
CREATE TABLE table_b( CT_ID BIGINT NOT NULL, 
PROCESS_ID BIGINT NOT NULL, VERSION BIGINT NOT 
NULL, DOMAIN VARCHAR(5) NOT NULL, PARENT_ID 
BIGINT, ANCESTOR BIGINT, TYPE VARCHAR(32) NOT 
NULL, ATTRIBUTE VARCHAR(250), URI VARCHAR(256), 
ACTIVE_FLAG VARCHAR(1) NOT NULL, BOUNDARY 
VARCHAR(1) NOT NULL, HOLD_FLAG VARCHAR(1), 
RESTART_FLAG VARCHAR(1), SUB_FLAG VARCHAR(1), 
WARN_THRESHOLD BIGINT DEFAULT 0 NOT NULL, 
ERR_HANDLER VARCHAR(256), X DECIMAL, Y DECIMAL, 
COLOR BIGINT, SECTION BIGINT, START_NODE VARCHAR
(1), END_NODE VARCHAR(1), CONSTRAINT 
TLM_PK_CTL_M PRIMARY KEY
(PROCESS_ID,VERSION,DOMAIN))
Table table_a has the following foreign key constraint on 
table_b as:
ALTER TABLE table_a ADD CONSTRAINT table_b_fk 
FOREIGN KEY(PROCESS_ID,VERSION,DOMAIN) 
REFERENCES table_b(PROCESS_ID,VERSION,DOMAIN) ON 
DELETE CASCADE
INSERT INTO table_b VALUES
(1,1,1,'teamc',NULL,NULL,'PARAMS','Parameters',NULL,'Y','
N','N','N',NULL,0,NULL,65.0,9.0,2,0,'Y',NULL)
INSERT INTO table_b VALUES
(2,2,1,'teamc',NULL,NULL,'PARAMS','Parameters',NULL,'Y','
N','N','N',NULL,0,NULL,226.0,9.0,1,0,'Y',NULL)
INSERT INTO table_b VALUES
(3,9,1,'teamc',NULL,NULL,'STOREDPROC','tlm_sam_wait_5
secs
(1)',NULL,'Y','N','','',NULL,0,NULL,7.5,115.0,2,0,NULL,NULL)
INSERT INTO table_b VALUES
(4,10,1,'teamc',NULL,NULL,'STOREDPROC','tlm_sam_wait_
5secs
(1)',NULL,'Y','N','','',NULL,0,NULL,120.0,115.0,2,0,NULL,NU
LL)
INSERT INTO table_b VALUES
(5,11,1,'teamc',NULL,NULL,'STOREDPROC','tlm_sam_wait_
5secs
(1)',NULL,'Y','N','','',NULL,0,NULL,65.0,221.0,2,0,NULL,NULL
)
INSERT INTO table_b VALUES
(6,12,1,'teamc',NULL,NULL,'STOREDPROC','tlm_sam_wait_
5secs
(1)',NULL,'Y','N','','',NULL,0,NULL,65.0,327.0,2,0,NULL,NULL
)
INSERT INTO table_b VALUES
(7,13,1,'teamc',NULL,NULL,'STOREDPROC','tlm_sam_wait_
5secs
(1)',NULL,'Y','N','','',NULL,0,NULL,65.0,433.0,2,0,NULL,'Y')
INSERT INTO table_b VALUES
(8,14,1,'teamc',NULL,NULL,'STOREDPROC','tlm_sam_wait_
5secs
(1)',NULL,'Y','N','','',NULL,0,NULL,226.0,115.0,1,0,NULL,NU
LL)
INSERT INTO table_b VALUES
(9,15,1,'teamc',NULL,NULL,'STOREDPROC','tlm_sam_wait_
5secs
(1)',NULL,'Y','N','','',NULL,0,NULL,226.0,221.0,1,0,NULL,NU
LL)
INSERT INTO table_b VALUES
(10,16,1,'teamc',NULL,NULL,'STOREDPROC','tlm_sam_wait
_5secs
(1)',NULL,'Y','N','','',NULL,0,NULL,226.0,327.0,1,0,NULL,NU
LL)
INSERT INTO table_b VALUES
(11,17,1,'teamc',NULL,NULL,'STOREDPROC','tlm_sam_wait
_5secs
(1)',NULL,'Y','N','','',NULL,0,NULL,226.0,433.0,1,0,NULL,'Y')
INSERT INTO table_a VALUES
(1,1,'teamc','VARCHAR','SELECT par_name, par_value 
FROM TLM_SAM_PARAMS WHERE test_id=1','sql',NULL)
INSERT INTO table_a VALUES
(2,1,'teamc','VARCHAR','SELECT par_name, par_value 
FROM TLM_SAM_PARAMS WHERE test_id=1','sql',NULL)
INSERT INTO table_a VALUES
(9,1,'teamc','VARCHAR','tlm_sam_wait_5secs
(1)','procedure',NULL)
INSERT INTO table_a VALUES(9,1,'teamc','VARCHAR','&lt;%
=schema%&gt;@&lt;%=tns%&gt;','uidtns',NULL)
INSERT INTO table_a VALUES
(10,1,'teamc','VARCHAR','tlm_sam_wait_5secs
(1)','procedure',NULL)
INSERT INTO table_a VALUES(10,1,'teamc','VARCHAR','&lt;%
=schema%&gt;@&lt;%=tns%&gt;','uidtns',NULL)
INSERT INTO table_a VALUES
(11,1,'teamc','VARCHAR','tlm_sam_wait_5secs
(1)','procedure',NULL)
INSERT INTO table_a VALUES(11,1,'teamc','VARCHAR','&lt;%
=schema%&gt;@&lt;%=tns%&gt;','uidtns',NULL)
INSERT INTO table_a VALUES
(12,1,'teamc','VARCHAR','tlm_sam_wait_5secs
(1)','procedure',NULL)
INSERT INTO table_a VALUES(12,1,'teamc','VARCHAR','&lt;%
=schema%&gt;@&lt;%=tns%&gt;','uidtns',NULL)
INSERT INTO table_a VALUES
(13,1,'teamc','VARCHAR','tlm_sam_wait_5secs
(1)','procedure',NULL)
INSERT INTO table_a VALUES(13,1,'teamc','VARCHAR','&lt;%
=schema%&gt;@&lt;%=tns%&gt;','uidtns',NULL)
INSERT INTO table_a VALUES
(14,1,'teamc','VARCHAR','tlm_sam_wait_5secs
(1)','procedure',NULL)
INSERT INTO table_a VALUES(14,1,'teamc','VARCHAR','&lt;%
=schema%&gt;@&lt;%=tns%&gt;','uidtns',NULL)
INSERT INTO table_a VALUES
(15,1,'teamc','VARCHAR','tlm_sam_wait_5secs
(1)','procedure',NULL)
INSERT INTO table_a VALUES(15,1,'teamc','VARCHAR','&lt;%
=schema%&gt;@&lt;%=tns%&gt;','uidtns',NULL)
INSERT INTO table_a VALUES
(16,1,'teamc','VARCHAR','tlm_sam_wait_5secs
(1)','procedure',NULL)
INSERT INTO table_a VALUES(16,1,'teamc','VARCHAR','&lt;%
=schema%&gt;@&lt;%=tns%&gt;','uidtns',NULL)
INSERT INTO table_a VALUES
(17,1,'teamc','VARCHAR','tlm_sam_wait_5secs
(1)','procedure',NULL)
INSERT INTO table_a VALUES(17,1,'teamc','VARCHAR','&lt;%
=schema%&gt;@&lt;%=tns%&gt;','uidtns',NULL)
Now issue the following statement:
SELECT identifier, value
FROM table_a
WHERE process_id=9 AND version=1 AND 
domain='teamc'
it returns 1 (for identifier=uidtns) row instead of 2 ( 
doesn't return for identifier=procedure)
if you delete all rows from table_a where process_id != 9 
(leaving two rows) it still returns one row
If you shutdown the server and restart it only then it 
return both rows, when there are just 2 rows. It does 
not work when there are all 20 rows.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/359
HyperSQL Database Engine (HSQLDB) / Bugs / #359 Problem with clob
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
jean-francois.nadeau@loto-quebec.com
We use hsqldb 1_7_2_ALPHA with Hibernate.
In jdbcPreparedStatement.java in method 
setCharacterStream.
At this line. 
chread = reader.read(buffer);
Sometimes for some reasons. The reader is already at the 
end of the stream.
MY PATCH
reader.reset(); //add this line
chread = reader.read(buffer);
Thank you if you add this line in the next version. Now 
we use your jar, we apply the patch and give the 
patched jar to the developpers.
Jean-François Nadeau
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/360
HyperSQL Database Engine (HSQLDB) / Bugs / #360 CASEWHEN(SUM(some_filed),some_value) -&gt; Exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Any CASEWHEN-type function with any aggregating 
function as parameter causes to General error.
The reason is that in this case 
Expression.getAggregatedValue() requires special 
algorithm for value retrieving, but it missed. Possible 
solution is to add the code below to the first switch{} in 
getAggregatedValue() method:
case CASEWHEN:
if (currValue == null) {
currValue = new Object[2];
}
boolean isEqual = ((Boolean) 
eArg.getAggregatedValue (((Object[]) currValue)
[0])).booleanValue();
return isEqual ?
eArg2.eArg.getValue() :
eArg2.eArg2.getAggregatedValue
(((Object[]) currValue)[1]);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/361
HyperSQL Database Engine (HSQLDB) / Bugs / #361 1.7.2 alpha T is not compatible with JDK1.3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I ran a simple test using a 1.3 JDK, but the JDBC driver 
will not load because of a dependency on:
java.sql.Savepoint
Which was introduced as of JDK 1.4.
Here is the exception:
java.lang.NoClassDefFoundError: java/sql/Savepoint
at org.hsqldb.jdbcDriver.getConnection
(Unknown Source)
at org.hsqldb.jdbcDriver.connect(Unknown 
Source)
at java.sql.DriverManager.getConnection
(DriverManager.java:512)
at java.sql.DriverManager.getConnection
(DriverManager.java:141)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/362
HyperSQL Database Engine (HSQLDB) / Bugs / #362 DatabaseMetadata.storesUpperCaseIdentifiers() returns wrong
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Method storesUpperCaseIdentifiers() on the
DatabaseMetaData class returns true. But when I am
searching tables with DatabaseMetaData.getTables I have
to use lowercase in the table name. 
/Fredrik
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/363
HyperSQL Database Engine (HSQLDB) / Bugs / #363 ResultSet.isBeforeFirst() does not work as specified
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following javadoc code snippet is from JSDK 1.4.2:
* @return &lt;code&gt;true&lt;/code&gt; if the cursor is
before the first row;
* &lt;code&gt;false&lt;/code&gt; if the cursor is at any other
position or the
* result set contains no rows
AFAK, this works as the specification for the JDBC API.
Thus, when I have an empty ResultSet, the first call of
the method should return false, but obviously the
return value is initialized to true without checking
the ResultSet, if it contains any rows.
The ResultSet was generated with getTables(...) from
the database's metadata, and I wanted to test if a
given table already exists or has to be generated.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/364
HyperSQL Database Engine (HSQLDB) / Bugs / #364 Error in jdbcDriver / getPropertyInfo
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I've found an error in jdbcDriver.java, while I was
looking in the source for some information about the
method getPropertyInfo (what I can expect from it):
The properties 1..3 are all assigned to pinfo[1],
overwriting the values 1..2 by value 3.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/365
HyperSQL Database Engine (HSQLDB) / Bugs / #365 Warnings
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Compiling the latest alpha release iin Eclipse gave the
attached file of warnings. Mostly uneeded imports and
static methods/fields access.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/366
HyperSQL Database Engine (HSQLDB) / Bugs / #366 Assert Failed inside of Hypersonic
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I get this error when issuing these queries on the
latest alpha version of 1.7.2 and I'm not sure why.
&quot;CALL IDENTITY()&quot;
DataMain: 414 - An error occurred while executing the
SQL statement. The error was Assert failed SQL: CALL
IDENTITY()
java.sql.SQLException: Assert failed
at org.hsqldb.jdbcDriver.sqlException(Unknown Source)
at org.hsqldb.jdbcStatement.fetchResult(Unknown Source)
at org.hsqldb.jdbcStatement.executeQuery(Unknown Source)
at
com.tallgroup.util.DataMain.executeThrowableSelect(DataMain.java:432)
at
com.tallgroup.util.DataMain.executeSelect(DataMain.java:410)
at
com.tallgroup.util.DataMain.executeThrowableInsert(DataMain.java:490)
at
com.tallgroup.util.DataMain.executeInsert(DataMain.java:524)
at
com.tallgroup.util.DataMain.executeInsert(DataMain.java:540)
at
com.tallgroup.updater.UserDataUpdater.readUserInformation(UserDataUpdater.java:655)
at
com.tallgroup.updater.UserDataUpdater.readUserDataPacket(UserDataUpdater.java:990)
at
com.tallgroup.updater.UserDataUpdater.processUserDataPacket(UserDataUpdater.java:953)
at
com.tallgroup.framework.ocs.listeners.FileListener.endReceiveFile(FileListener.java:215)
at
com.tallgroup.framework.ocs.listeners.FileListener.access$000(FileListener.java:21)
at
com.tallgroup.framework.ocs.listeners.FileListener$1.run(FileListener.java:329)
&quot;update PERSON_PROPERTYEXPRESSION set EXPRESSION='0'
where PROPERTYTEXTID=31927 and PERSONID=360 and
OBJECTID=4317 and OBJECTTYPEID=-11&quot;
DataMain: 578 - An error occurred while executing the
SQL update statement. The error was Assert failed SQL:
update PERSON_PROPERTYEXPRESSION set EXPRESSION='0'
where PROPERTYTEXTID=31927 and PERSONID=360 and
OBJECTID=4317 and OBJECTTYPEID=-11 
java.sql.SQLException: Assert failed
at org.hsqldb.jdbcDriver.sqlException(Unknown Source)
at org.hsqldb.jdbcStatement.fetchResult(Unknown Source)
at org.hsqldb.jdbcStatement.executeUpdate(Unknown Source)
at
com.tallgroup.util.DataMain.executeThrowableUpdate(DataMain.java:556)
at
com.tallgroup.util.DataMain.executeUpdate(DataMain.java:574)
at
com.tallgroup.updater.UserDataUpdater.readUserInformation(UserDataUpdater.java:650)
at
com.tallgroup.updater.UserDataUpdater.readUserDataPacket(UserDataUpdater.java:990)
at
com.tallgroup.updater.UserDataUpdater.processUserDataPacket(UserDataUpdater.java:953)
at
com.tallgroup.framework.ocs.listeners.FileListener.endReceiveFile(FileListener.java:215)
at
com.tallgroup.framework.ocs.listeners.FileListener.access$000(FileListener.java:21)
at
com.tallgroup.framework.ocs.listeners.FileListener$1.run(FileListener.java:329)
&quot;insert into PERSON_PROPERTYEXPRESSION
(PROPERTYTEXTID,EXPRESSION,PERSONID,OBJECTID,OBJECTTYPEID)
values (31927,'0',360,4317,-11)&quot;
DataMain: 528 - An error occurred while executing the
SQL insert statement. The error was Assert failedSQL:
insert into PERSON_PROPERTYEXPRESSION
(PROPERTYTEXTID,EXPRESSION,PERSONID,OBJECTID,OBJECTTYPEID)
values (31927,'0',360,4317,-11)
java.sql.SQLException: Assert failed
at org.hsqldb.jdbcDriver.sqlException(Unknown Source)
at org.hsqldb.jdbcStatement.fetchResult(Unknown Source)
at org.hsqldb.jdbcStatement.execute(Unknown Source)
at
com.tallgroup.util.DataMain.executeThrowableInsert(DataMain.java:471)
at
com.tallgroup.util.DataMain.executeInsert(DataMain.java:524)
at
com.tallgroup.util.DataMain.executeInsert(DataMain.java:540)
at
com.tallgroup.updater.UserDataUpdater.readUserInformation(UserDataUpdater.java:655)
at
com.tallgroup.updater.UserDataUpdater.readUserDataPacket(UserDataUpdater.java:990)
at
com.tallgroup.updater.UserDataUpdater.processUserDataPacket(UserDataUpdater.java:953)
at
com.tallgroup.framework.ocs.listeners.FileListener.endReceiveFile(FileListener.java:215)
at
com.tallgroup.framework.ocs.listeners.FileListener.access$000(FileListener.java:21)
at
com.tallgroup.framework.ocs.listeners.FileListener$1.run(FileListener.java:329)
If you need any more info or some test data just let me
know.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/367
HyperSQL Database Engine (HSQLDB) / Bugs / #367 Unexpected token
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Sorry to submit again, but I forgot to login in the 
preceeding submission. Hope you don't mind.
I got unexpected token when I tried to connect to the 
attaches database. You can launch runManager to 
reproduce the error ( stand alone engine)
Can you help me ? Thanks a lot.
visual
visual@club-internet.fr
C:\hsql\hsqldb\demo>java -classpath ;..\lib\hsqldb.jar 
org.hsqldb.util.DatabaseM
anager
java.sql.SQLException: Unexpected token: 37000 
Unexpected token: in statement
[
]
at org.hsqldb.Trace.getError(Trace.java:226)
at org.hsqldb.Log.runScript(Log.java:863)
at org.hsqldb.Log.open(Log.java:306)
at org.hsqldb.Database$Logger.openLog
(Database.java:2596)
at org.hsqldb.Database.<init>(Database.java:203)
at org.hsqldb.jdbcConnection.openStandalone
(jdbcConnection.java:2849)
at org.hsqldb.jdbcConnection.<init>
(jdbcConnection.java:2428)
at org.hsqldb.jdbcDriver.connect
(jdbcDriver.java:176)
at java.sql.DriverManager.getConnection(Unknown 
Source)
at java.sql.DriverManager.getConnection(Unknown 
Source)
at 
org.hsqldb.util.ConnectionDialog.createConnection
(ConnectionDialog.ja
va:108)
at org.hsqldb.util.ConnectionDialog.actionPerformed
(ConnectionDialog.jav
a:305)
at java.awt.Button.processActionEvent(Unknown 
Source)
at java.awt.Button.processEvent(Unknown Source)
at java.awt.Component.dispatchEventImpl
(Unknown Source)
at java.awt.Component.dispatchEvent(Unknown 
Source)
at java.awt.EventQueue.dispatchEvent(Unknown 
Source)
at 
java.awt.EventDispatchThread.pumpOneEventForHierarch
y(Unknown Source)
at 
java.awt.EventDispatchThread.pumpEventsForHierarchy
(Unknown Source)
at java.awt.EventDispatchThread.pumpEvents
(Unknown Source)
at java.awt.EventDispatchThread.pumpEvents
(Unknown Source)
at java.awt.EventDispatchThread.run(Unknown 
Source)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/368
HyperSQL Database Engine (HSQLDB) / Bugs / #368 bad cache logic
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Bug scenario:
I have obtained <TurnDetails> object (result) from
database using something like:
========================================
Statement stmt = conn.createStatement();
ResultSet rs = stmt.executeQuery("SELECT t.turnDetails
FROM turnTable AS t WHERE t.turnNum = " + num);
TurnDetails result = null;//HERE IS THE OBJECT OF
INTEREST!!
if (rs.next())
{
result = (TurnDetails)(rs.getObject("turnDetails"));
}
rs.close();
stmt.close();
========================================
conn is database connection that is created on program
init and persists all program lifetime:
static Connection
conn=DriverManager.getConnection("jdbc:hsqldb:gamedb/game",
"sa", "");
First time object <result> is obtained correctly, all
works fine. I am changes several object's fields during
program lifetime and, after all, I want to get the
original unchanged object, that is stored in database.
Hovewer, code described above returns me OLD object
with CHANGED fields (in fact, there is no difference
between object that was manipulated during program
lifetime and returned object). 
Here is workaround for this problem: if I close and
reopen database connection, i'll get fresh unchanged
object (but only first time. Each time I want to get
FRESH UNCHANGED object, I should close/reopen database
connection, and this is too slow). Seems, that
connection caches objects and simply returns me old
object in spite of the fact that it was changed in memory.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/369
HyperSQL Database Engine (HSQLDB) / Bugs / #369 Null-value update causes unrelated contraint violation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a schema that works well in hsqldb 1.7.1 but fails 
miserably in 1.7.2RC1. 
I execute the following statements (in a Java SQL tool 
using hsql in-memory mode)
CREATE CACHED TABLE AUTH_GroupSubject (
description VARCHAR,
parent BIGINT,
admin BIGINT NOT NULL,
id_ BIGINT,
UNIQUE ( id_ ))
CREATE CACHED TABLE AUTH_UserSubject (
subjectName VARCHAR NOT NULL,
id_ BIGINT,
UNIQUE ( id_ ),
PRIMARY KEY ( subjectName ));
ALTER TABLE AUTH_GroupSubject ADD CONSTRAINT 
AUTH_GroupSubject_REF_parent 
FOREIGN KEY ( parent )
REFERENCES AUTH_GroupSubject ( id_ );
ALTER TABLE AUTH_GroupSubject ADD CONSTRAINT 
AUTH_GroupSubject_REF_admin 
FOREIGN KEY ( admin )
REFERENCES AUTH_UserSubject ( id_ );
insert into AUTH_UserSubject values ('admin', 100);
insert into AUTH_GroupSubject values (null, null, 100, 
200);
update AUTH_GroupSubject set description = null,
parent = null, admin = 100 where id_ = 200
The last statement causes SQLException shown below.
Notice that the values updated on the last statement is 
identical to the values being inserted!
Now if I execute 
update AUTH_GroupSubject set description = '',
parent = null, admin = 100 where id_ = 200
It works!
----
java.sql.SQLException: Integrity constraint violation - 
no parent AUTH_GROUPSUBJECT_REF_ADMIN table: 
AUTH_GROUPSUBJECT in statement [UPDATE 
AUTH_GroupSubject SET description = ?, parent = ?, 
parent_model_ = ?, admin = ?, admin_model_ = ?,
version_ = ? WHERE id_ = ? AND version_ = ?]
at org.hsqldb.jdbcDriver.throwError(Unknown 
Source)
at 
org.hsqldb.jdbcPreparedStatement.executeUpdate
(Unknown Source)
at 
com.enkisoft.encore.impl.sqlstore.SqlStore.updateData
(SqlStore.java:991)
at 
com.enkisoft.encore.impl.sqlstore.SqlStore.updateData
(SqlStore.java:978)
at 
com.enkisoft.encore.impl.sqlstore.SqlStore.persistChange
dEDO(SqlStore.java:1013)
at 
com.enkisoft.encore.impl.StoreImplementationBase.persis
tAll(StoreImplementationBase.java:943)
at 
com.enkisoft.encore.impl.StoreImplementationBase.commi
t(StoreImplementationBase.java:734)
... 40 more
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/370
HyperSQL Database Engine (HSQLDB) / Bugs / #370 1.7.2 is 25% slower than 1.7.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In my test of schema consisting a few tables and 
references (cascade delete), the performance of 1.7.2 
is about 25-30% slower than 1.7.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/371
HyperSQL Database Engine (HSQLDB) / Bugs / #371 In  .log file, some command lines are corrupt
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Here are the first few lines of the log file.
/*C1*/CONNECT USER SA PASSWORD ""
S/*C*ORD1 */""S
S/*C*ORD1 */""S
ET AUTOCOMMIT FALSE
/*C3*/CONNECT USER SA PASSWORD ""
/*C4*/CONNECT USER SA PASSWORD ""
/*C5*/CONNECT USER SA PASSWORD ""
SET AUTOCOMMIT FALSE
Is there a bug in the line printer? Seems similar to
the problem I saw awhile ago on the forums (seeing "T"
or some other character) at the beginning of a log file
line. This was from a database that was not cleanly
shut down. 
This was on a two CPU machine, Solaris, Java 1.4.0_06.
I saw the same problem on Linux on 1.4.1. Perhaps
there is a synchronization issue?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/372
HyperSQL Database Engine (HSQLDB) / Bugs / #372 File input/output error: *.backup in version 1.7.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm currently using the HSQL database engine 1.7.1 on 
and an embedded XP environment using Sun's 1.4.1 Java 
VM.
On some occasions when a hard boot has occured (while 
the HsqlDB (running as a server) is running with a couple 
of connections possibly still open to it, but idle), I've 
found the database files to be corrupt upon reboot (not 
only the *.backup file as the captured event below 
indicates, but also *.script and *.data files)
The *.properties file always seems to 
indicate 'modified=yes' after boot up.
After reboot, the following exception is thrown when the 
DB is started up again after a hard boot -
java -cp .\hsqldb.jar org.hsqldb.Server -database e
sp
Opening database: esp
HSQLDB server 1.7.1 is running
Use SHUTDOWN to close normally. Use [Ctrl]+[C] to 
abort abruptly
Server.run/init: java.sql.SQLException: File input/output 
error: esp.backup
java.sql.SQLException: File input/output error: 
esp.backup
at org.hsqldb.Trace.getError(Trace.java:236)
at org.hsqldb.Trace.error(Trace.java:323)
at org.hsqldb.Log.restoreBackup(Log.java:774)
at org.hsqldb.Log.open(Log.java:299)
at org.hsqldb.Database$Logger.openLog
(Database.java:2624)
at org.hsqldb.Database.open(Database.java:226)
at org.hsqldb.Database.<init>(Database.java:188)
at org.hsqldb.Server.openDB(Server.java:178)
at org.hsqldb.Server.run(Server.java:196)
at org.hsqldb.Server.main(Server.java:147)
This exception is difficult to reproduce as it doesn't 
seem to occur after a hard boot.
The *.properties file indicates - 
#HSQL database
#Tue Jan 06 16:01:52 GMT 2004
sql.strict_fk=true
readonly=false
sql.strong_fk=true
hsqldb.version=1.7.1
version=1.7.1
hsqldb.cache_scale=15
sql.compare_in_locale=false
sql.month=true
hsqldb.log_size=5
jdbc.get_column_name=true
modified=yes
hsqldb.cache_version=1.7.0
hsqldb.original_version=1.7.1
hsqldb.compatible_version=1.7.0
sql.enforce_size=false
Is there anything I could do to prevent this from 
occuring?
Mail address:
david.hanna@mosaicsoftware.com
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/373
HyperSQL Database Engine (HSQLDB) / Bugs / #373 RC1: ROUND makes an exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In construction like 
select round(coalesce(sum(<dec_column>),0),2) from 
<some_table> 
the query returns correct result if sum() returns some 
value. If sum() returns null then "General error: 
java.lang.NullPointerException" appears.
If round() removed and sum() is null, the query returns 0 
as expected
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/374
HyperSQL Database Engine (HSQLDB) / Bugs / #374 Error in Server.start()? (1.7.2 RC1)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello
This little example code does not work as expected in
1.7.2 RC1 
Server server = new Server();
server.start();
server.stop();
The server does not stop. It seem the start() returns
before the server is fully started. The javadoc for the
start method clearly states:
[..] it blocks only until the server's background
thread notifies the calling thread that the server has
either started successfully of failed to do so.
IMHO the start method should block until the server is
completly started. 
Futhermore I would have expected the start() method to
throw an exception if unable to start.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/375
HyperSQL Database Engine (HSQLDB) / Bugs / #375 .script file contains wrong CREATE TRIGGER statement
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have run the following statements on a newly created
database:
create table trigger_table (nr integer);
create trigger my_trigger after update on trigger_table
call "mytest.TestTrigger";
The trigger was create successfully (no error, and it
was visible in SYSTEM_TRIGGERS)
Shutdown and re-connect to the database gives an error.
A quick look at the .script file shows that the
following script is generated:
CREATE TABLE TRIGGER_TABLE(NR INTEGER)
CREATE TRIGGERMY_TRIGGER AFTER UPDATE ON TRIGGER_TABLE
CALL "mytest.TestTrigger"
CREATE USER SA PASSWORD "" ADMIN
Note the missing space in "CREATE TRIGGERMY_TRIGGER"
which fails thus the database cannot be opened. 
1.7.2 RC1, JDK 1.4.2
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/376
HyperSQL Database Engine (HSQLDB) / Bugs / #376 Weird exception when column not specified
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This weird exception happens when I don't specify the
column FREQUENCYOFUSE.
Here's my DDL:
CREATE CACHED TABLE TEXTCONTENT(TEXTID INTEGER DEFAULT
NULL NOT NULL,LANGUAGEID INTEGER DEFAULT NULL NOT
NULL,TEXTCONTENT VARCHAR(4000) NOT NULL,ORIGINAL
TINYINT DEFAULT 0 NOT NULL,FREQUENCYOFUSE TINYINT
DEFAULT NULL,SHOULDTRANSLATE TINYINT DEFAULT 1 NOT
NULL,HASBEENREVIEWED TINYINT DEFAULT 0 NOT
NULL,ISCOURSECONTENT TINYINT DEFAULT 0 NOT
NULL,CONSTRAINT PK_TEXTCONTENT PRIMARY
KEY(TEXTID,LANGUAGEID),CONSTRAINT
TEXTCONTENT_FK31021484635517 FOREIGN KEY(LANGUAGEID)
REFERENCES LANGUAGE(LANGUAGEID))
And here's the exception:
DataMain: 622 - An error occurred while executing the
SQL delete statement. The error was Wrong data type:
For input string: "NULL"SQL: insert into textcontent
(languageid,textcontent,shouldtranslate,original,iscoursecontent,textid)
values (-12,'Daves',1,1,1,103519)
java.sql.SQLException: Wrong data type: For input
string: "NULL"
at org.hsqldb.jdbcDriver.sqlException(Unknown Source)
at org.hsqldb.jdbcStatement.fetchResult(Unknown Source)
at org.hsqldb.jdbcStatement.execute(Unknown Source)
at com.tallgroup.util.DataMain.execute(DataMain.java:600)
If I specify the column FREQUENCYOFUSE then it works
just fine.
Let me know if you need any more information or if I'm
doing something wrong.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/377
HyperSQL Database Engine (HSQLDB) / Bugs / #377 Indexes are mixed up when adding index
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When a new index is added to a table WHICH ALREADY 
CONTAINS DATA, the data structures that implement 
the different indexes are mixed up with each other 
(cross-linked). In our case, the result was that data 
slowly disappeared from the table because the indexes 
became corrupted when data was updated. In one lucky 
case, we got an assertion error after several updates to 
the table.
The attachment contains a fix in the form of a diff which 
can be applied to revision 1.72 of 
org/hsqldb/Table.java . It seems to be good also for the 
(at this time) most current version 1.87.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/378
HyperSQL Database Engine (HSQLDB) / Bugs / #378 Internal Error : Invalid Compiled Statement ID
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My testsuite of about 600 tests encounters this error 
several times.
Caused by: java.sql.SQLException: Internal Error : 
Invalid Compiled Statement ID:
at org.hsqldb.jdbcDriver.throwError(Unknown 
Source)
at 
org.hsqldb.jdbcPreparedStatement.executeQuery
(Unknown Source)
at 
org.enhydra.jdbc.core.CoreCallableStatement.executeQu
ery(CoreCallableStatement.java:332)
at 
com.abmira.templates.data.HsqlDBDTPageDatabaseSche
ma.insertAllDTPages
(HsqlDBDTPageDatabaseSchema.java:200)
... 20 more
Also many other tests which are passing on 1.7.2 alpha 
M are failing. All these tests are also passing on SapDB. 
Other common error is
Caused by: java.sql.SQLException: Try to insert null into 
a non-nullable column: column: FILE_TYPE_ID table: 
BF_FT_ROLE_MAP in statement [insert into 
BF_FT_ROLE_MAP select ?, ROLE_ID, USER_TYPE, 
ORDER_NUMBER from BF_FT_ROLE_MAP where 
FILE_TYPE_ID=?]
at org.hsqldb.jdbcDriver.throwError(Unknown 
Source)
at 
org.hsqldb.jdbcPreparedStatement.executeUpdate
(Unknown Source)
at 
org.enhydra.jdbc.core.CorePreparedStatement.executeU
pdate(CorePreparedStatement.java:101)
at 
com.abmira.templates.data.FileTypeDatabaseFactory.cop
yFTRoles(FileTypeDatabaseFactory.java:1007)
... 19 more
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/379
HyperSQL Database Engine (HSQLDB) / Bugs / #379 Embedded Interserct doesn't work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
THis didn't work on 1.7.2 alpha M and on RC1, works on 
sapdb
CREATE TABLE QUERY_TEST " +
"(VALUE_1 INTEGER NOT NULL," +
"VALUE_2 INTEGER NOT NULL)
the test case below generate following error
junit.framework.AssertionFailedError: Unexpected token 
in statement [select VALUE_1 from QUERY_TEST where 
VALUE_2 in ((select VALUE_2 from QUERY_TEST) 
intersect (select VALUE_1 from QUERY_TEST))]
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue
(Assert.java:20)
at 
com.abmira.database.driver.QueryTest.testIntersectQuer
y(QueryTest.java:411)
at 
sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
Method)
at 
sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
at 
sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke
(Method.java:324)
at junit.framework.TestCase.runTest
(TestCase.java:154)
at junit.framework.TestCase.runBare
(TestCase.java:127)
at junit.framework.TestResult.protect
(TestResult.java:106)
at junit.framework.TestResult.runProtected
(TestResult.java:124)
at junit.framework.TestResult.run
(TestResult.java:109)
at junit.framework.TestCase.run
(TestCase.java:118)
at junit.framework.TestSuite.runTest
(TestSuite.java:208)
at junit.framework.TestSuite.run
(TestSuite.java:203)
at junit.framework.TestSuite.runTest
(TestSuite.java:208)
at 
com.abmira.core.data.DatabaseTestSuite.runTest
(DatabaseTestSuite.java:137)
at junit.framework.TestSuite.run
(TestSuite.java:203)
at 
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.ru
nTests(RemoteTestRunner.java:397)
at 
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.ru
n(RemoteTestRunner.java:281)
at 
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.ma
in(RemoteTestRunner.java:173)
---------------------------------------------------
public void testIntersectQuery(
) throws Throwable
{
final String INSERT = "insert into QUERY_TEST 
(VALUE_1, VALUE_2) values (?,?)";
final String DELETE = "delete from QUERY_TEST";
final String SELECT = "select VALUE_1 from 
QUERY_TEST where VALUE_2 in " +
"((select VALUE_2 from QUERY_TEST) " +
"intersect " +
"(select VALUE_1 from QUERY_TEST))";
PreparedStatement insertStatement = null;
PreparedStatement deleteStatement = null;
PreparedStatement selectStatement = null;
ResultSet rsResults = null;
int iInsertCount;
int iIndex;
try
{
m_transaction.begin();
try
{
insertStatement = 
m_connection.prepareStatement(INSERT);
insertStatement.setInt(1, 1);
insertStatement.setInt(2, 11);
insertStatement.execute();
insertStatement = 
m_connection.prepareStatement(INSERT);
insertStatement.setInt(1, 11);
insertStatement.setInt(2, 12);
insertStatement.execute();
m_transaction.commit();
}
catch (Throwable throwable)
{
m_transaction.rollback();
throw throwable;
}
finally
{
DatabaseUtils.closeStatement
(insertStatement);
}
try
{
selectStatement = 
m_connection.prepareStatement(SELECT);
rsResults = selectStatement.executeQuery();
assertTrue("There should be rows in result", 
rsResults.next());
assertFalse("There should be no more rows in 
result", rsResults.next());
}
catch (SQLException sqleExc)
{
assertTrue(sqleExc.getMessage(), false);
}
finally
{
DatabaseUtils.closeResultSetAndStatement
(rsResults, selectStatement);
}
}
finally
{
m_transaction.begin();
try
{
deleteStatement = 
m_connection.prepareStatement(DELETE);
deleteStatement.execute();
m_transaction.commit();
}
catch (Exception eExc)
{
m_transaction.rollback();
throw eExc;
}
finally
{
DatabaseUtils.closeStatement
(deleteStatement);
}
}
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/380
HyperSQL Database Engine (HSQLDB) / Bugs / #380 Embedded Union doesn't work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
THis didn't work on 1.7.2 alpha M and on RC1, works on 
sapdb
CREATE TABLE QUERY_TEST " +
"(VALUE_1 INTEGER NOT NULL," +
"VALUE_2 INTEGER NOT NULL)
the test case below generate following error
junit.framework.AssertionFailedError: Unexpected token 
in statement [select VALUE_1 from QUERY_TEST where 
VALUE_2 in ((select VALUE_2 from QUERY_TEST) union 
(select VALUE_1 from QUERY_TEST))]
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue
(Assert.java:20)
at 
com.abmira.database.driver.QueryTest.testUnionQuery
(QueryTest.java:323)
at 
sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
Method)
at 
sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
at 
sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke
(Method.java:324)
at junit.framework.TestCase.runTest
(TestCase.java:154)
at junit.framework.TestCase.runBare
(TestCase.java:127)
at junit.framework.TestResult.protect
(TestResult.java:106)
at junit.framework.TestResult.runProtected
(TestResult.java:124)
at junit.framework.TestResult.run
(TestResult.java:109)
at junit.framework.TestCase.run
(TestCase.java:118)
at junit.framework.TestSuite.runTest
(TestSuite.java:208)
at junit.framework.TestSuite.run
(TestSuite.java:203)
at junit.framework.TestSuite.runTest
(TestSuite.java:208)
at 
com.abmira.core.data.DatabaseTestSuite.runTest
(DatabaseTestSuite.java:137)
at junit.framework.TestSuite.run
(TestSuite.java:203)
at 
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.ru
nTests(RemoteTestRunner.java:397)
at 
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.ru
n(RemoteTestRunner.java:281)
at 
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.ma
in(RemoteTestRunner.java:173)
---------------------------------------------------
public void testUnionQuery(
) throws Throwable
{
final String INSERT = "insert into QUERY_TEST 
(VALUE_1, VALUE_2) values (?,?)";
final String DELETE = "delete from QUERY_TEST";
final String SELECT = "select VALUE_1 from 
QUERY_TEST where VALUE_2 in " +
"((select VALUE_2 from QUERY_TEST) " +
"union " +
"(select VALUE_1 from QUERY_TEST))";
PreparedStatement insertStatement = null;
PreparedStatement deleteStatement = null;
PreparedStatement selectStatement = null;
ResultSet rsResults = null;
int iInsertCount;
int iIndex;
try
{
m_transaction.begin();
try
{
insertStatement = 
m_connection.prepareStatement(INSERT);
insertStatement.setInt(1, 1);
insertStatement.setInt(2, 11);
insertStatement.execute();
insertStatement = 
m_connection.prepareStatement(INSERT);
insertStatement.setInt(1, 2);
insertStatement.setInt(2, 12);
insertStatement.execute();
m_transaction.commit();
}
catch (Throwable throwable)
{
m_transaction.rollback();
throw throwable;
}
finally
{
DatabaseUtils.closeStatement
(insertStatement);
}
try
{
selectStatement = 
m_connection.prepareStatement(SELECT);
rsResults = selectStatement.executeQuery();
assertTrue("There should be rows in result", 
rsResults.next());
assertTrue("There should be rows in result", 
rsResults.next());
assertFalse("There should be no more rows in 
result", rsResults.next());
}
catch (SQLException sqleExc)
{
assertTrue(sqleExc.getMessage(), false);
}
finally
{
DatabaseUtils.closeResultSetAndStatement
(rsResults, selectStatement);
}
}
finally
{
m_transaction.begin();
try
{
deleteStatement = 
m_connection.prepareStatement(DELETE);
deleteStatement.execute();
m_transaction.commit();
}
catch (Exception eExc)
{
m_transaction.rollback();
throw eExc;
}
finally
{
DatabaseUtils.closeStatement
(deleteStatement);
}
}
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/381
HyperSQL Database Engine (HSQLDB) / Bugs / #381 Bug with Clob functions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
guillaume.nodet@deliasystems.com
jdbcClob's functions getSubString() and position() 
handles index badly. The spec says the index should 
begin at 1, but they are coded as if they are handled at 
0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/382
HyperSQL Database Engine (HSQLDB) / Bugs / #382 getTimestampString(Timestamp x, Calendar cal)  bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
The getTimestampString(Timestamp x, Calendar cal)
method in org.hsqldb.HsqlDateTime class have x's
milliseconds part added twice. See the following code
for current implementation and the error place. 
sdfts.format(new java.util.Date(x.getTime() +
x.getNanos() / 1000000)); 
It is not necessary to add x.getNanos() /1000000.
x.getTime() already includes the millisecond part. I
think the author thought x.getTime() just return the
integral seconds part.
For example,
take timestamp 2004-01-19 23:59:59.999 (from UTC+8) as
x and calendar with UTC as cal, the return value is 
2004-01-19 16:00:00. The correct returned value should
be 2004-01-19 15:59:59:999
Regards,
Rice
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/383
HyperSQL Database Engine (HSQLDB) / Bugs / #383 OutOfMemoryError when telnetting to the server.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello
If I start the server at telnet to it using "telnet
localhost 9001" and write "aa<enter><enter>" [1] in
the telnet prompt. Then the server will throw an
OutOfMemoryError.
Granted this is not ordinary usage. But I think a
server should be able to handle malformed requests
without running out of memory. The server should
somehow detect that the client is bogus and ignore it. 
[1] do not type <enter> but hit enter...
Btw this is on 1.7.2RC@jdk 1.4.1_03
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/384
HyperSQL Database Engine (HSQLDB) / Bugs / #384 setMaxRows on preparedStatement
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
The setMaxRows does not work for a prepredStatement. I
had a look at the code for jdbcPreparedStatement and
saw that the executeQuery() method never updates the
maxRows on the resultOut(Result) instance. The same
goes for execute().
Cheers Jaco
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/385
HyperSQL Database Engine (HSQLDB) / Bugs / #385 res: urls for JWS do not work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In the file HsqlProperties.java, there is a method:
public static boolean checkFileExists(String
fileName, boolean resource,
Class cla)
throws IOException {
if (fileName == null || fileName.length() == 0) {
return false;
}
String propFilename = fileName + ".properties";

return resource ? null !=
cla.getResource(propFilename)
FileUtil.exists(propFilename);
}

the problem is, cla.getResource translates package
names into directories, so trying to open:
jdbc:hsqldb:res:dir/mydatabase
Would result in this class trying to check if
dir/mydatabase.properties
exists, which in turn is translated as 
dir/mydatabase/properties
Which obviously does not exist. Note that this problem
does not happen if the URL starts with / (something
that is not correct, since the classpath is relative,
but is needed to disable the package translation
mecanism). The proper solution would be to call
cla.getClassLoader().getResource(). You don't even have
to pass cla as an argument, since
Thread.currentThread().getContextClassLoader() also works.
Another two points:
1.- In the example jnlp file that you provided, there
are some properties especified in doc/databaseinjar.txt
to be put in a jnlp file as an example of use
<property name="jdbc.drivers"
value="org.hsqldb.jdbcDriver"/>
problem is, JWS does not allow (without signing the
jar) to System.getProperty() anything that does not
start with "jnlp." or "javaws.", as
<property name="jnlp.jdbc.drivers"
value="org.hsqldb.jdbcDriver"/>
2.- Didn't check that too much, but it looked as if
checkFileExists is called too often. IIRC even calling
to Connection.close() does trigger a call to this one.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/386
HyperSQL Database Engine (HSQLDB) / Bugs / #386 Inserting binary datas fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a problem trying to insert a File in a 
LONGVARBINARY field.
Here's the code I use to insert:
PreparedStatement pstatement = 
connection.prepareStatement("INSERT INTO FILES
(ID,FILE) VALUES(?,?)");
pstatement.setInt(1, getFilesLastID() + 1);
InputStream inputStream = null;
try{
inputStream=new FileInputStream(new File
("test.txt"));
}
catch(FileNotFoundException fnfe){
fnfe.printStackTrace();
}
pstatement.setBinaryStream(2, inputStream, (int)new 
File(path).length()); 
pstatement.executeUpdate();
And here's the Exception thrown:
Try to insert null into a non-nullable column: column: 
FILE table: FILES in statement [INSERT INTO FILES
(ID,FILE) VALUES(?,?,)]
(My FILE field is NOT NULL)
I have the same problem when using the 
setBinaryStream methos.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/387
HyperSQL Database Engine (HSQLDB) / Bugs / #387 getMetaData() and getColumns(null, null, tableName, null)...
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
There is a case sensitivity issue with 
DatabaseMetaData.getColumns(null, null, tableName, 
null);
I have a table called "individual". The following code 
works:
public TestGetMetaData1() throws SQLException, 
ClassNotFoundException {
super();
Connection connection = null;
DatabaseMetaData dmd = null;
ResultSet rs = null;
String columnName = null;
String className = null;
String connectUrl = null;
String connectUser = null;
String connectPassword = null;
String tableName = null;
// hsqldb
className = "org.hsqldb.jdbcDriver";
connectUrl = "jdbc:hsqldb:hsql://localhost";
connectUser = "sa";
connectPassword = "";
tableName = "INDIVIDUAL";
Class.forName(className);
connection =
DriverManager.getConnection(connectUrl, 
connectUser, connectPassword);
dmd = connection.getMetaData();
rs = dmd.getColumns(null, null, tableName, null);
System.out.println("Init done");
while (rs.next()) {
columnName = rs.getString
(K.JCOLUMN_NAME).toLowerCase();
System.out.println("Column: " + columnName);
}
System.out.println("Finsihed");
}
if i change:
tableName = "INDIVIDUAL";
to
tableName = "individual";
the code works, but nothing happens...
(using 1.7.2 RC1).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/388
HyperSQL Database Engine (HSQLDB) / Bugs / #388 2 now generates 2 different times
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have not tried the latest version, just up to alpha
M, but when I have statement like
insert (......) into ... values (.... now, now)
(the statement contains multiple now calls) in certain
situations (probably depends on timing) the times
returned by now are different and therefore the insert
puts two different values into the database even though
the intent is to put two
of the same values there.
Not sure if this is a bug, but it is definitely little
unpexpected so I am bringing it up to hear your opinion.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/389
HyperSQL Database Engine (HSQLDB) / Bugs / #389 PreparedStatement.getParameterMetaData()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
HSQLDB 1.7.2 RC1
Hi,
PreparedStatement.getParameterMetaData() is not 
implemented.
Could you provide a dummy implementation to avoid:
java.lang.AbstractMethodError: 
org.hsqldb.jdbcPreparedStatement.getParameterMetaDat
a()Ljava/sql/ParameterMetaData;
at ...
Tx
jgp
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/390
HyperSQL Database Engine (HSQLDB) / Bugs / #390 Delete query doesn't allow conditional statements
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I've attempted in every possible way to issue a delete 
query that looks for <statement> and <statement> and 
it always gives java exception errors. The same 
conditional statement works fine in the search or update 
queries.
Perhaps I dont have the right syntax? But i've tried 
almost every SQL variation and then some.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/391
HyperSQL Database Engine (HSQLDB) / Bugs / #391 correlated update results change
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi
In the 1.7.1 the following worked fine:
update waits set operation_seq = ( 
select min(o.operation_seq) 
from db_operations o 
where o.line_no > line_no 
and o.cursor_no = cursor_no ) 
With 1.7.2 operation_seq is not updated, but the update 
count is correct.
Has the syntax for the correlated update changed? 
What is the correct syntax?
The SQLServer and Oracle formats that i tried caused 
sytax errors.
thanks
trevor
test case:
String sql1 = "create table wait (line_no smallint, 
cursor_no smallint, op_seq smallint)";
String sql2 = "create table oper (line_no smallint, 
cursor_no smallint, op_seq smallint)";
String sql3 = "insert into wait values (10,2,0)";
String sql4 = "insert into oper values (11,2,5)";
String sql5 = "insert into wait values (15,2,0)";
String sql6 = "insert into oper values (19,2,9)";
String sql7 = "update wait set op_seq = ( "
+ " select min(o.op_seq) from oper o "
+ " where o.line_no > line_no "
+ " and o.cursor_no = cursor_no ) ";
v1.7.2 leaves wait.op_seq == 0
v1.7.1 updates wait.op_seq to 5 and 9
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/392
HyperSQL Database Engine (HSQLDB) / Bugs / #392 UPDATE failure
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
version 1.7.1
UPDATE PRODUCT SET PRICE = 10.78 WHERE 
PRODUCT.ID = 6 works, but
UPDATE PRODUCT SET PRODUCT.PRICE = 10.78 
WHERE PRODUCT.ID = 6 fails with error:
Column not found: PRODUCT.PRICE in statement 
[UPDATE PRODUCT SET PRODUCT.PRICE = 10.78 
WHERE PRODUCT.ID = 6 ] Error Code: -28/State 
S0022
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/393
HyperSQL Database Engine (HSQLDB) / Bugs / #393 Server hangs on select statement
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The attached zip file contains a SELECT statement that 
worked in 1.7.1 but in 1.7.2 RC1 doesn't work. In 1.7.2 
the server gets locked up and CPU utilization goes to 
100%. I then have to kill the server.
I tested this statement with org.hsqldb.util.
DatabaseManagerSwing and with DbVisualizer (commercial 
SQL manager) and with my Java application. I got the 
same results.
This statement works fine with a MySQL version of my 
database.
The zip files contains the SELECT statement, the db 
script (pinyin.script), the server.properties and pinyin.
properties and db.properties
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/394
HyperSQL Database Engine (HSQLDB) / Bugs / #394 float precision lost &lt;k@kylemiller.com&gt;
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is a problem in 1.7.1 and release candidate 1.7.2.
if you have a float like 9.3, and call set float on a 
prepared statement the number saved in the db is 
9.300000190734863. I looked in the source and the 
setFloat method on prepared statement is just a pass 
through method to setDouble. The problem is when you 
cast a float to a double the precision changes, as in the 
problem above.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/395
HyperSQL Database Engine (HSQLDB) / Bugs / #395 null value not accepted in IN (..) clause
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
null values are not accepted in IN (..) clause.
This would be very helpful for me, because I 
programmatically create long IN-clauses in which null 
might occur. Having to change it all to 
where xyz IN (....) or xyz=null would require some 
programming effort.
create temp table testtable (xx integer);
insert into testtable values (1);insert into testtable 
values (3);insert into testtable values (null);
select count(*) from testtable where xx in (1,3,null)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/396
HyperSQL Database Engine (HSQLDB) / Bugs / #396 CURTIME() problems
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm having a bunch of problems when trying to use the 
CURTIME() function in the 1.7.1 release. The statement 
below exemplifies these:
CALL CASEWHEN(CURTIME() BETWEEN
CAST('0:0:0' AS TIME) 
AND CAST('23:59:59' AS TIME), 
'good', 'bad')
This always returns 'bad' for me.
Since the BETWEEN expression covers the entire 24 hour 
period, I believe any time zone differences, if they existed, 
would be irrelevant and this would always return 'good'.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/397
HyperSQL Database Engine (HSQLDB) / Bugs / #397 CURTIME() not normalized
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is related to #897591
version 1.7.2
org.hsqldb.Library.curtime() is defined as:
public static java.sql.Time curtime() {
return new java.sql.Time(System.currentTimeMillis());
}
Since this doesn't normalize the time to Jan 1, 1970 whereas 
other time values are normalized, CURTIME cannot be used 
reliably in comparison operators.
I believe curtime() should look more like:
public static java.sql.Time curtime() {
java.sql.Time t;
t= new java.sql.Time(System.currentTimeMillis());
return HsqlDateTime.getNormalisedTime(t);
}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/398
HyperSQL Database Engine (HSQLDB) / Bugs / #398 different results in 1.7.2 rc1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi,
i just migrated an older cocoon application with hsqldb in 
server mode from cocoon 2.0 to 2.1 rc. i also decided to 
try hsqldb 1.7.2 because it's new features look very 
promising to me. the first problem i a came across was a 
very curious EOFException when trying to acces one 
special table of the database (i simply took the old 
database files which worked very well until then). but 
there is nothing special about the stucture of this table 
nor it's content. looked very random to me. after playing 
around with the transfer tool and various different hsql 
versions i was able to use a version 1.6.2 sql dump of 
my database and (after modifying table creation to get 
cached tables again) open it without any hassle with 
version 1.7.2 hsql server.
now the dbms seemed to do it's job but i realized an 
enormous performance drop compared to the older 
database system. it looks like a communication problem 
because the db server starts outputting my sql 
commands (silent = false) seconds to minutes after my 
servlet is activated.
but the biggest problem is, i'm now getting different 
results compared to the old system. i didn't check the 
results of single queries yet but i can clearly see that 
the application (kind of multi dimensional scientific 
search engine) is just producing crap with hsqldb 1.7.2. 
to sum it up it seems like additional constraints i throw in 
are not reducing the amount of results i get but enlarge 
the result set a lot. the app itself is used for almost 2 
years now without any modification to the sql 
statements or code so i consider it stable. 
sorry for staying so vague but i didn't find time to take a 
closer look at the problem yet. i did all of the system 
design and programming years ago and the whole thing 
is very complex so i don't know exactly where to start 
when it comes to debuging. if you could give me a hint 
where (i mean for what kind of query) you changed code 
that could possibly couse different results i would try to 
check the corresponding statements and results in detail.
just a last point - i went back to version 1.7.1 as 
shipped with cocoon 2 and everything's working perfect 
again (including import of my old database files).
kind regards
momo
p.s. i'm using jdk 1.4 for all java systems including hsqldb
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/399
HyperSQL Database Engine (HSQLDB) / Bugs / #399 CHECK CONSTRAINT column not found
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Version 1.7.2RC1
Following SQL generates error:
DROP TABLE FOO IF EXISTS;
CREATE TABLE FOO(
YES_NO_IND CHAR(1) NOT NULL,
CHECK (YES_NO_IND IN ('Y', 'N'))
);
INSERT INTO FOO ( 'Y' );
Error is:
java.sql.SQLException: Column not found: Y in 
statement [INSERT INTO FOO ( 'Y' )]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

https://sourceforge.net/p/hsqldb/bugs/400
HyperSQL Database Engine (HSQLDB) / Bugs / #400 CHECK CONSTRAINT follow-up
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was in such I hurry to create the example in 900350 I
messed up the SQL; let me try again. The error I was
trying to report was:
DROP TABLE FOO IF EXISTS;
CREATE TABLE FOO(
YES_NO_IND CHAR(1) NOT NULL,
CHECK (YES_NO_IND IN ('Y', 'N'))
);
INSERT INTO FOO VALUES ( 'Y' );
results is:
java.sql.SQLException: Check constraint violation
SYS_CT_1 table: FOO
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

