1001
about RedissonRedLock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I need a exclusive lock,but it not work,my code is :
java 1.7
redis_version 2.8.6
thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1002
RedissonLock confuse
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I wanna know when to execute the 'else' block?
because tryLockInnerAsync just return null or pttl.
The command returns -2 if the key does not exist.
The command returns -1 if the key exists but has no associated expire
firstly, if the key exists, it must have a ttl time, so return -1 will not happen.
secondly, if the key not exists, the lua script will return nil before execute pttl.
conclusion: 'else' block will not be executed.
or is there really happen in lua script:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1003
Does redissonLock  enforce the same memory synchronization semantics
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
as we all know，redisson lock implemts java.util.Lock，so dose it enforce the same memory synchronization semantics as provided by the built-in monitor lock  just like ReentrantLock??
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1004
Class Cast Exception while converting object to RExpirable
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using an REntity object that I'd like to store in the redis store. And I'd also like to set the expiry time as 30 miutes for the same. But whenever I use the RExpirable function I get the ClassCastException.
The REntity class that I'm using
The persist function works as I'm able to retreive the data back. So the redis config is fine. But the following exception is being thrown.
Any help is appreciated. Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1005
RMapCache Listener in Cluster Environment
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We have a trouble with Redisson RMapCache in a redis cluster.
Map Initialization
With our app configured with one redis, we have no trouble, the listener is called once
But we experienced troubles with a redis cluster with 3 nodes, the listener is called 3 times.
It seems that every node send an expiry event...
Did you have any similar troubles?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1006
Hibernate Second level cache with Redisson JCache API
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We want to use JCache API for hibernate second level cache. We have successfully done a POC for basic scenarios of Caching using hibernate-jcache 5.2.9 with Redisson 3.4.4.
How do we provide configurations such as expiry time (time-to-live) for individual Cache(s)?
(Couldn't find much info in the documentation for JCache API.)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1007
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1008
Traversing the RLiveObjectService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi. Is it possible to traverse all the objects in RLiveObject Service?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1009
DNS monitoring in Replicated mode?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I have a question regarding the DNS monitoring. Looks like the 'dnsMonitoring' can only be set when using single server config, but not in ReplicatedServersConfig. We are currently using AWS elasticache and we found in the AWS document, it highlights that "It is important that client applications are configured to frequently resolve DNS names of cache nodes when they attempt to connect to a cache node endpoint." So does redisson have the ability to detect potential ip changes on endpoints when using Elasticache?
Based on my test, when I 'restored' an endpoint with the same host url but a different ip address, redisson kept using the last known ip address to try connect to that endpoint, but never detected the new one. I tried to change the ttl in java.security and it didn't help.
Please let know if you have any ideas on this one. Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1010
Latencies when Redis server is down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
During our tests of redisson, we noticed that if the redis server is down, the latency is around 100ms, no matter what.
This is problematic for our use case because it slows down too much and we would prefer a fast response/error.
After carefully reading configuration options and experimenting with many tests, we could not find a solution.
Do you have an idea of what could provoke this latency ?
Below is a simplified code allowing to reproduce it (no need to launch a redis instance):
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1011
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1012
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1013
【maybe a bug】I use RBatch to read and write bucket data，when redis cluster failover，the old master's ops and cpu ratio become very high
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi，please check whether this situation is a bug：
1）I use RBatch to read and write bucket data，so that I'can use the redis pipeline mechanism；
2）redis is in cluster mode，the version is 3.2.9; redisson version is 3.5.0；
3）when I killed the redis master instance，until failover，and restart it；now the old master become slave；
4）use info command to observe the old master's cpu ratio and instantaneous_ops_per_sec indicator，I find it's very high；cpu ratio is 400%，and ops is nearly 200,000；
5）I killed the redisson process，and the old master instance become normal；
here is my configuration:
and my code below，I implement codec interface using proto buf as the codec：
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1014
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1015
why the property 'address' is not writable or has an invalid setter method?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is my set in the spring.xml:
Please help me,Thank you.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1016
Config.fromJSON thow an exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the redisson version is 3.5.0,
follow is the StackTrace
then i copy this code to eclipse ,and eclipse report an Compile error like follow:
 The method setFilterProvider(FilterProvider) is undefined for the type ObjectMapper
so I think there is some problem in the jar of 3.5.0 version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1017
Can't create SentinelServersConfig using ip:port configuration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, I'm trying to use redisson 3.5.0 with the same settings where I previously used 3.4.1. However, the steps below don't work anymore.
SentinelServersConfig sentinelConfig = config.useSentinelServers();
sentinelConfig.addSentinelAddress("10.10.10.0:16380");
This code results in the following error messages:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1018
Optimize memory allocation during encoding process
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1019
redisson 3.5.0 clusterServersConfig server can‘t start
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
my project can't start. i debug ClusterConnectionManager.class file. connectionFuture is not completed
redisson:3.3.1 is OK.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1020
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1021
Connection could be in closed state during reconnection process for blocking queue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1022
support fair share scheduling?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
alll client try to get  lock fair .
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1023
Sentinel response timeout defined as retryInterval*retryAttempts in Sentinel Mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In sentinel mode timeout for sentinel response is configured as retryInterval*retryAttempts. This make it impossible to set retryAttempts =0 in sentinel mode.
Also RBatch retryAttempts cannot be set to zero.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1024
Add iterator by patter method to RSet objects
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1029
Monitor calls to redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We wanted to monitor the calls made by our service to redis. For this, we were currently checking the calls made to RedissonCache get/put/putIfAbsent functions.
Could you please let us know if this is the best approach or we should be monitoring some base method that is ultimately used by all wrappers to execute redis operations.
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1030
During the load testing got org.redisson.RedissonShutdownException: Redisson is shutdown , but there isn't  start() method to restart it again! 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My application only use the Redisson lock/unlock feature as below:
redissonClient.getFairLock(name).lockInterruptibly(expiredTime, timeUnit);

 redissonClient.getFairLock(name).unlock();


Then I do load testing finally I got the un-recoverable errors as below:
org.redisson.RedissonShutdownException: Redisson is shutdown
        at org.redisson.command.CommandAsyncService.async(CommandAsyncService.java:477)
        at org.redisson.command.CommandAsyncService.evalAsync(CommandAsyncService.java:453)
        at org.redisson.command.CommandAsyncService.evalWriteAsync(CommandAsyncService.java:395)
        at org.redisson.RedissonFairLock.tryLockInnerAsync(RedissonFairLock.java:126)
        at org.redisson.RedissonLock.tryAcquireAsync(RedissonLock.java:172)
        at org.redisson.RedissonLock.tryAcquire(RedissonLock.java:145)
        at org.redisson.RedissonLock.lockInterruptibly(RedissonLock.java:114)

So I post two issues:


Issue 1: What does cause the Redisson shutdown without call redissonClient.shutdown() during testing


Issue 2: It need to provider below API when application encounter this error to restart its connections:


redissonClient.start();

or
redissonClient.restart();

when encounter this error, but there isn't this method.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1031
class 'LoadBalancerManager' in  version 2.10.1  may cause the NullpointException in method 'returnConnection'
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i updated the version to 2.10.1 in my project.
when i use redissonClient.getBucket("thekey").isExists(),some exception happen:
the code connection.getRedisClient().getAddr().getAddress().getHostAddress() returns ip address, but the map ip2Entry need the key: ip + port。so null is returned
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1035
Huge log messages
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I started testing redisson with my app (Redisson 3.5.1), first issue i discovered:
Writing about ~23mb data to redis map.
Error message generated with size ~180mb when RedisTimeoutException accured.
I guess issue with line that blindly call toString:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1036
Support for setting maxSize for bounded RedissonMapCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
While implementing support for setMaxSize in RedissonMapCache we noticed a bug in the eviction where it may evict more elements than the value set for max size. Here is our work in progress
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1037
RedissonMapCache merge conflict lost fix for setting large amount of items
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko 2bdccfc#comments
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1039
NullPointerException is thrown during cache deletion
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We encountered an issue during deleting cache while using RedissonKeys.delete after upgrade Redisson from 2.2.16 to 2.3.0. I have verified same issue with latest version 2.10.1 as well as 3.5.0.
My unit test was very simple, the main thread keeps deleting 40 keys while another thread keeps setting the same.
I am very curious why 2.2.16 does not have this issue. The only change I could find related to this is "switched from io.netty.util.concurrent.Future to org.redisson.api.RFuture".
Well also surprisingly I could not find any same issue reported by anyone else.
The exception information is like this:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1040
RMapCache EntryListener events
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am testing the RMapCache listeners using redisson 2.10.0 release, when I executed the sample code from the wiki of distributed collections, the code is not executed. I am not sure what I am missing here or is this a feature that is only available with Redis Pro, can you please take a look and guide me.
Below is the code
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1041
Single connection sharing
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Example context:
When you have multiple client apps (near 1000) connecting to the same redis nodes and you don't want the redis nodes (or they can't) handle the amount of connections from all those client connections pools (file descriptors, etc).
Besides of course, having small connection pools or having more redis nodes.
Is there any plan or way to utilize redisson on a single shared connection model?
Like for example other redis libraries does
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1044
Bug/Feature-Request: Non-Expiry updating  boolean add(...)  in RSetCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I am using RSetCache as a lock for various work item.
If the item is in the Set, somebody is working on it. The worker that "locks" the item has a certain amount of time to finish the work, otherwise the "lock" on the item is removed and some other worker can try to claim the item.
See
boolean org.redisson.api.RSetCache.add(Long value, long ttl, TimeUnit unit)
Unfortunately, each call to add updates the expiry timestamp of the item, even if add was not successful  because it was already added.
That means that, when the worker is killed/hangs/..., the work will never be picked up after the 5 minutes, because each try to reserve the item fails, but updates the expiry.
It would be great to have an atomic method which:
Only adds if new
Only sets expiry if added
Returns true if value was added
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1045
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1046
Redisson 3.5.2 memory leak with pooled buffers
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1047
[Feature enquiry] Redisson create throws exception when the redis cluster is not ready.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was wondering whether the presence of the redis cluster is must to instantiate the redisson client via Redisson.create(config)).
I am evaluating the Redisson along with Jedis. I noticed that Jedis does not require the redis cluster to reachable when instantiating the client. However, redisson throws exception if there is no redis cluster exists.
We have the use case where our service is started when redis is not available and we expect the redisson client to retry to connect to redis cluster by itself when it is asked to retrieve value.
Could confirm whether this is supported feature or not?
Sincerely,
Peter
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1048
Redisson hang on RBatch.execute()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, we are using redisson client for our multi-threaded application.
We use RBatch to batch two commands as below:
During the test, we noticed the hang several time.
We first show this error first before the hang:
Then our thread calling the batch hung. There is the stacktrack:
I tried to set the lower lockWatchdogTimeout and set the batch timeout but this did not help.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1049
[Redisson 3.5.0 and 3.5.3]Executor service Error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The following call does not return
It neither prints "result" nor returns and Redisson node prints many errors.
I am using Redis 4.0.1 and Resisson 3.5.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1050
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1052
Redisson 3.5.1 NullPointerException in Sentinel mode - Not working at all
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We just upgraded our redisson library from 3.3.2 to 3.5.1. Our application has no problems when run in a single Redis server mode or with 3.3.2, but when we run it in a sentinel mode with 3.5.1 it does not work at all, constantly generating error messages. Our sentinel cluster consists of 3 servers (master and 2 slaves) and 5 sentinel clients. Redis version :3.2.8. Here is example of error log
Here is our Sentinel info
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1053
[Redisson 3.5.3] MR Collator Nullpoint Error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Classes:
Result as following: mapReduce.execute(new WordCollator()) is error.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1054
EnableRedissonHttpSession and spring security throw exceptions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
use spring-session+redisson+spring security(spring boot 1.5.7, redisson3.5.3, spring-security4.2.3)，when i access controller throw exception like this:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1055
[Anti-Fraud]Is Redisson suitable for redis to develop the realtime anti-fraud system?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko
Hi, Master.
Is Redisson suitable for developing the realtime anti-fraud system which needs high performance, such as 10 millisecond to finish the computing?
Thank you very much!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1057
Is RedissonBoundedBlockingQueue thread safe?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm confused when I read RedissonBoundedBlockingQueue.takeAsync() as follow
the takeAsync method first use BLPOP to take object from redis,then if success will call releaseAsync() to increment capacity, I think that two request is not atomic operation, and will cause concurrent issues?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1058
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1059
Clean stale scheduled tasks
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How properly remove stale tasks if my supervisor(who submits tasks) not gracefully exited - crashed.
Workers(redisson nodes) see submited task, executes them and put result back to redis. So after several crashes of supervisor I'v got alot of staled tasks: around 3k.
So how gracefully handle this? What you would recommend to handle this situation?
I have used Distributed scheduled executor service.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1060
Use map,when some value be null,can't get from redis server,and can't set to redis server too
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Because map use the jaskson codec,it seem can't resove empty value.But redis server support it.
How can i do this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1061
Possible race-condition during write operation cancellation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1062
"Too many open files" error when running redisson pro in clustered mode.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are receiving an issue where we start getting the "too many open files" error in production.  This happens roughly 60 minutes after the application is running.
We create a singleton (using Guice) that is injected into relevant classes in our application:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1063
Is there a way to make a specific key locate on a specific redis instance in cluster mode?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to make my multi-locks locate on different redis instances.
I find out that redission can specify an instance to execute command on, but if the command is key-related, the instance specified will transmit the command to another instance.
Can you give me some advice?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1064
Spring Cache Too Many Eval Calls and not setting TTL on the keys
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using redisson with spring cache and setting ttl on our keys. The problem is that we are not seeing any ttl being set on any key. Instead, I can see that some unnecessary keys are present in the redis database.
Here is the result of "keys *" command:
You can see that for a key "release", the redisson creates two more keys "redisson__timeout__set:{release}" and "redisson__idle__set:{release}". Also, there is no ttl present on key "release".
My code is :
We are using caching here:
We are not using zset and eval commands. But, still the use of these calls are too high from redisson.
Also, I have see that there are almost ~4M sortedSetTypeCommands on the redis cluster from redisson under our peak load which is degrading our performance.
I want to know why redisson is not setting ttl on the key and managing it using sorted sets on the client side. It is not advisable to do it on the client side if the server automatically gives that feature.
Is there any way to disable this ttl management from redisson so that it will just set that on the redis server and these calls are not fired.
PS: We are using AWS elasticache redis server.
Redisson version: 3.4.2
Redis Version: 3.2.4 with 1 master and 3 slaves.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1065
initialDelay: -1 (expected: >= 0)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
use redisson in spring-boot with spring-data-redis-stater.
startup exception stack:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1066
Use host alias throw Exception when alias contain ‘_’
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My host alias is redis_db, test found that contain ‘_’  will throw this Exception.
Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1067
Add maxSize setting for SpringCacheManager
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1069
redisson throw exception 'Exception in thread "redisson-3-10" java.lang.ArrayIndexOutOfBoundsException: 1'
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson running on tomcat.The program is working.redisson throw exception few minutes,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1070
Making dependencies optional for easier OSGi deployment
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Marking javax.cache api and reactor-stream dependencies as optional in pom makes it easier to deploy redisson in an OSGi environment when not using these modules. This change is in continuation to #793
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1072
Bogus map entries in RMapCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using version 3.5.0, we've noticed a very strange behavior in RMapCache map-iteration APIs (keySet,  entrySet, etc). It seems that the map sometimes contains "inverted" entries in which the key looks like a (bogus) instance produced by a value encoder, and the value looks like an (again) bogus instance produced by the key encoder*. When they do, these entries show alongside the normal entries. It's only because of Type Erasure that the code doesn't break until one actually calls an iterartion API: Because the original entries are still in place, get, put, etc. works as expected even when the map is in this broken state. We've managed to workaround this issue by using readAllKeys rather than keySet.
We have a custom extremely type-aware jackson-based codec, which makes this bug very easy to spot.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1073
RedissonSpringCacheManager does not take into account default cache config parameters.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, seems there is some tricky code which creates the wrong type of cache map.
RedissonSpringCacheManager has the protected method:
Also it would be really great to have an ability to set ttl and max idle time by default for all caches.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1074
UI - Project Dashboard
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Wrong window
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1075
Implement proper RedisLoadingException handling during RedisClient reconnection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Code:
Test
redis-cli PUBLISH aaa 111 # works
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1076
RedisConnection can not close
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1077
RedissonClient with useSentinelServers cannot reconnect resurected slave
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm testing the useSentinelServers connexion. I have 1 master and 1 slave.
If I kill the slave, wait and then restart it, I have the folowing trace in the Tomcat console when
calling redisson.getNodesGroup().getNodes().
If I look at the Redisson ConnectionPool.java, I see that the method will never retry a connexion on a freezed slave :
Question : How can I get Redisson to reconnect the resurected slave ?
thx,Xavier
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1079
Upgrade from 3.4.2 to 3.5.3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have been using Redisson successfully for the past few months, since our version was pretty old we just tried and upgrade to the latest version today.
With version 3.4.2 we used  SnappyCodec as follows
This setup fails with the new 3.5.3 version
Example client usage
With so many release since 3.4.2, many other codecs have been added. We store JSON string so which is the best codec to use for this case?.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1080
Wait Command Support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is the wait command not yet supported in Redisson?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1081
Many invocations of getEntry and getClient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
We have performance issue in org.redisson.connection.MasterSlaveConnectionManager#getEntry(java.net.InetSocketAddress)
We did profile the JVM to see what's happening and we have a lot's of invocations in this method.
While looking at the code, we found a
Is there an optimization planned on this part of the lib soon ? Do you have any workaround to fix this ?
Thanks !
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1082
Add null value support in RMap.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1083
Data encoding should be executed on client thread only
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It's important to do execute data encoding on client thread rather than netty's event loop.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1084
Better collection handling for RedissonReference
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1086
Test classes compilation fails on master
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, when I try to run tests on master (063dcab) as CONTRIBUTING.md states, I get the following error:
It's likely due to the spring version being used, [3.1,4.3).
Maven version:
Am I doing something wrong or is it actually failing?
Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1087
Current Connection Max Out when using Distributed Schedule Service ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We are using AWS Elastic Cache (3.2.4-cache.m3.xLarge).
We are trying to solve for scheduling events using Redisson Executor Service (https://github.com/redisson/redisson/wiki/9.-distributed-services). We have a setup of 1master and 4 slave nodes.
When we are trying to send scheduling request at rate of around 1000 request per sec for more than 1hour duration, we are seeing that current connections shoots up to max and they are never reclaimed and the app starts throwing errors.
These are our Redisson Client setting: (Replicated servers configuration)
We are creating a executor service on startup and use it throughout the app. We are using the scheduleAsync function and Runnable implementation.
We have a 6node (EC2 instanceC3.xLarge) app Cluster taking to Redis. (Each node has the above configuration)
Can you please help provide guidance as to what might be the issue here and how we can resolve it.
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1088
Add connection PING support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1089
"too many results to unpack" when callin RMapCache::getAll on a large (10000+) keyset
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I get "too many results to unpack" exception when calling RMapCache::getAll on a large (~10000+) keyset. Tested on both v.3.5.0 and v3.5.4.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1090
Cannot shutdown RedissonNode if there infinite lock is locked
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
To reproduce the problem:
1 Create a Runnable job which will last ~ 1 minutes (greater than "internalLockLeaseTime" used by RedissonLock.java), get a lock and lock it by lock.tryLock(), release the lock after the job is done.
2 Schedule and run this job using Redission framework.
This is because RedissonLock.scheduleExpirationRenewal still running after we shutdown the node.
Can Redisson stop the scheduleExpirationRenewal when user call node.shutdown()?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1091
RLocalCachedMap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I have very large objects that are hard to serialize, so opted for RLocalCachedMap with eviction policy as LRU and Invalidation policy on change. I notice that when I add key, value to the map, both key and value are serialized sent to redis server in serialized format often resulting in errors. Is there any way to preserve the eviction and invalidation and not send the value to redis server with serialization.
From redis monitor
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1092
MasterConnectionPool no available Redis entries.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1093
Redisson Client cannot link properly after the master - slave relationship changes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redis cluster, when the master-slave relationship changes, the Redisson Client links to the original master node and cannot link the changed master node, resulting in no data write.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1094
outofDirectMemory Netty exception with redisson pipelining
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i'm trying to learn Redis through Redisson. Here is my code to insert into redis using multiple threads.
package redisson
This code works fine until totalSize=400000. When i put the totalSize=500000, its throwing the following exception:
Can someone explain to me the reason why this is happening?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1095
redisson not handling failover in sentinel mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, i'm new to redisson and using version 2.10.4. Assume that i have a master node M1 and a slave node R1. 3 sentinels are connected to M1 namely, S1,S2,S3. I have connected Redisson to the 3 sentinels and started inserting data. Following is my code:
My question is whether this is some configuration issue from my side or does redisson not support failover?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1096
RedissonBlockingQueue.take() returns null in case of internal error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The take() method in RedissonBlockingQueue uses Future.getNow(), which returns null if an exception occurs. In our case, we have tons of NPEs when the application is stopped.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1097
Connection Count in Redis Servers increases when Failover happens
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using redisson 2.8.2 with Java 1.7 and redis in Cluster mode. Recently we had an incident related to connection count of redis servers. After further investigation we have found that after each redis failover, connection count from each client to redis servers get increased and not going back to the earlier values. This happens after each failover in the redis servers whose role got change.
Then eventually connection count reaches maximum connection count and application goes to a freeze state.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1098
CROSSSLOT key error on #getMap#getReadWriteLock when clustered
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#Hi,
I'm encountering the CROSSSLOT keys error when I get a lock a ReadWriteLock of a map in a clustered environment. The normal Lock of a map works fine tho.
or do I need the RClusteredMap instead of the normal map when clustered even if I don't need the data partitioning?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1099
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


1100
why is redisson faster than jedis, could you description some main reasons?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1101
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1102
com.fasterxml.jackson.databind.JsonMappingException: No suitable constructor found for type
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using the latest 3.5.4 version and Java 8. getting the error when deserialize the json to Java objects.
For my own classes, I could implement a default constructor to workaround the issue, but not on other classes that I dont have access to
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1103
Making redisson operation atomic
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, i have a usecase that i'm trying to implement using redisson. I have 2 redisson instances running on the same server performing the same operation.
Code snippet of redisson instance 1:
Code snippet of redisson instance 2:
My use case is this: At an instant of time both the instances could access the same key and update its value twice. I want to restrict this i.e., if both instances are accessing the same key at the same time, only one update should occur and not both.
My question is this, which would be the best locking mechanism to deal with this or should i handle this on my own???
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1104
RFairLock dead lock issue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I would like to report a locking issue we are seeing using redisson versions 3.3.2 to 3.5.4, using RFairLock.
We have 3 instances of an application competing for a fair lock. After some time, the timeout of the fair lock queue gets set to a time many hours in the future, and no thread ever gets the lock.
Here is what redis is reporting during one of the occurences - both commands ran at about 9:30AM PST on 10/17/2017 (1508257800000):
You can see that the timeout (zscore of the timeout keys) is set about 6 hours in the future.
So far, we haven't been able to reproduce the issue locally, but it is happening daily in our production environment. We are suspecting the problem is happening randomly when one of the application gets killed by the operating system (kill -9), something that can happen quite often due to the way we manage the apps.
We were using redisson version 3.2.3 before, and never experienced the issue.
Earlier this year, we tried updating to version 3.3.2 and started seeing the problem within a day or so. We reverted to 3.2.3, and waited for an updated version.
Two days ago, we decided to upgrade to 3.5.4 assuming the problem was fixed, but it happened again within a few hours.
I will keep on trying to reproduce the issue, but any help is appreciated.
Thanks,Michael
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1106
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1107
Support for Socks proxy?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi there,
I was looking around and I cannot find if there is socks proxy support.
I am creating the socks Authenticator like this.
And the RedissonClient is created like so:
But when it tries to initialize the connection it always tries to access the redisHost directly.
Is there support for socks proxy and if so how can I properly enable it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1108
Redisson trying to connect to a dead slave on sentinel setup.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Guys,
I have a redis 3.2 setup with sentinel (3 nodes). I'm using redisson 2x.
I'm performing some HA tests, dropping some slaves or making them fail to test the resilience of the system.
My simple config:
So I got this scenario where one of slaves is disconnected and with error on master link (check lines 10 and 33):
sentinel slaves mymaster
The problem is that redisson tries to connect to this slave for reading regardless of its status instead of picking another slave.  Shouldn't redisson consider sentinel flags in this case? Maybe it is just a configuration I'm missing.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1109
Unexpected exception while processing command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I got this problem when I trying to locking an object. Here is the problem:
Date: Thu, 19 Oct 2017 10:15:31 GMT
what I'm missing?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1110
RReadWriteLock reentry is incompatible
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This issue is related to #891.
write lock for 10 seconds
write lock for 1 second
Now after 1 second the whole lock is released. I'm not sure if this is a bug, but logically the system should not unlock the because the first lock request is done for 10 seconds.
Manually calling l2.unlock() manually works as expected, that is fixed in #891
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1111
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1112
Cron schedules stop after a certain time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm using cron schedules on an executor service but the schedules stop after a certain amount of time.
I've reproduced the issue in a small standalone project.
Here the scenario ;
Use latest redisson (3.5.4) with single node redis and using linux native epoll in configuration
Create a single worker for an executor service
Create the corresponding executor service
Schedule a cron task every seconds
Schedule a cron task every days at midnight
After a certain amount of time, the cron task every seconds will stop working.
When midnight comes, the midnight cron task works, and the every seconds task resume, but then stop again after a certain time.
I did not wait midnight on the standalone project, but I have had this behaviour in my project.
I looked into redis and saw that the every seconds task is still here, and the zset contains valid value for the next run in the score.
Note that I also reproduced the bug with every 5 seconds or every 5 minutes task and the task every days at midnight, but I had to wait longer.
I reproduced also without using the native linux epoll.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1113
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1114
Configuring redisson to work with Azure Redis Cache standard tier
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
What's the correct way of setting redisson up to work against a standard tier Azure Redis Cache? I'm asking because the standard tier Redis Cache is replicated, but Azure doesn't provide the connection details for the slave instance.
According to the documentation, Redisson's "replicated mode" requires that
All nodes (master and slaves) should be provided.
So do I use "replicated mode" and only specify a single instance, or do I use "single instance mode"?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1115
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1116
Add checking for failed masters during Redisson startup in Cluster mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1117
Introduce separate binary codec for messages used in LocalCachedMap object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1118
Handle server down with singleServer mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using singleServer mode without slave.
I'd like to handle this in our app, but it looks like the getBucket() or get() is an async call, so the function doesnt throw the exception, I look through the docs, and found nothing to configure Redission to work in synchronized mode. Is  synchronous mode supported by Redission or is there a different way to handle this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1119
org.redisson.client.RedisTimeoutException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1120
Scheduled Tasks Failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How can I make sure that if a certain nodes takes a scheduled task but crashes, someone else would try and recover it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1121
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1122
Seeing lots of redisson errors - RedisTimeoutException and RedisConnectionException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi. I am using redisson 3.5.4.
I am using redisson for task service management. However, I am seeing a bunch of redis errors - not for every call, but for enough calls to where I am concerned. Here is a sample:
and a different error:
I am also seeing some RemoteServiceAckTimeException: No ACK response after 5000ms for request: RemoteServiceRequest.
Here is my configuration:
Is there any config setting I could change to help with this? Am I doing something wrong?
thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1123
Reset maxIdleTime and ttl on read is not working
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using redis with elastic cache in my spring application where i am using spring annotations for accessing cache.
I need to reset cache idle time and ttl on read so that i can keep my user active until user goes idle beyond timeout.
But read is not resetting the timeout and cache is evicted as per idle time and ttl set in configuration. Using below annotation in both the cases for creating and reading cache, the issue is same in both single and multiple server configuration.
What is the configuration needed to reset idle time and ttl on read? please advise.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1125
presist feature not working as expected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We're are struggling with basic persist function.
When have written a piece of code to persist a simple Customer object that is annotated as @REntity with its guid field marked as @RId.
The piece of code used to persist is as follows:
Customer object is getting stored in Redis server with the key:
We expected it to be saved using its field guid as the key. Nevertheless, now when we try to get this object back, it returns a object (which we believe is a proxy object) with all null values.
service.get(Customer.class, "1")
returns
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1126
Data Object Hierarchy not working for live objects (2.10.4 as well as 3.5.4)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Parent -child is still not working for me. I am getting no such field exception when the RId is a part of the parent class. Can you please guide? What am I missing?
Thanks,
Salil
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1127
Redisson not set-up correctly when using JCache API and custom config file
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a Spring Boot application and a Bean that implements org.springframework.boot.autoconfigure.cache.JCacheManagerCustomizer, i.e. there is a method that takes a javax.cache.CacheManager, and then follows the instructions provided here. Specifically, I have implemented a mixture of the code snippets for:
"Using config file with custom location"
"Using Redisson's config object:"
Essentially, I have the following that does create caches as I would expect on my local Redis instance:
@Override
However, when I run tests or start/stop the Spring boot application, I always receive the following Log message and the Redis caches are not cleared.  Note that the caches are reset if multiple tests are run in sequence but the data cached in the last test is still present in the Redis instance after the test has been run.
After debugging, it seems that there is no org.redisson.Redisson object created. This appears to be caused by the checks for either a redisson-jcache.json and redisson-jcache.yaml being on the classpath in org.redisson.jcache.JCachingProvider#loadConfig(URI uri). If these files are not found, the config returned is null which means that org.redisson.jcache.JCachingProvider#getCacheManager(URI uri, ClassLoader classLoader, Properties properties) does not invoke the code inside the if conditional below:
I do not have either a redisson-jcache.json and redisson-jcache.yaml file on the classpath since my team are trying to develop a way of loading different Redisson configuration files based upon the Spring Boot profile that is used to launch a Spring Boot application.  Configuration files are instead searched for in a specified location with a specified file name (the name of a Spring Boot profile).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1128
Retrieving objects using non-@RId fields
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a Customer object as below
I store this object in Redis using the persist method as below:
I can use the service.get(Customer.class, "1")  method to retrieve this object based on the guid we pass to it. However, I have following requirements:
Can you point me to the right api for such requirement?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1129
Delayed writes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I was testing the behavior of Redis/Redisson when a network failure happens (say for few minutes) and then recovers. I observed the following un and wondering if there is a way to avoid this scenario.
Observation:
SADD command was issued at 14:46 PM and failed due to RedisTimeoutException. This seems to have happened just about when network failure just started.
At 14:50 (A full 4 minutes later), it looks like Redisson heard back from Redis master node but due to client side timeout set, just skipped the response.
Here are the logs:
Redis Version:
Redisson Version: 3.4.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1130
useSentinelServers in ReadMode of MASTER_SLAVE, the master never got read.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Tried following config
I wish both master and 2 slaves could be read (33% chance on RoundRobin algo). But I see the master never got read.
Tried different Balancer and dug into the source, seems that the LB seems only be applied to slaves. The master server is setFreezed(true) and it won't get read unless both slaves get disconnected.
Looks like ReadMode of "MASTER_SLAVE" is actually same as ReadMode of "SLAVE".
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1131
Add RListMultimapReactive object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1132
Redisson 3.5.5 will not accept "localhost:6379" as address for SingleServerConfig
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
it used to accept "localhost:6379", but now the address seems have to be: "redis://127.0.0.1:6379"
this is because the change in org.redisson.misc.URIBuilder.java.
Should it more developer friendly?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1133
timeout configuration in Replicated Mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, i'm using redisson with a Replicated Mode configuration (1 master and 2 slaves).
When attempting to debug an issue, i found that apparently the timeout configuration parameter is not being used in the implementation as documented.
I was receiving a fair amount of unexpected RedisTimeoutException: Command execution timeout messages.
Changing the retryAttempts and retryInterval allowed to circumvent the issue - but not changing timeout - which seemed odd to me, so i decided to dig further.
In ReplicatedConnectionManager#L123,
A value of 0 for retryAttempts, or even a higher number matched with a relatively low retryInterval always causes the RedissonClient instantiation to fail (due toCommand execution timeout).
Raising these values can bypass the error on the initial connection and allow the instantiation.
Still, the same applies to subsequent calls: they also won't also use the timeout provided in the configuration.
Am i observing this correctly or is there something i'm missing here?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1134
[Performance] Potential performance issue or improvement
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
One of our teams has been running some load tests that involve calling deleting keys from a redis cluster among other things. And when they run a profiler they observed that top hot spot was actually related to collection management (ConcurrentHashMap and HashSet) on redisson when getting connection info and copying it for every operation.
As seen on the following hotspot analysis
This was tested with redisson 3.4.3, haven't tried with the latest one yet
Is there anything that could be changed from config or improved on the code in future versions?
I believe the same scenario might show up on other operations besides delete
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1135
SSL it's not fully implemented
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I was trying to use your library with AWS Clustered mode and figured out it does not work with SSL.
I figured out the problem and fixed it in my fork  but it's a hack what I did.
Basically everywhere you create an address like "redis://" -- you need a way to know if it's SSL and put "rediss://" instead. Since those places have no access to config, unfortunately I changed all to force SSL everywhere.
Do you have in plan a fix for this, or I can do it if you point me to the right way. I am trying to understand your logic and how can I be least invasive to pass a config. The simplest way would be to put a static public flag somewhere -- but that's also a hack I guess, and will only allow one type at one time, or pass a jvm property ...what do you suggest?
Thanks in advance,
Florin Moisa
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1136
Java objects - support for search by non-RId fields
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We have a usecase where we store Java objects in cache and search them by multiple fields. Is there a way to achieve it in Redisson liveObjects? Spring-data-redis provides such functionality but does not support redisson.
Thanks,
Salil Gandhi
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1137
Failed to continue poll remote responses if current waiting for response has been canceled
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1138
 Add RSetMultimapReactive object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1139
reactor/fn/Supplier : Unsupported major.minor version 51.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am Using Java 1.6 and the Redisson 2.10.1
and i am using the RedissonReactiveClient  as shown in the blow sample code
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1140
Read-only GEORADIUS support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Redis 4.0.0 and 3.2.10 introduced read-only GEORADIUS variants(GEORADIUS_RO and GEORADIUSBYMEMBER_RO), as the docs state. Are there any plans to add this command to redisson?
Thanks in advance!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1141
Redis timeout exceptions when trying to submit tasks on a now executor
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a redisson configuration with a single worker executors for various schedules - 1min, 5min, 1hour, ... 24hours. When each of these ticker-tasks are invoked I have a set of devices on which I need to run diagnostics. Each device will have a task that will be slotted in various schedules and these tasks for all the devices that belong to a schedule need to be invoked at that particular time.
The device tasks are put in a 'now' executor. So on every schedule invocation, there are a lot of tasks that are submitted on the now-executor.
I am using Redisson version 3.3.1 and my key settings are:
I am observing sporadic RedisTimeoutException when submitting tasks to the now executor:
I am also getting sporadic timeouts on the ticker tasks - 1min, 3min etc.
I have two instances running that feed off the Redis cache. These errors are sporadic in  nature. Appreciate any help in understanding the root cause of these timeouts.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1142
Is there a way to get a value from a key that wasn't set using redisson?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In my local redis database, I have a node.js app that sets redis keys and values. Can I use redisson to retrieve using the key name? Or can redisson only retrieve keys that were created by redisson?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1143
Initialization timeouts leads to performance issues and timeout on batch
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I've been fighting for the past week with some weird timeout issue on one of our apps.
The use case is an RBatch operation that execute a bit of getBucket(..).getAsync()
Run scenarios with 1 get or N gets as part of the batch and happens on any.
The issue is basically that after a few minutes after starting the app, some instances of my app start displaying timeouts on that cache operation and thus becoming slow, then i restart that particular node of the app, and maybe it's fine forever, then I restart another instance and maybe now that one starts exhibiting the same problem. Sometimes it add a constant base of 50ms delay (due to timeout and retries) and sometimes it's 150ms or similar.
We tried with redisson 3.2.0 and 3.5.5 and we can observe the problem on both, we though it might some hardware/network problem on those servers where such apps are running, but after restarting and re-running it works fine (or not) and viceversa on other servers.
The errors we get on the failing app are always like this
And this what we observe many times
This is being used on a very high traffic app, but we can reproduce it with low traffic as well.
Do you have any suggestion or insight on any thing we can try changing on our config and re-run our load test so we can sort out this issue. And we really need the data to be read from redis because the alternative when our cache fails is a much worse system that cannot handle the load or our SLA
We have been trying changes on the servers, running on different hardware, etc but nothing changed yet. Could it be some dead connection or bottleneck on the batch or connection manager that is causing this? Also as you can see on the avg time graph on top, it doesn't happen for every request, but for many of them, but constantly ONLY on that running app of all the total
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1144
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1145
Snappy implementation in recent versions throws ArrayIndexOutOfBoundsException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Summary
Up to and including Redisson version 2.10.1 and 3.5.1, Redisson used the Xerial implementation of Snappy (https://github.com/xerial/snappy-java) for its SnappyCodec.
In versions 2.10.2 and 3.5.2, Redisson was changed to use the internal implementation of Snappy from Netty instead. However, this implementation seems to be designed only for Netty's use cases and cannot encode moderately-sized payloads. In this case, moderately-sized means that payloads of more than 50,000 bytes are very likely to fail.
This results in an error during the encoding step, e.g.
Steps to Reproduce
I have created a repository that shows how and when this bug occurs. I take the last known good versions (2.10.1 and 3.5.1) and compare them with the most recent versions at the time of writing (2.10.5 and 3.5.4).
See the repository here: https://github.com/nebel/netty-snappy-redisson-demo
To run the examples, either run the main method for each module in your IDE, or run each module via the command line with mvn package exec:java.
The redisson-*-snappy-demo modules show the behavior in the indicated Redisson version. As you can see, the last known good versions (using the Xerial implementation of Snappy) can encode this payload without any problems, whereas the new versions (using the Netty implementation of Snappy) will fail.
The netty-xerial-snappy-demo module shows how increasing the size of the encoded payload will soon cause Netty's implementation to reach a breaking point after which all attempts at encoding will fail. When creating the sample data with a random seed of 0, Netty will succeed on a payload of 44,895 bytes and fail on a payload of 44,896 bytes. Changing the seed will change this number, but it will generally fail somewhere between 40,000 to 50,000 bytes.
The Xerial implementation, on the other hand, does not fail at any size I tested (up to 100 million bytes).
Fix
While it's nice to avoid an additional dependency, I believe the Snappy implementation from Netty should probably be considered an internal implementation since this size limitation makes it unsuitable as a general compression algorithm.
The Xerial implementation seems to be more widely used by more high-profile projects (e.g. Cassanda) and is probably a safer choice.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1146
Seeing NullPointerExceptions with distributed services
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are testing the distributed services feature of redisson. We are noticing that at scale (i.e. 1000 tasks in a minute), redisson is throwing NullPointerExceptions and the tasks do not complete.
Let me know what other information would be helpful to try and track this down.
thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1147
Connection distribution upon nodes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I have a setup of 3 redis nodes with 3 sentinel nodes.
I am using latest redisson with master_slave read mode.
I see that almost all connections go to the master redis and slaves are not in use.
Also when connecting to redis i see only db0 is being in use.
What am i doing wrong in my redisson config?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1148
OpenTracing support?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is there any current plans, third party plugins, or a recommended best practice approach to use Open Tracing with Redisson?
In particular the remote service invocations seem like they could benefit from the tracing span context propagating across the service boundaries.
I have done some quick googling and didn't find any libraries, documentation, or anything else on the subject.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1149
please help
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1150
Out Of Memory When using RScheduledExecutorService.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We are seeing Out Of Memory Exception when using RScheduledExecutorService.
We are using redisson 3.5.5
These are our settings:
It would be great if you could help provide some guidance here and help figure out the issue.
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


1151
Removed entries in RMapCache Through Eviction Process Still able to see through Redis-cli
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am Using the RMapCache<K,V> and using the Method  putIfAbsent(K key, V value, long ttl, TimeUnit ttlunit) .
I want to use the Eviction functionality i.e provided so I am giving ttl as 45 Sec.
After 45 Sec when i check the Entry in the MapCache From the ReddisonClient at runtime i didnt found the entry
But when i check the same in the Redis-cli using HGETALL i can still able to found this Entry that was Deleted through Eviction Process by Redisson
SomeTimes even after 5 min i can able to see the Entry in the Redis-cli even Though it can't be able to find from the Redissonclient after 45 Secs
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1152
user_script:1: bad argument #1 to 'len' (string expected, got boolean)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using spring and redisson cache manager. Below is the issue I am running into. The thing is that if I manually cleared cache from redis-cli, the issue is gone.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1153
AvroJacksonCodec vs Avro Direct Binary.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
Can you please tell me the difference between AvroJacksonCodec in Redisson vs creating my own codec using Avro's BinaryEncoder directly? Does the Jackson codec covert the object to JSON first and then to binary? E.g. is it wrapping my objects in { } and also writing the field names? Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1154
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1155
The question of the version
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I used high version(org.redisson:redisson:3.5.3)，The error is as follows.
But, when I used low version(org.redisson:redisson:2.2.17), my project is started normal with tomcat 8.0.14.
My project is used gradle 4.0, I want to use the high version, please tell me how to do?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1156
The Namespace Of Redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to use the Namespace of IRedisClient. Where is the Namespace of Redisson?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1157
Add entry update strategy on map entry change for RLocalCachedMap object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1158
OOM issue with RedissonExecutorService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We are seeing out of memory when trying to use RedissonExecutorService.
Please find attached the file you can use to reproduce the issue.
Usage:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1159
What is the application scenario of the RedissonRedLock?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
What is the application scenario of the RedissonRedLock?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1160
The deadlock of RedissonMultiLock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I used the RedissonMultiLock.lock(), I found the code of Redisson.
This is my code.
The program execution sequence is as follows：
Thread A locked the 'lockSoundbox' of lockA. It's OK?
Thread B locked the 'lock2000' of lockB. It's OK?
Thread A locked the 'lock2000' of lockA. It's OK?
Thread B locked the 'lockSoundbox' of lockB. It's OK?
I think there's a deadlock between 3 and 4, but I'm not going to try it out.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1161
Problems with Spring Session UsernamePasswordAuthenticationToken deserialization
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I've read somewhere that you need to add a serializationcodec but didn't manage to get it to work.. any tips?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1162
Redisson willunable to work after the redis-cluster reboot.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1163
Redisson will be unable to work after redis cluster reboot.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson runs base on redis-cluster mode, and every thing looks cool.  When redis cluster nodes all down, the redisson is unable to work and throws connection exception. Howerer, when the redis cluster recovered, the redisson is still unable to work and throws null pointer exception!!!!!!!
I did this test base on redisson 3.3.0.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1164
Redisson Client hangs on creation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey guys,
currently trying redis + redisson (v3.5.5), so this might be an easy question for some of you. Anyways as soon as I create my Redisson Client (config seems right), the client hangs in the create statement indefinitely without any exception or timeout, etc (waited for over an hour to hopefully see some error, sadly none).
To the setup: Win10 + Ubuntu subsystem running redis on standard port (6379), single server setup. In its config the redis server is binding to 127.0.0.1 (also tried disabling protected mode). RedisDesktop Manager and Jedis connect just fine without any issues.
Hope someone can help, as I couldn't find anything related to this anywhere online.
Stacktrace :
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1165
java.lang.IndexOutOfBoundsException: fromIndex: 0 toIndex: 2 size: 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the error occurs when get a sub list from Rlist object, use 'indexOf' to get index number of specified string, it returns 1, it shows that there should be some elements in specified region, but reported no data
found, did somebody meet same issue? how did it happen?
BTW, the redission version is 3.4.2
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1166
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1167
Set removeRandom(10)  throws Exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
it seems to use the command "SPOP key 10"
but in fact redis Set doesn't support that uses, SPOP  only pop out one value at a time. So this will cause an Exception "wrong number of arguments for 'spop' command"
i am using redission version 3.5.5;
and i hope redission wilol support the SRANDMEMBER command in the future
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1169
nginx + tomcat + redisson share session
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Environment:
Configuration all set and session can store in redis and get from redis.
But when I login, I have to login 2 times (First time fail and auto refresh page, second time can success).. After logined, when I click the page, it will show "Uncaught TypeError: Cannot read property 'click' of undefined" (Google Chrome) or "TypeError: tableDom is null"(FireFox). Then I refresh the page and click it agian, it will be normal.
Can you help me slove this problem? thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1170
MapLoader seems to hang if you try to check the same null key, more than once
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It looks like the second time you try to get a key that was null through a map loader, the loader will simply hang.
I was able to reproduce this in RedissonMapCacheTest.java with the following code
I'm running Windows 10 with Redis Version 3.2.100 64 bit version.  This is happening on Redisson 3.5.5 and the current master branch.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1171
spring session with spring security error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
org.redisson.client.RedisException: Unexpected exception while processing command
n: no suitable constructor found, can not deserialize from Object value (missing default constructor or creator, or perhaps need to add/enable type information?)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1172
Redisson RScript eval codec is not honored
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Command executed:
Expected result: values and/or keys encoded with json codec
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1173
redission AtomicObject in debug + breakpoint mode cause a different result
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
version:3.5.4
At first,I delete the key,confirm the key not exist.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1174
Java 9 warning - illegal reflective access
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Just wanted to report this warning I'm seeing now since I am giving Java 9 a go (for native alpn/ssl stuff that's not directly related to Redisson).
This warning is shown on stdout when I start up my runnable/uber jar:
So far it appears everything is working fine, but figured it might be worth reporting, since it says it will eventually be denied in a future Java 9 release.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1175
RedissonRedLock issue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1176
spring boot health check redis is down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1177
RxJava 2 Support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was hoping to see support for RxJava2, I love having Redis on the stack when I make apps, but it's a real pain when almost every other library has standardized. Thanks for considering :)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1178
Redisson not able to detect ip changes of active node in RLEC endpoint
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are currently using Redisson 3.5.0 to connect to our Redis labs enterprise cluster(RLEC). The driver is configured to connect using single server mode (as recommended for RLEC). When the active node ip switches/changes, Redisson is not able to reconnect with the new active node. It keeps retrying to communicate with the last known active node ip from the endpoint. This behavior is consistent with either "dns monitoring" being set to true / false.  If we manually set the same active node ip back, it immediately reconnects, which proves the point that its unaware of the ip address changes, unless the last known ip is elected again as active.
How do we enable Redisson to detect potential ip changes of active node, while using endpoint of RLEC in single server mode?
Please let me know if you have any ideas on this one. Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1179
Eviction Scheduler doesn't remove expired keys from list
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I asked a question on stackoverflow about how to well configure redisson to make eviction scheduler working on set in redis, but no answer yet :(. Could you help us by answering on this post or by improving the wiki about this point ?
Many thanks !
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1180
Redisson is not reading the values set by external redis clients
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am creating a set through Medis, a Redis client or FastoRedis. When I try to read the same using redissonClient.getSet(key), I see an exception being thrown saying "Unable to evaluate the expression Method threw 'org.redisson.client.RedisException' exception." while debugging the set in IntelliJ. Why can't redisson is reading the value for the key? I noticed one thing when the redisson sets the value, it has quotes. But when you set a string from external clients, it doesn't have any quotes and redisson can't seems to be recognizing it.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1181
ReadWriteLock not working.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello.
I'm interested in this project. I am creating a sample project(https://github.com/bleujin/CrakenRedis) using this,
And I do not think readswriteLock is working properly.
The error pattern is a bit different, but the example org.redission.example.ReadWriteLockExamples.java is not working properly. Version 2.10.5 does not work either.
I do not know much about redis
I hope this project can be maintained.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1182
redisson work with a cluster with no full coverage slots
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1183
redisson 3.5.5 RScheduledExecutorService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
You can't find a class using the Lambda creation task
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1184
FstCodec deserialization problem when adding new properties to session object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
FstCodec deserialization problem when adding new properties to session object.
Is there any way to handle that? If its possible to either ignore or invalidate session if new properties are added.
org.redisson.client.RedisException: Unexpected exception while processing command
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1185
Add executeSchedule methods to RScheduledExecutorService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
executeSchedule methods return void method instead of ScheduledFuture this allow to avoid memory consumption by each schedule.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1186
Rename codecProvider and redissonReferenceEnabled Config properties
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Rename codecProvider and redissonReferenceEnabled Config properties to referenceCodecProvider and referenceEnabled
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1187
Remove Config.resolverProvider and embed its logic into RedissonLiveObjectService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1188
DNSMonitor fails on bootstrap with custom event loop
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson 3.5.6 fails on bootstrap when using custom event loop.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1189
Redisson can not deserialize data on expiration event
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1190
JVM crashes when using 1000 concurrent redisson threads
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am scheduling tasks on a Redisson executor. On every schedule a massive chunk of tasks are submitted on two Redisson executors. I have equal number of workers assigned to each of the two executors 500 and a maximum redisson thread count of 1000.
I took periodic heap dumps of the JVM and the following was the last dump I captured before the container (my code is running in a docker container) went OOM. It appears to me that the netty's PoolThreadCache continues to increase.
Here is a screenshot of the leak suspect report of the last dump I took:
I am unable to get the crash dump report of the JVM. Will attach that as soon as I am able to figure out the issue with crash dumps not getting generated.
I am using Redisson 3.5.5. The bundled Netty version is 4.1.16.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1191
Redisson remote services can't ack when running redis in cluster mode.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
To reproduce this, on 3.5.6, I updated BaseTest.java and ran the tests against a clustered Redis server running  Windows 10 with Redis Version 3.2.100 64 bit version.
Completion appears to work fine.  It's just the ack that is throwing an error.  If I set the options to noAck, I can get a result.
Ack does appear to work correctly if Redis is not in cluster mode.
BaseTest Modification:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1192
Removing class name in serializing an object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I would like to minimize the data storage in Redis. When putting an Object in a list, I found that the object is serialized and stored in JSON. However, for every field in the json string, it has a class name info "java.lang.String" next a field for example.
Looking at the source code, realized that this is added by default. Passing my object mapper to initialize won't work either.
Is this necessary? Is there a way to disable this?
Alternatively, I serialized myself an object into a string and put the string into RList. However, then it seems the library serialize one extra time as follow:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1193
Redisson RMap get response is slow
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I've a java application where I'm using Rmap to store and retrieve objects to/from Redis. The response time of map.put(...) is reasonable but map.get(...) is averaging 4000000.0 ns.  I'm using FstCodec for serialization/deserialization. The application has many classes that do not provide no arg constructor and hence certain codecs can't be used.
I would like to know how to improve the map.get(...) response. When same object to go LinkedHashMap, the response time is in the range of 446.0 ns and I'm looking for a response time in that range.
Find attached my sample java application and config file.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1194
failover does not work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm new to redisson, I setup a redis master-slave environment with 3 sentinels.
But failover does not work when I kill master node, it seems redisson node does not try to connect new master node. I got this exception:
Here is my redisson configuration, could someone help me? thanks a lot
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1195
AWS ElastiCache SingleServerConfig failover doesn't work partly
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We use redisson 3.5.3 , and  AWS ElastiCache SingleServerConfig mode ,of course the redis client config property dnsMonitoring is true , you know that AWS ElastiCache will change the ip to same DNS  when failover.Today AWS ElastiCache failover occurred , we found that we got many redis exception : org.redisson.client.RedisConnectionException:
I research the error log file, found that redisson has switch to the corret ip address :
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1196
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1197
Configure Redisson to connect to Azure redis cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am using redisson 3.5.6 to connect to Azure redis cache (standard tier).  I am using Config.useSingleServer and have provided password in the redisson.yaml configuration.
It is throwing Exception: Unable to connect to Redis server
Please help me in resolving the issue
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1198
Reading from Elasticache replica nodes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello
I'm using Redisson ( redisson-all-3.5.5.jar )to connect to AWS Elasticache running in Cluster mode disabled. The cluster has 1 primary and 2 replica nodes.  The application uses Redisson's Spring Cache abstraction support.
I have configured Redisson in Master-Slave mode providing the primary end-point as master and replica end-points as slaves.
I load the application by making hundreds of simultaneous requests hitting the cache.
When I view CloudWatch metrics, I notice that there are no CacheHits for the replica nodes. All the requests seem to be going only to the master/primary node.
I have tried SLAVE as well as MASTER-SLAVE for read-mode attribute. I played around with the LoadBalancer class trying out RoundRobin and Random , but to no luck.
The idea behind using multiple replicas was to distribute read load and not just for high-availability. It is important for us to read from slave nodes. Is there some setting that needs to be enabled to allow Redisson to read from slave nodes ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1199
Configurable ttl for caches and/or entries in redisson Jcache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, it would be nice to have a global configuration(using redisson-jcache.json, for example) option for the redisson Jcache to set the ttl for caches and/or entries.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


1200
Two threads can acquire the same lock with redis cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a very simple try-finally block something like this:
I have a redis cluster 4.x with 3 masters and 3 slaves, redisson is initialized like this:
In most cases it work, but sometimes I can see it from the log that the lock cannot block two threads T1 and T2 can acquire the lock simultaneously, then one of them can release the lock successfully, the other one will throw an exception:
So, my questions is that, why two threads can acquire the same lock? (They have the same lock name, I observed this from log)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1201
BitMap (RBitSet) questions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have two questions.
Are there any plans to extend RBitSet index range beyond Integer.MAX_VALUE*2?  Since it supports distributed implementation of BitSet and its operations - having this limitation removed would be very helpful.
There have been studies suggesting Roaring Bitmaps as very powerful mechanism to support space-saving fast bitwise operations on bitmaps ( operations are performed on compressed representations). See e.g.  When do we plan to having a roaring bitmap implementation - be it PRO or community version of Redisson.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1202
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1203
add repeat feature in priority dequeue.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Thank u.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1204
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1205
MapCache listener not working on cross-plateform environment
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I've encountered a bizarre bug when using MapCache listeners between windows and linux.
My setup:
When running the test I've got the following errors:
the line PlatformDependent.isWindows() should not be made regarding to the jvm running environnement but regarding to the redis server.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1206
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1207
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1208
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1209
version 2.10.6, compiler target is 1.6+,but in class BaseRemoteService use Map's putifabsent method?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
compiler target which defined in pom.xml is 1.6, but in source code such as BaseRemoteService still use Map's putifabsent method.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1210
Add RMapCache.remainTimeToLive(key) method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1211
Add tomcat 9 support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1212
Add ClusteredBloomFilter
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1213
DNSMonitor doesn't work with ClusterServersConfig
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I noticed that Redisson isn't detecting DNS changes when using the ClusterServersConfig with AWS Elasticache Redis in cluster mode. After debugging it looks like this line is never hit https://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java#L289
I am using a CNAME DNS record that points to the Configuration endpoint of the Redis cluster and then testing destroying/recreating the cluster and pointing the CNAME at the new configuration endpoint.
Is this expected? What's the  here?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1214
Add Redis Modules support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Implement an infrastructure for adding custom Redis Module support:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1215
Add KQueue support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1216
Add RMap.valuesAsync(String pattern)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The output should be the same as values but it Should response with a RFuture<Colletion<V>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1217
Is there anyway RMapCache can work with other clients?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Our service (Python) shares a redis with some other Java services. We and some Java service put in the data, and another Java service consumes the stored data.
Java services have decided to use redisson RMapCache to store and read the data. And since they both use redisson so there is no issue for them.
But I found if RMapCache can not get the data I hset in redis via redis python client.
It complains that:
I suppose the data I put didn't follow the RMapCache eviction scheduler data format.
Is there any workaround for this? Or any suggestions on this situation?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1218
rangeTailAync and rangeHeadAsync
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am looking to get a specidic count of data from endString to startstring.
So I have used readTailAsync by providing startString but I am getting data always from startString.
I tried using readHeadSync by providing endString but i still get same data from startString. Is this a bug?
I would like to know how to solve my problem.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1219
ReadLock not working correctly
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Is this the expected behaviour of the ReadLock from ReadWriteLock?
Clarifying because I did not encounter this in release 3.5.4
There are multiple threads that are trying to lock and unlock the readlock concurrently but I am encountering the "attempt to unlock lock, not locked by current thread by node id" exception.
Here is a rough code sample to replicate the issue.
The unlock part throws the following exception even though they're all read locks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1220
Using RMapCache what combination of ttl & idleTimeout can I use to expire field that is read < those values
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a scenario where I have a field that I want to keep as long it the field value is updated at a rate < the idleTime, and expire when the that is not the case.
What appears to be happening is that as the field is read more frequently than the idleTime, and when a get is performed it updates the idleTime expiration, so that the field is never expired.
I tried the following combinations:
but none of those combinations work.  Is it even possible?
thanks, Mitchell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1221
.setDnsMonitoringInterval(-1) doesn't actually seem to be disabling DNS Monitoring
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using 3.5.7 and am getting intermittent "Unable to resolve" DNSMonitor exceptions, using AWS ElasticCache Cluster. Here's my createConfig() code:
I'm still getting the UnknownHostExceptions from DNSMonitor which suggests the monitoring is not being disabled. Is this a bug or am I missing something?
Just an additional FYI, this is my initialization block:
private synchronized void initialize(){ if(!initialized){ Logger.debug(LOG_INITIALIZING_CACHE.getValue()); org.redisson.config.Config config = createConfig(); redisson = Redisson.create(config); initialized = true; } else { Logger.debug(LOG_CACHE_ALREADY_INITIALIZED.getValue()); } }
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1222
Session object was not updated correctly
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I used redisson session manager to externalize session data into redis server. However, session data will not be updated if the session is an object and the data to be changed without running httpsession.setattribute(..).
For example:
I tried Jedis session manager, it works as same as what I expected as tomcat session. Is this a bug in redisson?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1223
Question about RFuture
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I saw that CompletionStage interface implementation has been deleted based on the code.
Are there a particular reason for the removal?
Thank you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1224
RLiveObjectService : isExists method : unclear javadoc
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RLiveObjectService has method isExists (which name is grammatically strange already, but "isSomething" is already established expression for boolean variables, so okay)
Javadoc says: Returns true if the RLiveObject does not yet exist in redis
But the same javadoc later says: @return true object exists.
I find this kind of documentation unclear, as I don't understand if it should return if object exists (like method name and @return says) or not (like description says)
UPDATE:
I tried to see for myself and got confused even more.
Here's my code:
Testing code:
So what exactly "isExists" feature does ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1225
InstantiationException when getting priorityQueue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The code
Is that because comparator is anonymous?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1226
Add LongAddr
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1228
Save RScheduledFuture in redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a few tasks which can be started in RScheduledExecutorService from many instances. They also could be cancelled from any instance. To achieve this, I try to save the RScheduledFuture in RMap, but I got next stacktrace:
Is there a way to store this kind of objects in redisson? Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1229
Can I use RBatch for RPriorityQueue?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to perform RPriorityQueue.remove() and update RBucket as atomic operation. Is it possible? There is no RBatch.getPriorityQueue() method
Tried it with getQueue() method like this:
Doesn't work. (and probably shouldn't)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1230
Add DoubleAdder
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1231
RScheduledExecutor doesn't restart tasks after crash
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm testing fault-tolerance of redisson node. I have 5 Runnable scheduled tasks. When instance crashes, sometimes redisson node resumes these tasks again. Sometimes - not.
I found that if it resumes tasks, Redis has next keys:
But when it doesn't, {@executorName.org.redisson.RemoteExecutorService}:scheduler  is absent.
Could you provide more information, how reliable task resuming in case of crash can be? If redisson node is shutdown correctly, can I rely that tasks would be resumed? Is it the same case in case of single Redisson node? (with one/multiple ExecutorServices in NodeConfig)
Is there some strategy to resume these tasks? Or at lease find out they are broken, remove stale data and re-create tasks?
Thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1232
Add new readMode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Can we add a new readMode? It will read memory first, if session data is not in tomcat session, then read from redis? This will help performance and also keep the session when one of the tomcat failed in clustering environment.
Something like:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1233
RLock reentrant behaviour over unlock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This might be a trivial case/question but according to java specs, a reentrant lock can be acquired  by the owner thread infinite number of times and simple can be unlocked completely with just one unlock call.
What I'm seeing is the opposite of it currently, in RLock implementation. It behaves like a semaphore rather than a reentrant lock. Every unlock call decreases reentrant counter on Redis and in order to unlock it completely, I have to call unlock until the counter hits to zero. Is this the expected behaviour?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1234
RMapCache'Eviction seems not to be in effect
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I used RMapCache in my project,and set the timeout time is 3 minutes，but I found that the size of the ZSET is increasing. and the key  still inside, and not be cleared a day after that。
Here's the way I store key "a" with value "1"，and 3 minutes to live：
Did i make any mistake？
How can I make the Eviction come into effect？
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1235
Add PriorityBlockingDeque
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1236
Problem deserializing google immutablelist?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Caused by: java.io.IOException: java.lang.InstantiationException: com.google.common.collect.RegularImmutableList
Do i need to register it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1237
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1238
Replace current hash implementation with HighwayHash
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
https://github.com/google/highwayhash
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1239
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1240
Add JTA implementation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1241
Add support for Spring Transaction API
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1242
Add atomicity property to RBatch object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1243
io.netty.resolver.dns.DnsNameResolver#doResolveCached race condition java.lang.IndexOutOfBoundsException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It's an known bug in io.netty 4.1.19.Final and fixed in 4.1.20.Final
netty/netty#7583
Sometimes my AWS Lambdas fail by creation of the redisson client.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1244
tickDuration 1 causes "tickDuration must be greater than 0"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
With minTimeout = 1, first if block is used, calculating 1 / 2 = 0, causing confusing error message.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1245
RLocalCachedMap.putAll gets stuck
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1246
[Question] Environmental Variables in Configuration Files?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm not seeing this in the documentation, is it possible to reference environmental variables in Redisson configuration files? We are looking at using the Tomcat session manager implementation and being able to do this would be very useful to us given that we are using Docker and the Redis clusters are named differently in different environments (and it isn't easy to use some kind of DNS trickery as we are using SSL).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1247
Add RBucket.getAndDelete method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1248
Add RAtomicLong.getAndDelete and RAtomicDouble.getAndDelete methods
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1250
RedisTimeoutException: Unable to send command: (ZADD) with params: ...... after 3 retry attempts
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1251
RSCRIPT LUA timeout and not consistent results
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RScript LUA timeout/Null Pointer exception
Description
When trying to execute EVAL LUA script using Redisson library,  We receive either null Pointer exception or timeout exception and results are not consistent.  If we execute one or two statements then it works fine but when we add a couple then it isn't giving consistent results. When ran eval Lua script directly  in REDIS client it doesn't timeout and gives consistent results. Please let us know what the issue is when using redisson library and how to fix it.
REDISSON ERROR same error even when I increased the timeout value
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1252
Redisson RBucket codec problem!  java  object is Serializable or not makes putting obj to redis failed! ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I use redisson 2.8.1, as default it use jackson JSON codec, but once I want to store a class ( which implements java.io.Serializable , it's - org.apache.shiro.session.mgt.SimpleSession ) in a RBucket, it failed to store the every object filed value in redis master slave (sentinel mode ) cluster. That means, I lose some value of the Object stored in redis.... it is dark..
Then I tried to use other codec:
Tested OK! a class ( which implements java.io.Serializable) object can be sotred correctly and get from redis using RBucket.  But, we have another problem here : a class ( which not implements java.io.Serializable) cannot be stored in redis now.... dark again...
Could I beg your suggestion? Thanks very much .
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1254
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1255
[Question] Use Rmap as a data member on a singleton or create a new instance for every call ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If our server handles lots of Rest calls that access distributed collections, is it safe to keep a single instance of Rmap as a data member on a Singleton bean (and have multiple threads use it concurrently) or is it better to create a new instance of Rmap for every call?
We're not using a local cache, so there's no data supposed to be kept in the Rmap instance, but does it have any concurrency limits we should be aware of?
Is there a significant overhead associated with creating a new instance of Rmap for every call?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1256
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1257
Reddison Spring Cache modifies exception semantics of annotated method ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Regarding spring javadoc the spring Cache interface demands implementations to throw a Cache.ValueRetrievalException.
"Wrapper exception to be thrown from get(Object, Callable) in case of the value loader callback failing with an exception."
The reddision cache implementations breaks this contract and throws a ValueRetrievalException that is wrapped within an IllegalStateException. This exception is not handled by Springs CacheAspectSupport and thus thrown back directly to the caller of the annotated method.
Looking at CacheAspectSupport, it would also expect a CacheOperationInvoker.ThrowableWrapper as cause of the ValueRetrievalException which is removed within the reddison cache implementation when constructing the ValueRetrievalException.
This behaviour breaks the transparency of the cache abstraction and beaks code that relies on exceptions for control flow (eg. javax.ws.rs.NotFoundException). Can you please take a look and this and tell me if that is intended behaviour?
Best Regards
Daniel Selinger
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1258
Redis Replication Configuration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi ,
I want to test redis replication scenario on my local machine.
I am using  docker and have below setting
` redis-master:
image: 'bitnami/redis:latest'
ports:
And passing address like "redis://127.0.0.1:6379,redis://127.0.0.1:6380"
From logs I can see master is ready but I am getting below exception
My all 3 servers are running ...  I tried increasing timeout as well. Can you please tell me what could be the issue or I miss anything..
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1259
Spring session annotation support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I'm following guide, but I get NPE
I tried to use @EnableRedissonHttpSession(maxInactiveIntervalInSeconds = 360) but still the same NPE. Is this annotation usable or the only option I have to use is xml ? Tried  3.5.7 version.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1260
Deserialization through JCache failing with ClassCastException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using Redisson as Redis client to store a key-value pair <String, LocalDateTime>. It's configured to be used through the JCache API (JSR-107).
It's storing values like 2018-01-23T11:59:34.997834 but in the cache#get invocation is trying to return a String giving a ClassCastException . It compiles perfectly, cache#get returning LocalDateTime, but if fails in execution.
Am I missing something here or is there some problem using it with the JCache API?
ava.base/java.lang.String cannot be cast to java.base/java.time.LocalDateTime
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1261
Update Spring Session to 2.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1262
Redisson expiration event - deserialization issue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I use Redisson (sentinel mode), and everything was working fine until I added an EntryExpiredListener.
After adding the listener I started getting the following errors
DefaultChannelPipeline] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
io.netty.handler.codec.DecoderException: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('b' (code 98)): Expected space separating root-level values
Any hints?
Client Factory
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1264
ZREVRANGEBYLEX not supported by redisson ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko Currently ZREVRANGEBYLEX is not supported by redisson which can pull details in reverse order of the stored values on a key LEX sorted set data structure. Please support this function as soon as possible as we would like to use it. Without that the retrieval of data in reverse order is very cumbersome and not an easy way out. Even LUA script based on discussion with REDIS labs, they say it fecthes data only from one shard and cannot go and look for data in other shards... We want to use this function zrevrangebylex in redis batch execute to retrieve data from multiple sorted set keys at once
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1265
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1266
Cannot call config.enableMetrics() to initialize Metrics
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I'm using Redisson 3.6.0 and want to use the following:
However, the org.redisson.config.Config class does not implement enableMetrics(). I can't find the implementation in Github source code.
How can one initialize the Metrics as described in the documentation ?
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1267
RLiveObjectService not support Enum
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
version : 3.6.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1268
org.redisson.RedissonTopic.removeAllListeners got blocked on CountDownLatch.await
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi there,
We hit an issue in one of our server using Redission as Redis Client. We do have a single thread executor handling subscribe/unsubscribe for multiple channels. But last week, we found this got blocked on one server.
The org.redisson.RedissonTopic.removeAllListeners is unable to respond request, and blocked in the acquireUninterruptibly FOREVER. I tried to dig into logs, there was one exception thrown before this in CommandAsyncService.syncSubscription line 125 "Subscribe timeout 9500ms". This is possibly related since this was the only "Subscribe timeout" message I saw in last 30 days logs and then this issue happened. But I still don't find prove on this. Looks like this is a rare case since we just hit once. I tried to reproduce locally but with no luck.
I think the removeAllListeners should give an option to let caller pass in a timeout. But this is also not going to resolve the root cause. I am wondering if other people have observed this issue before. Please advise if you have any ideas on this, thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1269
RedisClient.getBuckets do not have a asynchrounous api
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i want a  buckets.getAsync api
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1270
RDelayedQueue cannot be delayed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1271
RDelayedQueue cannot be delayed -- help me, thanks
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I got it!   Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1272
"You can't write against a read only slave" after failover with sentinel·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, I have a strange issue with redisson and sentinel fail-over
I have a SpringBoot application, I have multiple instance of this application, load balanced(HAproxy).
My http sessions is shared between these instances with Spring-session and Redisson.
I have a Redis cluster in "Master - Slave" configuration with 6 sentinel.
When I have a failure on my Redis master (I can reproduce with "redis-cli -p 6379 DEBUG sleep 30"), the sentinel fail-over is working well (in around 2 minutes) and the slave become a master.
This is the beginning of my problems :
First I can see many "org.redisson.client.RedisConnectionException"  during 10-15 minutes
I assume, it's probably due to connection switching.
But after during 1 hour, I still have lot of "org.redisson.client.RedisException"
Lot of user login in my application are failing and all the access to redis become slow become slow (jump from 2 ms to 100ms)
And I restarted my Spring Boot application and everything is back to normal
Do you have experienced similar issue ? or any hint ?
I'm using SpringBoot 1.5.8.RELEASE
Redisson 3.5.4
Spring Session 1.3.1.RELEASE
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1273
Slow gets from redisson in CommandServiceAsyncGet
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We are using redisson-client 3.6.0 with cluster mode enabled with elasticache, redis=3.2.6(encryption-at-rest enabled). These are the configurations for 2 separate clusters,
We see a degraded performance on all our apis and the bottle-neck seems to be from redisson. We are using spring caching and noticed that all the keys with a particular cacheName are being stored in a single shard instead of being distributed. How do we solve for actually distributing this across different shards?
We are contemplating switching to redisson.pro if it's going to help. But does the configuration look good and will redisson.pro help with the issues?
Please find attached screenshots that is showing the bottle-neck
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1274
NPE with redisson pro
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using redisson pro trial version(3.6.0) in cluster config with elasticache(redis=3.2.6), I see NPE in get and evict operations using spring cache framework. I don't see this issue with the community version(3.6.0) and same configuration
It basically just gives this error and hangs. I think the exception is being swallowed by DefaultPromise
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1275
Redisson client keeps running after shutdown invoked
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have the following code:
What is other than shutdown needed for graceful shutdown?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1276
Redissonspringlocalcache manager in distributed systems
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi I have read about the redissonspringlocalcache manager that it is keeping a local cache backed by redis. Please correct me if I am wrong. Please tell me how it works in distributed mode.
Eg. If we have 10 ec2 instances deployed connecting to same redis. Suppose there is a case which has been invalidated by one machine. How early can the other 9 machines would be knowing that their local cache is invalid and they need to call the redis to update it.
Do it use background polling to check if it is enabled.?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1277
RedissonSpringLocalCachedCacheManager not found
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to use RedissonSpringLocalCachedCacheManager  for spring cache.But I can not find RedissonSpringLocalCachedCacheManager and LocalCachedCacheConfig in redisson 3.6.0 version. Is something wrong？
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1278
Split RFieldAccessor into RGetter and RSetter annotations
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1279
Extract RId.generator to RIdGenerator
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1280
Sentinel failover with pub/sub failure ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Guys,
I'm facing na issue I'd like to share and get insights from you.
We run a sentinel cluster which is composed by (3 sentinels, 1 master and 2 slaves). The application can have dozens of instances and is connected to to this cluster via redisson 2.10.7 and redis 3.2.10
Eventually in an event of failover pub/sub messages seems to not be delivered to redisson clients (I say that because SentinelConnectionManager logs for failover are not present in system logs).
The only log after that is:
After that, redisson becomes irresponsive and seems to never recover and the only way to fix it is to restart the application node.
Redis cluster is confirmed to be working properly (as restart of application nodes alone fixes the issue)
According to redis client guideline pub/sub messages are not guaranteed to be delivery and should not replace the pooling mechanism to check the cluster status.  I need to dig a little bit into the redisson code but it seems to strongly rely on pub/sub only.
I'm trying to reproduce it locally and build a test case, but it is being tricky.
Have you ever experienced this problem before?
redisson config as follows:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1281
Add support of PING for Pub/Sub
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Add support of PING for pub/sub channels
redis/redis@70e3948
Discussion about this Redis feature: redis/redis#420
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1282
Redisson issuing undue commands with spring cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using redisson 3.5.2 with spring cache.
When I put the debug on the method,
@Override public ValueWrapper get(Object key) { Object value = map.get(key); if (value == null) { addCacheMiss(); }else{ addCacheHit(); } return toValueWrapper(value); }
I get the following requests when using Monitor on the redis server.
I am unable to understand why the eval and hset command is sent from redisson when I am getting a key.
This is creating an issue for us to scale our services since these eval and hset calls will only go to master. Even if, we increase our redis slaves we wont be able to scale our reads since each read results into two writes to redis master.
Other issues are:
The eval command is taking a lock on redis master.
The hset command is setting the same response in redis master which is being replicated by all the redis slaves. This is resulting in wastage of redis server resources since they are wasting them to replicate the exact same data.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1284
Redisson 2.9.1 Redis 2.8.17 in sentinel mode, redisson subscriber is not self-healing after restarting all redis boxes·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Set Up
Redisson version: 2.9.1
Redis Version: 2.8.17  Mode: Sentinel
Found this issue in our production, not sure if self-healing is supported by redisson during disaster like all redis servers are down, if it is supported, any specific version ?
We initialize the subscriber once as following during server startup
Redisson 2.2.27 is performing better than 2.9.1 in the sense of re-subscribe
Even all Client in 2.9.1 version, sharing the same config as above, some clients are able to re-subscribe
I went through the implementation of 2.9.1, found out that if following Scenario B, while doing MasterSlaveEntry. reattachPubSubListeners(), the unsubscribe and resubscribe process is trying in best-effort, which is prone to lose listener for a channel, leading clients unable to resubscribe. What is confusing is in Scenario A, some of the clients were able to reconnect somehow.
Is there any way for redisson to survive a redis disaster failure like this ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1286
Multimap tries to keep the List/Set on the same node, but ignores Key Hash Tags in the given Key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As I described in the title, I am trying to utilize Key Hash Tags to accumulate data on the same ClusterNode.
I am using a Multimap and noticed the Key for the Lists/Sets are wrapped in the Key Hash Tags and so they may be placed on another Node.
For example:
The MultiMap key is "{multi.map}.some.key".
An entry in it would be saved in the List/Set "{{multi.map}.some.key}:ADJ...".
So the Hash is not "multi.map" but rather "{multi.map".
For further information see the "Key Hash Tag" section on
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1287
Redisson Remote Service stops responding
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have an RMI running on Redission 3.5.7.  Each RMI is fire-and-forget with no ack or completion time
This particular RMI is invoked about once every 2 minutes.  After about 3 days, the server side of the RMI simply stops processing.  The client is still producing messages.  Other Redis features such as client caches seem to still be working correctly on the same APP that is supposed to be processing the RMI calls.
1-2 minutes after the last processed RMI call on the server side, we get the warning below.  This is the only error or warning that we are getting.  The rest of the java application works fine.  Once the the java application is restarted, all the remote calls are processed as expected.
We are running Redis on AWS with Redis 3.2.4 in cluster mode.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1288
Caused by: org.redisson.client.RedisException: ERR max number of clients reached.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I use Reentrant Lock in my application, this exception  ERR max number of clients reached occurs.
Redisson version is 2.10.7, and redis version is 3.2
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1289
Multiple JVMs tryLock attempt
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have a spring application running in 3 different servers/jvms. Those services receives an event notification with an eventID.
In order to avoid event processing duplication we are trying to use redis lock, to process only one event each time. We have multiple requests with same eventID coming from other services, so this is a very common scenario.
The lock is centralized in one Spring Bean
Each time an event comes we first verify if we can lock
We also the singleServer approach (commented above). But in both scenarios events are processed twice, eventually.
We don´t understand what its wrong. Can someone give us a clue?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1290
RedissonLocalCachedMap does not broadcast LocalCachedMapClear on clear()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
clear() method is implemented properly on RedissonMap; but it is not overridden on RedissonLocalCachedMap. RedissonLocalCachedMap should override the parent implementation by clearing the local cache, clearing the Redis map, and broadcasting a LocalCachedMapClear event on the invalidationTopic.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1291
RExecutorService - Task resume on another worker doesn't happen, when worker(redisson node) goes down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Problem:
We are evaluating Redisson as a distributed task queue manager and as a result the expected behaviour for failure scenario is:
-- If a worker starts working on a task and if worker goes down before completing the task then task should be resumed on another worker.
As per our observation this doesn't happen.
For SIGINT and SIGQUIT signal - Most of the times it finished the running tasks. (We found couple of instances where it didn't happen)
For SIGKILL (when worker is killed using kill -9), executing tasks are lost.
Can you please help us understanding that is the above mentioned 'expected behaviour' correct? Does redisson provide this guarantee? If yes are we missing some configuration? If no, please indicate what is the best practice for using Redisson in this case?
Here is the code of the the Task:
Here is the main code which is invoking it:
Commands with which I start two Redisson Nodes are:
Please let me know if any more details are needed.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1292
RedissonRedLock.tryLock(long waitTime, long leaseTime, TimeUnit unit) still have something wrong
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
reference from the issue #1175 after it is closed.
I change the test case in RedissonRedLockTest.testLockSuccess() like this:
The test case above will fail in case of that lock1/lock2 is locked first in thread t1. However, it will pass in case of lock3 is locked first in thread t1.
The  is as follows:
No matter which lock is locked first in thread t1, the Red Lock will always can be locked or cannot.
In this case, the Red Lock should always be locked for most of the lock is available.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1293
JsonJacksonCodec cannot deserialize EnumMap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I opened a ticket on the jackson databind project but I think this issue could use some visibility here.
FasterXML/jackson-databind#1932
The code below can replicate the exception I am seeing. I ran into this when calling operations on  a RScoredSortedSet, but the code below is stripped to just the Codec.
I believe this is a bug but I apologize if I am misusing the library.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1294
RBatch throws NPE with big pipeline in atomic mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1295
Warning about CommandDecoder.decode() method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1296
CertificateException while connecting to Azure redis cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have got CertificateException when Redisson try to connect.
Caused by: java.security.cert.CertificateException: No subject alternative names matching IP address 12.34.567.89 found
When i disabled the setSslEnableEndpointIdentification the connection was successfully established.
The scenario is when I'm using useClusterServers config
the Redisson client sends cluster nodes command to Azure Redis,
the server responses with a list of IP and port of cluster nodes, then Redisson client try to connect to newly discovered masters, but now the target is IP and Azure doesn't sign the certificate.
Important note:
all the discovered IPs are the same IP resolved by endpoint URL (which provided by Azure).
I saw that other redis clients separate the endpointIdentification for the base connection and cluster node connection.
If we are able to do node cluster endpointIdentification with the base connection verification it will solve the issue.
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1297
Add RLocalCachedMap.clearLocalCache method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It clears all local cache across all RLocalCachedMap instances.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1298
RBatch doesn't sorted sorted sets
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Any reason RBatch does have a getSortedSet() method?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1299
Support for dnsMonitoring in Sentinel Setup · Issue #1299
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After the fix of #1280 which improved greatly the resilience of Sentinel setup, it would be great to have dnsMonitoring  feature as well because in failover scenarios of sentinels instances, the box can get a different IP and the current implementation caches the dns resolution forever.  It means it never reconnects to new sentinels in the cluster.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1301
Error while creating bean of RScheduledExecutorService
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to create a singleton bean of RScheduledExecutorService in Spring 4. I have not yet autowired this bean anywhere. I am always ending up with error. I am working with Redisson 2.11.
Unable to find any kind of solution or any instances of problem with anyone else here. Is this a bug ?
Since it is a JsonMappingException I also tried using different codes but nothing helped.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1302
Performance issues with updateMode=AFTER_REQUEST
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are trying to use updateMode=AFTER_REQUEST to make sure all the session data will be saved into Redis server. After reviewing the source code, looks it may cause performance issues since we keep a lot of data in the session, and store function will be called on every request no matter there is session changes or not.
Is it possible put save session data to Redis after tomcat request code to a separate thread?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1304
RedisClient does not override 'hashcode and equals' may cause  redis connections are not closed properly.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I found that in master-slave mode, the redis connections on slave servers may not get closed properly.
Caused by: org.redisson.client.RedisException: ERR max number of clients reached
After reading the source code, I found that the reason is that RedisClient does not override hashcode and equals.
Consider the following situation：
One hostname slave-hostname maps to two ip-addresses: ip1, ip2
Firstly, slave-hostname  maps to ip1, client2Entry will cache new RedisClient and ClientConnectionsEntry instances: RedisClient-ip1 and ClientConnectionsEntry-ip1
DNS  changes from ip1 to ip2, all the connections of ClientConnectionsEntry-ip1 were closed properly.
DNS  changes from ip2 to ip1, client2Entry will cache another RedisClient and ClientConnectionsEntry instances: RedisClient-ip1-1 and ClientConnectionsEntry-ip1-1. RedisClient-ip1-1 was different from RedisClient-ip1 as they were not the same instance.
DNS  changes from ip1 to ip2 again,
All the connections of ClientConnectionsEntry-ip1-1 should get closed properly.  When san client2Entry values, it is possible to find ClientConnectionsEntry-ip1 or ClientConnectionsEntry-ip1-1
The connections of ClientConnectionsEntry-ip1-1 may not get closed properly.
Our master-slave model
two slave servers, with one slave hostname, DNS changes every twenty seconds.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1305
RBloomFilter.expire only deletes Bloom Filter string, not hash
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Problem
If I initialize a bloom filter like this
The String test is the only thing that gets deleted from Redis after expiration time. The config hash {test}:config remains even after expiration.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1306
Add Kryo 4.x support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1307
[Error] while connecting to remote cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I transfer redis cluster server from local host to virtual host recently, then some interesting things happened.
The cluster worked fine itself, but as soon as I used redisson as client, it went wrong.
They can registry by using remote address.However,they cant recognize each other with remote external address, but with local internal address. I dont know how to deal with it, can anyone help me, thanks a lot.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1309
should not clear channel and listeners when unsubscribe failure
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is very likely a bug.
in
Set up:
in step3: slaveDown happens when maximum attempts reached, but it was unable to send "Unsubscribe"
but in, when "UNSUBSCRIBE" failure happens, it removes the channel and remove all the listeners.
my thoughts is when "UNSUBSCRIBE" failure, we should readd the channel, and not executing onMessage()
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1310
Wrong classloader used by TasksRunnerService?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Today I had a lot of work to bind embedded Redisson Node with Spring Boot. Here are the final thoughts and conclusions. In short I believe creating own codec in TasksRunnerService using TasksRunnerService class loader is a bug. Please review the article for more details.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1311
Tomcat Session Manager issue to renew session in Load Balance environment
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
I'm using Redisson 3.6.0 with redisson-tomcat 3.5.6 with:
Elasticache Redis Cluster
Spring App deployed on two instances EC2 Tomcat (instance 1 and instance 2)
Load Balance with non-sticky session
My session timeout is configured to 30min.
The steps to reproduce the issue:
a. User logged in on instance 1 (a new session is created with timeout of 30 min);
b. After 15 min, an ajax request was made by the application which was managed by 'instance 2' refreshing the session to more 30min;
c. After more 20min the user reload the page, and the load  balance send some requests to 'instance1' and to 'instance 2', but the instance 1 has been idle  for 35minutes and because of that, delete the session that was renewed 20 min ago!
This issue is only reproducible using at least two instances behind a load balance with non-sticky session because the action to delete the session ignores if the session was renewed by other instances.
Is there anything I can do to prevent this behavior?
I think this is related with #972
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1312
is it possible to add a duplicate check when RedisPubsubConnection addListener ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Sorry to open so many issues for the same problem, feel free to close it if you think this is not appropriate.
We are trying to have the best availability of our service when redis servers in Sentinel mode run into disaster situations (like all redis-server, redis-sentinel are down)
Currently, what we are trying is when Redisson client last received ping is too old, it will try to re-subscribe to the same channel. However, this introduced new problems, when the QPS is high, we added multiple listeners for the same client to the same channel, which is not optimal.
In following two places, there is no duplicate check (if the listener already in the PubsubConnection, don't add the listener)
Is it possible to add a duplicate check that only when the listener is not there, we add the listener to the connection ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1313
Redisson 3.61 not working with spring-session 1.3.1.RELEASE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I try to upgrade redisson from 3.5.7 to 3.6.1 but I get this exception :
I'm using theses dependencies :
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1314
JsonJacksonCodec constructor in 3.6.1 breaks with Jackson 2.9.x
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using Jackson 2.9.2 and 2.9.4 (tried both), trying to upgrade from Redisson 3.3.2 to 3.6.1 I get this:
Redisson 3.5.7 does not have this issue.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1315
"Unable to init enough connections" when ConnectionMinimumIdleSize is high
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We're having trouble spinning up redisson (3.6.1) when the minimum number of connections is high.
Steps to reproduce:
Run a local redis server. We used the official docker image:
Try to create a redisson client with a high number of idle connections, short retry interval and some client name:
More often than not, we're getting the following exception after a few seconds, with a varying number if successful connections:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1316
The cache in redis can not be clear automatic when Redisson resatrt
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I hava set the ttl and idleTime for cache, the cache can be remove when the app is running, however when I restart app the EvictionScheduler may not work for cache, the cache can not be clear when ttl approach. Does it problem have any solution?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1317
Many exceptions and errors after sentinel failover with redisson 3.6.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello, I'm re-opening the issue #1272 for me it's not fixed in 3.6.1, I get lot of errors long time after a fail-over.
My setup :
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1318
Redisson 3.6.0 memory leak with cluter batch
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
018-02-28 19:56:31,534:io.netty.util.ResourceLeakDetector.reportTracedLeak(ResourceLeakDetector.java:311).LEAK: ByteBuf.release() was not called before it's garbage-collected. See for more information.
Recent access records: .
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1319
RBloomFilter functionality with RBatch commands
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This issue is to implement RBloomFilter with the RBatch batch commands. I do not see a getBloomFilter() option with the batch commands, it would be incredibly helpful to have.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1320
Configurable Tomcat Session Key Prefix for Redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonSessionManager uses "redisson_tomcat_session:"  as key prefix, so if multiple tomcat instances are using same "redis" server for storing session data. So need a mechanism to configure default key prefix.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1322
calling getMap() million times creates millions of map instances
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
While reading the Redisson tutorial and examples, I am under the impression that I need to always call redisson.getMap() in order to get the latest data from the cache . Right ?
I have a storm bolt which calls getmap(key) for millions of incoming records
Looks like millions of instances of RedisonMap being created , leading to pressure on GC
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1323
Upgrade Spring Boot to 2.0.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1324
 Skipped slave up  for master redis://?:0 differs from current redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After upgrading from 3.5.7 to 3.6.1 I can see a lot of warnings every 3 seconds:
I use SentinelServersConfig.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1326
Redisson 3.5.7 memory leak with locks
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using RLock and seeing memory leak via org.redisson.client.handler.CommandPubSubDecoder
Retained objects delta between heap dumps taken apart
Around 10MB leak per day
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1327
Jcache - getAndRemove method is throwing an NPE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We configured a Redisson cached based on Jcr-107. Most operations are working fine but the getAndRemove implementation is throwing a null pointer exception. When removing the key with cache.remove("key"); instead, it works fine. We could do it in two operations but it will lose the free Atomicity.
Unfortunately, I'm not fluent in the LUA scripting used in order to propose a solution at the moment
Code that show the issue:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1328
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1329
Wiki is broken
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Keeps redirecting me to this page.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1330
Old/stale nodes not removed from NodesGroup
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When trying to implement a healthcheck for a Redis Cluster I'm using code similar to the below to get the list of nodes and ping them to see if they're up.
If I redeploy a node and it gets a new IP, the new node is returned by redisson.getNodesGroup(); but the old one remains and we get an error:
If I failover a slave node then the slave node will be returned by redisson.getNodesGroup(); as a master (which is correct) but the original master will appear twice as both a master and a slave. If I then failover back to the original master, that node will be returned as a master twice and still as a slave.
When digging into the code it looks like this list/map lives in MasterSlaveConnectionManager as clientEntries which only gets cleared or removed from during a shutdown.
What I'd expect is for old or stale nodes to be cleared up from this list/map.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1331
[2.11.1] Unable to re-establish MasterConnectionPool after restarting redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are Trying to add a mechanism to re-subscribe to topics after restarting redis.
Setting UP:
Steps to recreate:
See Following Error, Redis MasterConnectionPool is not re-established.
We were initially at Redisson version 2.9.1, but when we following the previous steps, in step 5, we encountered the same issue as in #1268, which is removeListener thread blocks forever, so make the switch to 2.11.1
We also simulate the scenario with 2.9.1 version,  without doing removeListener (we found out there is pubsub Listener leak issue with 2.9.1, that is why we remove the old listener first), the MasterConnectionPool was able to re-establish.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1332
Slow down when Redis master switching (sentinel)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We have detect an issue on our redis (sentinel) cluster when there is a redis master switching .
During a performance test, we use PriorityQueue (~ 10 calls / seconds). All transaction are closed on 20-50 milli-seconds.
When master switching, on JConsole we have seen Redisson place some locks on redis databases, and all application are slow down... All transaction are closed on 3-10 seconds !
On our Redis cluster we have, 1 master, 5 slaves.
This is our using components versions :
Also, we have test, redisson 2.11.1, we have the same issue.
We have issue with this config :
And we have apply a fix (work around), it's better running, but it's a huge configuration (on system : lot of connection and open file issue)
Can you help us please ?
Thanks you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1333
RedLock Java ambiguous implementation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
we should implement a distributed lock system for our clustered Spring Boot application.
We have a Redis "cluster" (no cluster mode enabled) with Sentinel.
Now, reading the documentation it seems that RedissonRedLock should be used as locks wrapper class to use lock/unlock api.
It seems that RedissonRedLock should be used with different RedissonInstance e multiple RLock's.
But what kind of lock should we use to implement single distributed lock with single redisson instance per-node?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1334
Unable to connect AWS elastic Cahce over SSL in Cluster mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using lib version: 3.6.2
When trying to connect AWS Elastic cache(i.e rediss://clustercfg.xxx-test-sample.ttt.usw2.cache.amazonaws.com:6379) over ssl in cluster mode getting below exception:
Not sure whats going wrong here, as per documents AWS manages the SSL certs so ideally this exception shouldn't have arrises.
I see this was closed as part of the issue #1135 . How ever single server mode with SSL is working fine. Could you please help me on this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1335
Deserializing Nested RMap throws NotSerializableException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using org.redisson.codec.SerializationCodec and   redisson 3.6.0
I have a child Rmap inside a parent Rmap.
Facing an Exception while fetching the stored Rmap
Is Rmap serializable ?
How can I use a codec for fetching (get) and storing (put) Rmap from inside a parent Rmap ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1337
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1338
RListMultimapCache removeAll method throw java.lang.ClassCastException: java.util.LinkedHashSet cannot be cast to java.util.List
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1339
ERR Error running script (call to f_8770695dc269722cd5368a1e08ca936b4ccbb0b7): @user_script:1: user_script:1: bad argument #2 to 'unpack'
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Getting error when calling readAllKeySet() operation.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1340
Redisson Spring Elasticache Iteamcount issue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Apologize, if it's not the right forum to post my concern, kindly let me know so i will remove my post or you could redirect me right direction.
we have one doubt regarding how redisson internally storing data on redis cluster (here we are using AWS elastiCache), because the actual number of items is not the same as we have stored using our cache application.
as per logging it's showing proper Set and Get (the data from/to cache server) but the problem is with the actual item count (number of keys) on AWS, it's too lower tan expected,(e.g   even if we are storing 3K data the count is still showing ~20-30).
we are using spring @cachable annotation on top of redisson to achive the caching , also for cluster redis environment we are using AWS elastiCache . here are more details,
Spring redisson config:
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1341
Get type of a key in Redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is it possible to execute the "Type" command and determine which datastructure should be used?
If not could this be Implemented?
Ref: https://redis.io/commands/type
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1342
RSortedSet tries to compare wrong types
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a sorted set of longs and try to check if a value is contained.
I use the LongCodec and get the following error:
I debugged it and also saw that a RedissonList is created in the constructor, but the Codec is not supplied to it. May has something to do with it...
The Values in the list are typed as Integer, which they shouldn't be
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1343
Redisson Pub/Sub Successful, But RTopic publish method return 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi @mrniko
redisson use sentinel configure for pub/sub successful，but RTopic publish method return 0；current use version:2.7.0，I have try use last stable version for 2.11.3，this problem still reappearing.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1345
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1346
Security Issue - Redis Password visible with TRACE log level
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I have seen my redis password in the TRACE log.
In general this is one of security requirements for a development: do not print any passwords in the logs.
See OWASP Error Handling and Logging Best Practice 119
I suggest to obfuscate the logged body of the redis command "AUTH" in the class CommandEncoder
Thanks,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1347
Question: Send batched messages - Get batched messages
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey!
When I send a batch with multiple .publish(msg)  commands to redis,
does redis send these messages as a "batch/pipeline" back to the subscribers
in ONE network connection so that redisson handles them all at once?
Regards, RoboFlax
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1349
redisson jcache.getAll(Set<T>) causes io.netty.util.IllegalReferenceCountException: refCnt: 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1350
NPE in CommandDecoder handler while using RBatch object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1351
Can't execute SENTINEL commands on /
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson throw follow exception, while start app everytime.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1352
Bug Pub/Sub: Skip result + Execute batch - RedisException: ERR Syntax error, try...
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I found out that when using skipResult() + execute() in combination it throws a RedisException.
Exception:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1353
Fair lock vs regular lock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Right now we are using regular lock in our system. I found out in the documentation there is also fair lock option.
I am trying to find in the documentation any explanation about performance of fair lock vs regular lock.
Is there any performance penalty? I mean is there a reason not so use fair lock always by default?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1354
how to create a custome id generator in hibernate
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1355
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1356
two thread get  the same   RedissonMultiLock?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is my code has any problem?
there are two different  thread get the same  multilock.
thanks!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1357
method putAll throws map value can't be null
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1358
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1359
IllegalStateException: availableProcessors is already set to [8], rejecting [8]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
i'm using embedded elasticsearch in my application with EHCache and it all works fine. Now I want to configure redisson and I get this exception during startup:
Looks like redisson has already initialized a netty runtime and elasticsearch is trying to do the same so it blows with this error.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1360
Cannot construct instance of `org.javamoney.moneta.internal.JDKCurrencyAdapter`.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I have my app working perfectly fine with EHCache. Now I want to migrate my app to use redisson, however I get the following exception:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1361
Redisson-tomcat in a multi-tenant environment Logs: ERROR io.netty.util.HashedWheelTimer - You are creating too many HashedWheelTimer instances.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
We are using the redisson-tomcat-8 in a Webserver containing more than a 100 apps. In the tomcat start up we get the following errors in some apps:
ERROR io.netty.util.HashedWheelTimer - You are creating too many HashedWheelTimer instances. HashedWheelTimer is a shared resource that must be reused across the JVM,so that only a few
How can we reuse the HashedWheelTimer in order to avoid this error (Many customers have lost their session while browsing, but we are not sure if that is the cause of the problem).
We are using Redisson 3.6.2 with redisson-tomcat-8.
This is the tomcat context.xml:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1362
DecoderException after upgrade to latest version 3.6.3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are trying to upgrade our redisson client to latest version by using "After_request" property. However, there is an DecoderException was thrown during tomcat failover testing.
Do you have any recent codec code change may link to this error? Currently we are using "SerializationCodec".
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1363
Is this a bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1364
Consecutive "Subscribe timeout" for topics utilizing same AsyncSemaphore lock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi there,
Thanks for the quick fix on the ticket #1268 . We tested it and the block on RedissonTopic.removeAllListeners no longer happened.
However, we started see another issue: After a fairly long time running with the new code, subscriptions( by calling RedissonTopic.addListener) to the topics which are assigned to the same AsyncSemaphore lock from the method MasterSlaveConnectionManager.getSemaphore() are all encountering the same timeout error like "Subscribe timeout 9500ms". It's very consistent. But for other subscription calls to other topics which assigned to different AsyncSemaphore locks, everything works fine.
It's possibly related to #1268. Please help advice how to tune and debug this problem.
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1365
put  RMap or RLocalCachedMap ,return null, is not sync!!!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1366
Redisson connected to sentinels works fine - But throws the following error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[ERROR] MSG - o.r.c.SentinelConnectionManager Can't update cluster state
Hi,
I've RedissonClient connected to Redis Sentinels(Redis 4). Redis commands work fine, but throws the above error. Couldn't figure out the cause of the issue
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1367
Java 10 support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Java 10 looks currently not supported because highMask and lowMask private methods are removed from URI class what is referenced here.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1368
RedisTimeoutException when I register remoteservice
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I run redisson by spring,and it works well,But when I register remote service,it does not work.Redis connection is ok.I do not know why.
redisson version is 2.11.1
I find that it will happened when worksAmout is a big number or you register a large amount of services
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1369
RedissonScoredSet - contains/remove method - equals and hashcode?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
But classes with different values (and same id) are not considered to be equal, when I use methods "contains" or "remove" in RScoredSet.
Is it the desired behavior?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1370
ERROR [io.netty.util.ResourceLeakDetector] - LEAK:
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I run redisson,there are some error logs:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1371
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1372
Add Transaction API
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Implement Transaction API for Bucket, Set, SetCache, Map, MapCache, LocalCachedMap objects with commit/rollback methods and READ_COMMITTED isolation level.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1373
Spring Data integration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1374
Spring Boot Starter implementation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1375
RSet returned by RSetMultimap.get() does not update multimap correctly.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RSets returned by get() cannot be used to populate RSetMultimap. Multimap key and size information is not managed properly despite get() returning populated sets. See this example:
Here, multimap1 keyset and keysize are not initialized. Javadoc for the get() method claims:
"Changes to the returned collection will update the underlying multimap, and vice versa."
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1376
What is difference between Rmap and RLocalCachedMap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a DB with 100k hashmap. And I run some 10k, 100k loop test to compare time between getting by RMap and getting by RmapCached
I saw no differences in benchmark time. Am i make a wrong config or something
When I use RMapLocalCached, why redisson keep getting result from my Redis DB, I think it should get result from some local variable instead of connecting to Redis DB and get result ?
I use LocalCachedMapOptions.defaults().cacheSize(0).timeToLive(100000) .evictionPolicy(LocalCachedMapOptions.EvictionPolicy.NONE) .syncStrategy(LocalCachedMapOptions.SyncStrategy.NONE) .reconnectionStrategy(LocalCachedMapOptions.ReconnectionStrategy.NONE),
But when i change a value in Redis DB by redis-cli, redisson immediately get a changed value. ?
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1377
Unhandled DecoderExceptions deplete Netty pool
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Our web application is writing an object using Redisson 3.6.4 (Jackson codec) which Jackson cannot deserialise for whatever reason. On attempting to read the object, Redisson fails on the first few attempts and throws a DecoderException as expected. However, the following message is seen from Netty:
Apr 06, 2018 11:54:28 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException
After a few attempts (depending on size of Redisson connection pool), all connections are depleted. At this point Redisson is unable to execute any more commands regardless of validity.
I have created a barebones test case to demonstrate the problem:
You can checkout and run with ./gradle run (assuming Redis is running locally). See how the first few read attempts fail immediately, but the thrown execption changes from RedisException to RedisTimeoutException and the RedissonClient cannot execute any more commands.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1378
[CRITICAL] Redisson cluster sync failed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In cluster mode when master goes down and slave becomes a master, Redisson picks up new master but failes to sync slaves. Cluster nodes synchronisation crashes (never scheduled again) with IllegalArgumentException while processing slave nodes.
Redis cluster setup:
Relevant stacktrace:
Code path which fails with IllegalArgumentException (please note it's 3.0.0 branch):
scheduleClusterChangeCheck(cfg, null); is never executed thus Redisson stops sync cluster state. Any subsequent cluster change leads to a service outage.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1379
Why no RMapCacheAsync::fastReplace?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to optimize my Redisson throughput, and to do so, am using the MapCache fast methods, where no result is returned for a put or remove, but there is no fastReplace.  Why so?
I created my own one by subclassing RedissonMapCache and adding a method there, and that works fine.  However, now I want to use pipelining, but it will not work with the Batch classes without further modification.
I do see that there is a replaceOperationAsync, which returns a Boolean, so keeps the response message to a minimum, but that is offset by essentially doubling the size of the request by including the value to be replaced, so that is less than ideal for my purposes.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1380
RList value in a RLocalCachedMap returns RedissonReference
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have the following RLocalCachedMap defined:
By the way, I'm using Spring and the Map is loaded as a Bean.
Am I doing something wrong or is it a framework issue?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1381
about getList implement
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I use a redissonClient  instantce invoke getList method. when I debug into the method,I find it's just return a construct of RList with some parameters(key,executor..).Then the Rlist fullfill with data in redis server! I wanna know how it execute....I look up the source code all the afternoon ，so disappointment.I Find no answer.
Please who can tell me how it work linked with the real execute method，thanks a lot ，U angle ღゝ◡╹)ノ♡
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1382
Redis server response timeout (3000 ms)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1383
org.redisson.client.RedisException: ERR unknown command ' EVAL '
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I used master slave model on tencent cloud server.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1384
RMI starts to lose ability to send commands
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using Redisson 3.6.4 and publishing several hundred RMIs at a time.  After a few minutes, we start seeing these errors, and they start to build up over time, until no RMIs are being processed at all.
We are on a clustered AWS Redis server
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1385
RedissonSortedSet does not implement ZRANGE commands
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonSortedSet does throw an UnsupportedOperationException on a call to the headSet, tailSet and subSet methods.
They could return the response of the ZRANGE or the ZRANGEBY redis commands.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1386
throw exception when use redissonClient.getPermitExpirableSemaphore function
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1387
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1388
Frequent timeout with RedisLabs multi-proxy setup
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In the latest Redislabs cluster, the user can enable multiple proxies, and the DNS query of the cluster would return different IP addresses for load balancing.
From Redisson side, we observe Redisson would have very frequent timeout with DNS monitoring enabled. Seems like for each DNS lookup, if IP address changes, Redisson would try to reconnect with this new IP and lead to unstable system.
Is it possible for Redisson to check the cluster health before trying to connect to the new IP address?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1389
About select db
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
why Config.setDatabase can not use? how to select db in sentinel mode
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1390
Implement Spring Transaction API
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1391
Redisson: Why reactive client doesn't have PermitExpirableSemaphore?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Note: Asked same question here in StackOverflow, but there was no response.
I am using redisson reactive Java client. In non reactive client one could get expirable Semaphore as:-
RPermitExpirableSemaphore semaphore = redisson.getPermitExpirableSemaphore("mySemaphore");
But If I create a reactive client, I can only find redisson.getSemaphore("value") function. I need PermitExpirableSemaphore because:-
I need a lock, that could be released by different thread(so can't use RLock).
I need a lease timeout to prevent deadlock in case the lock aquiring thread is killed or stuck.
Is there any way to achieve this behavior in Redisson?
I can set lease time global in Config as:- Config().setLockWatchdogTimeout(leaseTimeMs), but I really need different leasetime at different locks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1392
Introduce BatchOptions object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently Batch settings exposed as RBatch method which is not convenient and contradicts common API design.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1393
RMI Garbage Collection in Redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Each of the RMIs seems to be put in a namespace under {redisson_rs}  How are RMIs being garbage collected or do we need to run another process to do our own garbage collection for RMIs?
We are using 3.6.5 on a Redis cluster at Amazon.
What we appear to be seeing is that the RMI jobs are never purged from the DB.  Most of our RMIs are set and forget.
Our code generally looks something like this:
The server code
The client code
What we are seeing
The specific key/value pairs for the RMI seem to grow unbounded, until Redis runs out of memory to process more jobs.  We have been looking for someway to delete the job once it has been completed, but are not sure how to do this.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1394
'reconnectionTimeout' setting in unavailable. Please use 'failedSlaveReconnectionInterval' setting instead!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
use Version 3.6.5
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1395
PermitExpirableSemaphore to be able to make expirable permit to a normal permit
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Once a permit is acquired as an expirable permit, there should be a way to remove the expiry and make it to a normal permit.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1396
java.lang.NoSuchMethodError java/lang/CharSequence
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Im using Redisson 3.6.5 and Java JDK 8
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1397
Can't update cluster state
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am getting below error message when one for the node goes down from the cluster (3 node master/slave cluster).  version of redisson (2.7.4).
Above message is keeps on coming. And on subsequent call to redisson leads to below exception.
Thanks
Vikram
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1398
ClassCastException with StringCodec while testing non sticky session on Tomcat
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am getting this error on Tomcat 7 and JDK7:
Can anyone point out what was the issue?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1399
setDatabase is no use
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
but no use
when getKeys ,it return all keys ,but not the key of one db
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1400
java.lang.IllegalStateException: Redisson is not in cluster mode!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to connection AWS elasticache with redisson, but get this error
And here is my code used to create redisson client:
I am using 3.6.5 redisson library
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1401
NullPointerException for RLiveObjectService.delete?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
if there is not a model class exist for "key", it will throw a NullPointerException?
here may return null.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1402
Request org.redisson.client.RedisTimeoutException during high load
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I'm using redisson v3.6.5 with Redis 4. I have 3 masters and 3 slaves nodes for 5 tomcat clusters. However during high load, my team experienced a lot of org.redisson.client.RedisTimeoutException exceptions such as below:
Could you please point me to the direction, as I'm lost with these issues here?
Thank you.
Kevin
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1403
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1404
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1405
Add async methods to RLiveObjectService interface
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1406
getKeysByPattern is returning less number of keys in version 3.6.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
We were using redisson version 3.5.2 and getKeysByPattern was returning all the keys matched for a particular pattern. When we upgraded to 3.6.1, the method seems to be broken and returning less number of keys than the keys actual present in redis.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1407
Publish a request id in a redis event
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is a feature request.
It's not always easy to associate a redis event with a specific request, e.g., when you don't know whether a put would result in a CREATED or UPDATED event.  It would be nice in a request to optionally provide a request id, which would then included in the published redis event to help with this problem.
thanks, Mitchell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1408
ConcurrentModificationException - Pub/Sub using SerializationCodec, redisson 3.6.5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have noticed occasional ConcurrentModificationException while using RedissonTopic.publishAsync. We are using it in multi threaded context, but I think this method is supposed to be thread-safe, right?
Stack trace:
We have noticed this error after upgrading from redisson 3.6.1 to 3.6.5.
This is using Redis server in sentinel mode with one master and one slave. Redis info:
This issue occurs rarely, under moderate load 50 - 100 messages/s.
Could you please check what might be the cause of this, and is there any work-around available.
Thank you!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1409
Netty 4.1.23 regression
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We notice that netty version used in the latest redisson version is not stable.
take a look at
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1410
Why RBitSet.set(...) does not return anything?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
https://redis.io/commands/setbit states that:
Return value
Integer reply: the original bit value stored at offset.
But RBitSet.set(...) methods are of type void despite their async counterparts having return type of RFuture<Boolean>.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1412
TimeoutException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How to solve this problem?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1413
Exception in thread "main" org.redisson.client.RedisException: ERR unknown command eval. channel
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
if you have this error ,check your redis server  version,  and confirm   eval command  open
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1414
Tomcat Session replication inconsistences
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I have a tomcat cluster with 2 servers, both having the Redisson Session manager for non-sticky session replication. Whenever a request is served for the first time by a server, a new session is created with session attributes. Next time if the second server receives a request with same session id, it should create a session in memory and fetch the attributes from Redis. Sometimes it does fetch all the attributes and sometimes it does not. This random behaviour is really getting annoying.
I've tried to use REDIS as the read mode instead of MEMORY. But the application gave me some problems(IllegalMonitorStateException). That's why I was not able to test it.
After looking at the code, I've seen one problem. If we are using the MEMORY read mode and all instances have the same session with all the attributes; whenever an instance updates an attribute it will be persisted on Redis but the other instances won't check this update if they already have a value stored in memory for that session. This is obviously discouraging.
I am wrong about my findings? And how can I solve my problem?
Thanks in advance.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1415
setPingConnectionInterval for replicated servers configuration is not propagated to underlying MasterSlaveServersConfig
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey,
When I set setPingConnectionInterval in the replicated servers configuration it's not propagated to underlying master slave configuration:
My current understand that ReplicatedServersConfig is used to create MasterSlaveServersConfiguration In the MasterSlaveConnectionManager in.
In this method setPingConnectionInterval is not copied and default value is used in MasterSlaveServersConfiguration.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1416
RedissonBoundedQueue expiration seems odd
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Could someone help me to understand how expiration works with queue.
I found several expire method seems like they working fine, but after expiration it needs to initiate queue with trySetCapacity because it is not possible to add element there.
Also i found that expire works not per element, it sets for whole queue which i also don't understand, so there could be some strange things if i will set expire for 10 seconds and after will try to set for 20 seconds,  every element will be expired after 20 seconds.
I don't say that is a bug i just want to get proper information about expiration in queues.
Thanks for every answers.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1417
HOW TO GET REDIS TIME  IN REDISSION?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How to get redis server time in redission?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1418
throw exception when use RPermitExpirableSemaphore.tryAcquire
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
use Version 3.6.5
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1419
AWS ElastiCache ClusterServersConfig DNS rediscovery failure
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are connecting to AWS ElastiCache - Redis cluster using a Route53 DNS endpoint with Redisson v3.6.5
When we change the cluster in the Route53 corresponding lookup change is not happening in Redisson. It is still looking up the old cluster nodes.
Netty libraries used are as follows
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1420
Can Redisson KryoCodec default support 0-arg constructor object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As the immutable object is wildly used nowadays can redisson's KryoCodec supports it by default
when get the kryo instance from the pool using following code Objenesis helps do the trick
related issue
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1421
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1422
SSL connection to Azure redis failed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I caught Certificate Exception same as #1296,
The issue is that "allAddrs" size equals to 1.
Can you explain the condition?
the cluster contains 6 nodes (3 masters,  3 slaves),
all of them have static IP address and a unique port.
for example:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1424
sentinel switch-master no work
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,I have a Redis setup with 2 nodes (master, slave) and 1 sentinels .
redis version is windows 3.2.100 .
redisson version is 3.6.5.
When master is failover，redisson can not failover to new master automatic.
my code:
Is that my code's error or redission's bug?
I find out the reason.
In SentinelConnectionManager's Constructor, loop all sentinelAddress using SENTINELS command to find all sentinels. If there is only one sentinel, List<Map<String, String>> sentinelSentinels = connection.sync(StringCodec.INSTANCE, RedisCommands.SENTINEL_SENTINELS, cfg.getMasterName()); ,the code result will be empty.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1425
Feature request - I would like the ability to specify redis channel name
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently, when subscribing an application to redis events, via adding a listener, there's no easy way to specify a channel name.  The problem with this is that in a clustered environment, where each member of the cluster is responsible for updating the same redis keys, e.g., session keys, then all members of the cluster will receive all notifications for all the updates, even if they are only interested in the updates that they made.
One way to get around this is to specify a unique channel name for each member of the cluster, resulting in only being notified of the updates that it is responsible for.
I have been able to achieve this by subclassing the Redisson class, in my case the RedissonMapCache, and overloading the channel naming methods.  I've demonstrated that this works.  One problem with this is that without additional modifications or extensions to Redisson, it won't work with batching.  Ideally, if one could provide a mechanism for modifying the channel name, that would be great.
thanks, Mitchell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1426
java.lang.NoClassDefFoundError: org/redisson/RedissonLock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
use Version 3.6.5
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1427
Spring cache not expired properly
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Spring Cache should expire with given TTL making it footprint stay at the same level

Spring Cache footprint constantly grows
Steps to reproduce or test case
The Spring Cache data items seem not to be evicted by Redisson if other keys in the same hash are accessed before in periods lower than Spring Cache expiration time, even if this access is performed for different data items.
E.g. imagine a case where there is a Spring Cache region named "test-cache" with TTL of 5 minutes.
That leads to a problem of uncontrollable cache grows, as the cache is almost 100% guaranteed to be accessed in the period if individual item's TTL (see screenshot):
You can see non-expiring Spring Cache in the following redis-cli output (it is production instance output, so no "test-cache" there, but check "ContentService.findAllByContentGroupOrdered" instead that has grown to 27256 members - should be around 100 in a normal case):
Sampled 33 keys in the keyspace!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1428
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1429
ClassCastException when receiving messages of different types
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I need to be able to publish different types of messages through a single channel.
I try to explain my senario with an example.
App X publishes messages of type String and Integer to one channel.
App 1 catches the Integer objects and App 2 only wants the Strings from the channel.
Thanks for helping me...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1430
can use netty3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1431
Cannot Read Avro encoded Object from Redis after changing Java Class
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

I don't know if that's the way it works, but I was expecting that I'm able to add a new field to a class, and the deserialization from Redis would be Backward compatible with the "old" schema for the class.

The  is that the Read operation from Redis (RBucket) explodes, with all kind of deserialization/parsing errors, depending on the type of the new field. But it breaks always.
Steps to reproduce or test case
I just created a simple Java Class. Then I initialize the codec for my redisson client in this way:
and I'm able to write and read my object instances from Redis. But After I add a new attribute to my Java Class, then I'm not able to read my saved objects anymore. If I remove the field, then everything starts working again.
singleServerconfig
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1432
Invalidated session in one tomcat is still used in another tomcat instance when relogin
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I am using redisson tomcat session manager in docker environment. I have 2 tomcat containers and want to share the sessions with redis. I can see the sessions information are stored and retrieved on redis.
However, I have an issue that an invalidated session is used because the invalidation is done in another tomcat. The steps that I've done is:
Login request goes to tomcat1 and a session is created.
Any request after login (e.g. query) goes to tomcat2. The same session is used, and it works fine.
Logout request goes to tomcat1 and the session is invalidated.
Try to re-login and the request goes to tomcat2 and it gets a session.
The problem occurs here. When a request done after re-login, it goes to tomcat1, but the session is not there, and my application throws an error.
I have debugged through the code and I found that:
When the first login request is done in tomcat1, the getSession method is called and findSession method will not find any sessions, therefore a new session is created in the memory of tomcat1 and stored to redis.
When a request (e.g. query) goes to tomcat2, the findSession method will look into the tomcat2 memory first, and if it could not find it, it will find the session info in redis, and then create a new session object in the tomcat2 memory and put the session information from redis into it. (Correct me if I'm wrong)
When logout, it goes to tomcat1, the session is invalidated, it is removed from the tomcat1 memory and also the session info is removed from the redis. This means the session in tomcat2 memory is never removed at this point. (Again, correct me if I'm wrong)
Therefore when re-login request goes to tomcat2, because findSession method will get the session from the memory first, and the client still has the same session id, it will get the session from tomcat2 memory which has already been invalidated in tomcat1 and used it in the request without updating to redis.
Finally after re-logged in, when trying to make a request and it goes to tomcat1, the session does not exist because the findSession could not find the session neither in tomcat1 memory nor the redis. Therefore the application will throw an error because it checks first if the session exists before making a query request.
My question is what behaviour do you expect in this case? Is the findSession method already working as expected?
Or do I miss something in my application? (e.g. do I have to always check the "session:isValid" should be true everytime I do login? (because it's not described in the documentation usage guide))
Thanks.
Regards,
Ricky.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1433
Concurrent calls to RemoteService should not result in an exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Concurrent calls to RemoteService should not result in an exception

Concurrent calls to RemoteService should result in an exception
Steps to reproduce or test case
Redis version
4.0.9
Redisson version
3.6.5
Redisson configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1434
RedisTimeoutException in RBlockingDeque
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello.
When I try to get a result from a blocking deque, I get RedisTimeoutException.
I expect that after 1 second I will get null value.
Redis version
3.2.100
Redisson version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1435
Incorrect results from RBitSet.setAsync
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I believe the issue is in RedisCommands SETBIT_TRUE and SETBIT_FALSE that use BitSetReplayConvertor that, by the look of it, is implemented to return true if Redis sends back the same value as was passed to SETBIT. Meanwhile the docs say:
Return value
Integer reply: the original bit value stored at offset.
So the implementation should be something like:
In fact, you dont event need two different RedisCommands.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1436
Can I use RScript to run a lua script which inserts data into RMapCache?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It's not a bug, just don't know how to do that and googled for nothing.
I can use RScript to insert data into RMap, but as I observed RMapCache entry's value is prefixed by ttl and max idle time. Can I generate that prefix by hand and then concatenate the generated value and the real value in lua script?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1437
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1438
where can I find more example/quick start/demo ? the quick start on github too short...
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
where can I find more example/quick start/demo ? the quick start on github too short...
I want more example/quick start/demo to replace Jedis...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1439
NoClassDefFoundError when using FstCodec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using redisson tomcat session manager 3.7.0, and tried to set codec with FstCodec, but got error during tomcat startup. Did I miss anything? :
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1440
org.redisson.client.RedisTimeoutException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1441
RedissonListReactive don't implement readAll and there is no method that uses LRANGE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Get all the elements from a list at once using the reactive API (a method that uses LRANGE)

I have to use RList to get all the elements at once or the iterator from the RedissonListReactive but that last one take ages.
Steps to reproduce or test case
Redis version
Redisson version
3.7.0
Redisson configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1442
RLocalCachedMap memory leak when using EvictionPolicy.WEAK
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Weak references should be cleared.

It seems that even when using static Strings for keys and values and only fastPut method the OOM error occurs after several thousands of invocations.
Steps to reproduce or test case
I have created a separate repo to easier reproduce the problem:
Redis version
4.0.9
Redisson version
3.7.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1443
How do I get redis server nanoTime?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redis cmd time return
but redisson time() method only return
I want to get  1)+ 2)  ，please help me
Thank you.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1444
Why RTransaction do not have getBuckets method?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

RTransaction should be same to RedissonClient, have the method:getBuckets , return batch result

Steps to reproduce or test case
Redis version
Redisson version
3.7.0
Redisson configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1445
RedissonRedLock algrithm improvement
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Imagine you have 5 masters, when a client has managed to acquire 3 locks, based on the RedLock algorithm it is deemed to be a winner, hence he can carries on the logic after the lock, however when a network partition happened, he lost one lock. Other clients will then able to acquire a majority
By making failedLocksLimit configurable, the decision on how much risk he is willing to take to use the lock is on the user himself. In some cases he may want N/2 + 2 or +3 etc., to be a valid minimum requirement.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1446
ElasticCache clusterserverconfig - TTL is not working as expected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i am using clusterServersConfig for my ElasticCache Redis Cluster, with redisson 3.2.0. Cluster has 1 shard with 2 nodes.
The cache is not expiring after 1sec as expected. Also calling CacheEvict explicitly doesn't clear the cache.
Anything missing in config here?
Cache config is as below mentioned.
maxIdleTime: 1000
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1447
Redisson in cluster environment cannot use the same node when iterating a set
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I try to iterate a set collection in the cluster environment, I'm getting some odd result: some entries are missing. So I've checked the below issues:  #277 and #230.
I have 9 Redis nodes. 3 master nodes, which each one has two replication node. So the Redisson can execute sscan command from alternative two slave nodes.
I turn on the debug logging, I notice that Redisson has changed connection during each command execution with default load balance strategy.
detail logs like this:
So I simply trace the source code,
In the class BaseIterator, it could store the current query connection correctly with a field.
protected RedisClient client;
Then, it passes the client info to the function async of the class CommandAsyncService , which the parameter source contains it.
The most disturbing part is this:
When trying to get a connection from MasterSlaveConnectionManager connectionReadOp, it will not consist with the previous client connection, but to get a new slave connection according to the master-slave entry. So this will get a different connection than the last.
like this:
At last, here is briefly my test code
Hope to make sense, thanks~
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1448
Some scheduled jobs not getting executed.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In my code I am scheduling 50000 jobs but only 49999 jobs are being executed when I set workers of executor service to 3, however when I set workers of executor service to 2 all the 50000 jobs are getting executed.
When I schedule 10000 jobs and set worker to 4 all the jobs are getting executed but when I set it to 5, 2 jobs are being skipped.
Why some jobs are not being executed?
Anyone help me in understanding this behaviour of Redisson, I am not able to debug this.
Redis version
4.0.9
Redisson version
3.7.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1449
Default value of `threads` in Config
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
private int threads = 0; // 0 = current_processors_amount * 2
I was viewing the documentation of Config class and I found the above line, can anyone explain what is the meaning of current_processors_amount.
Redis version
4.0.9
Redisson version
3.7.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1450
Viewing scheduled jobs in Redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using scheduled redisson as a scheduler, after I have scheduled the jobs how can I view all the scheduled jobs and status of the jobs that have already got executed.
Also I wanted to view total executor services currently present.
Redis version
4.0.9
Redisson version
3.7.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1451
Job distribution among several RedissonNodes.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In case when there are multiple RedissonNodes how the jobs get distributed among them and is it possible that jobs can get executed by both Redisson Nodes (Duplicate execution of scheduled job)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1452
Extend RScoredSortedSet object to support Redis 5.0 commands
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ZPOPMIN, ZPOPMAX commands already implemented by pollFirst and pollLast commands
BZPOPMIN, BZPOPMAX
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1453
Redissonnode VS ExecutorService worker
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How running multiple redissnnodes differ from running more workers on a single redisson node?
How to view all the RedissonNodes?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1454
ClassNotFoundException on Classes under WEB-INF/lib
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We upgraded Redisson tomcat session manager from 3.6.3 to 3.7.0, and got ClassNotFoundException on classes under WEB-INF/lib. After reverted back to 3.6.3, error was gone. We are using SerializationCodec and are under java 8 / tomcat 7.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1455
setPingConnectionInterval for single server configuration is not propagated to underlying MasterSlaveServersConfig
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Setting the pingConnectionInterval on a single server config should enable periodic ping on connections.

No pings take place.  Similar to #1415, this appears to be due to SingleConnectionManager.create not copying the configured value to the MasterSlaveServersConfig.
Steps to reproduce or test case
Redis version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1456
How does executor service gets associated with RedissonNode?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Anyone please clarifying the following details :
redisson.getExecutorService("w1"); This line in the above code creates a new instance of ExecutorService as described in the configuration but this instance of ExecutorService is not linked to any RedissonNode still the job is being executed. Is the executor service instance described in the configuration shared by all the  RedissonNodes or each RedissonNode will have the different isolated instance of ExecutorService?
Does the same executor service instance which is used to schedule the job will also execute the job or job will be executed irrespective of the executor service instance through which it was scheduled.
Redis version
4.0.9
Redisson version
3.7.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1457
Unable to create RedissonClient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Sometimes get an error during check if Redis is connected: getObject().get().getNodesGroup().pingAll()
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1458
ReadWriteLock timeout does not work as expected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I wrote a simple test to check the ReadWriteLock.
The behaviour
First case: Read thread finishes executing properly, write thread hangs forever
Second case: Behaves as expected. Read thread locks, sleeps and unlocks. Write thread hangs until the read thread finishes and then locks and finishes.
What I see in redis in both cases at the beginning:
What I see in redis in both cases after some time:
The rwlock_timeout entries expire in both cases, it seems like no one is updating their timeout in redis.
In the first case, where the readThread finished running but the lock1 entry never expires and is stuck forever like this:
What I expected
In the first case when the read thread finished running I'd expect the read locks to expire after some time and unlock the lock1 entry
In the second case I'd expect the rwlock_timeout entries not to expire since the read thread is alive, it sleeps but it is alive.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1459
CommandAsyncService gets blocked at high concurrency [without OutOfMemoryError]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
While running a load test on jmeter of 200 users with ramp up time of 10 seconds and number of puts per user equal to 10, threads are getting  stuck. In this test we are using RTransaction and doing load testing on a single key by putting random values for a single key.
here is the stack trace:
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1460
Why RedissonTransactionManager do not support Suspend Transaction?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonTransactionManager  do not rewrite
protected Object doSuspend(Object transaction) throws TransactionException
method
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1462
Error while using RedissonSessionManager at tomcat(java.io.IOException: java.lang.ClassNotFoundException: org.springframework.webflow.conversation.impl.ConversationContainer)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am seeing below error while using RedissonSessionManager with tomcat. I have followed the default configuration that was provided at.
Configuration is working fine in multi node environment with session replication at redis, but for every request I am seeing this error. Can you one please help on this.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1463
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1464
redis session count more than visitor count
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i used redisson in tomcat8 to mange session.and i have a problem that: site real visitor count only 100,but redis save session count is 1700.i don't understand the reason.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1465
redssion shiro jackson problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi：
i have a problem when i use redssion manager session and shiro save data.problem description is under:
if i want to change the jackson,how i can do?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1466
Subscribe timeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

No exceptions

Why is I keep getting these subscribe timeouts? After restarting service it works allright for, like, 24 hours, then I get a lot of subscribe errors. I have a pretty big connection pool, so I don't see why I keep getting it.
I mostly receive this error with RLock, which I use to synchronize. Should I tune my configuration somehow?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1467
RedissonLocalCachedMap can not init with NullPointerException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedissonLocalCachedMap can not init with NullPointerException when ReconnectionStrategy is ReconnectionStrategy.LOAD
I think the LocalCacheListener is null ;The line 160 in source code org.redisson.RedissonLocalCachedMap.java ,listener is null because it create in line 164;
Redis version 4.0
Redisson version 3.7.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1468
Redisson executing previous jobs on the schedule of newly submitted jobs.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I previously scheduled 5 jobs (old jobs) they executed successfully. After that I scheduled another 5 jobs(new job) but this time the previous 5 jobs got executed on the schedule I gave for new job. Can anyone explain me this behaviour of redisson and point where I am making the mistake.
For this experiment I runned 4 redissonnodes in standalone mode with configuration as described below.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1469
How does redisson balances load among several RedissonNodes while scheduling jobs.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1470
Redisson API to get the number of subscribers subscribed to a particular channel
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson API to get the number of subscribers subscribed to a particular channel.
PUBSUB numsub test
How can we get the number of subscribers subscribed to a particular topic in redis as it was possible using the above command.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1471
Redisson CROSSSLOT Keys in request don't hash to the same slot. channel
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I scheduled some jobs first then I run one RedissonNode in standalone mode. and I got this error.
I have used the below code for scheduling the jobs.
Previously it was working fine but I have suddenly started getting this issue.
I am running 3 node redis cluster, with one replica
redis version 4.0.9
redisson version 3.7.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1472
Implement PUBSUB CHANNELS, PUBSUB NUMSUB and PUBSUB NUMPAT commands
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As requested in #1470 by @Himanshu4
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1473
Error while using RedissonSessionManager at tomcat(java.io.IOException: java.lang.ClassNotFoundException: org.springframework.webflow.conversation.impl.ConversationContainer)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am seeing below error while using RedissonSessionManager with tomcat. I have followed the default configuration that was provided at https://github.com/redisson/redisson/tree/master/redisson-tomcat.
Configuration is working fine in multi node environment with session replication at redis, but for every request I am seeing this error. Can you one please help on this.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1474
Invert ZPOP score/element order
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Score/element order has been changed around in RC2. See: redis/redis@0a698e4
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1475
RSet can not guarantee element unique.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
TestBean is
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1476
NullPointerException when using setPingConnectionInterval in Pub/Sub mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

setPingConnectionInterval should ping redis Pub/Sub channel periodically and re-subscribe if pong is not received during specified interval. No exceptions should be thrown or logged by sending PING or receiving PONG messages.

There is NullPointerException thrown and logged as error when pong is received.
Not sure if connection check and recovery would even work in this case.
This is copy/paste from our error log:
This is also logged as WARN by redisson, related to the same event:
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1477
RedissonScoredSortedSet uses wrong codec for some score methods
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

The codec specified in the constructor should be used only for values, not for scores.
Redis commands : RedisCommands.ZSCORE and RedisCommands.ZSCORE_CONTAINS

Codec for scores sometimes uses LongCodec sometimes uses "codec". For backward data compatibility should always use LongCodec when accessing scores.
Steps to reproduce or test case
Create a ScoredSortedSet with non default codec and use getScoreAsync / containsAsync methods
Used to work fine with Redisson Version 3.5.7, when upgraded to 3.7.1 ScoredSortedSet stopped working. Codec
Works fine with this change:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1478
Delete/modify scheduled jobs in redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How can I get control over already scheduled jobs in redisson and do operation such as delete/modify on them.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1479
Implement RBatch commands queueing on Redis side.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Current implementation of RBatch object accumulates all method invocations in memory on Redisson side before send them to Redis. This approach may lead to OOM exception if accumulated batch is too big.
Introduce executionMode setting to allow accumulation of all method invocations on Redis side.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1480
Redis INFO call stopped working after 3.7.1 release
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Call Redis INFO on a given node in a cluster and it should return a blob of info for that given node.

When the redisson client is preparing to send the redis INFO call, client2key returns null for the given redisClient which only happened to me during INFO calls, not any writes or reads. This is the commit that I believe caused this behavior. fe98d0a#diff-bb90b8f5c06abce59014861b02cecd93
It seems the issue is the hashcodes are different only when making the INFO call (That i know of) because the channels value changes.
So when doing the get for client2key, it gets nothing. For Writes and reads that i tried, the hashcodes for the clients are the same
Steps to reproduce or test case
Spin up any redis cluster and simply call .info() on a node in the .getNodesGroup()
Redisson configuration
default redis cluster config with 7 nodes in the cluster. 3 Master and 4 Slave
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1481
Cluster Mode: Master fails over to slave, when slave fails over again redisson client retains connection to previous dead node.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Redisson is able to send read and write commands to the 2nd newly elected Master.

This is the topology:
When testing various failover situations, I ran into a situation which causes the redisson client to get stuck using a bad connection when making the write calls, however the thread that is polling for the topology is fine. The situation is the redis process dies on a Master node I am writing to, a slave is then promoted to master. The redisson client is still in a GOOD state. The redis process dies on the new Master, a floating slave is then promoted to Master. At this point, the redisson client is now STUCK using a bad connection to a dead master.
Steps to reproduce or test case
Run 7 node cluster, I believe this is the minimum to reproduce this as you need an extra floating slave to promote after the first Master/Slave pair dies. For Master 1 slots 0-5460 (M1), kill the redis process. This should cause it's slave (S1) to promote to master and the floating slave (FS2) to attach to this new master. Then repeat kill the redis process on S1 which was promoted to master and FS1 should be promoted to master. The redisson client will now fail reads/writes because the redisson client connections are to the old S1 node despite FS1 now being the new master but does not fail to poll for CLUSTER NODES because I believe it is using a separate connection pool/thread to do that.
Redis version
3.2.11
Redisson version
3.7.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1482
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1483
RedissonLocalCachedMap - "readAll*()" and "values()" methods could read from local cache only?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The performance benefit of using RedissonLocalCachedMap over RedissonMap is negligible when getting all data from the map via readAllKeySet*(), readAllValues*(), readAllEntrySet*() and values(). The readAll*() methods still gets data from server, values() method is not overriden in RedissonLocalCachedMap.
Would it be possible to read data only from the local cache in these cases?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1484
do as the redisson3.7.1 RRateLimiter wiki,but it does not work!
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1485
tryLock waitTime no valid
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hello, I have test the tryLock with waitTime, but find it has bug. My test is as follows:
As you can see, the second thread faild to acquire lock but the lock is released during 2 seconds...please tell me ,thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1486
Occasional  ERROR:Search domain query failed.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1487
jvm create to many HashMap Nodes cause many YGC
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
question
java project springboot+redission only, RedisCluster scanInterval 1000ms，jvm create too many HashMap.Node, cause YGC quickly, I see ClusterConnectionManager.java source
Steps to reproduce or test case
RedissonClient redisson = Redisson.create(config);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1488
How to provide timezone with schedule in job?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How can I provide timezone in scheduled tasks according to which tasks should be executed.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1489
Warn:"Invocation of destroy method 'close' failed on bean with name 'jCacheCacheManager'"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

I imported Redission in spring boot using distributedLock,but the log always show this WARN

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1490
Add Redis Streams support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
New feature of upcoming Redis 5.0
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1491
Redisson not executing jobs requiring external dependencies?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have one RunnableTask which makes a HTTP request and hence needs a dependency of HTTP client. This job looks like this.
Now I am scheduling some jobs using this code.
After this I launched a RedissonNode in standalone mode. Now when the time for the execution of this jobs come, I am getting following error.
Anyone please explain why this is happening and resolution for this issue.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1492
Add CL.THROTTLE command for Redisson Client
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using the Redis Cell module for keeping track of rate limits on certain keys. Unfortunately with Redisson this means I have to use the low level client for now but it would be nice to include a method for the CL.THROTTLE command used in Redis Cell module with the high level client.
This is not related to RRateLimiter which to my understanding is for throttling calls to Redis itself.
Redis Cell
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1493
Acquire Methods in RedissonRateLimiter Are Not Functional
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Issue since Redisson 3.7.1
Line 125 of RedissonRateLimiter.java throws a null pointer exception when the time unit  parameter is null. When you call the acquire methods it passes a null for that parameter. Basic unit tests for the acquire method would have caught this.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1494
Jobs scheduled with cron expression not running
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have used two methods to schedule the jobs. In method-1 I have used line-1 to schedule the job and in method-2 I have used line-2 to schedule the job. The problem I am facing is that method-1 is working fine but when I comment the line-1 and use method-2 instead the jobs doesn't get executed and I get the error as described below.
@jackygurui @mrniko kindly look into this.
I am using redisson 3.7.2 in standalone mode and redis 4.0.9.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1495
Avoiding serialization/deserialization of a class.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I am sure that I will be definitely having a class already loaded in memory, is there any way to avoid serialization and deserialization of whole class.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1496
Redisson Class loading
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As per my understanding, Redisson serializes the class at the time of scheduling the job and deserializes it at the time of execution of the job. If the class is already in memory at the time of execution of the job  then what does redisson do.
Kindly explain me this in details and also correct me if my understanding is not correct.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1497
Missing PubSub messages when using connection ping
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

setPingConnectionInterval should send periodic ping messages and keep channels alive, but this must not affect any other type of messages on channels.

When using setPingConnectionInterval some messages will not be delivered to listeners after being published. I have a test code which can reliably reproduce this issue:
Output of this code will produce varying results each time, but it will never get all sent messages, like this:
However if connectionPingInterval is set to 0 (disabled) issue is completely eliminated, like this:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1498
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1500
How to specify start time and end time for expression?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko @jackygurui
If I want to schedule a job with certain cron expression, how do I specify that job should only run between some start and end time, whenever its execution according to the cron occurs. Like it is provided in quartz.
@mrniko
I also feel there should be support for cron expression with delay as well.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1501
How to execute some code after execution of job, something like post listeners?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How can I perform some task after execution of some job?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1502
Is there a way to set ExpiryPolicy at cache entrylevel for redis jcache implementation instead of setting at the cache level?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1503
How to inject taskId in runnable?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Since I get taskId after scheduling the task, how can I provide taskId to the RunnableTask, so that I can have taskId during execution of task.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1504
How to schedule one time jobs in Redisson?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How to schedule a task that would run at particular time, currently I tried to do this with cron expression but it is giving error as described here.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1505
Redisson redlock performance with azure redis cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi I have a distributed application that servers user requests. I want to implement distributed locking to synchronize access to user's data if multiple requests for the same user come in.
I'm using redisson with azure redis cache in cluster mode with 3 masters, 3 slaves for this purpose. My incoming request rate is 700/s, with total request processing times ~30-40ms. I've set the redisson cluster config as below (pool size=320, lock_wait_time=3000ms, lock_expiry_time=3000ms). However, I notice that in spite of tuning the connection pool size from 250-700, a small portion of requests fail while waiting to acquire the lock.
Questions:
Is my usage of redisson redlock below correct?
Any recommendations on how I can tune the config to resolve the "failed to acquire lock" errors?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1507
In MapCache, idle timeout is not refreshed upon replace
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

When using redisson MapCache expiration I would like a replace to refresh the idleTimeout, so that a field does not expire as long as it is replaced within the idleTimeout period.  Note that replace returns the old value, so strictly speaking the value is accessed.

Fields are expired after idleTimeout regardless of whether their values are replaced or not.
Steps to reproduce or test case
a test added to RedissonMapCacheTest, I would like it to pass:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1508
Too many open file handles with Redisson 3.7.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Redisson 3.7.0 shouldn't leak file handles.

After upgrading from Redisson 3.5.5 to Redisson 3.7.0 With Elasticache cluster I noticed file handles are left open and within an hour all the handles are exhausted causing AWS ECS to terminate the service instance. The issue goes away once I revert back to 3.5.5
Steps to reproduce or test case
Use Redisson 3.7.0 with AWS ElasticCache Cluster.
ElasticCache cluster. Following is the Spring code to configure redisson with cluster:
I've configured pool size at 20 and minimum pool size at 5. Scan interval is set at 2000 milliseconds.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1509
Exception in thread "main" java.lang.NoSuchFieldException: No such field:
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1510
Do redisson store classes by creating extra keys or serialize and store in one key only?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1511
getClusterNodesGroup().pingAll() vs getNodesGroup().pingAll()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is it any difference between this checks? I use getNodesGroup().pingAll() for pinging nodes with cluster config as well. Is it correct way or should I change check on getClusterNodesGroup().pingAll()?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1512
"URGENT"java.lang.ClassCastException:(while returning objects in nested class) Redisson gives the feature of nested object?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am getting "java.lang.ClassCastException: org.redisson.RedissonMap cannot be cast to src.ClientProfile" error. can someone tell me why?(client profile also have 2 classes inside it).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1513
Mitigating Concurrency Issues
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I was wondering what the standard approach is to Mitigate possible Concurrency issues when using Redisson as a spring data source.
I am working on an application that gets information from a source application and then layers updated over the top before delivering the updated information to the client.
The updates in this case are built for several sources, each one has its own queue.
When a new message is placed on any given queue my app reads the message from the queue, and attempts to create or update an updateObject in my redis cache.
My problem stems form the fact that messages are constantly being placed on these queues and updates to the updateObject are likely to come in quick succession.
Im concerned that this will lead to concurrent read write issues:
I have attempted to solve this using @transactional and the RedissonTransactionManager but it doesn't seem to be halting the second messages update while the first message is still updating.
Any advice would be really appreciated,
Thank you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1514
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1515
Not able to build redisson locally
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
While building the redisson locally, I am getting the following error:
In stable release version I can see 2.12.2 and 3.7.2, I am using 3.7.2 what is the purpose of other release 2.12.2, what is the difference between both.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1516
RMap.readAllValues() returns Number as string
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

When we use addAndGetAsync the value of key is incremented or decremented.

RMap.readAllValues() should return values as 0-> 1, 1- >2 but instead returns values in the form og
0->"0", 1->"2" where the Number class is a string value.
Iterating through this collection causes a class cast exception.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1517
Support for endTime in scheduleWithFixedDelay() method?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Currently when we schedule the job with scheduleWithFixedDelay() method, it takes only initial delay and delay. But if I do this then this will keep running the job forever. I think there should be version of scheduleWithFixedDelay() method which supports endTime as well.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1518
CustomObjectInputStream doesnt work for proxied classes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Classloader passed into CustomObjectInputStream is not used to load proxied classes.
In my case redisson cant deserialize org.springframework.security.oauth2.client.token.AccessTokenRequest class

Following exception is thrown during class loading:
Caused by: java.lang.ClassNotFoundException: org.springframework.security.oauth2.client.token.AccessTokenRequest
Steps to reproduce or test case
Redisson configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1519
Add iterator with batch size param to all collections
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1520
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1521
Feature Request: Locally cached MultiMaps
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I was working with multimaps and wondered, while they have a cache variant, why don't they have a locally cached variant?
If nothing speaks against it, could one be added?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1522
Using Redis Transaction MULTI crashes in java.lang.NumberFormatException: For input string: "QUEUED"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1523
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1524
RedissonRateLimiter acquire() method blocks forever
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The acquire method should block until a permit is available, but it blocks indefinitely instead of the remaining time until a new permit becomes available. From my testing I have found that it doesn't acquire a permit when one should be available based on the rate and interval I tested. If I set the rate to 1 every 5 seconds, it should take a loop of 10 single permit acquires approximately 50 seconds to complete. Instead it acquires the first permit, then blocks forever on the next acquires call.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1525
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1526
Live Object service meet NullPointerException when new field add to old RLO
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

add new field to RLO, use get method will get default value.

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1527
RSemaphore example ends up in "Unable to decode data"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1528
Redisson Not able to serialize and deserialize external objects?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am running Redisson Nodes in standalone mode, at the time of execution of this job, I am getting following error.
How can I inject such dependencies in redisson, I think this use case is quite natural, and should be definitely be accommodated.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1529
Add DUMP and RESTORE commands support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1530
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1531
why 'readonly' command is going to master everytime i send read operation at ReadMode.Master_Slave
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

'readonly' command should not go to master everytime i send read operation.
'readonly' command is going to master or slave only onetime at first when making connection.

'readonly' command is going to master everytime when i send read operation.
because of added 'readonly' command, master is not distributed throughput
Steps to reproduce or test case
make Redissonclient with ReadMode.MasterSlave
send read operation
redissonClient.eval(Mode.ReadOnly, "return redis.call('get', 'something')"...
actually, read operation is distributed propery, but master node get plus 'readonly' command. even though 'readonly' comman is not working at master node and not affecting anything functionally.
however this is big problem which increase throughput and cpu utilization on master node. finally, it is same as not distributed
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1532
Lot of connections remain in TIME_WAIT state after Redisson shutdown
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1533
will there be React native support?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1534
severe bug !! when sending read operation to new slave loading previous data after failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
on each servlet request, i send read command like below to redis, in this case, it is problem.
result = redissonClient.getScript().eval(Mode.READ_ONLY, script, RScript.ReturnType.VALUE), keyList, argvList.toArray());
on each servlet request, i send read or write command like below to redis,  in this case, it is ok
result = redissonClient.getScript().eval(Mode.READ_WRITE, script, RScript.ReturnType.VALUE), keyList, argvList.toArray());
send read operation each reqeuest on servlet server continusly.
slave is loading data for syncing with master. it takes 10 minutes to load all data completely.
during 10 minutes, servlet server is going strange behavior and throuput is very lower and don't return any exception. i think some threads is hanging around Redisson connection with new slave loading data.
actually i expected returning error with timeout. why it is not returning any error until slave is completed loading data.
after 10 minutes which completed load data from slave. it is going back to normal and throuput become higer.
however, read operation with Mode.ReadOnly is going both master and slave not going to slave only.
when loading data at slave, redisson is sending read operation to slave. and read opeartion thread is hanging aroud somewhere in redisson.
read operation with Mode.ReadOnly is going well to slave only. however after failover, read operation is going both master and slave not going to slave only.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1535
HyperLogLog.addAll adds only one element
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1536
Scheduled task not working
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

I want to create a simple scheduled task with redisson & kotlin.

I get an exception everytime
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1537
org.redisson.RedissonShutdownException: Redisson is shutdown
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1538
aliyun redis not support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when i use redissonClient.getMapCache，put any key. get error :ERR bad lua script for redis cluster, all the keys that the script uses should be passed using the KEYS array, and KEYS should not be in expression. only in aliyun redis.
aliyun redis must uses KEYS array in lua. Can you give me some suggestions？
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1539
Redisson stops executing commands found during tests with RBoundedBlockingQueue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Probably throwing an alert message or slow down but not stuck in infinite cycle.

Stops executing commands
A lot of exceptions logged
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1540
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1541
Slow Redis Sentinel Initialization on Start (update from 3.6.5 -> 3.7.3)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I'm updating Redisson lib from version 3.6.5 to 3.7.3. But I saw that Redis Sentinel initialization takes more times in the newer version 3.7.3. Is there's a new parameter to be aware of that could explain/solve this slow initialization ?
I'm using the default Redis Sentinel configuration unchanged since version 3.6.5.
Regards,
Steps to reproduce or test case
Check connection initialization on Sentinel mode with Redisson on version 3.6.5 vs version 3.7.3
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1542
Multiple ReadLocks are not sharing locks properly after WriteLock releases
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello!
I've found something that I believe is a bug in Redisson's RReadWriteLock implementation where multiple ReadLocks seemed to become or at least behaved like WriteLock when it tried to lock on a lockpoint that another WriteLock has already acquired a lock, then released. Because of that, ReadLocks are not sharing the lockpoint like it should and are taking turns in locking the lockpoint. Theoretically, this will have a performance impact on applications that expected Redisson to have quicker locking mechanism based on inclusive locking mechanism but under the hood, it is not inclusive and those applications will spend some time to wait for locks to complete.
I have tested this with Java's ReentrantReadWriteLock and it has worked exactly what I'd expected it to be.
Note: I have only tested this on a single Redis server. I did not test this on clustered Redis servers.

Writer Thread locks
Reader Thread 1 fails to lock and waits
Reader Thread 2 fails to lock and waits
Reader Thread 3 fails to lock and waits
Writer Thread unlocks
Read Thread 1 locks
Read Thread 2 locks
Read Thread 3 locks
Read Thread 1 unlocks
Read Thread 2 unlocks
Read Thread 3 unlocks
This behavior matches Java's ReentrantReadWriteLock behavior exactly.

Writer Thread locks
Reader Thread 1 fails to lock and waits
Reader Thread 2 fails to lock and waits
Reader Thread 3 fails to lock and waits
Writer Thread unlocks
Read Thread 1 locks
Read Thread 2 fails to lock and waits
Read Thread 3 fails to lock and waits
Read Thread 1 unlocks
Read Thread 2 locks
Read Thread 3 fails to lock and waits
Read Thread 2 unlocks
Read Thread 3 locks
Read Thread 3 unlocks
This behavior does not match Java's ReentrantReadWriteLock behavior exactly.
Steps to reproduce or test case
I have written a test code for you to review, download, and test.
The link to my code is here:
The test code includes two test suites that runs a control test using Java's ReentrantReadWriteLock and an experiment test with Redisson's RReadWriteLock.
Each test suites has two test cases where one of the test does multiple ReadLocks locks on the lockpoint before WriteLock locks on it, and another one tests multiple ReadLocks locking on the lockpoint after WriteLock has locked on it. The failure on the latter test on Redisson's RReadWriteLock is what has prompted me to open this issue ticket. Java's ReentrantReadWriteLock passed that test.
Overview:
To run the test, run mvn test with Maven to test the code.
Single server with default configuration created by Redisson's Config class.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1543
Implementing Job Queue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hey there,
I'm trying to understand how to implement a job queue using this awesome library.
I thought about this flow:
New tasks are pushed to a pending tasks queue.
Tasks taken for execution will be be popped from pending queue and pushed to in progress tasks queue.
After X time inside progress queue, the task will be considered as expired and will be moved to a delay queue with a given delay (each task will have a different expiration time).
After X time in the delay queue, the task will be moved back to the pending queue.
If the task was executed properly, the task will be moved to a processed tasks queue, which will be consumed for further calculations.
For the in progress tasks i thought about using priority queue / scored set.
For the delay queue i thought about using, well, the delayed queue.
Problem is I struggle about the durability of it all, I'm afraid the server will crash the second i pop something (before i get to add it to some other data structure) and I will lose tasks data.
There is a feature for this library that I'm not aware of and could come in handy?
I would really like to stick with Java and not move to python's celery or something like that, but haven't found something to ease the process yet.
If this question is not for this place I'd be happy to hear where should I post it.
Thanks and have a nice day :)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1544
Global config codec is not registered in codec cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

When deserializing nested data structures the nested structure should use the codec instance assigned to the redisson config using setCodec.

The nested data structure is serialized using the default JsonJacksonCodec codec ignoring the one set on Config using setCodec.
Steps to reproduce or test case
Create a new JsonJacksonCodec using a non-default ObjectMapper instance.
Assign that instance to Config using Config.setCodec.
Stored a nested data structure such as a RBucketReactive inside of a RSetReactive, and store a POJO inside of the RBucketReactive that's dependent on the configuration of the ObjectMapper used previously.
Attempt to retrieve the value from the RBucketReactive instance by iterating the RSetReactive contents and observe that Jackson deserialization will fail due to using a defaultly configured ObjectMapper.
All defaults except for registering a new Codec.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1545
LiveObjectService - ClassCastException when using multiple ClassLoaders
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

RedissonLiveObjectService creates proxy objects that are instanceof the given entity class.

When using a different ClassLoader when loading the Class-To-Proxy for an LiveObject than when loading the Redission library all proxies creations will throw a ClassCastException.
This is most likely due to the line.
I think redission should use entityClass.getClassLoader() instead to make sure that the generated proxy object will be assignable to the given entity class.
(As soon as spring-boot-devtools is removed from the classpath and there is only 1 ClassLoader around everything works perfectly fine)
Steps to reproduce or test case
I've created a minimal repository that shows the error simply by running ./gradlew run in the project.
If is removed everything works fine.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1546
Tasks scheduled with timezone not working.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The problem I am facing is that, the task gets executed only at first occurrence of the cron and remaining occurrences doesn't get executed. However when I don't specify any timezone then everything works well.
To reproduce this the timezone which you provide should be different from your local machine.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1548
Redisson threw MOVED redirection loop detected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
I updated redisson from 3.6.3 to 3.7.3, and use RLock for distribution system, It had no problem when it was in 3.6.3, but now it threw a exception above.
Feel sorry I have no idea how to reproduce manually. It ran a while and then the exception threw.
I used ClusterServersConfig as cluster mode configuration by default with just setting scanInterval property.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1549
Connecting to AWS ElastiCache Redis in cluster mode behind NAT
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to be able to use Redisson when Redis Cluster is behind NAT. I can think of following solutions:
Disable auto discovery and use ElastiCache Management Nodes for all request (prefered approach recommendation in aws doc).
Disabling auto discovery by manually registering all nodes in Redisson.
Provide customer provide DNS mapping
I am using AWS ElastiCache Redis in cluster mode where AWS creates a management endpoint for whole cluster and separate endpoint for each master node. My whole cluster is behind NAT, so when Redisson tries to discover all the nodes in the cluster it find their local IP not the NAT IP, as a result it fails to connect to clustered nodes.
Redisson discovers all the nodes in the clusters and tries to connect to them. However it fails because those IP/endpoints are behind NAT.
Steps to reproduce or test case
Create an AWS ElastiCache Redis stack in cluster mode. Create a NAT on top of it and try to connect to the NATed cluster.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1550
Connection is closed per command execution for master node used as slave in readMode = MASTER_SLAVE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This issue leads to new connection established per Redis command invocation and therefore performance degradation for master node used as slave.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1551
How to use RKeys.findKeysByPattern() with Redisson Live Object(RLO)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'd like to ask a question about RLO and keys matching. I'm new to Redisson Live Object(RLO)
I have POJO, and with a String field annotated with @Rid.  I'm able to use rLiveOjbectService.persist, and .get to save/retrieve the object based on the field value just fine.
Questions:
I have several RLO whose keys fit a specific pattern. I want to call RKeys.findKeysByPattern() to get all the keys that fit the specific pattern. Then I'll call rLiveObjectService.get(class, key) on the keys returned to get to all the objects that fit the pattern.
However, it seems like findKeysByPattern doesn't work with RLO?
From looking at the actual redis data, it seems RLO doesn't just use the value of the field annotated with @Rid as an actual redis key. It seems to do something special with the actual key name, so RKeys.findKeysByPattern() doesn't work anymore.
What is the recommended way to get all the RLO objects that match a specific key pattern? Is it possible?
Thank you so much
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1553
Add RRateLimiterReactive
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1554
Add reactive version of FairLock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1555
Add RGeoReactive
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1556
Introduce RSortableReactive interface
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It should be implemented by RScoredSortedSetReactive, RSetReactive, RListReactive
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1557
StatusListener onUnsubscribe Not effective
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
not effective
please help me，thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1558
Getting issues while using Redisson Tomcat session manager to share one redis instance among multiple tomcats
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am trying to use one redis instance for multiple tomcats to make session storage centralized for my application. But i am getting below error.
As far as i understood redisson is not able to get the session created previously and then it goes on to create a new one. Because of this every time i use application on one tomcat to login it creates new session and when i come to other tomcat to use the same application its not able to find the created session and goes on to create a new one.
But i do see all the sessions created in redis and being stored properly. Its just that redisson is not able to read the session.
Below are my config:
I am using redisson 3.7.4
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1559
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1560
How to make Redisson update a cluster status with new nodes and new IPs
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is there a way to make Redisson client query the sentinel for Redis hosts in new IPs on a configured interval? or... should scanInterval be doing this?
Elaborating, we have a Redis cluster with a Sentinel cluster, in a Kubernetes environment, so when Redis nodes are taken down and new ones arise, they have different IPs, and the old ones no longer exist.
Reading online I'm aware of:
But working with Redisson 3.7.4, clients keep logging that can't connect to some Redis node for days.
Maybe the problem is that Redisson is not contemplating that nodes can change IP, or it only contemplates the IPs changing behind steady DNS names, but not sure.
Is there a way to solve this problem?

Redisson clients to get updated nodes when a Redis Kubernetes cluster is rebuilt and new nodes arise with new IPs. (no DNS names involved)

When the cluster is rebuilt, clients keep logging connection errors for days.
Steps to reproduce or test case
Having a Redis cluster, with a Sentinel in front of them, take down Redis nodes and bring up some new ones.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1561
RTransaction Unusual Locking Problem
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi mrniko,
We have two methods:
As per our test we invoke method 1 and then immediately invoke method 2. The second transaction waits until the first one finishes and seems like the first transaction takes a pessimistic lock on one of the keys of the map being used here and we are totally fine with that.
Now we have another method in a different test scenario:
As per our previous test we expected a deadlock situation in this scenario, since transaction1 has the lock over the key and transaction2 is trying to alter it. But in our test both transactions commit successfully and maintain order.
Please explain the ambigious locking in case of these to scenarios. Thank you.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1562
How to get All the Keys from org.redisson.jcache.JCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I had implemented cache as per jsr107 by using Redission.
Can you please guide How can i get All the Keys (Complete set of Keys)from JCache.
Thanks,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1563
RedissonClient Get operation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1564
Spring Cache setting TTL on keys, not working as expected
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using redisson with spring cache and setting ttl on our keys.:
Redisson version is 3.7.0, Redis instance version 4.0.10.
We are using redis single server.
TTL settings is here:(with time to live of 10 seconds)
Questions:
with ttl settings shown above, after the cache value is set, in redis command line, every time I type command "ttl chatContext", it shows -2, not the remaining time to live.
(it seems redisson is not making use of the redis ttl setting?)
with the above ttl setting, after we put value in cache,
if I keep querying the value of the "chatContext" value in redis command line, by typing "hgetall chatContext", then this value does not time out no matter after how many seconds.
if I do nothing after the value is put in cache, and just wait for 10 seconds, then query the value of "chatContext" cache, its value is not available anymore, which is the expected behaviour.
If we use cacheManager.setCacheNames(Arrays.asList("chatContext", "otherCacheNames")); then the cache value will never expire, the ttl settings of 10 seconds are ignored. Code is shown below:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1565
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1566
Only Linux launch error: io.netty.handler.codec.DecoderException: CommandDecoder.decode()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Like error #1295
Windows is OK, but Linux error!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1567
Redis node failover triggers 30x spike in Commands to the failover shard (using RBatch object)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redis node failover triggers 30x spike in Commands to the failover shard
Additional Description: We have Elasticache cluster with 2 shards* 6 nodes in each shard. Whenever a node failover occurs, the commands (HashCommands) that shard processes increases by 30x (For ex: ). No change in the incoming requests to service but the request/ commands processed by Redis goes up by 30x. Once we redeploy service, Redis commands to that shard will come to normal state.
Updated redisson client to latest version. With redisson client update, we are seeing a performance hit. Latencies are increased by 25%. We haven't verified whether the issue is happening in latest version or not.
Appreciate any inputs to debug what's happening here.
: Failover should be handled gracefully
: Failover leads to increase in traffic to Redis
Steps to reproduce or test case:
Failover Primary in one of the shard
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1568
can we have an extra API on getNodesGroup
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
currently in Redissn class, we have the following API
can we expose an extra endpoint in Redisson class where we can get only certain Node type like Master?
the request comes up when we are doing healthz check on our system, our system uses healtzh hook which deletes to redisson to check the health status of redis, currently, what we are doing is redisson.getNodesGroup().pingAll()
which is not optimal, we would like the system to still work properly even when one slave is down, can we expose an extra API on this ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1569
"RedisConnectionException: SlaveConnectionPool no available Redis entries" even when slave is reachable and connections established.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Since slave connections are present, connection exception should not occur

In our redis cluster of 3 nodes, redisson client is failing with following exception:
However, the client host does have connections:
Typically, we see the following log when slave connection-pool is populated on client startup:
But, for the failed slave (172.16.62.4), during client startup, the above log never came.
The number of idle connections for failed slave was less than slaveConnectionMinimumIdleSize. It was 29 instead of 32.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1570
Spring session integration error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Spring Session should be able to serialize/deserialize the Spring session > security context via Redisson as documented
Spring SecurityContextImpl fails to deserialize when its put in a Redisson map.
It deserializes ok in a regular HashMap, leading to the conclusion that this might be a Redisson issue.
Steps to reproduce or test case
The test case demonstrates the problem by replicating the behavior of the RedissonSessionRepository::load() method
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1571
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1572
RMapCache's addListener  become invalid
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have two redis in one virtual ip by keepalived，and I use RMapCache's addListener monitor data change
everytime datachange can notify me

from sometime，datachange no longer notify me
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1573
Continuation to the Issue # 1562 (How to get All the Keys from org.redisson.jcache.JCache)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi Nikita Koksharov,
Thank you so much for your replay.
I can Use Iterator but it will take more time to iterate each entry for capturing the key.
is there any other way to do this.
Tried with client.getMap() it is taking less time.
For the region with 39450 keys
Iterator approach took 6301 ms
rmap.keySet() took 1377 ms
Here my concern is when i use rmap.keySet() i need a new client, i can't use the client in jcahe. Can you Please Suggest any other approach for this.Please find my code snippet for getting keys in both below.
Thanks in advance.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1574
Jcache removeAll(Keys) Method is not working ***
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Please let me know if anything is Wrong from myside.
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1575
redisson.getNodesGroup() returns Nodes where both redis-server and redis-sentinel are not running.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the issue is like #1330, but they are different.
I am not sure if this issue is being fixed in newer version, but this is for sure reproducible in 2.11.3, following is the steps to reproduce.
having 3 redis vms running in Sentinel mode, current redisson.getNodesGroup().size() is 3  ---> as expected
bring down one of the redis boxes by shuting down both redis-server and redis-sentinel
redisson.getNodesGroup().size() is 2 ----> as expected
bring the node up agin, redisson.getNodesGroup().size() is 4 ----> something is wrong here.
running steps 1-3 once might not reproduce the issue, but running it twice like following steps 1,2,3,2,3 will surface this issue, in fact it will lead the node size growing into 4, 5 and more.
Following is what I did in the class RedisNodes.java
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1576
org.redisson.client.RedisTimeoutException: Redis server response timeout (3000 ms) occured for command
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
org.redisson.client.RedisTimeoutException: Redis server response timeout (3000 ms) occured for command:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1577
Redisson continuously send lock request to redis after redis cluster master-slave switch
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Evn : jdk 7, redisson version: 2.11.4，redis version：4.0.1，enable redis cluster with 3 masters and 3 slaves.
After my redis cluster occurs an master-slave switch and then I try to get a lock, but redisson starts getting out of control, it continuously send Lua script command to get lock, while redis cluster return a MOVED error because of master-slave switch early, it seems that the redisson didn't know the master-slave switch and continuously send Lua script command to the same server to get lock. Approximately redisson sends 150000 lock request to redis in 5 seconds with merely more than a dozen application lock request. The network traffic between the redisson server and redis server rise up to 150Mbps, then it becomes normal after restart the redisson server.
The getting lock code general show below,(I just receive 10+ lock request):
The network packages general show as below:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1578
Why I am getting java.lang.AbstractMethodError errors?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Below code to schedule the job.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1579
redisson keep sending lock request to redis due to redis cluster master-slave failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i use redisson redLock in my project, i think redLock should be work in any case, below is my code,
but when redis cluster code master-slave failover, redisson failed to acquire lock and keep sending acquire lock request, below is request:
then send same request again and again... cluster response again...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1580
Redisson stand alone giving classNotFoundException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When we try to run java -cp core-1.0-SNAPSHOT.jar -jar redisson-all-3.7.3.jar single.json, classNotFoundException should not occur
we get classNotFound Exception
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1581
Can't write command batch to channel. ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Can't write command batch to channel:.
If redis block for some times. then redis recover.
but redisson still use broken connection.
I found the tcp.socket not exists , bu we use it .
why we not close it in   CommandBatchService.checkWriteFuture
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1582
Redisson Session Manager for tomcat is not able to serialize/deserialize session object when multiple web application (war file) share same session.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
hi, Need a help.
our organization was using oracle web coherence for session management. there are around 15 modules deployed as war files which share the same session with different context for each war file.
Coherence uses :: com.tangosol.coherence.servlet.AbstractHttpSessionCollection$GlobalScopeController in order to Share Session Information Between Multiple Applications. There is no class visibility issue by coherence session manager between applications sharing same session.
see LInk:
section: 4.2.2.1 Sharing Session Information Between Multiple Applications
Each context places some of its class in the session.setattribute and when using weblogic + coherence there was no issue with class visibility in session when the context gets changed during the user flow.
Now, our organization is trying to migrate to tomcat + RedissonSessionManager. however there are issues with the redisson session manager. one class loaded in one context is not visible by session manager when the context gets changed. So, session manager is complaining about ClassNotFoundException as it does not have visibility to the classes which were loaded in session when the control was in previous session.
Please let me know if there is any feature AVAILABLE in redisson session manager like oracle coherence has which makes it capable of viewing all the classes in the different war files (different contexts).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1583
Channel Inactive but  the event not catched by ConnectionWatchdog.channelInactive()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I find the Channel Inactive , but  the event not catched by ConnectionWatchdog.channelInactive()
so the connection not reconnect .
then it throw  "org.redisson.client.WriteRedisConnectionException: Can't write command batch to channel"
for the socket not exists
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1584
Memory Leak when I try to create client
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

It should't have memory leak.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1585
'reconnectionTimeout' and 'failedAttempts' setting in unavailable.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I config with the version of 2.12.5，it warn that “'failedAttempts' setting in unavailable. Please use 'failedSlaveCheckInterval' setting instead!”
but the document haven't update。document here!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1586
java.lang.ClassNotFoundException: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

after built project and run on vps(java 1.8) error appear, in intellij everythink work
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1587
some suggest of set with ttl
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
would you be consistent
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1588
about bucket set with ttl return hashmap?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1589
java.lang.IncompatibleClassChangeError: Expected static method org.hibernate.cache.internal.DefaultCacheKeysFactory.createEntityKey
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1590
Command execution timeout when calling CMS.QUERY in CountMinSketch module
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When applying module CountMinSketch, calling CMS.QUERY using redission client to call CMS.QUERY command to get value, Timeout exception is throwed out.:
I use the code:
Before I already ran a command on redis-cli:  CMS.INCRBY  key item 1
And, I ran a command: CMS.QUERY key item  using redis-cli and it returns  1) (integer) 1
I also try sending  the above CMS.INCRBY  command using redission api and  the comand is running successfully.
obj can get or contain the value 1 inside.
set CountMinSketch as a module for redis and launch redis.
I am using redission 3.7.5
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1591
In CommandsQueue , the preceding request will block the request behind.  how did you handle it?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In CommandsQueue , if the previous request was responsed for a long time.
Then the  behind request will block , how did you handle it .
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1592
At least two sentinels should be defined in Redis configuration
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
error:  At least two sentinels should be defined in Redis configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1593
problem about RLock.lock() interruptedException?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RLock.lock() does not return anything, is that mean a thread can always get the lock?
After i saw the source code of lock funcation, it calls lockInterruptibly and catch the InterruptedException, it means that when a thread is interrupted by other thread, it will stop waiting and return from this lock function.
so I tried a example in such way:
There are two threads in my example, thread-1 gets the lock, and thread-2 is waiting for the lock, then main thread interrupts thread-2, and in this way, thread-2 actually does not get the lock, but thread-2 still stops waiting and return from lock() funcation and continues to do the business which should be locked.
should i use the interruption status of current thread to check if the current thread has got the lock?
Thank you very much!
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1594
Shade or unpackage snakeyaml
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson is packaging snakeyaml inside it's own redisson-all.jar library. This version is not shaded
When using Redisson as a Session Manager in Tomcat, Redisson has to be loaded in one of the class loaders above the webapps (Bootstrap, System or Common). Since redisson-all package snakeyaml, it will take precedence over any snakeyaml provided by the webapp.
As a result, any application that use a snakeyaml's version different to Redisson may crash.
Consider shading the snakeyaml implementation treat snakeyaml as a transitive dependency which could be overridden.

Redisson and all other applications (ie Spring) are able to load yaml files.

Steps to reproduce or test case
Install redisson in Tomcat in either of the following class loaders: Bootstrap, System or Common.
In a webapp, using spring 5.0.8, load a yaml configuration file.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1595
Non Sticky Session with tomcat 8: Session loaded in second node triggers new session event(tellnew)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using Tomcat 8 session replication and some attributes are set in session listeners whenever a new session event is created. Configuration details are given below.
When a request for a session (created in node 1 goes to node 2) is loaded from redis cache, we are getting the following error as one of the listeners is setting an attribute and the Session's isValid attribute is false at the time.
 is that for sessions loaded from redis cache, "session created" event (tellNew) should not be triggered.
A probable solution would be to disable notification when setting the session id (ie) setId(id, false) in  RedissonSessionManager.findSession function.
Steps to reproduce or test case
Add this listener to the application's web.xml
org.eclipse.birt.report.listener.ViewerHttpSessionListener
Start the loadbalancer and all tomcat nodes. Login to the application and browse through the application.The above error will be logged in the log files for the node that is trying to load the session from the redis cache.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1596
RExecutorService task execution performance regression.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RExecutorService task execution process got performance regression about x5 times, after #1468 had been resolved
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1597
questions about redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
These are questions about redissons rather than issues.
I plan to use redisson in our company project, Use RLocalCachedMap to cache some business orders, but still have some questions about RLocalCachedMap since I can't get them from Wiki, API, Issue discussion in GitHub.
read from map of RLocalCachedMap will always return the NEWEST data in real-time.
clearLocalCache just clear the local data in JVM, it will not clear the data in Redis server, next read of clearLocalCache will sync the data from redis server to local JVM, right?
How to get a Pro version of redisson, please send a email to haiyang.pan@gmail.com
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1598
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1599
Spring webflow is throwing NoConversationException when we use RedissonSessionManager
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using redisson-tomcat-8 3.7.5 version at tomcat level and my application is using spring-webflow.
Facing below error when web-flow is proceeding from one state to another state.  Could you please suggest what I can do to get rid of these errors.
PN: My application is not configured for spring-session dependencies and it solely depends on tomcat.
Caused by: org.springframework.webflow.conversation.NoSuchConversationException: No conversation could be found with id '1' – perhaps this conversation has ended?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1600
Driver Support for Redis Engine version 4.0.10
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm using Hibernate-reids library for second level cache, can i point to the redis Engine version 4.0.10 ?
as per the documentation it is mentioned that it has tested this with redis server 3.x. with Redisson 2.3.x.
as per my opinion i'm using Redisson client 2.12.5 and  if Redisson client supports redis Engine version 4.0.10 then Hibernate-reids also should support.
Please provide your inputs.
Thanks in Advance.
Srinivas
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1601
Accumulation of MapCacheEvictionTask in Memory
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When the RMapCache entries expire, the MapCacheEvictionTask should be cleaned up.
MapCacheEvictionTask is leaking memory as more and more RMapCache gets created.
Steps to reproduce or test case
We create millions of RMapCache a day. Over the course of a few days, the MapCachEvictionTask object stays in memory and is never cleaned up.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1602
unlock fail and expirationRenewal still execute
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
unlock success
unlock  fail
Steps to reproduce or test case
unlock ()
client -> redis service network problem
unlock throw Exception
network recovery
expirationRenewal still execute
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1604
Lock watchdog does not monitor read locks.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi, when we acquire multiple (concurrent) read locks and process a task for longer than the Config.lockWatchdogTimeout, we get errors when unlocking.
Code to reproduce (wait the watchdog timeout):
int threadCount = 100;
Looking into Redis for the ttl of different keys, I noticed:
The key 'mytestlock' gets an extended ttl
The key '{mytestlock}:UUID:THREADID:rwlock_timeout:1 is not set with new ttl and the key disappears before the unlock is called.
We tested with Redisson 3.5.4 and 3.7.5.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1605
Using RScheduledExecutorServiceAsync to scheduleAsync a task is getting executed  before timeout/delay
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I expect the output after 1200 seconds.. but I see it after 5 mins .. 300 seconds
The scheduled CallableTask should be executed after the delay has expired and not before that
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1606
Why RedissonRedLock only unlock the acquired locks in the release stage?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I expect that RedissonRedLock will release all the locks when it fail to acquire the lock
I learn about redlock from this page: Distributed locks with Redis, and it tell me that we should try to release the lock in all instances even if the lock was not acquired successfully, since may be we have executed the command successfully but the redis instance failed to send the response to the client.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1607
lexicographically sort with ALPHA modifier
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It looks that Redisson doesn't implement ALPHA in sorting. In Redis ALPHA  prevents "ERR One or more scores can't be converted into double".
I found ALPHA only in  redisson-spring-data (RedissonConnection.java).
Should I send PR?
readSort returns Set with null
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1608
DecoderException thrown when calling RMapCache.entrySet().iterator()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I am working on a v1.5.15 Spring Boot project using Redisson v2.12.5 and Redis v3.2.10 on CentOS 7.
I am storing an object as a value (using  the JsonJacksonCodec codec implementation) and the key is a String (using the StringCodec codec implementation) in a RMapCache. When I put data into the map there are no problems at all and I can see it on a GUI Redis tool but when I try to get it via RMapCache.entrySet(), the iterator() method throws the following exception:
But RMapCache.get(key) method successfully returns elements from the map.
Everything works great if I run the same code using a RMap instead of a RMapCache.
Please find attached a small Spring Boot project to reproduce the error. Configuration values can be found in resources/config/application.properties file and the bean definition in resources/application-context.xml.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1609
Unable to find maven artifact
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi everyone,
This is more a question than an issue. I'm using Spring Boot 1.5.x with Spring Data Redis 1.8 on top of JDK 1.8+ and I'd like to replace the Jedis client with Redisson. I was able to find the artifact org.redisson:redisson:3.7.5 on the Sonatype maven repository but I can't find org.redisson:redisson-spring-data-18:3.x in order to register a RedissonConnectionFactory bean. I forked and compiled the repository locally, but the artifact version I got after the compilation was 2.12.x which targets JDK 1.6+
Best,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1610
Redisson reconnection issue in Kubernetes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When Redis in single server mode stops, its pod takes some time to restart. Redisson client should eventually reconnect
Redisson connectionWatchdog detects that redis is down and tries to reconnect but quickly stops trying, before redis is newly available.
IP address does not change as redis is exposed via a kubernetes clusterIp service.
Redisson never reconnects to redis.
Steps to reproduce or test case
Deploy redis helm in single server mode. Connect a client from a pod inside the cluster. Stop redis pod manually.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1611
RedisConnectionException thrown if client-name is set and retry-attempts is zero
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson should start properly when client-name property is set and retry-attempts property is zero in a single-server configuration.
Redisson starts properly if retry-attempts is set to 1.
The following exception is thrown and the server does not start:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1612
RMap.putAll() inside a Rtransaction takes alot of time and finally fails
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
While putting 50000 entries in RMap using putAll method, we are getting the following error:
Below is my configuration:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1615
lost route to host
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
sometimes  it is happened,restart the  consumer is well work
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1616
Slave unable to switch DNS in AWS ElastiCache ReplicatedServers
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are trying to switch the redis dns using route53 on aws elasticCache Service.
While the master gets switched successfully but slave give the following error
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1617
I found two problems about Scheduled Jobs in redisson3.7.5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using scheduleWithFixedDelay to create a scheduled job, initialDelay is 0 and delay is 10m. When the job was running, I found the job's interval is 5min.
I found the problem was created by ff..requestId, because the ExecutorOptions.default() is 5m.
Arrays.<Object>asList(tasksCounterName, statusName, schedulerQueueName, schedulerChannelName, tasksName, tasksRetryIntervalName),
startTime, request.getId(), encode(request), System.currentTimeMillis(), tasksRetryInterval);
Debug the code, I know startTime is System.currentTimeMillis() + delay, but 'ff'..ARGV[2] is System.currentTimeMillis() + retryInterval. In my program, delay is 10m, retryInterval is 5m, so 'ff'..requestId is before requestId in zset named {jobName:org.redisson.executor.RemoteExecutorService}:scheduler. So, the job's interval is changed to 5 minutes.
Another problem is that {jobName:org.redisson.executor.RemoteExecutorService}:retry-interval was deleted when only one Job was running and first run() was finish.
When tasksCounterName's value is 0, tasksRetryIntervalName is deleted. But tasksRetryIntervalName can't be reset.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1619
Task scheduled with delay more than 1 hour timeout prematurely.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Task scheduled with delay more than 1 hour should not timeout prematurely.
Task scheduled with delay more than 1 hour are timing out  prematurely.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1620
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1621
Redis- Master/slave role detection through DNS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Master connections should be created on new master.
We are using Elasticache with 1 master and 1 slave. The redis endpoints are behind route53 record sets. When we swtich the endpoints in route53 to point to new master and slaves. The redisson is pointing to incorrect slave.
Steps to reproduce or test case
where route53 recordsets are pointing redis-slave-1.dev.com to read endpoint of a node which is master.
and redis-slave-2.dev.com points to read endpoint of node (slave).
If we change the recordset redis-slave-1.dev.com (earlier pointing to master) to point to read endpoint of a node which is slave and we also switch redis-slave-2.dev.com (earlier pointing to slave) to point to read endpoint of node (master), then this error comes.
The following logs are found:
Then all the writes to redis are returning error with:
Please note that redisson is easily able to detect master/slave and able to switch connections when doing promotion of a slave.
It is also able to detect the DNS change successfully if the master endpoint is replaced by another cluster's master endpoint.
But, when we switch the DNS in a manner so that the earlier recordset which was pointing to a master now points to a slave and vice-versa, redisson is unable to detect it.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1622
Redisson Sentinel not executing scheduled task on Master-Slave Failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am running Redis in Sentinel Mode with 5 Sentinel, 1 Master and 2 Slaves. I am scheduling a task with Redisson. It is executing the scheduled tasks normally but if i bring down the Master and a new master is elected by the sentinels, redisson doesn't execute the previously scheduled task. Newly scheduled tasks are getting executed.
Observation: The previously scheduled tasks are getting executed on restarting redisson node.
Redisson Node should execute the previously scheduled task after master-slave failover
Redisson Node doesn't execute the previously scheduled task after master-slave failover.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1623
Avoid to create connection per RRemoteService/RScheduledExecutorService worker
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1625
Regression: DNS resolver failing to find valid DNS record
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The DNS resolver should find valid DNS records. The hostname I'm having trouble with worked in 3.5.0, it is failing in newer versions.
I opened a ticket with Netty first thinking it was a problem with the resolver itself, but after trying different Netty versions, it appears to be a configuration issue with how Reddison is calling the resolver.
See netty/netty#8261
Exception thrown:
Configure a top level domain someDomain on a DNS server you own
Configure a host under the new top level domain someHost.someDomain
Configure multiple resolvers  on the DNS client machine that will run the Netty code. i.e. 8.8.8.8, 192.168.1.1, and 10.0.0.1 (I have 3 resolvers configured, each pointing to different DNS masters  - global DNS, local personal private network, company private network over a VPN)
Configure the search domain to not match the top level domain, i.e. search.otherDomain on the DNS client machine that will run the Netty code
Configure redisson to connect to someHost.someDomain
failure during configuration.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1626
Deadlock with RedissonLock used by JCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We've ran into a number of issues with using the Redisson implementation of JCache via bucket4j in production for rate limiting.
JCache.put(K key, V value) calls RedissonLock.lock() with no lease time, resulting in RedissonLock's creating a 'watchdog' thread that continuously renews the lease on the lock in Redis. We are using the default 'lockWatchdogTimeout' of 30 seconds so this thread runs every 10 seconds. What we've seen is in rare cases this watchdog thread never gets canceled, meaning it continues renewing the lease indefinitely until the instance containing the thread is restarted. This causes deadlock of all other threads trying to grab the lock and can ultimately bring down an application as threads build up.
Threads using RedissonLock will wait forever for a lock to be released. There is no timeout when waiting for the lock.
The 'unlock' method in RedissonLock can fail for a number of reasons -- e.g., timing out trying to unlock with Redis after 3 seconds (this happened in our case). When the unlock fails the watchdog thread is not canceled. This means the instance would have to be restarted to release the lock.
A 'watchdog' thread should not exist. This is prone to issues where it never gets destroyed and a lock is held forever. A lease time should be used to ensure the lock is never held forever and somehow it should be verified that the lock is still held by the caller when making updates with it (an atomic check at update time) in case the first thread doesn't execute its update within the lease time and another thread grabs the lock.
Threads should not wait forever for the lock. There should be some configurable timeout.
A timeout on 'unlock' should be retried, but the lease time in 1 should handle any failure to unlock. If for some reason the 'watchdog' thread is kept, the unlock needs to ensure it is canceled if it fails.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1627
Does anyone tried integrating mockito with redisson?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I just tried write an unit test for a function using Redisson, but it seems impossible to return a faked RSet data set only by a mocked RedissonClient. Or, usually which library you all used to mock a Redisson client?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1628
redisson RMapCache method addAndGet throw org.redisson.client.RedisException: ERR Error running script:ERR Error running script
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
throw exception like below
but use Integer is ok
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1629
Adapt the change of terminology from Master-Slave to Master-Replica
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As per redis/redis#5335 discussed, the community is moving to a different terminology than the one has been established for many years. For good or bad, this is the only future. Redisson needs to evaluate and adapt accordingly.
Please, no offending comments here.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1630
RBucket
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1631
List value in a RLocalCachedMap returns String
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have the following RLocalCachedMap defined:
When the following line gets executed:
I get an exception:
Seems like may be related to previously submitted issue, however I am using List (not RList)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1632
Constant Unable to send command! errors with pingConnectionInterval config
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Once we added pingConnectionInterval = 1000 configuration, randomly after a period of time the server is unable to perform any operation on redis. Having the following error on every request:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1633
Empty RBoundedBlockingQueue's capacity increases when using poll(timeout)?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Problem
I have an empty BoundedBlockingQueue. Whenever I invoke poll(timeout) the queue.remainCapacity increases when timeout occurs. This does not happen when using poll(no-timeout). See simple test below.
I'd expect capacity/remainCapacity to not not increase
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1634
Add reliable task executor implementation based on RedissonStream
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1635
documentation on expireAtAsync is incorrect
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In documentation:
timestamp is not "date in seconds" but "date in milliseconds" ! as it uses
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1636
RedLock slow performance when one redis instance is down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
According to RedLock Algorithm, Step 2 RedissonRedLock#tryLock should fail fast if redis instance is unavailable:
During step 2, when setting the lock in each instance, the client uses a timeout which is small compared to the total lock auto-release time in order to acquire it. For example if the auto-release time is 10 seconds, the timeout could be in the ~ 5-50 milliseconds range. This prevents the client from remaining blocked for a long time trying to talk with a Redis node which is down: if an instance is not available, we should try to talk with the next instance ASAP.
RedLock#tryLock blocks for duration equal to config.retryInterval * config.retryAttempts on each tryLock attempt.
Such behavior makes business code not able to consume messages at requried rate, which in turn leads to other negative consequences.
Setting config.retryAttempts=1 and config.retryInterval=50 does not work, since initial commands are not fast enough and connection establishment fails.
Other timeouts doesn't seem to have relation to this issue.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1637
RMapCache.putAll() doesn't provide functionality of setting ttl time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RMapCache.putAll() doesn't provide functionality of setting ttl time
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1638
redisson failed to parse /etc/resolv.conf and/or /etc/resolver
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1640
Spring boot fail to start when I use redisson-spring-boot-starter
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have tried to use redisson-spring-boot-starter in this sample project :
But unfortunately it doesn't work, I get this error at startup:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1641
[Scala] Unable to store objects that hold complex datatypes (that are not one of the dataypes of Redis)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Saving objects that hold String, Int, or methods within them does not work.
I am trying to perform simple set and get operation on objects and following the Redisson Object Holder example (similar to the way we do using redis-cli: redis.set('mykey', 'myvalue')). Simple examples like storing Int, Str key-values work fine, but setting class objects that have methods within them is not working. For example redis.set('mykey', mymlengine) does not work. mymlengine is .scala file that holds several methods (Please look at examples below that will help replicate). Could please help with this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1642
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1644
Custom URLStreamHandler is stripped off internally
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am running in Google App Engine Standard environment, which does not allow me to create/write to any files. The sslKeystore and sslTruststore configuration parameters are required to be URI objects. So I created a custom URLStreamHandler and created a custom URI out of the certificate object in memory.
This should work as expected.
However, it does not work as expected. Instead the custom URLStreamHandler is stipped off in RedisChannelInitializer.java, line number 140: However, in RedissonChannelInitializer.java, line 140, InputStream stream = config.getSslKeystore().toURL().openStream();`, when uri is converted to url using toURL().
So I have modified the source code as follows and it works as expected for me.
Change the type of sslKeystore and sslTruststore variables from URI to URL in RedisClientConfig.java and BaseConfig.java.
Change the line 140 in RedisChannelInitializer to remove toURL().
On a side note, I tried to push this modification to the redisson github repo on a new branch and then request a PR. But looks like I do not have some permissions as I get back a 403 response code.
git push --set-upstream origin sslKeystore
remote: Permission to redisson/redisson.git denied to psubramanian2007.
fatal: unable to access 'https://github.com/redisson/redisson.git/': The requested URL returned error: 403
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1645
support for tomcat websocket session
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Will existing Redisson tomcat session support tomcat websocket session too?
Tried persisting manually and encountered serialization exception.
Looking into the code it seems redisson session extends standardsession and might not support websocket session. Hence the question. Tried writing my own impl of RedissonWebocketsession, but guess my newbie status with redisson was a stumbling block. Need to learn/understand more before i attempt it.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1646
DNSNameResolver warnings in log using AWS Elasticache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I see this warning with stack trace below in  our application log when using redisson version 3.8.1 going against AWS Elasticache 3.2.6.  Wondering what is the cause of this? We are using netty 4.1.29.Final
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1647
Object mapping problem with Hibernate 5.3 and JCache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I tried to setup second level caching with Redis, Redisson and Hibernate 5.3. Since redisson-hibernate only supports hibernate (4.x, 5.1.x, 5.2.x), I tried the JCache setup.
The example program crashes with the following exception if the first cache item should be written to Redis. Probably the Object Mapper (codec) configuration is incorrect:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1649
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


1650
redisson-spring-boot-starter 3.8.1 doesn't works
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson configuration
Because the file is encoded as UTF-8+ BOM instead of Utf-8. Causes PropertyLoaderUtils.loadProperties(resource); reading this file is garbled.
the key of the property as follows :
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1651
org.redisson.tomcat.RedissonSessionManager renders tomcat8 useless if Redis server is down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Exception thrown if Redis-server is down, causes apps to stop working.
This might be an intended behavior, but the presence of the centralized session backup is not mission critical for our system (only used for failover). But using this session manager will actually introduce a new critical error to our system, when/if the Redis server goes down.
A flag/setting where communication errors with Redis would be logged instead of causing a "crash" would be highly appreciated.
Tomcat uses the local session to service the request and ignores any store/find session issues related to communication with Redis-server.
An Exception is thrown.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1652
Memory leaks with LZ4/FST/netty
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm using LZ4Codec to serialize and deserialize my data. I'm noticing some unclosed streams which are wasting a lot of heap space.
These are the screenshots from the heap dump I took which shows the problem.
Steps to reproduce or test case
Using RLocalCacheMap and Composite Codec try to serialize and deserialize a few 100 objects. Do not shutdown redisson.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1653
Time to connect takes around 2 seconds
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I am trying to connect to redis it takes around 2 seconds. This started happening after I upgraded to 3.8.1 maven. This is the code used to connect. I initialize the connection every single time and close it down. Is there something I am doing wrong or is this a bug.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1654
Warning with sensitive user data dispatched by CommandDecoder
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When RedisTimeoutException occurs just throw the exception to the user code without printing any warning messages or at least do not include result of the GET command
We are storing sensitive data in redis cache. On rare occasions when GET command fails on timeout org.redisson.client.handler.CommandDecoder#completeResponse method prints warning message containing the command result which in our case is sensitive data stored in our redis cache
this is happening here : org/redisson/redisson/3.7.3/redisson-3.7.3-sources.jar!/org/redisson/client/handler/CommandDecoder.java:442
Since our code is also using slf4j for logging, this warning message is printed to the same file as other log messages and then is flushed to our log managing server.
At this point we don't have control on this data and thus it will appear in our logging server. Due to GDPR concerns and inner regulations in our company we need to anonymize all user data stored in our systems, but it is hard to do when we have no control on the data dispatched to logs.
While we will seek how to patch this for now, we think that other redisson customers could suffer from the same problem as we are and kindly ask you to remove sensitive contents from warning messages or set log message level to trace or debug or allow user code to control this.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1655
how can i write codec with Fastjson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson serialization will write class information by default, I want to write it with fastjson, but I don't know how to write
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1656
Unable to use anonymous runnable with scheduler
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When submitting runnable as anonymous class we fail on NPE in getClassBody method
redissonClient.getExecutorService(name).scheduleWithFixedDelay(() -> do something, 1, 1, TimeUnit.SECONDS)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1657
How to use spring beans inside executor service task
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
Is it possible to access spring beans from within executor service tasks somehow?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1658
CommandAsyncService blocks indefinitely [without OutOfMemoryError]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Similarly to #889
throw exception
Thread indefinitely park
Using RMapCache and configure maploader to DB(oracle).
Shutdown DB,
3.RMapCache get operation will be blocked.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1659
RRateLimiter.tryAcquire with timeout blocks forever
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If it's not possible to acquire a permission before timeout elapses, tryAcquire should return a boolean false.
Even if the timeout elapses, the method tryAcquire keeps blocked
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1660
Which readMode to use?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have Redis cluster with 6 nodes (3 masters and 3 slaves), and using redisson 3.6.5. In redisson cluster setting, we applied default value (SLAVE) on readMode.
Here are some questions on this setting:
What will happen if one of slave node fails? Will redisson detect the error and switch to master on Read, or it will try to connect to Slave only and throw exception?
If we use MASTER_SLAVE, read operation will go to master/slave randomly or it has a way to go to slave first, and then master when slave fails?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1661
Unexpected ClassCastException during RBatchReactive execution
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Calling RBatchReactive.execute() should complete successfully.
RBatchReactive.execute() triggers a ClassCastException to be thrown from org.redisson.command.CommandBatchService.handleSuccess(CommandBatchService.java:224) with the message of org.redisson.misc.RedissonPromise cannot be cast to org.redisson.command.BatchPromise
Steps to reproduce or test case
This was occurring in some code that looks like the following gist:
Due to the nature of the code in question so mild anonymization has been applied to it.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1662
RMap#putAllAsync() should allow configuring batch size
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
putAllAsync() itself should take care of the batch size, or at least allow the user to provide some chunk size. Increasing direct memory allocation is not a permanent solution because the input map size is indefinite.
When large number of objects are passed to RMap#putAllAsync(), the following exception is thrown:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1663
UnsupportedOperationException thrown when using Spring Actuator
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am trying to use Spring Actuator with redis as a single server but I'm getting UnsupportedOperationException at RedisHealthCheck so the application is considering redis DOWN
Actuator is able to perform health checks to determine the status of Redis server
java.lang.UnsupportedOperationException is thrown when Actuator tries to do the Redis health check
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1664
is not active! error while using pingConnectionInterval flag
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Since started to use the parameter pingConnectionInterval after a while the service being up we start getting the following errors on all redis operations:
Eventually leading to messages of the type:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1665
RBlockingQueue doesn't retrieve element
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
.takeAsync().whenComplete will retrivehead of the qeueu and evaluate it
we are not retrieve element from qeueu, but in redis I can see them.
But if offer from same service it's work
Steps to reproduce or test case
I have two microservices frirst retrive elements with RedissonQueueBundle
Second just offer element directly
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1666
Unexpected exception while processing command while taking a lock on a key
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Note:Same scenario works as expected when there is no exception or error inside the try block.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1667
Deadlock while obtaining lock
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Thread gets stuck while obtaining lock.
The same lock name was likely concurrently obtained and held by another thread possibly on another jvm, and then released.
Observed intermittently.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1668
Can Redisson be used for Tomcat session and application cache? Getting java.lang.ClassNotFoundException on read
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a webapp using Redisson to handle Hibernate cache, application cache and session persistence.
However, each time my webapp client attempt to READ back from Redis, Redisson give back an java.lang.ClassNotFoundException on every object saved in Redis.
If I remove all lib from the lib folder and disable the session manager, the webapp client work perfectly.
I suspect a class loader conflict, as Redisson's classes are loaded inside the Server Class loader, while the webapp classes inside the Webapp class loader. The sessions objects are working as all is handled at Tomcat level, but the client is jumping between both class loader.
Anyone was able to get both working altogether, or is it require to use 2 Redis Java client implementation, one for the Session and the other for the Webapps?
Tomcat sessions are saved.
Object are saved and restored from Redis in the Webapps
Tomcat Session are saved and restored.
Webapps objects are saved but cause a "java.lang.ClassNotFoundException" upon restore.
Create a plain tomcat instance.
Put redisson-all and redisson-tomcat jars in lib folder
Create a war with a 2 serializable entities and a servlet that read and save said entity in the session And the client directly (caching).
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1669
Dynamic map name in @Cacheable RedissonSpringCacheManager
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is it possible to use dynamic map names based on the parameter names in @Cacheable
Unable to set ttl and other configurations for dynamic maps
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1670
Redis address can not load when I use redisson-spring-boot-starter: 3.8.0/3.8.2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I use the config: spring.redis.cluster.nodes=redis1.test:3000  or redis://redis1.test:3000 or rediss://redis1.test:3000, the application can not startup.
the env is:
startup successfully
Got error:  Illegal character in scheme name at index 0: [redis1.test]:3000
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1671
Redisson Exception : java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am connecting to AWS Elasticache Redis via Redisson from my Amazon EC2 instance. After lots of request of redis connection, I get the following issue. Anybody has solution for it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1672
SnappyCodecV2 doesn't decode properly underlying data encoded by FST codec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1673
Timeouts during fail-over with single slave
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
During fail-over with a master and single slave Redisson reads may fail. I would like to request that new modes be added to org.redisson.config.ReadMode MASTER_PREFERRED, and SLAVE_PREFERRED (like Lettuce) to allow robust reads.
Redisson should be able to continue providing the application with reads / data instead of timeouts.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1674
Leader Election Recipe?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Sorry if this isn't the correct forum for this question.
Could redisson be used to perform leader election in a cluster? I don't really feel like adding Zookeeper or Consul to our current mix.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1675
RSemaphore not compatible with java.util.concurrent.Semaphore
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Just out of curiosity, why doesn't the org.redisson.api.RSemaphore interface extend the java.util.concurrent.Semaphore interface?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1676
Redisson script caching
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
According to the Redis documentation, script caching is recommended, using EVALSHA and EVAL only if Redis server does not have the script already loaded, but I don't see this behavior in Redisson when using EVAL.
This seems to be supported in Spring spring-data-redis using the default ScriptExecutor.
Is there any script caching option I am not aware of? Is this going to be implemented if missing?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1677
NPE in CommandDecoder
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It should get the entry save into Reddis
I got the following exception :
Steps to reproduce or test case
It is very hard to reproduce. It does not appears each time. I only got this error during a load test. It is very random.
We are in Spring 5 with spring-session-core in 2.0.5.RELEASE.
Redis is used to store the httpSession data.
Here is the redis data :
i also got NPE with this message
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1678
Redis Response Timeouts comming too often in ENA enabled AWS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Our application using Redis. We are facing response timeout problem and not sure what is the underlying cause.
If we use ENA enabled AWS instances, the problem occurs too often, if we use non ENA the timeout happens once in a while.
Below is sample log:
if we access redisson frequently, the issue would be observed in an hour. keys=1 million on M5.2xlarge.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1679
Question about clearLocalCache()
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Thanks for authoring and maintaining this great project.
We are considering moving over to Redisson to make use of it's local cache feature as it provides a performance boost comparing directly retrieving data from redis. Run into this when trying to clear local cache, seems like the cache was not cleared, everything stills stays. Is this the , what would be the best to way to clear all caches, could you shed more lights on this please?
Clears local cache across all instances
Local cache is not cleared, everything in local cache persists
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1680
BlockingQueue.take method doesn't survey failover (regression)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1681
RedisException caused by NPE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using redisson session manager in our application, and got RedisException sometimes due to NPE.
No exception should be thrown.
Error found randomly, and no more information where NPE was from.
Stack trace:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1682
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Why is there such an error?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1683
org.redisson.client.RedisResponseTimeoutException: Redis server response timeout (10000 ms) occured for command: (EVAL) with params: [if (redis.call;
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1684
redis server too many connections and last command is client
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1685
redis server too many connections and last command is "client"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1686
Question regarding codec for Result Set
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi I am trying to use redis-graph with redisson and have trouble figuring out how to read the result set that redis-graph (https://github.com/RedisLabsModules/redis-graph) returns.
A typical result set can look like this.
(empty list or set)
Ive tried a regular bytearray but get only the last line and then it times out.
Any tips?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1687
Default values for local cache in RedissonSpringLocalCachedCacheManager
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
What are default values for the mentioned below properties?
Are these values from LocalCachedMapOptions::defaults()?
I see that local caches work, but only ttl, idle and maxSize are defined.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1688
redisson-all-2.13.2.jar not compatible with jdk 1.7 version
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1689
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[]
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1690
ReplicatedConnectionManager shuts down executor it doesn't own
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When we pass an executor in the redisson config, redisson should never shut it down.
ReplicatedConnectionManager calls stopThreads from the parent class MasterSlaveConnectionManager.  The stopThreads method calls executor.shutdown() without checking who owns it.
Steps to reproduce or test case
This example should call stopThreads in the ReplicatedConnectionManager constructor because the config doesn't have any node addresses:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1691
Redisson reconnection issue in SingleServer mode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
actually our real application is running on Azure but I was able to compile a small application to demonstrate this issue locally. The main issue is that the reconnect behaviour of Redisson seems to be unreliable. Sometimes it works and sometimes it doesn't which seems to be rather independet of the choosen configuration options except for the retryAttempt and retryTimeout options. If those two options are too low the application is not able to recover in any case but this is expected behaviour of Redisson as far as I can tell.
Example project: redissondemo.zip
Am I missing something here?
Any help is appreciated!
Redisson is trying to reconnect after a failure / failover of the Redis server.
Redisson seems to be trying to reconnect but fails always except on a few non-reproducible occasions.
Steps to reproduce or test case
If everything seems to be running fine, stop the docker container with "docker stop ".
Wait some time and then start Redis again. I tried different intervals but it didn't seem to matter that much.
Depending on the set of choosen configuration options 1 - 3 the DEBUG log output varies but the end result is the same: no reconnect is going to happen. I tried it with option combinations "1;2;3", "1;3", "2;3" and with significantly lower values for the retryAttempts (option 3.1) such as 3 e.g.. As soon as the connection is lost any retry attempt seems to fail.
Although there seem to be exceptions from this behaviour. Sometimes the ConnectionWatchdog is taking action and is actually able to reconnect to the Redis server (Used configuration options: 1;2;3):
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1692
Add configuration to EvictionTask min and max delay
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I would like to be able to set the max and min delay times for the EvictionTask job, so i can ensure that the task will run every 5 seconds for example.
The task will increase the time between checks to until a max of 1800 seconds.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1693
Redisson can't resolve short DNS name
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Since version 3.8.2 Redisson failed to resolve short DNS name.
Steps to reproduce or test case
Configure redis full host name (in our case
redis-test.domain.com)
Add search domain "domain.com" to  /etc/resolv.conf
Verify that short name can be resolved with nslookup:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1694
Command execution timeout for redisson on lambda with aws elasticache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am running redisson in AWS Lambda functions connecting to a Elasticache redis cluster. The worflow of each lambda consist in 3 batch requests on average (2 read and 1 write).
No command execution timeout errors
Every once in a while redisson returns command execution timeout while fetching the cluster status through the command CLUSTER_NODES. Stacktrace is:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1695
Command succesfully sent, but channel [..] has been closed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have an AWS ElastiCache for Redis server running in non-cluster configuration. The connection is TLS enabled. Once in a while, we get this error when servers try to establish the connection with Redis server.
Steps to reproduce or test case
Once in a while whenever the services tried to connect to Redis server, I'm getting this error.
AWS Master-Slave Configuration with TLS enabled.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1696
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1697
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1698
How to dynamically switch databases
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How to dynamically switch other databases?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1699
delayedQueue cannot  get elements from blockingQueue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


1700
org.redisson.client.RedisConnectionClosedException received. MasterSlaveServersConfig.create function skips setting keepAlive flag.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The value associated with the key
When I debug happy case I am seeing the actual redisClients in connectionFutures in async method of CommandAsyncService have keepAlive = false. I suspect this may the root cause.
The connections seem to go stale after an unknown duration (verified that the server timeout is not affecting this)
Looking in more detail, I see MasterSlaveServersConfig create(BaseMasterSlaveServersConfig<?> cfg)
in MasterSlaveConnectionManager.java file is not setting keepAlive flag.
This is extremely hard to repro and I couldn't debug a failure case yet; but it seems like we cannot rely on redisClient abstracting connection handling unless we are missing a config.
Please advise.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1701
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1702
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1703
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1704
Transactional RLocalCachedMap takes alot of time while putting
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
: Transactional put Should take slightly more time than normal put
: Taking almost 3000 times more time
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1706
What is the best practice for setting local caches ttl against Redis caches?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is it correct if Redis cache ttl is the same as timeToLiveInMillis for local cache?
MY_CACHE:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1707
RLocalCachedMap fetches results even after disconnected from Redis Server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
: Should provide multiple strategies to choose from like whether to allow reads or not while disconnected
: Reads are allowed by default
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1708
RedisException: ERR max number of clients reached. channel:
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have been using redisson in my application, since last couple of weeks, I have been getting this error. Kindly help me root cause this issue.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1709
All lua script are sent to slot 0 only
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We use Reddison as a client for high load sharded Redis cluster consists of 8 nodes. Main use case -  big number of relatively small lua scripts. We use code like this to do it. (Used version is 3.7.5, but I believe same behavior is in trunk)
RScript script = redisson.getScript();
Long result = script.evalSha(RScript.Mode.READ_WRITE, loadedScript, RScript.ReturnType.VALUE, keys, values);
After some performance tests we noticed that load on Redis cluster nodes is uneven - CPU utilization on node which holds '0 slot' was two times higher then on other nodes. It happens because Reddison sends all scripts to '0 slot' and then this node have to 'MOVED' script to correct node for processing. This overloads '0 slot' node.
So we have to find a workaround to send scripts to correct node:
RedissonScript script = (RedissonScript) redisson.getScript(); // cast to class here to get right method
Long result = script.evalSha(correctMessageKey, RScript.Mode.READ_WRITE, JsonJacksonCodec.INSTANCE,  loadedScript, RScript.ReturnType.VALUE, keys, values);
So I wonder if this a bug or feature?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1710
Missing code on version 3.8.2 at Maven Central
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
When I debugged the class MultiDnsAddressResolverGroup and compared with this commit:
I found that the code deployed to https://search.maven.org/artifact/org.redisson/redisson/3.8.2/bundle is missing this line (that is supposed solve the issue).
Maybe this code is missing in the compiled version too?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1711
Question regarding AWS elasticache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am new redis and AWS elasticache and I am working on a legacy codebase which uses oracle coherent caching. I need to replace it with AWS elasticache and Redission does that. But me being new not able to find how to actually use Redisson for this. Elasticache endpoint is private so that cant be passed to redission client.
Please help me with providing an example so that i can actually progress on this
Thanks
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1712
Questions about performance of RLocalCachedMap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I'm playing with the Redisson's great feature for near cache, then did some benchmark testing on it.
It brings a huge performance boost compares to directly interacting with redis, however it's takes much longer than "real" local cache, especially for put operation, around 100~200 times longer. For instance, each Redisson fastPutAsync takes around 175536ns, while real local cache finishes in 1060ns; Redisson get takes 9737ns, real local cache takes 151ns. This can become quite noticeable for read/write intensive applications.
From the reading on document/wiki on RLocalCachedMap, it essentially keeps a local copy of the cache in application's memory, performance should be roughly the same as real local cache. Any thoughts / suggestions on the slowness of RLocalCachedMap please?
Thanks.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1713
java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.Long
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I got some classCastException :
Here the payload that redisson trying to decode :
If we check into the source code
at l:103 with see that you are trying to cast into a Long. On older version you used to cast it into an Integer.
Unfortunately i cannot decrease my redisson version because i have updated spring session in 2.x.x .
I think you can keep a cast into an Integer. I don't think people will configure the session ttl to more than 2147483647 seconds.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1714
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1715
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1716
Unable to send command! Node source: NodeSource
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The issue happened on multiple servers minutes after deployment
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1717
RLocalCachedMap Subscribe timeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1718
Exception occurred when redis cluster master-slave failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1719
Redisson 2.13.1+ no longer work on Java 1.6
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson 2.13.1 and above have the class files compiled with version 51.0 (Java 1.7), and will no longer work on 1.6.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1720
ZREVRANGEBYSCORE issue
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We use a score sorted set to store our user story timelines, these scores are in the form of timestamps
should return the list of stories but it returns empty.
Steps to reproduce or test case
When i run the same command from the redis terminal it returns the values
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1722
Jcache public V get(K key) Method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm Using Jcache with AWS Redis in replicatedServersConfig, but observed jcache get / put operation is always using  master node to for both read and write operations.
in my view get request should go to slave (read) node, put request should go to master node.
Please suggest anything to be changed in my configuration / correct me if i'm wrong.
my cache config:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1723
RedisResponseTimeoutException at getLockedLock for read operation in "replicatedServersConfig"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm using jcache  implementation and using AWS Redis servers in "replicatedServersConfig", i'm getting response time out exception at "getLockedLock" method. raised another issue  related to jcache.
Please do the needful.
Thanks,
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1725
RedissonClient.getMap("mapName") return only 100 datas
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when i try to get all values in a map redisson return only 100 values
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1726
Add RObject.getSizeInMemory method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1727
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1728
Does RedissonRedLock support Redis cluster Master/Slave mode?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In this issue#1333 (comment)  I found that RedissonRedLock supports Redis cluster mode. In the Redlock algorithm, I don't think it supports  Master/Slave mode.The description is:
In the distributed version of the algorithm we assume we have N Redis masters. Those nodes are totally independent, so we don’t use replication or any other implicit coordination system.
I am troubled. Does it support  type of  Redis cluster 1 ?
If it supports then how do I add a configuration, whether the master and slave are added or only the master configuration is added.
Which type should I choose,or they are all wrong?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1729
Local embedded redis stopped working with 3.9.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson should be able to connect to local redis running on port 6614.
Redisson won't start and throws this error:
So a few things to note.
I'm only having this issue with 3.9.0. 3.8.2 works just fine.
I tried replacing the address with "redis://127.0.0.1:6614", and I got the same error:
I also tried removing the "redis://" part and only include "localhost:6614" or "127.0.0.1:6614", and I got a completely different error, which is:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1731
sentinel bug?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
spring.redis.sentinel.nodes=192.168.1.241:26379,192.168.1.241:36379,192.168.1.241:46379
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1732
Add own Hibernate cache implementation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Current 3rd party implementation https://github.com/debop/hibernate-redis seems is not developed anymore and doesn't support hibernate 5.3
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1733
Unable to send command on Azure Redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I would like to ask for your help because I experienced a lack of connection with the PaaS Azure element of Redis Cache last Saturday.
The exception thrown is related to CommandAsyncService, please find in the attachment.
I’m using version 3.6.5 of redisson, in the following you find redisson.conf.
It seems that in that day the tomcat running on a VM could not write on Redis with commands HMSET and DEL, throwing the exception mentioned before. The immediate solution was to restart tomcat service so that connection was re-established.
Do you know if this issue is fixed in later versions? What would you suggest to do in this circumstances?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1734
ScheduledExecutorService schedule does not run subsequent executions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If execution of the cron task takes longer than its period, then subsequent executions should start late, but not removed.
When the cron task takes longer then its period, the subsequent scheduler is removed and the task is never run after.
Steps to reproduce or test case
Worker to run JobA:
When the worker starts it will execute the JobA only once. I checked the Redis and the scheduler key under JobA is removed after. This happens when the task takes longer to complete than rate.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1735
Can redisson allow 1 sentinel with configuration?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In each ENV, redisson works fine. I understand at least 2 sentinels can guarantee master->slave failover, but in our SMALL ENV, we only have 1 master, no HA required. we are forced to use redisson old version(3.6.0) as it allows 1 sentinel. The reason why keep sentinel here is to make it no difference with M and L environment, we can use very same redisson configuration and code in each ENV.
My suggestion is to make it configurable, so that redisson reject 1 sentinel configuration by default but allows user to enable it in case needed.
When in SMALL ENV, redisson will throw below exception:
throw new RedisConnectionException("At least two sentinels should be defined in Redis configuration!")
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1736
cannot stop by shutdown in spring data redis, redisson 3.9.0,Maybe a bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
spring use:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1737
Spring Boot starter fails with NPE on redisProperties.timeout reference
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Spring Boot application using redisson-spring-boot-starter runs without exception and connects to Redis server.
Spring Boot application fails to start with stacktrace due to NullPointerException in RedissonAutoconfiguration. The issue is that there is a reference to RedisProperties.timeout that calls timeoutValue.getClass() without first checking to see if the value returned is an Class and thus the NullPointerException is thrown. Added a spring.redis.timeout value to the configuration avoids the issue, but that shouldn't be required.
Steps to reproduce or test case
Only basic spring.redis.host and spring.redis.port configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1738
Add RTopic.countListeners method
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1739
Add spring data redis 2.1.x support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1740
Custom classes using Jackson must explicitly enable TypeId serialization if final
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Objects for values used in redisson classes such as RMap and RBucket can be  non-final classes without annotating explicitly.
When serializing non-final classes using Jackson, the type id is not used.  When reading such classes, redisson always explicitly passes Object.class to Jackson for deserialization which requires type id in "@Class" field causing missing typeid exception.
This is more of a problem using Kotlin due to final being the default modifier for classes, and the only modifier for data classes.   The errors and solution are non obvious.    Registering modules or explicitly attempting to force enableTypeId via ObjectMapper configuration does not work.
Annotating  the classes with @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY)  or forcing non-final classes, and not using any kotlin 'data' class does work.
Steps to reproduce or test case
Suggestion: The core cause is in the Redisson JsonJacksonCodec Encoder and Decoder.
The Encoder calls objectMapper.writeValue() using the object instance supplied -- this internally will resolve to the instance class (not the declared class of Object). The default Jackson encoding behaviour will only add type id if this is a non-final class.
The Decoder, on the other hand, explicitly passes in a Object.class as the type to deserialize. Object.class is ALWAYS non-final so will always require type id.
This fundamentally cannot work without additional type information being stored in redisson. Suggest, as Jackson APIs allow, to allow for passing in the and storing the class used when creating container objects and collections so that it may be explicitly passed instead of Object.class. Creative use of generic class instantiation can partially solve this in pure java for generics.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1741
tcpnodelay
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1742
Old master connection still existing in MasterSlaveEntry.writeConnectionPool after switchover(changeMaster)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In MasterSlaveEntry, after switchover(changeMaster), all oldMaster connections are kicked off from writeConnectionPool.
If changeMaster happens, meanwhile  old master connection is during reconnecting, old master connection will still exists in writeConnectionPool(even it becomes slave).
See below logs from example:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1743
Fundamental API design flaw -- with respect to encoding and serialization
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The stated purpose of the library behaves as documented and expected -- i.e. users should not need to be aware of implementation and it should "just work".   One stated goal/priority for reddison is that users can use existing or new java classes 'As Is' and simply use reddison as a transparent native object database.   This is a very compelling feature (which has been attempted many times over the last 30+ years).  Considering the maturity and feature rich nature of the product I nievely assumed that this would 'just work' as intended (of course accepting some edge cases that are problematic.)
In particular, with the variety of codecs, including Jackson -- which is if not the single most used JSON data mapper/serialization library, atleast in the top 3, that if a class could round-trip serialize with Jackson that class would be equally usable with Reddison -- this is explicitly stated (with some caveots).
By leveraging the work of existing encoders (like jackson) it is natural to assume that this is not magic -- it would work 'as good as' whatever encoder was configured, so if one has domain knowlege in that encoder and has created classes which behave nicely with that encoder then Reddison would indeed be a transparent 'Drop In' -- and be able to use the the other really awesome features provided.
It simply does not work this way, and can not work as stated with the existing APIs.
I believe this is due to a fundamental difference in how various encoders/codecs work, and not fully understanding the subtleties.   Some encoders work by always storing the type information with data so that deserialization is possible from the data alone with no external context or special per-instance configuration.    Other encoders (such as Jackson) prioritize round trip to user controllable serialization formats.   The concept being that the codec can be configured such that the output (JSON in this case) is produced in a form that either pre-exists (must be matched exactly) or 'user friendly' (intentionally undefined -- but again, assumed to exist and must be matched).
To achieve this, the default mode, and in fact almost all features of Jackson are designed to NOT embed type into the JSON data itself, but rather to make use of the serialization or deserialization dynamic context (and other out-of-band configurations) to be able to parse 'arbitrary' JSON 'as is' into the expect type.   This is fundamentally different approach and goals then codecs which produce 'black box' output and instead focus on minimal or no out-of-band context needed to round trip Java objects.
The side effect is that in order for Jackson to function properly (i.e. in the use cases it was primarily designed for), type information MUST be provided out-of-band in order to deserialize.
The exception, which is not commonly used, and which recently has been shown to be a severe security problem,  is the special mode of embedding type information with each JSON element.
These modes are not interchangeable and have non-compatible requirements, and in general are 'all or nothing' -- you must code for one or the other mode explicitly and consistently.
The current Reddison APIs cannot handle either mode correctly in many cases.  For example, RBucket, without extreme hacks, cannot round trip most non-primitive objects -- even basic Java Bean or POJO.
This is NOT solvable by simply overriding the codec and tweaking it somehow -- because internally, in intentionally non-exposed implementation code, the necessary usage of the core Jackson APIs are incorrect and inconsistent in at least a few places.   The default Jackson codec uses a non-standard configuration of the ObjectMapper which is not able to round-trip consistently given the implementation of the deserializer (which in many places pasess a literal Object.class as the target type)
I have found that it is possible to hack this on a case by case basis by 'creative' (i.e. probably will break many other things) mangling of the codecs -- on a per use basis -- It still requires every API call to use a distinct codec taylored for the type,  and I have no idea what will happen with nested RObjects -- or other internal code -- What this demonstrates, in my opinion, is that the API itself needs to be enhanced slightly to accommodate the behaviour of codecs which need out of bound type information,
not by making this a burden on the users -- particularly since this relies on understanding many details of the private implementation of Reddison to work -- with no assurance that ones understanding is fully correct or that the undocumented internal implementation will not change.
This essentially makes Reddison unsuitable for large classes of its intended use cases.  That is sad, as I was looking forward to making use of the AWESOME features it does provide -- to be blocked by a few fundamental API flaws.
Recomendation:
Solving this problem is not complex, but it cannot be done cleanly by end users, it needs to be implemented internally and exposed through the APIs.
There are various other products which do this exact thing that can be used as a model for what is needed.
Essentially -- every API which deserializes a user defined object MUST have some mechanism of providing the target class explicitly.   For example:  Jackson itself has a Class argument for every method which does deserialization.   This is not just an 'advanced' feature, its necessary for all but a few special cases.
cache2k https://cache2k.org/  solves the problem by making use of a rarely known, subtle feature of Java which provides a way to prevent type erasure of generics.   E.g.
This subtle 'trick' of creating a anonymous type explicitly (note the "{}" at the end -- critical), allows the cache to access the generic parameter types and use them later as needed for deserialization.
Using the first suggestion, I believe all it would take to make RBucket.get() to work properly is to add the class argument to get
Yes this is ugly and yes this breaks some of the simplicity of implementing interfaces that do not have this signature -- but at least it works reliably and doesn't require the end user to have deep domain knowledge of both the codecs and reddison to handle basic simple java classes as the framework is designed to do.   This would have to be done likewise to all the methods which deserialize top level objects.   Once the top level class is properly deserialized, all its internal references will work fine (if you allow Jackson to do it for you)  -- Jackson will use the declared type of the parents reference variable to deserialize the children.   All the subtleties of how to get this to work are then defered to jackson and whatever customization one needs to do via annotations and configurations are all Jackson problems.
That way you could truly state that "If a class round trips through Jackson using the provided ObjectMapper then Reddison will work correctly for that class without changes or custom configurations needed"
I do not know the extent this affects internal code -- this is why I am not attempting to implement this as a PR -- I suspect that I would need to fully understand all the intricacies of Reddison to make sure I got all the cases correct -- I believe the author is the best source of this domain knowledge.   By the time I fully understood all the code enough to make this change, I would probably end up writing my own version -- which is exactly what I did NOT want to do when I discovered Redisson.
Note that these suggested approaches are NOT simply having the user customizing the codec -- the codec is not the right place to store per-type per-use information, that needs to come from the callsite directly, either in the creation of the R or in its methods -- One could still store the necessary class information in the codec as is done in the JsonJacksonMapCodec -- but 'hide' this from the user -- that is an implementation choice.
For JVM Languages which handle generics 'better' , such as Kotlin, one could write a wrapper around Reddison to provide the simpilier APIs and manage the explicit class arguments in the wrapper.
This is what the Jackson Kotlin module does
Most of this module is a single source file that provides 'extension functions' which convert the generic template types into explicit class types to pass to Jackson.
This is not possible in pure Java, which is why cache2k uses its subtle 'trick' during the cache creation to extract the generics class types.
Note: that the problem exists in Reddison even without user supplied classes begin generic/templates --
this is an issue with even basic POJO type classes with no inheritance, generics, or other 'advanced' features -- Reddison simply does not supply the API's necessary to deserialize these properly using codecs like Jackson which require out of band (or context provided) type information.
You just cant get there from here ...
Note: I was very surprised that such a simple use case failed -- until I checked the test cases in the examples and all of them which would have triggered these problems were using basic types (String, Int, Long) not custom classes.  Those types do not need any out of band type information so they do work just fine.   Similarly, the Reference class handles this problem in its own way (and may in fact be unnecessary if the above suggestions are implemented -- not sure)
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1744
RDelayedQueue got delay long time when offer a task with negative time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
offer an element with delay time (-2515194, "2018-11-20 20:00:52") when create time is "2018-11-20 20:42:08".
I expect that it transfers to readyQueue right now.
but after a long time I got it from the readyQueue at "2018-11-20 21:00:10".
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1745
Add stream() methods with paging support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Add follow methods:
RedissonKeys.getKeysByPatternStream, RedissonKeys.getKeysStream, RedissonPriorityDeque.descendingStream, RedissonScoredSortedSet.stream, RedissonSet.stream, RedissonSetCache.stream, RedissonSetMultimapValues.stream
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1746
in MASTER_SLAVE readMode ,when master down,and read will be slow...
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In MASTER_SLAVE read mode, when redis master node closes, read will slow down. Is this a bug?
Here are my operations：
I started three redis server processes, (6379, 7379, 7380), 6379 as master and 7379, 7380 as slave.
Then I started three Sentinel processes (26379, 26380, 26381) to monitor the redis cluster.
Then I started redisson client by this config:
Then I read and write randomly to redis cluster：
Then every 50 milliseconds I can get a result.
But when I kill redis master node (6379), the get command of redisson will become very slow, which is jstack information.
Redisson version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1747
org.redisson.client.RedisConnectionClosedException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1748
RedisConnectionClosedException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1749
not support redis command APPEND
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
why redisson not support  redis command APPEND , decrBy?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1750
Local Embedded Redis does not work with 3.9.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Here is the other issue I created.
Just like the other ticket, as soon as I downgrade to 3.8.2, everything works just fine.
Redisson should be able to connect to local redis running on port 6614.
Redisson won't start and throws this error:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1751
Issues with RBitSet - Value does not stick
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am new to Redis and Redisson. I am trying to set a RMap<String,BitSet>. I call the put method on my RMap object, but when i do the get, I always get a empty BitSet. If i use RMap<String,RBitSet>, iterating over the map results in a "java.lang.ClassCastException: org.redisson.RedissonReference cannot be cast to org.redisson.api.RBitSet"
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1752
The Redisson connection to Redis master node will break down after Redis slave node is up from down
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have application using Redisson to access Redis cluster(3 masters+3 slaves).
We have a test case which is to shutdown one or more Redis slave nodes then take it up.
We don't expect there is any Redisson Connection broken on the master nodes since we only take action on the slave nodes.
It is found after Redis slave node is shutdown and taken up, the Redisson connection to its master node will be broken.
By checking the Redisson 3.9.0(also the latest 3.9.1), it is found after a slave node is up, on its master node, Redisson will try to release the connection from all others except this slave node.
Here "all others" has included the connection from the application.
MasterSlaveEntry.java: Function "public boolean slaveUp(URI address, FreezeReason freezeReason)"
Not sure my understanding is correct or not.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1753
how to use the watch in redisson?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
i try to use watch commond in a lua script，but it doesn't work,throw the exception like this
"This Redis command is not allowed from scripts"
so, does redisson have a way to support watch？
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1754
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1755
Spring Session keyPrefix setting isn't used in session name
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1756
[ANNOUNCEMENT] EOL of 2.x version by 1st February 2019
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I decided to drop further development of 2.x version by 1st February 2019. Its amount of downloads takes less than 5% of total downloads and decreasing each month, according to maven repo statistics. If you haven't yet moved to 3.x version then I recommend to plan such migration in the nearest time.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1757
ByteArrayCodec does not work with RedissonSession
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
having this config for the redissonclient and using @EnableRedissonHttpSession should not fail with ClassCastException
using above configuration and RedissonSession we get a ClassCastException
Steps to reproduce or test case
follow but also add ByteArrayCodec as the default codec
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1758
3.8.0 Heap dump analyzer concludes ClusterConnectionManager is #1 heap memory leak suspect
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Summary
noticed heap memory slowly increases in service
service uses Redisson's 'getList' operation
heap dump analyzer shows ClusterConnectionManager as number 1 heap memory leak suspect due to 1 instance grew to 1.8GB size (screenshots below)
Question:
is this expected for one Redisson instance to have ClusterConnectionManager grow to 1.8GB?
Steps to reproduce or test case
use Redisson getList operation under load
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1759
setting to expire time
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Description
Hello,i am using spring boot redisson starter in version 3.8.2. I am confusing with the expire() method and remainTimeToLive(). I learned that the remainTimeToLive() method return -1 to indicate the key will never expire,-2 to indicate the key does not exist.However,in the method expire() ,when passing -1 will result in the key not exist,passing -2 will result in the key never expire.
I gets the result by my own test case.I want to know, if that is the design or is a bug?
Thank you!
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1760
RedisTimeoutException when ha switched
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
none
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1761
Spring xml file can't set pingConnectionInterval to BaseConfig
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The redisson-1.2.xsd file dose not add the pingConnectionInterval(ping-connection-interval) attribute to "baseConfig" , so when using the spring xml can't set the pingConnectionInterval properties to BaseConfig. Can add the pingConnectionInterval attribute to the redisson-1.2.xsd file?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1762
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1763
Race condition in RedissonLock subscribing to pubsub channel
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are currently using redisson for, among other things, distributed locking. In our use case, we can have hundreds of unique fair locks being acquired many times, usually for short periods of time (~1-2 seconds).
During testing, we noticed that sustained load eventually, but consistently, results in threads failing to acquire the lock. To try to pinpoint the problem, we added extra logging in various places in code path used by RedissonLock. What we found was that it sometimes took a long time for the lock to subscribe to its pubsub channel, by which point the unlock message was already published. This results in the thread waiting on entry.getLatch().tryAcquire(ttl, TimeUnit.MILLISECONDS); until failure.
In other words, the sequence of events seems to be:
thread 1 acquires a lock
thread 2 tries and fails to acquire the lock, initiating pubsub subscription
thread 1 releases lock (semaphore is not released since nothing is waiting on it yet!)
thread 2 completes subscription connection and waits on semaphore, eventually timing out
There seem to be two places where this delay happens:
Acquiring an AsyncSemaphore in  the PublishSubscribe::subscribe method
The 'await' call in RedissonLock::tryLock
Are we missing something here? It seems strange that it can take upwards of several seconds for the lock to subscribe to its pubsub channel.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1764
NPE in CommandDecoder
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We've problem with redisson-tomcat 8-3.9.1. / redisson v3.9.1. After sime kind of classes modification, the session manager stops working consequently it stopped Tomcat. Tomca'st log contains following fragment:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1765
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1766
RoundRobinLoadBalancer doesn't distribute load equally if one of slave nodes was failed
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1767
Spring Session does not work with default JSON codec when CSRF token is put to session by spring
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1768
Problem with radius() method and AWS ElastiCache cluster and readMode=SLAVE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
A call to retrieve the items from a RGeo key based on radius should work in an AWS ElastiCache replicated setup using readMode SLAVE
Since all these calls are considered read-only by Redisson as opposed to write by Redis/ElastiCache, they are all sent to read-only slaves. We get the exception below instead. Please note I've masked actual IP addresses and host names with x's, and replaced the key names and coordinates.
READONLY You can't write against a read only slave.. channel: [id: 0xad662a07, L:/xx.x.x.230:46140 - R:xxx-01.xxx.0001.use1.cache.amazonaws.com/xx.x.xx.xxx:6379] command: (GEORADIUS), params: [{geo}geoKey:coords, -100.000000, 30.000000, 50.0, mi, ASC]
Steps to reproduce or test case
Configure Redisson to use a replicated ElastiCache cluster with readMode=SLAVE and use radius() method for a RGeo object
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1769
Unexpected ClosedChannelException during operation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This error occurs regularly (about every 3-5 minutes), I’ve noticed that when it happens the freeSubscribeConnectionsAmount  is 0, could it be related to that?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1770
Documentation for Redisson reactive collections
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Is there anywhere I can read about how to use Redisson reactive collections, especially queues and maps?
I found practically nothing about it in the documentation.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1771
RedissonSessionManager - Tomcat - User Session expiring 30 minutes after initial session creation regardless user is actively making transactions and ttl being reset.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson session manager is creating sessions which is getting expired after 30 minutes even if the user is actively making transaction. Who is controlling the session expiry?  in tomcat web.xml session timeout is set as 30 minutes.  when user is making active transaction, redis desktop manager is showing that the ttl value of the session is getting reset to 30 however still the session is getting expired exactly after 30 minutes of initial session creation. so definitely ttl value which is getting reset to 30 minutes is not deciding the session expire. which factor is expiring the session? How and where that parameter can be set for redisson session manager so that session does not expire when user is actively making transactions.
If user is actively making transactions, same session should be active all the time since the time user is active.
Session manager  expiring the session after 30 minutes since initial login/session creation time even if user is actively making transactions.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1772
Redis URL not start with redis:// after update to 2.14.1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Run successfully
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1773
Reddison tomcat session manager - unhandled exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We're using : Tomcat8.5
When develop it might happen, that serialized session is not able to deserialize due modification in Class
(add/remove fields), in such cases redisson throws java.lang.ClassCastException, it's quite OK. But session manager doesn't catch it in findSession() method:
would be better if it catch it and return no-session.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1774
Redisson Spring Boot doesn't start properly without lettuce or jedis in classpath
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1775
two thread get the same lock by trylock?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1776
3.7.5 , Unable to get connection! Node source: NodeSource Azure Redis Service
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Connect the Redis service and get the correct value.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1777
NullPointerException in Spring Session
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Unable to decode data.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1778
Pooled connection closed after MOVED redirection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1779
Implement Spring Data ReactiveRedisConnectionFactory
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1780
JsonParseException: Unrecognized token '': was expecting ('true', 'false' or 'null')
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
On the redis-cli, when I run:
It is throwing an exception.
Caused by: com.fasterxml.jackson.core.JsonParseException:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1781
Parse URI error,  Illegal character in authority at index 8
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello ，I got a error when starting up the application.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1782
RCacheMap.putIfAbsent unconditionally updates TTL if not absent
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1783
Add getCountDownLatch, getSemaphore, getPermitExpirableSemaphore, getFairLock methods to RMap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1784
Documentation of custom builds.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If I build the source as-is I get the 2.4.x version of Redissson, but say I want the 3.9.x version instead. What's the correct way to do it? I can't find any documentation about custom builds.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1785
Add getSemaphore, getPermitExpirableSemaphore, getFairLock, getLock, getReadWriteLock methods to RMapRx and RMapReactive
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1786
Add getReadWriteLock, getCountDownLatch, getSemaphore, getPermitExpirableSemaphore, getFairLock methods to RSet and RSetCache objects
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1787
Add getReadWriteLock, getSemaphore, getPermitExpirableSemaphore, getFairLock, getLock methods to RSetRx, RSetReactive, RSetCacheReactive, RSetCacheRx objects
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1788
What is equivalent of JPA entity manager in Redisson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Not an issue looking for some help with Redisson.
I would like to use Redis as a cache manager in order to cache JPA entities coming Coherence Caching. I am new to Redis and with my research found out redisson to be a good solution for the problem. So i am using Redisson Live object as replacement of JPA entities but i dont know to handle those in Redis Cache like JPA entity manager what shall i use in Redisson in my spring boot application
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1789
Redisson sentinel mode error - At least two sentinels are required
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using Sentinel mode for Redis. I am using Redisson Client version 3.9.1
The configuration of Sentinel using Redisson:
I am running two sentinel servers and one Redis master with no slave. This is just a setup on my local environment.
Output of some commands:
Whenever I am running my Spring Boot Application, I get the following error:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1790
can redisson be aware of data change in redis
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When I change data in Redis using 3rd Library other than Redisson, e.g., Jedis, I'd like Redisson be aware of that and sync the changes to local cache.
Don't know yet, so I ask.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1791
Implement Cuckoo filter
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1793
Sentinel Connection does not recover after +tilt mode entered on a slave
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Client connection recovers after one of the slaves recovers from the tilt mode
Client stops communicating with slave, and all commands to that slave time out
Steps to reproduce or test case
Client running on the master node gets the down and up events
But the client never recovers. From this point on, write request to master work fine, but readonly calls, which routed to slaves  time out and redisson considers this node disconnected although it is connected , and retries forever
The Big problem with this, is that it creates instability in our app, and the partial operation of Redisson in this situation is confusing.
This happened after we upgraded to 3.7.1 and did not change configuration of Redis
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1794
DecoderException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1795
Android URI Fatal ERROR
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1796
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1797
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1798
RMap.getAll throw ClassCastException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1799
Unable to connect Redis with SSL over Route53  in AWS.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have created Redis5.0.0 cluster in AWS with in-transit and auth enabled.  I also have entries in Route53 that point to Redis cluster.
When I use Route53 URL, I am unable to connect to redis cluster. When I use direct end points of Redis cluster, connection is successful.
Issue I identified: While using Route53 URL, certificated were issued by different host as compared to Route53 URL. Thus, certificate could not be validated.
How do we disable SSL certificate verification?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1800
Fallback on DB if Redis cache fails to handle requests
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Caused by: java.nio.channels.ClosedChannelException
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1801
Redisson spring XML configuration and lockWatchdogTimeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Have possibility to set lockWatchdogTimeout property in xml redisson:single-server configuration.
Possible only in "by hand" creation of Redisson client.
Please, explain, how to do it now the best way, when client is creating using xml-config.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1802
NPE in CommandPubSubDecoder
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1805
[Gradle] Android Studio URI Fatal ERROR
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1806
redisson-tomcat-8 share session
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
1.login the gy-center sys, test some apis
2.wait long time such as 2 hours not to operate gy-center api
3.the 500 Internal Error occurred like screenshot
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1807
init so slow
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I found in spring boot 2.0.3 redission init so slow
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1808
RMapCache element expiration doesn't work with map size = 1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1809
drainTo when only one element exists
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
queue should be empty after calling drainTo()
if only one element exists, after calling drainTo() element still exists in the queue
Steps to reproduce or test case
create a redisson blocking queue
add only one element
call drainTo on the queue
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1810
java.lang.IllegalArgumentException: Redis url should start with redis:// or rediss://
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Deserialization works as expected when key doesn't exist on given node
Exception is thrown
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1811
The connection not reconnect
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
related #1583   Channel Inactive but the event not catched by ConnectionWatchdog.channelInactive()
I think it is the same as #1583 ,  when I use kill -9 redisPid, then restart the redis, it seems work fine. But when the program run one or two days,  this issue appeared. I guess there may be a network problem that caused ConnectionWatchdog.channelActive not to be triggered. Is there any parameter setting to avoid this problem?
The exception stack:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1812
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1813
RedissonSession#changeSessionId doesn't change the id in redis.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When call RedissonSession.changeSessionId(), the session id did not change in redis. So, when call another request , redisson cannot find the session in redis.
Steps to reproduce or test case
spring boot autoconfig with single mode.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1814
zRevRangeWithScores does not work properly in Spring RedisTemplate
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I found a problem with the command declared by ZREVRANGE_ENTRY in the RedissonConnection class. It should be ZREVRANGE, not ZRANGE.
redisson version :3.9.1
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1815
Wrong command timeout for check master functionality
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When usingreplicatedServersConfig configuration you cannot set low retryAttempts & retryInterval without getting command execution timeouts for the check master functionality, which ensures that the client knows which nodes that are master and which aren't.
The timeout for getting a connection, sending the command and waiting for the response is calculated by retryInterval * retryAttempts in the version of redisson that we use currently (2.8.24).
From what I can see the command timeout calculation was introduced in following issue, #1280 (commit was kinbod@387ed74)
It actually seemed to have changed in following commit, 338f9d0, which is included in a later version than we use currently. Now the command timeout is instead set by what timeout value you have set. This commit would probably get rid of the exceptions for command execution timeout for our application, since it uses timeout instead of retryInterval * retryAttempts.
I suggest a change to make this a configurable value for the replicatedServersConfig. This would make it would be possible to have very low values configured for timeout, retryAttempts & retryInterval without it affecting the check master functionality.
Since checking if a node is master is scheduled to be done periodically in the background it is not that important, at least for us, that this will timeout quickly. It is however important to us that we do timeout quickly for the app/user initiated commands. Making this value configurable would make sure that it possible to configure redisson for such a scenario.
The timeout for checking if a node is master or not, using INFO REPLICATION command, should not be shorter than the total time of command timeout and server response timeout for user/app initiated commands. I expected the time for the timeout to be calculated as (retryInterval * retryAttempts + 1) + timeout to give it the same amount of time to get a connection, send the command and await the response as user/app initiated commands.
The timeout is calculated using retryInterval * retryAttempts. This seems wrong since it makes the total timeout shorter compared to an app/user initiated command. I would expect it to be at least the same amount of time by default.
Steps to reproduce or test case
Add a latency toxic higher than 50 ms to one of the redis nodes, and ensure that your java application uses the address and port exposed by toxiproxy.
Update your java application to use the redisson configuration defined in this issue.
Start your java service..
You will now get exceptions starting with the message text:
Command execution timeout for command: (INFO REPLICATION)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1816
Can't execute CLUSTER_NODES,which version solved?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
@mrniko hello,i had view some close issues,but i dont know which version  really solved this problem.
redis on port 7001 is master
redisson version:2.8.2
the following is my error log
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1817
how to set the 'pingConnectionInterval' attribute in spring xml?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1818
Add Hibernate Region Factory with JNDI support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This factory should locate Redisson in JNDI tree rather than creating a new one.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1819
Add Tomcat Session Manager with JNDI support
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This manager should locate Redisson in JNDI tree rather than creating a new one.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1820
Redisson exception message include password as plain text which is insecure when print in log
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Exception stack/message print password as:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1822
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1823
Why does readAllValues not using local cache in LocalCachedMap?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LocalCachedMap.readAllValues() should be very fast, using local cache and should  not query redis.
LocalCachedMap.readAllValues() cost 100ms+ to read 800+ POJO objects.
In redis-cli monitor, I saw incoming query by redisson
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1824
Alleviate threadId dependency
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If threadId can be replaced with a generated controlId it will be perfect to use in no thread centric programmation like, fibers or kotlin coroutine.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1825
Command execution timeout for command: (INFO REPLICATION)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
Already checked the network latency, CPU, memory, everything seems to be normal when the exception happens.
This happens around once a day or less, pretty consistently, usually during midnight when system is idle. Seems to be related to reconnection / retry strategy, already tried to bump up retryInterval and retryAttempts following the suggestion in #576.
Full stack trace:
Any inputs are welcome, thank you!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1826
Redisson will try to connect to removed nodes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson seems to keep the connection to the removed node, and try to reconnect after I shutdown the node. As the figures shown, I had removed 11.4.66.112:43791 and the log confirmed the node had been removed. But Redisson was still trying to connect to the node. After resetting and restarting the node, Redisson reconnected to it and leaded "CLUSTERDOWN Hash slot not served" exception.
When will Redisson distribute the new version that fixed some bugs about "MOVE"?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1829
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1830
NPE after upgrade to 3.10.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1831
RBlockingQueue.pollFromAny should honor slots
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RBlockingQueue.pollFromAny should send the appropriate number of BLPOP instructions to the appropriate number of masters in a redis-cluster configuration.
RBlockingQueue.pollFromAny sends a single BLPOP instruction regardless of hash-slots and sometimes returns a CROSSSLOT error.
Steps to reproduce or test case
Set up a multi-node redis-cluster with multiple slots ranges going to different masters.
Connect redisson to redis-cluster.
Call RBlockingQueue.pollFromAny with at least two queue names that reside on different masters.
See exception thrown.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1832
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1834
ERR command eval not support for normal user
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1836
LRUCacheMap ArrayIndexOutOfBoundsException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No ArrayIndexOutOfBoundsException
Throwing ArrayIndexOutOfBoundsException when setting object into HTTP session using setAttribute
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1837
RGeo.pos broken
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
geo.pos(element) returns a map
Throws exception for trying to cast an ArrayList into a Map
Steps to reproduce or test case
It seems that on RedissonGeo.java line 137 you are using a ListMultiDecoder rather than a GeoDistanceMapDecoder or something more appropriate.  I tested this on 3.7.3 and it was still there.  You should probably have had a unit test for this API.
Couldn't confirm 3.10.0 due to inability to find list of dependencies to import
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1838
Unable to decode data & NPE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the code run in high concurrent environment appear so many of the exception
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1839
changeMaster failed cuase constantly "RedisTimeoutException: Unable to get connection"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Master connection pool can be re-established later even if participal changemaster failed in redisson.
If participal changemaster failed,  then always throw "RedisTimeoutException: Unable to get connection" and cannot be recoverred.  And seems there are two masterEntry target to both old and new master address.
Steps to reproduce or test case
If any changeMaster activity failed and got "Can't change master to: redis://[2a00:8a00:4000:20c::87:ace]:6379" error, then masterConnection pool will not able to get connection in later phase even master connection recoverred.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1840
Could  `RSetMultimapCache` support Read-through strategy?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RSetMultimapCache support Read-through, Write-through and so on.
Read-through strategy
If requested entry doesn't exist in the Redisson Map object when it will be loaded using provided MapLoader object.
Write-through (synchronous) strategy
When the Map entry is being updated method won't return until Redisson update it in an external storage using MapWriter object.
Write-behind (asynchronous) strategy
Updates to the Map object are asynchronously written to external storage using MapWriter object. Threads amount participate in write operation execution in background are controlled by writeBehindThreads setting.
This feature only available for RMap, RMapCache, RLocalCachedMap and RLocalCachedMapCache objects.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1841
NPE at startUp onMessage ·41 ·
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
I got this issue at my application startup. It is not happens at each startup
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1842
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1843
Why function of SingleConnectionManager.create skip set keepAlive?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Actual client is keepAlive
Actual client is not  keepAlive
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1844
How to disable logger?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
slience log
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1845
RedissonClient still points to failed AWS Elasticache Redis node when failover happens
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I tested AWS Elasticache Redis failover (manual test). First I started my app which creates one  Redissonclient. It established 67 connections to primary Redis node. Then I manually did failover primary test.
All 67 connections point to new primary Redis node.
33 connections still point to previous (failed) primary Redis node, 34 connections point to new primary Redis node.
Steps to reproduce or test case
Start my app which creates one Redissonclient.
Go to AWS Console, Elasticache, Redis and select redis cluster you are using. It shows all of nodes of the cluster. Check the primary node, go to Action and select "Failover primary".
Wait for a while, run step 2 command, out of 67 connections, half of them are pointing to previous primary node, half of them are pointing to new primary node.
From AWS Console, if you select previous and new Redis primary nodes, then look at "Current Connections" of CloudWatch metrics, you can get the same result: Redisson client points to both previous and new Redis primary nodes. Following screenshot shows Redis primary node failover from 003 to 004.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1846
Slave connection will not recover from freeze mode after failover
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi!
I am testing failover behavior of redisson on AWS Elasticache in replicatedServers mode with one master and one slave. I am using read mode MASTER_SLAVE. After the failover is finished redisson correctly detects the new master and redirects all traffic to the master. The slave needs around 5 minutes to recover on Elasticache. Redisson is continously checking that connection, but after recovering that connection it does not move traffic to the slave.
Traffic should again be load balanced between master and slave after failover is completed.
Connections to master and slave are established but all traffic is routed to master.
By debugging i identified that the slave connection will remain freezed with FreezeReason Manager.
Steps to reproduce or test case
Start app with replicateServers mode with one slave and one master
Start failover on AWS console and wait until it is finished.
Watch traffic on slave. -> nothing
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1847
org.redisson.client.RedisTimeoutException: Subscribe timeout:(7500ms)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1848
DefaultSavedRequest cannot be cast to SavedRequest
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I did it according to your configuration.But there was a problem：
so，what should i do？
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1849
Question about api(RMap,RSet....) use
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
If there are 10000+ values in a RMap. Why do I take all the values out when I use it?
for example:
RMap<String, String> rmap = redisson.getMap("TEST")
Then this map is full of all values。But  I just want to store a value in the map, no need to take out all the values. I just want to get a instance of RMap whithout all of value.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1850
DefaultSavedRequest cannot be cast to SavedRequest
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I did it according to your configuration.But there was a problem：
java.lang.ClassCastException: org.springframework.security.web.savedrequest.DefaultSavedRequest cannot be cast to org.springframework.security.web.savedrequest.SavedRequest。
so，what should i do？
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1851
Fails when trying to read yaml config
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
To load config values from redisson.yaml
Tries to load redisson.json first and aborts even if redisson.yaml is present
Steps to reproduce or test case
Create a redisson.yaml config and without a redisson.json config present.
The error is in RedissonRegionFactory.java on line 126. A possible fix would be to nest the config loading like it's done when loading a file without the class loader.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1853
RBloomFilter.expire only deletes Bloom Filter hash, not string
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Problem
I initialize a bloom filter like this：
mostly is works,but sometimes the key likes "Birth:Msg:100000000901:612" is not deleted,and the config hash is deleted
Env details
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1855
Unable to decode data +PONG
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1858
RMap.readAllKeySet() not working : Its calling HGETALL instead of HKEYS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Accorking to Redis command mapping RMap.readAllKeySet() should internally call HKEYS but its calling HGETALL
Error:
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1859
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1860
Why does RMapCache is designed to use Hash instead of simple key-value structure?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am curious why RMapCache is designed to use Hash instead of simple key-value structure? Simple key-value can use TTL while Hash cannot. What benefit does RMapCache get when using Hash compared with using key-value?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1861
Tomcat Session expires in Redis earlier than scheduled by Tomcat
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1862
simple type, class java.lang.Object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Type Exception Report
Message Unexpected exception while processing command
Description The server encountered an unexpected condition that prevented it from fulfilling the request.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1863
Connection problem when using Cluster Servers: URISyntaxException: Illegal character in scheme name
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The above code throws an IllegalArgumentException exception.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1864
RedissonSessionRepository subscribe and process too many keys
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
In RedissonSessionRepository.onMessage(), if a body not starts with "redisson_spring_session:", just return.
In my application, there are other keys contains char ':'.
RedissonSessionRepository try to HGETALL a session key not exist.
It's not necessary and print a lot debug log:
acquired connection for command ...
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1865
Problem to deserialize object with jackson
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi guys,
I have two applications, one read and another write on redis:
My entity
For save i use this code:
The value is saved in redis just like that:
My problem is when I try to read the redis list at another java application.
I have a method that use this code to read the list:
But when i execute the project i receive this error:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1866
Spring cache abstraction with redisson stored all cache data in one map.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using redis as cachig solution with Redisson as java client client.
I am doing it with sping cahce abstraction.
So my I have noticed redisson sotres data in redis as whole map and inside that map I have all my cahce data.
Is it possible that I can store all data individually as key value directly to redis.
Currently,  The way data is stored in redis is:  it has one TestsCacheMap and inside that map all the cahce data is stored
TestsCacheMap
Problem with this: If I am using redis cluster then this map will be stored in one redis node so all my data will indirectly stay on one node at a given time.
But I am looking for the way which directly stored key value in redis:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1867
RedissonSessionManager throws java.lang.ClassNotFoundException if readMode=MEMORY
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1868
Return the same object in http request processing when session.getAttribute is called, add any "mutable" objects return from session.getAttribute to a tracker that will update Redis session key values at the end of the request processing
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When web application gets an object from the http session, then the same object should be returned during the request processing instead of returning deserialized version of the object each time.
Also each object that is "mutable" should be kept track on and at the end of the request processing should be updated to Redis server as web application could have altered the object without invoking session.setAttribute
When in readMode=REDIS each time session.getAttribute will return a new object instead of returning the same object returned by the first session.getAttribute during request processing.
When web application retrieves an object from the session and alters it then at the end of the session the Redis server won't be updated with the updated copy of the object.
Steps to reproduce or test case
Try to get the object in readMode=REDIS and each time a new copy is returned during the same request processing
Try to update the object returned by session.getAttribute - the modified version of the attribute won't be in Redis server at the end of the request processing and the next request processing will have the old version of the object deserialized from Redis server
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1869
Can't delete/cancel scheduleWithFixedDelay Job which is running
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redisson 3.10.0
When a scheduleWithFixedDelay job is running, cancel the job using cancelTask, the job can be terminated. But when the job is over, the taskId will be inserted into redis again.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1870
RateType.PER_CLIENT in RRateLimiter does not work.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Each client should acquire their own permission when using RateType.PER_CLIENT in RRateLimiter.
When one client acquire the permission, the other client fails to acquire the permission at the same time even though using RateType.PER_CLIENT.
Steps to reproduce or test case
 By the way, I checked the source code of  method "tryAcquireAsync" in class "RedissonRateLimiter" , I found the condition judgment below does not work:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1872
Getting Redisson is shutdown
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Not throwing RedissonShutdownException
Throwing RedissonShutdownException
Steps to reproduce or test case
One of our WAR did not start and I thing this have something to do with RedissonShutdownException
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1873
throws exception when invoke shutdown method in redissionClient
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1874
java.lang.NullPointerException when trying to get attribute from session
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1875
RScoredSortedSet.iterator() search by pattern
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1876
search by pattern
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1877
Caused by: java.lang.IllegalStateException: incompatible event loop type: io.netty.channel.epoll.EpollEventLoop
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Caused by: java.lang.IllegalStateException: incompatible event loop type: io.netty.channel.epoll.EpollEventLoop
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1878
java.lang.IllegalMonitorStateException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
singleServerConfig: idleConnectionTimeout: 10000 pingTimeout: 1000 connectTimeout: 10000 timeout: 3000 retryAttempts: 3 retryInterval: 1500 reconnectionTimeout: 3000 failedAttempts: 3 password: subscriptionsPerConnection: 5 clientName: null address: "redis://127.0.0.1:6379" subscriptionConnectionMinimumIdleSize: 1 subscriptionConnectionPoolSize: 50 connectionMinimumIdleSize: 10 connectionPoolSize: 64 database: 0
Normal spring MVC + spring boot project.
The uuid value in the redssionClient in multiple threads is the same.
Do you need to create a new redissonClient every time you request it?
I am simulating 1000 requests and this exception appears about 5 times.
My English is poor. Sorry.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1879
RedisTimeoutException after long time of running
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson must reconnect to the server if the connection is lost.
It seems to didn't even try to reconnect.
Steps to reproduce or test case
We are using AWS as the Redisson hosts, and OVH as the Redis server host (with a ping between 10 to 30 ms max from one server to the other one).
Let the server run for some hours (3hours seems to be enough), then try to do a request to the server.
You'll get this kind of error:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1880
radiusWithPosition returning RedissonReference instead of actual type
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
There seems to be a weird bug when using RGeo with radiusWithPosition(params) method.
Following code snippet:
throws
java.lang.ClassCastException: org.redisson.RedissonReference cannot be cast to com.abilium.project.map.entities.CustomObject
However, using this.geo.radius() returns the object list correctly.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1881
Constructor threw exception; nested exception is java.lang.NullPointerException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1882
"RedisException: MOVED redirection loop detected" is popped out after Redis Master nodes down and up
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have application using Redisson to access Redis cluster(16 masters+16 slaves).
We have a test case which is to shutdown one or more Redis Master nodes then take them up.
We expect after the action above(Redis Master nodes down and up), the Redisson can still find the right node when accessing Redis.
For example, there 2 Servers 192.168.0.78 and 192.168.0.79.
There are 8 master Redis nodes on 192.168.0.78 with port 6000-6007, the slaves of the 8 masters are 6100-6107 on 192.168.0.79.
The same, there are 8 master Redis nodes on 192.168.0.79 with port 6000-6007, the slaves of the 8 masters are 6100-6107 on 192.168.0.78.
The test case is that all the Redis nodes on 192.168.0.79  are shutdown then taken up.
So after shutting down, all the Redis nodes on 192.168.0.78 become Master. And after the Redis nodes on 192.168.0.79 are taken up, the Master Role of 6100-6107 on 192.168.0.78 will be switched back to 6000-6007 on 192.168.0.79, which is done by another script according to our function definition.
At that time, Redisson will report the exception like below:
org.redisson.client.RedisException: MOVED redirection loop detected. Node //192.168.0.79:6001 has further redirect to //192.168.0.79:6001
at org.redisson.command.CommandAsyncService.checkAttemptFuture(CommandAsyncService.java:997)
The below is the information of “monitor” on 192.168.0.78:6103:
It seems the request which should be sent to 192.168.0.79:6003 has been sent to 192.168.0.78:6103, which makes 192.168.0.78:6103 get extra load.
So it means the Redisson sends requests to the wrong Redis nodes after the action above, which is regarded as a wrong behavior.
Steps to reproduce or test case
Like the "", setup Redis cluster on 2 servers with each having 8 masters + 8 slaves, the slaves should belong to the masters on the other server. Then shutdown and start all the Redis nodes on one server. Meanwhile, keep the Redisson sending requests to the Redis cluster.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1883
RedisTimeoutException: Unable to get connection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Should work without any exception.
Getting the following exception intermittently:
Steps to reproduce or test case
I have no idea when this occurs.
ReplicatedServers. Please let me know if any specific setting is required.
What are the possible reasons for this exception? How to fix this?
Well, we don't have too much load on the servers.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1884
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1885
connection closed exception not ignored in Chinese environment
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ignored exception "java.io.IOException: An existing connection was forcibly closed by the remote host"
So do you have any idea to ignore it?
Steps to reproduce or test case
In chiness system environment：
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1886
About RedissonRedLock，is it right？
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The upper code shows that we can get 3 locks from 3 masters， but it’s not sure，sometimes we can get 3 locks from only the same master，for example：String lockKey = "iBePL";
I hope I misunderstood the sample code
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1887
RBatch bug when redis sentinel slave restart
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
use Rbatch to perform LRANGE requests
I use redis sentinel mode.
When using Rbatch to perform LRANGE requests. If the redis slave  restart at this time, the redisson client will replay the LRANGE request until the program is restarted.
Steps to reproduce or test case
use Rbatch to perform LRANGE requests（Keep request pressure）
restart redis slave（sentinel mode）
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1889
Huge log messages
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Issue similar to #1035 (redisson 3.10.1), probably introduced in commit 60352b8 (or may be f095327).
Recieve big message, get timeout, tens megabytes log message:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1891
After Redis failover, the number of connection to the new slave is 1 instead of 34
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I just realized issued #1845 had been closed. This issue is related to #1845 fix.
I have verified that previous master node was added back as a slave node after failover with release 3.10.1. Thanks for the fix. But the number of connections to the salve is only 1 instead of 34. Is this expected? I tested a couple of times and got the same result. Following screen shot shows two tests. I started the app, Redisson established connections to both 003 and 004. Then I did failover from 003 to 004. After failover was done, there was only one connection to 003. Then I restarted the app to make sure Redisson re-established connections to both 003 and 004. I did failover from 004 to 003. After failover was done, again there was only one connection to 004. ( You can run netstat -nt | sort +5 | fgrep .6379 | grep -n ^   from app box to see the connections)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1892
RStream.readGroup use timeout parameter error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
rStream.readGroup(groupName, consumerName, 10, 5, TimeUnit.SECONDS);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1893
RFuture.cause() method should return CancellationException and not throw it.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Code to reproduce the issue:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1894
how to run test unit
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello!I have two question:
First: I download the source code and when I want to run test unit,I find it could not work.I used "maven test" command. Here is document to tell me how to run test unit? or can you tell me som key message about how to run test unit?
Second:I don't konw  how to use ".travis.yml" . Is there have document?
thank you very much!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1895
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1896
Netty buffer leak during failover and RBatch object exection
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1897
Spring session renaime failed when session ID changed on Redis cluster
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Redisson Session exception:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1898
Redisson version upgrade causes "Invalid request data"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I was using Redisson 3.9.1 without any problem. I updated it to 3.10.1, and got this error.
Invalid request data: Exception while fetching data (/policy_example1) : Unexpected exception while processing command, Exception while fetching data (/policy_example2) : Unexpected exception while processing command, Exception while fetching data (/policy_example3) : Unexpected exception while processing command
I downgraded it to 3.9.1 and ran again, and it worked.
Why is it happening and how can I fix it?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1899
Unable to decode data.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
I don't have exact steps. but I have the following information:
It was working earlier with redisson 2.14.1 with Oracle java 7.
It is broken with redisson 3.10.1 with OpenJdk java 8.
How to fix this?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1900
Command execution timeout for command: (AUTH) when ElasticCache with TLS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
org.redisson.Version - Redisson 3.8.0
Redis version 5.0.0
Redisson returns:
Command execution timeout for command: (AUTH).
From the same instance that executed the code above, I can connect to the redis instance with redli:
to discard connection / environment problems.
I could not find in the documentation how to tell redisson that it should use tls. Is it supported at all?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1901
RMapCacheRx does not follow the contract "(onError | onComplete)?"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
It must be called one of "onError | onComplete"
Both of onError , onComplete not called
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1902
Problem with readGroup and messages created before group
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi
I am trying to use the new stream feature of Redis 5.
According to the documentation of Redis when I use xreadgroup and mark > I should get all messages that never sent to any other consumer regardless of the time the group was created.
On the example on Redisson wiki I get only  the messages that was added after I created the group.
I don’t see an option to call readGroup function in redisson with > sign to get all messages.
Can you help me with that?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1903
Convert the key of the stream message to json
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi
When I use stream with Redis 5 on redisson I get an error of trying to convert the key of the stream message to Json.
Is there any possibility to try to decode only the value to json?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1904
Why the redis cluster port [nodeAddresses] in redission.yaml file should be slave(non-master) node port? 04
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Both master or slave port can be configured at the config item [nodeAddresses].
Should be slave(non-master) node port, but why? When I configure master node port, below exception stack block always appears, output the message saying that the configured master node port cannot be connected.
Steps to reproduce or test case
Redis server installation version is 5.0.3, start the cluster mode with command:
2.Check if all redis slots have been covered or not:
3.Configure the redission.yaml file:
4.Run my Springboot service(from main() in Application), exception then occured:
When I try to configure the port with slave port(30004,30005 or 30006), however, it worked well:
I'm curious about how this happened, since all slots have been already checked to be covered and the log says all nodes have had been connected before the exception message printed out. Hope someone can help to analyze this issue and discuss with me, thanks a lot!
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1905
Custom codec not working after version 3.10.0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We have been using a custom KryoCodec(overriding the built in one) for a while but after version 3.10.0 this no longer works. The change that affects us are introduced by the following commit: 37b58db
I've spent a little bit of time looking into what's going on and it looks like there are issues regarding classloading since we got all sorts of exceptions now, especially lots of com.esotericsoftware.kryo.KryoException: Unable to find class on classes that we have been serializing without problems til now. The root cause is of course  java.lang.ClassNotFoundException:x.y.z
I've attached the relevant code with the working and non working solution:
The only change on the latter is the addition of the new constructor which now is required.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1906
RInject enhancement
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Motivation
Currently it requires some boilerplate work to acquire a desired object in remote tasks. It would be better if the desired object can be obtained via object injection.
Currently it is not very easy to inject a bean of collection type via Spring's autowire function.
The work is to overcome the above difficulties while provide an easy to access Redisson provided objects via injection methods.
Enhance the RInject annotation's capability in general:
to allow direct injections of RedissonClient, RObjects and RLOs
to allow specify codec used to create RObjects and RLOs
to allow RInject support object creation based on Redisson expression when target type is a super type or interface.
Enhance the RInject annotation's capability in Spring environment:
to have everything from above.
to allow RInject behaves similar to @Autowired that can provide lookup/creation and injection of RObjects and RLOs in Spring environment.
to allow RInject behaves similar to @value that can utilise SpEL expression and Spring property expression to provide dynamic runtime injection of RObjects and RLOs in Spring environment.
to allow RInject support object creation based on Redisson expression when target type is a super type or interface.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1908
2.14.1 works fine vs 2.15.1 giving RedisResponseTimeoutException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Should work fine
RedisResponseTimeoutException
Steps to reproduce or test case
I have no exact steps. But, my code works fine with 2.14.1. With 2.15.1, 2.15.2, 3.10.2, it always fails.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1909
SpringBoot 2.1.2 Hibernate 53 L2 Cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am getting the following error when starting the server:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1910
Question: does fair locking work when used from within multiple Java VMs?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
I'm interested in using the fair locking feature from Reddison. But it looks like it doesn't work properly when used from within multiple Java VMs. Unless I'm missing something.
The reason: Reddison uses the thread ID when acquiring a lock. A thread ID in Java is not a UUID, but an integer that's unique only within a single VM:
Could anyone clarify this please?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1911
Spring Cache Manager Default TTL and MaxIdleTime
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
How can we provide a default TTL and MaxIdleTime to a set of Regions?
Specifically, I'm using Hibernate with Redisson and would like to have to Set of Cache Types
Right now i would have to add every domain class manually in the SpringRedissonConfig.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1912
[Suggestion] Return RxJava2 specific types in RObjectRx
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
So I recently noticed the existence of RedissonRxClient which returns RObjectRx with Flowables.
To me this is a missed opportunity. One of the biggest reasons I prefer RxJava2 over Reactor Core is that it has distinct types for 1 element, 0..1 element, and 0 element, instead of just having Mono.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1913
Rename RedissonMap then set value in map , the value will put in the old map
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
the 1 will move into 'bbb' map, but the 2 will put in the 'aaa' map,not the new one 'bbb'.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1914
Redis stream not working at all in 3.10.2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello
I am trying to make the stream example work with new redisson version 3.10.2 .
I get ArrayIndexOutOfBounds in class StreamIdDecider.
While it assume having 3 parameters. First one number-number key value.
This is not true input to this class is not these arguments.
Can you take a look?
Thanks
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1915
Redis create group with empty stream if does not exsist
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi
I think it would be nice and will be much better to give the user an option to use the mkstream when creating a group.
This option create the stream attached to the group if it does not exist.
Please take a look here:
redis/redis#4824
Thanks
Ziv
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1916
why RRateLimiter has not method like getRate() or getRateInterval()?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
Redis version
Redisson version
Redisson configuration
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1917
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1918
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1919
Allow to redefine CacheKeysFactory in Hibernate Cache Factory 5.2+
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Using hibernate.cache.keys_factory setting
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1920
RedissonNamespaceHandlerSupport fail to load at Tomcat startup
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The scenario is a Spring based application deployed on top of Tomcat 8 configured to use the RedissonSessionManager.
At startup, Spring initialization try to discover on classloader the namespace handlers including the org.redisson.spring.support.RedissonNamespaceHandlerSupport provided with the reddisson-all.jar library.
At this point the init of this handler fails with a NoClassDefFoundError probably because the Tomcat classloader cannot see Spring dependencies that are loaded by webapp classloader.
Unfortunately, after this WARN, the RedissonSessionManager doesn't work properly and new sessions are not stored on Redis.
Here the complete stacktrace:
After some tests, we try to solve this problem by removing the following files from redisson-all-3.10.2.jar:
so there is no need of Sprint integration in our case.
There is any solution/configuration we can adopt to avoid this error and keep the original library?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1921
setPingTimeout deprecated without any note
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
According to this commit org.redisson.config.BaseConfig#setPingTimeout became deprecated. But there is no migration or deprecation note.
Are there any notes on this? Maybe this config option became redundant?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1922
Feature request: default values for YAML
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Support providing default values for environment variables in YAML.
For example:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1924
Default codec change causing an error on the server( version 3.7.2->3.10.2)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Yesterday I upgraded the redisson version from 3.7.2 to 3.10.2, causing the decoding to fail. The investigation found that the default codec has changed and is completely incompatible with the original default codec.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1925
Regression of RBatch result performance decoding
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Appeared since 2.12.2 / 3.7.2 version
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1926
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1927
FSTCodec memory leak
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
several puts (5-10) into a MapCache guarded with a Lock seems to accumulate the payloads in thread locals. The payload is large (several Mb) and the pod (dockered spring boot app with 700 Mb max) goes out of heap. The app running with redisson 3.7.5 has no such problems.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1928
Transactional RBucket object doesn't respect transaction timeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1929
Redisson hibernate entity cache TTL and MaxIdleTime not being set - default region used for entities 2nd level cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The TTL and MaxIdeltime once set should auto-evict the hibernate entity beans cached in redis.
The beans are not auto-evicted when TTL expires and the idle time has elapsed.
Steps to reproduce or test case
Step 1)
Create a simple entity bean (Say - com.jhipster.demo.blog.domain.Tag)
Step 2)
Annotate the same with the following
Step 3)
Try to set the TTL and config via code
NOTE: The auto-eviction with TTL set at code level works for Spring cache only not hibernate second level cache for entity.
Step 4)
I also tried to set the TTL and max idle time via application.properties file
NOTE: I thought of using the application.properties file (since I am using spring boot, this file is auto picked)
I got this idea of overriding the default from the following Redisson link -
In that link I see default properties being set for  all entity like -
So I thought I can set the same via spring boot application.properties file
Anyhow both Step 3/4 does not set the TTL correctly for me and the entity is not auto-evicted.
NOTE: The auto-eviction with TTL set at code level works for Spring cache only not hibernate second level cache.
I am using the single server mode and the configuration is the defualt as outlined in the link below for "singleServerConfig"
NOTE: I am using Hibernate 5.3.7, Spring boot 2.1.2, Redisson 3.10.2 version.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1930
Why does LocalCachedMap.readAllValues() need to avoid reading phantom value?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is to avoid reading phatom local values.
Originally posted by @jackygurui in #1823 (comment)
However mrniko said If element has been added/removed then invalidation message sent to all LocalCachedMap instances and element evicted in all of them.(#592 (comment))
What mrniko said means local cache will be synced by Redis pub/sub mechnism. If so, why does jackygurui said LocalCachedMap.readAllValues() need to read redis value to avoid reading local phantom value? Since local cache value will be synced, I think there is no phantom local values.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1931
RBucket compareAndSet can`t return Boolean.TRUE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I have a method:
I excpet return true,but it still return false;
it still return false
Steps to reproduce or test case
just first set an list object, then call this compareAndSetTaskBuckets method，it always return false
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1932
redisson-tomcat-9 session manager does not work with Async servlets
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
My software is using JAXRS with AsyncResponse.
I tried to use Redisson to store sessions of Tomcat 9.x in Redis, but I always get an exception.
I checked this exception and the reason seems to be that the UpdateValve class seems to call the default constructor of the Tomcat ValveBase class without a boolean flag indicating that it should support Async servlets.
This is a big showstopper since all servlets in our software are async and we don't want to convert them to synchronous ones since that will have a big impact on thread use and overal performance!
Session object properly deserialise
Steps to reproduce or test case
Try to use redisson to access session objects from an async servlet
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1934
Live Object write/read Bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
firstname=aaa   not store in redis。
looks like bytebuddy proxy has problem。
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1935
LocalCacheView.toCacheKey StackOverflowError
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1936
RStream.listPending throws IndexOutOfBoundsException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
IndexOutOfBoundsException arise when there are no elements in group
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1937
redlock unlock fail
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1938
3.10 can't read data of SetCache set by 3.9
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After upgraded to 3.10 from 3.9, it has trouble in reading data of SetCache, a NullPointerException was raised.
I found these was something different between two formats created by 3.9 and 3.10
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1939
tryLockAsync and lockAsync methods of RedissonMultiLock object get hang
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1940
redlock unlock question
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1941
Evict delay bug
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
evict old keys even with acceptable delay
eviction delay is too big due to bug
Steps to reproduce or test case
use cache with ttl 10min or 1hour.
in EvictionTask#run is delay that starts with 5seconds and is multiplied by 1.5 if no eviction is needed. therefore in first 10 minutes without evicting is many times multiplied and resulted to delay 110 or 165 seconds. that is CORRECT.
But after 10 minutes running evicting is started and this delay remains at this big value and is NOT decreased due to BUG. In production is this delay very big and redis is not fast enough in evicting and available memory is fulfilled. Jedis consumes under 100MB, redisson consumes 1GB(config limit) in short run.
Redisson configuration
SingleServer and also on SentinelServer
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1942
RedissonAtomicLong.get blocks indefinitely
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Stack info:
Steps to reproduce or test case
Small probability and we can't reproduce, maybe related to bad network
Redisson configuration
cluster default config
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1943
SingleServerConfig constructor visibility
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Shouldn't the constructor of SingleServerConfig be public, as all other BaseConfig subclasses are? I know I can create it using new Config().useSingleServer() but I would prefer to have it public for some Spring custom properties.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1944
Search domain query failed.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The DNS resolver should find valid DNS records, I am trying to connect to the redis hosted on azure. I looked at the existing similar issues but looks like this issue still exists.
Steps to reproduce or test case
Redisson configuration
Spring Boot Redisson example
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1945
SENTINEL_SENTINELS can not get anything, why?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
when run this code :
sentinelSentinels size  is 0
Why?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1946
Method 'findKeysByPatternAsync' always get all the keys
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
For this code
it always return all matching keys?
In case the number of keys is very large , I need to get keys in batches. There seems to be no way out.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1947
Will map got from redisson need to persist after putting new elements?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
For example, got a map from redisson:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1948
Insert string garbled
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Save a string, the prefix is garbled when it is taken out；
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1949
EXCEPTION when deserializing modified class with FST Codec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When trying to de-serialize a modified class ( add/remove field ) it fails and it throws an exception.
When it cannot deserialize an object, it should ignore the cache as if it did not exist and call the method again and cache the new object...
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1950
PriorityBlockingQueue doesn't release lock after reconnect on network
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
reconnect to network
there is a lock  name redisson_sortedset_lock:{testqueue} which dosen't release,it seem's like it can't release lock cause network boke,however it get a lock before network boke.
Steps to reproduce or test case
1.run code blow
2.disconnect your network
3.wait a few minute,then reconnect your network
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1951
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1952
Please catch and handle exceptions when reading/writing sessions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We're using Redisson tomcat session manager 3.10.0, and got exceptions as below:
Redisson should catch the any exceptions happened during read/write sessions and returned null instead of throwing them to client.
Exception thrown on page:
Caused by: java.lang.RuntimeException: class not found CLASSNAME:com.sun.proxy.$Proxy228 loader:WebappClassLoader^M
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1953
null exception in RedissonLocalCachedMap.java:741
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
no exception in readAllMap
NullPointerException happened in
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1954
memory leak in getLocalCachedMap, redisson version : 3.10.3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
no memory leak
memory leak
Steps to reproduce or test case
run the attached code
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1955
RedisOutOfMemoryException
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No errors should be thrown after setting maxmemory-policy :volatile-lru, maxmemory:4MB.
When I am using two threads to put values through redisson to different database with limited memory(maxmemory-policy :volatile-lru, maxmemory:4MB),  error like org.redisson.client.RedisOutOfMemoryException: command not allowed when used memory > 'maxmemory' sprang up, and the database was flushed by redisson.
But I replaced to use Jedis(2.8.0) to test again, no such exceptions came out, and the database was not flushed by Jedis. The items which exceed 4MB  can be deleted by redis automatically because of volatile-lru policy.
Steps to reproduce or test case
Run commands on redis-cli, config set maxmemory-policy volatile-lru  config set maxmemory 4mb
Run the code twice(Two threads) using different database with type to 0.
singleServer, refer to the codes for details.
Codes I run
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1956
Redisson Map Cache Event Notification doesn't work with HPE's NONSTOP OS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson Map Cache Event Notification doesn't work with HPE's NONSTOP OS.
This is because of the endianness.
Below logic is there in MapCacheEventCodec.decode(ByteBuf buf, State state, Decoder<?> decoder) method,
Here, if it is windows, buf.readIntLE() is used, or else buf.readLongLE() is used. But for HPE's NONSTOP OS, buf.readLong() has to be used.
To fix this, two classes has to be modified,
RedissonMapCache - Like how isWindows is being set using "Windows" substring, isNonstop boolean also can be initialized using "NONSTOP" substring
Also, while initializing MapCacheEventCodec, need to pass isNonstop boolean.
new MapCacheEventCodec(codec, isWindows, isNonstop) - in all the 4 places
MapCacheEventCodec - Need to declare isNonstop boolean and initialize(in constructor) based on the isNonstop boolean that is received from ReidssonMapCache
Also, in the decode method, like how isWindows is being checked, need to check isNonstop and use buf.readLong() if it is NONSTOP as given below.
Could you please fix this in Redisson code?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1957
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1958
Add tomcat session manager with mutiple Tomcat instances session Iterator
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
request.getSession().getSessionContext().getIds();
This method return ids are same  as Redis store。
When session is created by other tomcat instance, This method return ids are less than Redis store.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1959
ClassNotFoundException is thrown by Tomcat Session Manager in readMode = MEMORY
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1960
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1961
Not null value is returned after ttl expires
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I wrote the following code:
And then I expect, that rmap.get("1") will return null, but it returns previously set value.
I tried to debug library code and found the following:
AbstractCacheMap removes value from cache and so get(Object key) returns null
after that RedissonLocalCachedMap/RedissonMap.getAsync() goes to Redis and my value there still exists
so RedissonLocalCachedMap calls cachePut(cacheKey, key, value), and expired value is again in cache
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1962
RLocalCachedMap.destroy() method doesn't clear local cache
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1963
Add getCountDownLatch, getPermitExpirableSemaphore, getSemaphore, getFairLock to RMultimap object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1964
Add XINFO command to RStream object
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1965
RedissonClient shutdown() error
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
shutdown successfully
There are errors on Eclipse console ,sort of
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1966
Deadlock after Redis timeout
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
After a Redis response timeout, Redisson needs to be resilient and back to normal operation after Redis timeout and allow to lock and unlock critical sections again.
After a Redis response timeout between attempts, Redisson adds the lock to scheduled renew task and never remove them. So, the application enters on a deadlock due to a lock renewed even after unlock.
The task can run on the same thread due to reentrant lock feature, but when the task runs on another thread a deadlock occurs.
Steps to reproduce or test case
Start Redis
Run the test application (https://github.com/hmagarotto/redissonlock) with a simple locked task.
Force a timeout on Redis runnning a client pause command: "CLIENT PAUSE 5000"
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1967
Building Cache Memory Problem with Rmap
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When we use RMap, we find that memory can't be released, which leads to frequent fullgc in the production environment. Is there a solution or optimization update of relevant modules now?
The version we used was 3.8.2
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1968
AWS ElastiCache Redis Cluster & Redisson-OOM
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are currently facing some issues with ElastiCache/Redisson without being able to determine the root cause so far - thus I'm giving it a try here ...
We've set up ElastiCache in cluster-mode (3 Nodes) - and configured Redisson correspondingly.
We are using distributed locks and some RMapCaches. The caches have a max-size (thus LRU-eviction) and TTLs set for both lock as well the cache entries.
During the last few months we ran into a couple of out-of-memory-related outages - that is Redis runs OOM, not the client.
The memory consumption is usually staying constant (limited by the LRU policy and TTL) for weeks but then tanks out of of the blue.  Per "step", the memory consumption does pretty much double. The "step down" in memory takes 1-2 hours before stabilizing on a lower level.
According to our statistics, the number of keys remains constant - less than 100 of which 15 belong to the caches and the rest being TTLed-locks. The number of keys (entries) per cache is also constant - with either well below the size ceiling or the LRU is recognized (=ceiling not exceeded).
I'm wondering whether somebody has seen a similar issue?
With Redisson 3.10, there's a new option to determine the size of an RMap - so we'll use that to investigate further - but I suspect that the size of individual cache entries (which, in theory, could cause this) is not the reason. If we had huge entries, we'd expect to see a recovery after the TTL period, but this is not the case.
Just from gut feeling, it feels as if this is somehow related to a replication - that would at least explain those "steps" to some degree.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1969
ClassCastException in Netty/Redisson when executing RMapCache.valueSize(...)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are using an AWS ElastiCache Redis 4.0.10 cluster with Redisson 3.10.3 and following a
cache.valueSize(id);
where cache is a RMapCache we can spot the following in our logs:
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1970
Is it  possible to impor  MultiLock  trylock performance?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
This is a extreme situation, I need get a multilock that contain tens of thousands of locks, It will take several minutes, Is it  possible to impor  MultiLock  trylock performance?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1971
Bug: Tomcat with 'updateMode=AFTER_REQUEST' will not remove attributes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi all!
We use Redisson with the tomcat-8 integration. Because this is a legacy application with mutable session objects we have to use updateMode=AFTER_REQUEST.
The problem we faces is that this update mode will not be able to sync removed attrbutes to redis and inform other running tomcat instances. This is bad because our other instances of Tomcat ends up using removed attributes.
It's actually easy to spot the bug if one inspect RedissonSession.java#L267-L276:
You can see that removeAttributeInternal only does publish the removed attribute if updateMode=DEFAULT. This would be fine if Redisson somehow stored which attribute names which was removed so that they also was synced in the store function triggered by  the UpdateValve.
The problem is that store will only save the current attributes (see RedissonSession.java#L278-L303) on the session, and not the removed attributes. Handling removed attributes will require that Redisson  keeps control of both the added and the removed attributes within one request cycle (the same attribute may be added and removed multiple times).
How can this be fixed?
Solution 1: relax AFTER_REQUEST
I would argue that you actually want all session attributes to be synced as soon as possible. But in the rare scenario where you operate on mutable session data you would do an extra force-update after the request completes.
The proposal would be to replace AFTER_REQUEST mode with FORCE_UPDATE_AFTER_REQUEST. Then all addAttrbiute & removeAttribute should be synced as soon as possible, the same way you get with the DEFUALT mode today. But in addition you will get all attributes synced after the request completes. This would be easy to implement as it will only require removal of the if-guard inside the removeAttributeInternal function.
It could also be beneficial if one is able to specify a white-list of attributes known to be immutable.
Solution 2: Redission keeps track of removed attributes
In this solution Redisson needs to keep track a map of removed attributes during a request cycle and make sure to remove these attributes from redis and notify all other tomcat instances. This will be more complex to implement correctly than solution 1.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1972
the last version can be used to AliyunRedis?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
and how i configuration it ?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1973
RedissonMultiLock should implement RLock interface
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1974
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1975
High memory consumption in netty theads
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
We are on version 3.7.2 and only using RMap, RScoredSet and are facing the same issue in production where netty threads used by redisson consumed 12GB of total 16GB of allocated heap space in one application and 8GB out of 16 GB on another application . One observation i have made is that netty threads had created around 275,000 thread local maps with each consuming around a fixed amount of heap. It all seems to be related with weblogic context aware classloader because it is shared by all the netty threads.
Since the heap dump is quite large I will be attching the screenshots.
@mrniko setting  -Dio.netty.allocator.useCacheForAllThreads=false had no effects
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1976
Security Breach - password passed in exceptions
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When an exception is thrown upon the AUTH command the exception contains the actual password as a param. This happens because LogHelper.toString called by RedisConnection.async nowadays accepts a "Object..." all the time, and LogHelper redacts the password only when a single object of the type CommandData is passed.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1977
RMapCache eviction fails if process is terminated
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using RMapCache to handle my distributed collections.
When adding to the map, i use:
So the key should expire after 20 seconds. This works, if the process is not terminated before the expiration timestamp. However, if the process dies for any reason, the key never expires.
By observing this behavior, I have concluded that is the Java process that makes the Key expire. I would like Redisson to use Redis EXPIRE behavior for keys, so that the Java process is not responsible for expiring the key.
This way, i will know for sure that the key will expire after the given time, even if for any reason the java process dies.
Is this possible to do with Redisson?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1978
RStream.readGroup method doesn't handle empty result properly with Redis 5.0.3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1980
Connecting to a sentinel Redis 5.0.1 server fails with `NOAUTH Authentication required`
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I should be able to connect to a sentinel node of Redis 5.
I am trying to connect to the sentinel node of a Redis setup in AWS, and I am getting the message:
NOAUTH Authentication required.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1981
Connecting to a sentinel Redis 5.0.1 server fails with `NOAUTH Authentication required`.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I should be able to connect to a sentinel node of Redis 5.
I am trying to connect to the sentinel node of a Redis setup in AWS, and I am getting the message:
NOAUTH Authentication required.
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1982
Poor performance when using ReplicatedMode
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hi,
For a while I've been using a single redis instance, therefore configured in SingleServer mode. Recently I decided to add a read replica into the mix for failover protection. Also assumed I would get a performance boost too... I was wrong!
Below are some performance results. The test writes 10,000 objects into the cache with a random key. The test runs 10 times. For each key, I measure the time it takes to do a GET & PUTASYNC.
The results are really surprising;
The ReplicatedMode is MUCH slower than SingleServer using the default read mode.
Changing to MASTER_SLAVE read mode helps, but it's still much slower with lots of spikes in the perf.
Average is pretty good and the max is usually much less than 100ms.
ReplicatedServers Mode
Average is quite a bit slower here but the max is massively slower!
ReplicatedServers Mode using ReadMode.MASTER_SLAVE
Things get interesting here. Averages are all over the place, low as 1.9ms but high as 25.7ms. Max is generally lower, but it's still eratic.
So, my questions are;
Is this expected? I assumed replicated mode would be a performance improvement.
Is there anything I can do to improve this. If I can get the replicated performance similar to single server that would be ideal, if possible. Right now the only option might be to not have a read replica which will be a real shame.
Thanks in advance!
Details
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1983
CommandAsyncService produces RedisExceptions without a causal exception
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
RedisException stack traces from CommandAsyncService should contain a causal exception wrapped inside a Redis exception. At least that's what I would expect from this code in CommandAsyncService:
I'm seeing a small number of sporadic RedisException stack traces without any causal information. This is all there is:
Looking at the redisson code, I can't quite see how we would end up with an unsuccessful future without an exception.
Is the causal exception swallowed somewhere?
Are there conditions under which the future can fail without an exception?
Steps to reproduce or test case
No test case unfortunately.
This happens very sporadically, and only under load.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1984
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1985
Does redisson use of jackson for serialization of a custom class annotates said class with JsonTypeInfo?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
According to Redissons documentation, it uses Jackson as JSON codec, using the @Class field to store the type.
How does redisson set this configuration to jacksons object mapper? The only way i know is to decorate the class with the @JSonTypeInfo annotation, but this means that for every serialization / deserialization of the class, the @Class field will and needs to exist.
I have a rest service that receives a json of a custom class without the @Class annotation, so i cannot afford jackson to always require the @Class field in deserialization.
Will using said custom class in a RBucket cause my custom class to be annotated by JsonTypeInfo, if not, how does redisson manage to set that for some deserializations of a custom class a @Class field is required, but for others it is not?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1986
RBucket does not support GetAndSet with a TTL for the set operation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I want to do a get and a set simultaneously but the getandset() method of the RBucket does not support setting a ttl for the key.
I have tried to use an RTransaction and obtaining the bucket from the transaction instead of the client, but calling get() on the bucket always returns the value.
Is there any way to perform a get and a set with ttl using the RTransaction for RBucket types?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1987
Error deserializing RBucket with jackson Codec
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using lots of RBuckets which serialize with Jackson Codec:
        config.setCodec( new JsonJacksonCodec());
In a stress test environment, sometimes happens that i get an error when asking for the value of a bucket, and i see that the problem is in the deserialization of the JSON:
Any idea what is happening? The error seems to be totally random and non deterministic. Redisson handles serialization and deserialization entirely, so i do not know how an invalid character is being stored in Redis.
Is there a way i could attach to a listener to gain some insight on this process? Something like being notified right before saving the bucket to redis, so i can check for that character (CHAR-1) or when reading?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1988
Add getMultiLock, getRedLock methods to RedissonClient, RedissonRxClient and RedissonReactiveClient interfaces ·88
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No description provided.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1989
spring boot started incorrectly, but unlocking can work properly ·89
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1991
java.lang.NoClassDefFoundError: org/hibernate/cache/spi/support/DomainDataRegionImpl
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
No error
When starting hiberate-redisson53 with hibernate-core-5.3.2.FINAL i got this error
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1992
Redis Clients always use the same Sentinel
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
When using Sentinels with Reddison 3.10.4, the reddison clients always select the same sentinel server due to the predictability of the backing ConcurrentHashMap



      redisson/redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java


         Line 71
      in
      488fe8f







           private final ConcurrentMap<String, RedisClient> sentinels = new ConcurrentHashMap<>();





In a large enough cluster this causes the CPU load on that Sentinel server to be considerably higher than the other servers.  The following PR
#1979
Shuffles the sentinel list so that clients distribute the load to all sentinel servers.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1993
Where are configured cache settings ? ·93
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
I am using dropwizard. The factory class and redisson.yaml path  is configured in config.yaml in databsase properties
hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
Where should i configure cache settings, in the same file ? From where redisson read this properties ?
Thank you
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1994
Error: java.lang.NoSuchFieldError: INSTANCE on start
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello
I have changed to hibernate-5,2,2,Final and redisson-hibernate-52
And i'm getting this error on start up
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1995
Redisson 2.15.2 didn't support jdk6
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
As the document said, Redisson 2.15.2 should support jdk6.
Redisson 2.15.2 didn't support jdk6
Steps to reproduce or test case
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1996
Acquire multiple permits when using the PermitExpireableSemaphore
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Redisson includes an implementation of the permit expirable semaphore which can only acquire or release a permit. This may limit the usage. I added the interfaces that acquire or release multiple permits at once by adding a sorted set to memorize the permits acquired each time. It works in non-fair mode.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1997
none
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1998
RoundRobinLoadBalancer not load balance reads
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
I am using following basic code to point to elastic cache configuration endpoint. (I have also tried adding all 6 node addresses, but no change of behavior).
I have an elastic cache cluster with, 3 shards (2 nodes each, 1 replica)
When I just put 10,000 to a cache, and later read them, in cloud watch I can see cache hits coming only from one node(first node). But cache size in bytes in each node shows each node keeps replicas of the data set. I would like to distribute the reddison read requests among read replicas.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1999
Redisson 3.10.4 usage with managedexecutor as external executor service gives lifecycle shutdown method errors.
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Upgraded from 3.8.2 to 3.10.4 Redisson community version and started seeing this error as we use Redisson in a Jboss application server with managed executor service.
Does this create any issues with Redis behavior?
The managed executor spec considers this as valid behavior.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

2000
Question :  Redis (cluster mode enabled) Cluster's Endpoints
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Hello,
Its a Question and NOT an issue
Currently we are using Redisson with our self-compiled and installed Redis Server on an ec2 instance and due to scalability concern, we are moving with AWS ElastiCache Redis Cluster.  Already our application is using Redisson Library, not just as a client, but also our application heavily using acquire Lock and Unlock on any given key using either "RLock" or "RReadWriteLock"
Now, I have aws ElastiCache Redis (cluster mode enabled) Cluster's Endpoints and Node Endpoints - but I am unable to connect to Redis Server;
I followed this Redisson Configuration Wiki -  I tried
Neither configuration was able to connect to Redis Cluster. I can connect to these server using Redis CLI, however with Redisson Library, I am not able to connect.
Please can someone help me with some sample example with Redisson Config to connect Config/Primary Endpoints.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<